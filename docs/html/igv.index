<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="UCI Intelligent Vehicle Project" version="" project="IGV">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="igv">
        <namespace threadsafety="unspecified" name="igv" href="igv.html" status="internal" access="private" location="Camera.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Camera.hpp" lineno="8">
            <class threadsafety="unspecified" name="Camera" fullname="igv::Camera" href="igv-camera.html" status="active" access="public" location="Camera.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Camera.hpp" lineno="10">
                <function threadsafety="unspecified" name="Camera" fullname="igv::Camera::Camera" href="igv-camera.html#Camera" status="active" access="public" location="Camera.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Camera.hpp" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Camera(int port)">
                    <parameter left="int" right="" name="port" default=""/>
                </function>
                <function threadsafety="unspecified" name="GetImage" fullname="igv::Camera::GetImage" href="igv-camera.html#GetImage" status="active" access="public" location="Camera.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Camera.hpp" lineno="16" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; GetImage()"/>
                <function threadsafety="unspecified" name="Capture" fullname="igv::Camera::Capture" href="igv-camera.html#Capture" status="active" access="public" location="Camera.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Camera.hpp" lineno="17" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Capture()"/>
            </class>
            <class threadsafety="unspecified" name="GPS" fullname="igv::GPS" href="igv-gps.html" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="18">
                <function threadsafety="unspecified" name="GetBearingTo" fullname="igv::GPS::GetBearingTo" href="igv-gps.html#GetBearingTo" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Direction" signature="Direction GetBearingTo(double lat, double lon)">
                    <parameter left="double" right="" name="lat" default=""/>
                    <parameter left="double" right="" name="lon" default=""/>
                </function>
                <function threadsafety="unspecified" name="GPS" fullname="igv::GPS::GPS" href="igv-gps.html#GPS" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="22" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GPS()"/>
                <function threadsafety="unspecified" name="isBusy" fullname="igv::GPS::isBusy" href="igv-gps.html#isBusy" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetDistanceTo" fullname="igv::GPS::GetDistanceTo" href="igv-gps.html#GetDistanceTo" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="25" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double GetDistanceTo(double lat, double lon)">
                    <parameter left="double" right="" name="lat" default=""/>
                    <parameter left="double" right="" name="lon" default=""/>
                </function>
                <function threadsafety="unspecified" name="GetLatitude" fullname="igv::GPS::GetLatitude" href="igv-gps.html#GetLatitude" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double GetLatitude()"/>
                <function threadsafety="unspecified" name="GetLongitude" fullname="igv::GPS::GetLongitude" href="igv-gps.html#GetLongitude" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double GetLongitude()"/>
                <function threadsafety="unspecified" name="Probe" fullname="igv::GPS::Probe" href="igv-gps.html#Probe" status="active" access="public" location="GPS.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/GPS.hpp" lineno="27" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Probe()"/>
            </class>
            <class threadsafety="unspecified" name="IGV" fullname="igv::IGV" href="igv-igv.html" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="13">
                <function threadsafety="unspecified" name="IGV" fullname="igv::IGV::IGV" href="igv-igv.html#IGV" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="17" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="IGV()"/>
                <function threadsafety="unspecified" name="Run" fullname="igv::IGV::Run" href="igv-igv.html#Run" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Run()"/>
                <function threadsafety="unspecified" name="Setup" fullname="igv::IGV::Setup" href="igv-igv.html#Setup" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Setup()"/>
            </class>
            <class threadsafety="unspecified" name="LIDAR" fullname="igv::LIDAR" href="igv-lidar.html" status="active" access="public" location="LIDAR.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LIDAR.hpp" lineno="15">
                <function threadsafety="unspecified" name="LIDAR" fullname="igv::LIDAR::LIDAR" href="igv-lidar.html#LIDAR" status="active" access="public" location="LIDAR.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LIDAR.hpp" lineno="19" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LIDAR()"/>
                <function threadsafety="unspecified" name="isBusy" fullname="igv::LIDAR::isBusy" href="igv-lidar.html#isBusy" status="active" access="public" location="LIDAR.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LIDAR.hpp" lineno="22" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetMap" fullname="igv::LIDAR::GetMap" href="igv-lidar.html#GetMap" status="active" access="public" location="LIDAR.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LIDAR.hpp" lineno="23" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unordered_map&lt;Direction, Distance&gt; &amp;" signature="unordered_map&lt;Direction, Distance&gt; &amp; GetMap()"/>
                <function threadsafety="unspecified" name="Probe" fullname="igv::LIDAR::Probe" href="igv-lidar.html#Probe" status="active" access="public" location="LIDAR.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LIDAR.hpp" lineno="21" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Probe()"/>
            </class>
            <class threadsafety="unspecified" name="Lane" fullname="igv::Lane" href="igv-lane.html" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="8">
                <variable threadsafety="unspecified" name="intercept" fullname="igv::Lane::intercept" href="igv-lane.html#intercept-var" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="11" type="int" static="false"/>
                <variable threadsafety="unspecified" name="slope" fullname="igv::Lane::slope" href="igv-lane.html#slope-var" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="10" type="double" static="false"/>
            </class>
            <class threadsafety="unspecified" name="LaneDetector" fullname="igv::LaneDetector" href="igv-lanedetector.html" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="17">
                <function threadsafety="unspecified" name="isBusy" fullname="igv::LaneDetector::isBusy" href="igv-lanedetector.html#isBusy" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetLanes" fullname="igv::LaneDetector::GetLanes" href="igv-lanedetector.html#GetLanes" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="25" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::array&lt;Lane, 4&gt; &amp;" signature="std::array&lt;Lane, 4&gt; &amp; GetLanes()"/>
                <function threadsafety="unspecified" name="DetectLanes" fullname="igv::LaneDetector::DetectLanes" href="igv-lanedetector.html#DetectLanes" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="21" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t DetectLanes(std::array&lt;Lane, 4&gt; &amp;LaneArray, cv::Mat &amp;image)">
                    <parameter left="std::array&lt;Lane, 4&gt; &amp;" right="" name="LaneArray" default=""/>
                    <parameter left="cv::Mat &amp;" right="" name="image" default=""/>
                </function>
                <function threadsafety="unspecified" name="GetNumLanes" fullname="igv::LaneDetector::GetNumLanes" href="igv-lanedetector.html#GetNumLanes" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="23" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t GetNumLanes()"/>
                <function threadsafety="unspecified" name="DetectLanes" fullname="igv::LaneDetector::DetectLanes" href="igv-lanedetector.html#DetectLanes-1" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="22" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void DetectLanes(cv::Mat &amp;Image)">
                    <parameter left="cv::Mat &amp;" right="" name="Image" default=""/>
                </function>
            </class>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="igv::operator&lt;&lt;" href="igv.html#operator-lt-lt" status="active" access="public" location="LaneDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/LaneDetection.hpp" lineno="15" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, Lane &amp;lane)">
                <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                <parameter left="Lane &amp;" right="" name="lane" default=""/>
            </function>
            <class threadsafety="unspecified" name="ObjDetector" fullname="igv::ObjDetector" href="igv-objdetector.html" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="22">
                <function threadsafety="unspecified" name="isBusy" fullname="igv::ObjDetector::isBusy" href="igv-objdetector.html#isBusy" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetObjects" fullname="igv::ObjDetector::GetObjects" href="igv-objdetector.html#GetObjects" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="list&lt;Object&gt; &amp;" signature="list&lt;Object&gt; &amp; GetObjects()"/>
                <function threadsafety="unspecified" name="DetectObjects" fullname="igv::ObjDetector::DetectObjects" href="igv-objdetector.html#DetectObjects" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t DetectObjects(Mat &amp;Image)">
                    <parameter left="Mat &amp;" right="" name="Image" default=""/>
                </function>
                <function threadsafety="unspecified" name="DetectObjects" fullname="igv::ObjDetector::DetectObjects" href="igv-objdetector.html#DetectObjects-1" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="27" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t DetectObjects(list&lt;Object&gt; &amp;objs, Mat &amp;Image)">
                    <parameter left="list&lt;Object&gt; &amp;" right="" name="objs" default=""/>
                    <parameter left="Mat &amp;" right="" name="Image" default=""/>
                </function>
                <function threadsafety="unspecified" name="GetNumObjects" fullname="igv::ObjDetector::GetNumObjects" href="igv-objdetector.html#GetNumObjects" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t GetNumObjects()"/>
            </class>
            <class threadsafety="unspecified" name="Object" fullname="igv::Object" href="igv-object.html" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="12">
                <variable threadsafety="unspecified" name="angle" fullname="igv::Object::angle" href="igv-object.html#angle-var" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="15" type="Direction" static="false"/>
                <variable threadsafety="unspecified" name="classification" fullname="igv::Object::classification" href="igv-object.html#classification-var" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="16" type="string" static="false"/>
                <variable threadsafety="unspecified" name="distance" fullname="igv::Object::distance" href="igv-object.html#distance-var" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="14" type="Distance" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Magno" fullname="igv::Magno" href="igv-magno.html" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="15">
                <function threadsafety="unspecified" name="Magno" fullname="igv::Magno::Magno" href="igv-magno.html#Magno" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="18" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Magno()"/>
                <function threadsafety="unspecified" name="CorrectOrientation" fullname="igv::Magno::CorrectOrientation" href="igv-magno.html#CorrectOrientation" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="23" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool CorrectOrientation(double deg1, double deg2)">
                    <parameter left="double" right="" name="deg1" default=""/>
                    <parameter left="double" right="" name="deg2" default=""/>
                </function>
                <function threadsafety="unspecified" name="isBusy" fullname="igv::Magno::isBusy" href="igv-magno.html#isBusy" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="21" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetDegree" fullname="igv::Magno::GetDegree" href="igv-magno.html#GetDegree" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double GetDegree()"/>
                <function threadsafety="unspecified" name="Probe" fullname="igv::Magno::Probe" href="igv-magno.html#Probe" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Probe()"/>
            </class>
            <class threadsafety="unspecified" name="UltraSonic" fullname="igv::UltraSonic" href="igv-ultrasonic.html" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="39">
                <function threadsafety="unspecified" name="UltraSonic" fullname="igv::UltraSonic::UltraSonic" href="igv-ultrasonic.html#UltraSonic" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="43" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UltraSonic()"/>
                <function threadsafety="unspecified" name="isBusy" fullname="igv::UltraSonic::isBusy" href="igv-ultrasonic.html#isBusy" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isBusy()"/>
                <function threadsafety="unspecified" name="GetDistance" fullname="igv::UltraSonic::GetDistance" href="igv-ultrasonic.html#GetDistance" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double GetDistance()"/>
                <function threadsafety="unspecified" name="Probe" fullname="igv::UltraSonic::Probe" href="igv-ultrasonic.html#Probe" status="active" access="public" location="Sensors.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/Sensors.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Probe()"/>
            </class>
            <enum threadsafety="unspecified" name="LaneNum" fullname="igv::LaneNum" href="igv.html#LaneNum-enum" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="72">
                <value name="LO" value="false"/>
                <value name="L1" value="true"/>
            </enum>
            <enum threadsafety="unspecified" name="Motor" fullname="igv::Motor" href="igv.html#Motor-enum" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="71">
                <value name="LEFT" value="false"/>
                <value name="RIGHT" value="true"/>
            </enum>
            <typedef threadsafety="unspecified" name="DeltaDir" fullname="igv::DeltaDir" href="igv.html#DeltaDir-typedef" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="66"/>
            <typedef threadsafety="unspecified" name="Direction" fullname="igv::Direction" href="igv.html#Direction-typedef" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="65"/>
            <typedef threadsafety="unspecified" name="Distance" fullname="igv::Distance" href="igv.html#Distance-typedef" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="67"/>
            <typedef threadsafety="unspecified" name="Speed" fullname="igv::Speed" href="igv.html#Speed-typedef" status="active" access="public" location="main.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/main.hpp" lineno="64"/>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="igv::operator&lt;&lt;" href="igv.html#operator-lt-lt-1" status="active" access="public" location="ObjectDetection.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/ObjectDetection.hpp" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ostream &amp;" signature="ostream &amp; operator&lt;&lt;(ostream &amp;os, Object &amp;obj)">
                <parameter left="ostream &amp;" right="" name="os" default=""/>
                <parameter left="Object &amp;" right="" name="obj" default=""/>
            </function>
            <function threadsafety="unspecified" name="GPSLoop" fullname="igv::GPSLoop" href="igv.html#GPSLoop" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void GPSLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="LaneDetection" fullname="igv::LaneDetection" href="igv.html#LaneDetection" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void LaneDetection(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="LidarLoop" fullname="igv::LidarLoop" href="igv.html#LidarLoop" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void LidarLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="ObjDetection" fullname="igv::ObjDetection" href="igv.html#ObjDetection" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ObjDetection(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="SensorLoop" fullname="igv::SensorLoop" href="igv.html#SensorLoop" status="active" access="public" location="IGV.hpp" filepath="/home/soobin/Documents/Sandbox/IGV/include/IGV.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SensorLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <class threadsafety="unspecified" name="IGV" fullname="igv::IGV" href="igv-igv.html" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="13">
                <function threadsafety="unspecified" name="IGV" fullname="igv::IGV::IGV" href="igv-igv.html#IGV" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="17" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="IGV()"/>
                <function threadsafety="unspecified" name="Run" fullname="igv::IGV::Run" href="igv-igv.html#Run" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Run()"/>
                <function threadsafety="unspecified" name="Setup" fullname="igv::IGV::Setup" href="igv-igv.html#Setup" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Setup()"/>
            </class>
            <function threadsafety="unspecified" name="GPSLoop" fullname="igv::GPSLoop" href="igv.html#GPSLoop-1" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void GPSLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="LaneDetection" fullname="igv::LaneDetection" href="igv.html#LaneDetection-1" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void LaneDetection(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="LidarLoop" fullname="igv::LidarLoop" href="igv.html#LidarLoop-1" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void LidarLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="ObjDetection" fullname="igv::ObjDetection" href="igv.html#ObjDetection-1" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ObjDetection(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
            <function threadsafety="unspecified" name="SensorLoop" fullname="igv::SensorLoop" href="igv.html#SensorLoop-1" status="active" access="public" location="IGV.hpp" filepath="/usr/local/include/IGV.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SensorLoop(IGV *igv)">
                <parameter left="IGV *" right="" name="igv" default=""/>
            </function>
        </namespace>
        <namespace threadsafety="unspecified" name="mn" href="mn.html" status="internal" access="private" location="Exception.hpp" filepath="/usr/local/include/CppLinuxSerial/Exception.hpp" lineno="20">
            <namespace threadsafety="unspecified" name="CppLinuxSerial" fullname="mn::CppLinuxSerial" href="mn-cpplinuxserial.html" status="active" access="public" location="Exception.hpp" filepath="/usr/local/include/CppLinuxSerial/Exception.hpp" lineno="21">
                <class threadsafety="unspecified" name="Exception" fullname="mn::CppLinuxSerial::Exception" href="mn-cpplinuxserial-exception.html" status="active" access="public" location="Exception.hpp" filepath="/usr/local/include/CppLinuxSerial/Exception.hpp" lineno="23">
                    <function threadsafety="unspecified" name="Exception" fullname="mn::CppLinuxSerial::Exception::Exception" href="mn-cpplinuxserial-exception.html#Exception" status="active" access="public" location="Exception.hpp" filepath="/usr/local/include/CppLinuxSerial/Exception.hpp" lineno="26" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Exception(const char *file, int line, const std::string &amp;arg)">
                        <parameter left="const char *" right="" name="file" default=""/>
                        <parameter left="int" right="" name="line" default=""/>
                        <parameter left="const std::string &amp;" right="" name="arg" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SerialPort" fullname="mn::CppLinuxSerial::SerialPort" href="mn-cpplinuxserial-serialport.html" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="71">
                    <function threadsafety="unspecified" name="SerialPort" fullname="mn::CppLinuxSerial::SerialPort::SerialPort" href="mn-cpplinuxserial-serialport.html#SerialPort" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SerialPort()"/>
                    <function threadsafety="unspecified" name="SerialPort" fullname="mn::CppLinuxSerial::SerialPort::SerialPort" href="mn-cpplinuxserial-serialport.html#SerialPort-1" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="78" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SerialPort(const std::string &amp;device, BaudRate baudRate)">
                        <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        <parameter left="BaudRate" right="" name="baudRate" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SerialPort" fullname="mn::CppLinuxSerial::SerialPort::SerialPort" href="mn-cpplinuxserial-serialport.html#SerialPort-2" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="81" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SerialPort(const std::string &amp;device, speed_t baudRate)">
                        <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        <parameter left="speed_t" right="" name="baudRate" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GetTermios2" fullname="mn::CppLinuxSerial::SerialPort::GetTermios2" href="mn-cpplinuxserial-serialport.html#GetTermios2" status="active" access="private" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="termios2" signature="termios2 GetTermios2()"/>
                    <function threadsafety="unspecified" name="Close" fullname="mn::CppLinuxSerial::SerialPort::Close" href="mn-cpplinuxserial-serialport.html#Close" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Close()"/>
                    <function threadsafety="unspecified" name="ConfigureTermios" fullname="mn::CppLinuxSerial::SerialPort::ConfigureTermios" href="mn-cpplinuxserial-serialport.html#ConfigureTermios" status="active" access="private" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ConfigureTermios()"/>
                    <function threadsafety="unspecified" name="Open" fullname="mn::CppLinuxSerial::SerialPort::Open" href="mn-cpplinuxserial-serialport.html#Open" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Open()"/>
                    <function threadsafety="unspecified" name="Read" fullname="mn::CppLinuxSerial::SerialPort::Read" href="mn-cpplinuxserial-serialport.html#Read" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Read(std::string &amp;data)">
                        <parameter left="std::string &amp;" right="" name="data" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetBaudRate" fullname="mn::CppLinuxSerial::SerialPort::SetBaudRate" href="mn-cpplinuxserial-serialport.html#SetBaudRate" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="91" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetBaudRate(BaudRate baudRate)">
                        <parameter left="BaudRate" right="" name="baudRate" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetBaudRate" fullname="mn::CppLinuxSerial::SerialPort::SetBaudRate" href="mn-cpplinuxserial-serialport.html#SetBaudRate-1" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetBaudRate(speed_t baudRate)">
                        <parameter left="speed_t" right="" name="baudRate" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetDevice" fullname="mn::CppLinuxSerial::SerialPort::SetDevice" href="mn-cpplinuxserial-serialport.html#SetDevice" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="88" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetDevice(const std::string &amp;device)">
                        <parameter left="const std::string &amp;" right="" name="device" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetEcho" fullname="mn::CppLinuxSerial::SerialPort::SetEcho" href="mn-cpplinuxserial-serialport.html#SetEcho" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetEcho(bool value)">
                        <parameter left="bool" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetTermios2" fullname="mn::CppLinuxSerial::SerialPort::SetTermios2" href="mn-cpplinuxserial-serialport.html#SetTermios2" status="active" access="private" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetTermios2(termios2 tty)">
                        <parameter left="termios2" right="" name="tty" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SetTimeout" fullname="mn::CppLinuxSerial::SerialPort::SetTimeout" href="mn-cpplinuxserial-serialport.html#SetTimeout" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void SetTimeout(int32_t timeout_ms)">
                        <parameter left="int32_t" right="" name="timeout_ms" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Write" fullname="mn::CppLinuxSerial::SerialPort::Write" href="mn-cpplinuxserial-serialport.html#Write" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="119" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Write(const std::string &amp;data)">
                        <parameter left="const std::string &amp;" right="" name="data" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~SerialPort" fullname="mn::CppLinuxSerial::SerialPort::~SerialPort" href="mn-cpplinuxserial-serialport.html#dtor.SerialPort" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="84" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SerialPort()"/>
                </class>
                <enum threadsafety="unspecified" name="BaudRate" fullname="mn::CppLinuxSerial::BaudRate" href="mn-cpplinuxserial.html#BaudRate-enum" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="40">
                    <value name="B_0" value="0"/>
                    <value name="B_50" value="1"/>
                    <value name="B_75" value="2"/>
                    <value name="B_110" value="3"/>
                    <value name="B_134" value="4"/>
                    <value name="B_150" value="5"/>
                    <value name="B_200" value="6"/>
                    <value name="B_300" value="7"/>
                    <value name="B_600" value="8"/>
                    <value name="B_1200" value="9"/>
                    <value name="B_1800" value="10"/>
                    <value name="B_2400" value="11"/>
                    <value name="B_4800" value="12"/>
                    <value name="B_9600" value="13"/>
                    <value name="B_19200" value="14"/>
                    <value name="B_38400" value="15"/>
                    <value name="B_57600" value="16"/>
                    <value name="B_115200" value="17"/>
                    <value name="B_230400" value="18"/>
                    <value name="B_460800" value="19"/>
                    <value name="B_CUSTOM" value="20"/>
                </enum>
                <enum threadsafety="unspecified" name="BaudRateType" fullname="mn::CppLinuxSerial::BaudRateType" href="mn-cpplinuxserial.html#BaudRateType-enum" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="32">
                    <value name="STANDARD" value="0"/>
                    <value name="CUSTOM" value="1"/>
                </enum>
                <enum threadsafety="unspecified" name="State" fullname="mn::CppLinuxSerial::State" href="mn-cpplinuxserial.html#State-enum" status="active" access="public" location="SerialPort.hpp" filepath="/usr/local/include/CppLinuxSerial/SerialPort.hpp" lineno="65">
                    <value name="CLOSED" value="0"/>
                    <value name="OPEN" value="1"/>
                </enum>
            </namespace>
        </namespace>
        <namespace threadsafety="unspecified" name="GPIO" href="gpio.html" status="internal" access="private" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="33">
            <class threadsafety="unspecified" name="PWM" fullname="GPIO::PWM" href="gpio-pwm.html" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="105">
                <function threadsafety="unspecified" name="operator=" fullname="GPIO::PWM::operator=" href="gpio-pwm.html#operator-eq" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="109" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="PWM &amp;" signature="PWM &amp; operator=(const PWM &amp;) = delete">
                    <parameter left="const PWM &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="PWM" fullname="GPIO::PWM::PWM" href="gpio-pwm.html#PWM-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="108" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="PWM(const PWM &amp;) = delete">
                    <parameter left="const PWM &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="PWM" fullname="GPIO::PWM::PWM" href="gpio-pwm.html#PWM" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="107" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PWM(int channel, int frequency_hz)">
                    <parameter left="int" right="" name="channel" default=""/>
                    <parameter left="int" right="" name="frequency_hz" default=""/>
                </function>
                <function threadsafety="unspecified" name="ChangeDutyCycle" fullname="GPIO::PWM::ChangeDutyCycle" href="gpio-pwm.html#ChangeDutyCycle" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ChangeDutyCycle(double duty_cycle_percent)">
                    <parameter left="double" right="" name="duty_cycle_percent" default=""/>
                </function>
                <function threadsafety="unspecified" name="ChangeFrequency" fullname="GPIO::PWM::ChangeFrequency" href="gpio-pwm.html#ChangeFrequency" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ChangeFrequency(int frequency_hz)">
                    <parameter left="int" right="" name="frequency_hz" default=""/>
                </function>
                <function threadsafety="unspecified" name="start" fullname="GPIO::PWM::start" href="gpio-pwm.html#start" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void start(double duty_cycle_percent)">
                    <parameter left="double" right="" name="duty_cycle_percent" default=""/>
                </function>
                <function threadsafety="unspecified" name="stop" fullname="GPIO::PWM::stop" href="gpio-pwm.html#stop" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="112" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stop()"/>
                <function threadsafety="unspecified" name="~PWM" fullname="GPIO::PWM::~PWM" href="gpio-pwm.html#dtor.PWM" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="110" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~PWM()"/>
            </class>
            <enum threadsafety="unspecified" name="Directions" fullname="GPIO::Directions" href="gpio.html#Directions-enum" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="58">
                <value name="UNKNOWN" value="0"/>
                <value name="OUT" value="1"/>
                <value name="IN" value="2"/>
                <value name="HARD_PWM" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="NumberingModes" fullname="GPIO::NumberingModes" href="gpio.html#NumberingModes-enum" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="40">
                <value name="BOARD" value="0"/>
                <value name="BCM" value="1"/>
                <value name="TEGRA_SOC" value="2"/>
                <value name="CVM" value="3"/>
                <value name="None" value="4"/>
            </enum>
            <function threadsafety="unspecified" name="gpio_function" fullname="GPIO::gpio_function" href="gpio.html#gpio_function" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Directions" signature="Directions gpio_function(const std::string &amp;channel)">
                <parameter left="const std::string &amp;" right="" name="channel" default=""/>
            </function>
            <function threadsafety="unspecified" name="gpio_function" fullname="GPIO::gpio_function" href="gpio.html#gpio_function-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Directions" signature="Directions gpio_function(int channel)">
                <parameter left="int" right="" name="channel" default=""/>
            </function>
            <function threadsafety="unspecified" name="getmode" fullname="GPIO::getmode" href="gpio.html#getmode" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NumberingModes" signature="NumberingModes getmode()"/>
            <function threadsafety="unspecified" name="input" fullname="GPIO::input" href="gpio.html#input" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int input(const std::string &amp;channel)">
                <parameter left="const std::string &amp;" right="" name="channel" default=""/>
            </function>
            <function threadsafety="unspecified" name="input" fullname="GPIO::input" href="gpio.html#input-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="90" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int input(int channel)">
                <parameter left="int" right="" name="channel" default=""/>
            </function>
            <function threadsafety="unspecified" name="cleanup" fullname="GPIO::cleanup" href="gpio.html#cleanup" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanup(const std::string &amp;channel)">
                <parameter left="const std::string &amp;" right="" name="channel" default="&quot;None&quot;"/>
            </function>
            <function threadsafety="unspecified" name="cleanup" fullname="GPIO::cleanup" href="gpio.html#cleanup-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanup(int channel)">
                <parameter left="int" right="" name="channel" default=""/>
            </function>
            <function threadsafety="unspecified" name="output" fullname="GPIO::output" href="gpio.html#output" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void output(const std::string &amp;channel, int value)">
                <parameter left="const std::string &amp;" right="" name="channel" default=""/>
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="output" fullname="GPIO::output" href="gpio.html#output-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void output(int channel, int value)">
                <parameter left="int" right="" name="channel" default=""/>
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setmode" fullname="GPIO::setmode" href="gpio.html#setmode" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="69" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setmode(NumberingModes mode)">
                <parameter left="NumberingModes" right="" name="mode" default=""/>
            </function>
            <function threadsafety="unspecified" name="setup" fullname="GPIO::setup" href="gpio.html#setup" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setup(const std::string &amp;channel, Directions direction, int initial)">
                <parameter left="const std::string &amp;" right="" name="channel" default=""/>
                <parameter left="Directions" right="" name="direction" default=""/>
                <parameter left="int" right="" name="initial" default="-1"/>
            </function>
            <function threadsafety="unspecified" name="setup" fullname="GPIO::setup" href="gpio.html#setup-1" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setup(int channel, Directions direction, int initial)">
                <parameter left="int" right="" name="channel" default=""/>
                <parameter left="Directions" right="" name="direction" default=""/>
                <parameter left="int" right="" name="initial" default="-1"/>
            </function>
            <function threadsafety="unspecified" name="setwarnings" fullname="GPIO::setwarnings" href="gpio.html#setwarnings" status="active" access="public" location="JetsonGPIO.h" filepath="/usr/local/include/JetsonGPIO.h" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setwarnings(bool state)">
                <parameter left="bool" right="" name="state" default=""/>
            </function>
        </namespace>
        <class threadsafety="unspecified" name="RawDegrees" href="rawdegrees.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="44">
            <function threadsafety="unspecified" name="RawDegrees" fullname="RawDegrees::RawDegrees" href="rawdegrees.html#RawDegrees" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RawDegrees()"/>
            <variable threadsafety="unspecified" name="billionths" fullname="RawDegrees::billionths" href="rawdegrees.html#billionths-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="47" type="uint32_t" static="false"/>
            <variable threadsafety="unspecified" name="deg" fullname="RawDegrees::deg" href="rawdegrees.html#deg-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="46" type="uint16_t" static="false"/>
            <variable threadsafety="unspecified" name="negative" fullname="RawDegrees::negative" href="rawdegrees.html#negative-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="48" type="bool" static="false"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSAltitude" href="tinygpsaltitude.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="175" bases="TinyGPSDecimal">
            <function threadsafety="unspecified" name="feet" fullname="TinyGPSAltitude::feet" href="tinygpsaltitude.html#feet" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="180" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double feet()"/>
            <function threadsafety="unspecified" name="kilometers" fullname="TinyGPSAltitude::kilometers" href="tinygpsaltitude.html#kilometers" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="179" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double kilometers()"/>
            <function threadsafety="unspecified" name="meters" fullname="TinyGPSAltitude::meters" href="tinygpsaltitude.html#meters" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="177" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double meters()"/>
            <function threadsafety="unspecified" name="miles" fullname="TinyGPSAltitude::miles" href="tinygpsaltitude.html#miles" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="178" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double miles()"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSCourse" href="tinygpscourse.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="170" bases="TinyGPSDecimal">
            <function threadsafety="unspecified" name="deg" fullname="TinyGPSCourse::deg" href="tinygpscourse.html#deg" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double deg()"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSCustom" href="tinygpscustom.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="189">
            <function threadsafety="unspecified" name="TinyGPSCustom" fullname="TinyGPSCustom::TinyGPSCustom" href="tinygpscustom.html#TinyGPSCustom" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="192" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSCustom()"/>
            <function threadsafety="unspecified" name="TinyGPSCustom" fullname="TinyGPSCustom::TinyGPSCustom" href="tinygpscustom.html#TinyGPSCustom-1" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="193" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSCustom(TinyGPSPlus &amp;gps, const char *sentenceName, int termNumber)">
                <parameter left="TinyGPSPlus &amp;" right="" name="gps" default=""/>
                <parameter left="const char *" right="" name="sentenceName" default=""/>
                <parameter left="int" right="" name="termNumber" default=""/>
            </function>
            <function threadsafety="unspecified" name="value" fullname="TinyGPSCustom::value" href="tinygpscustom.html#value" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="198" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * value()"/>
            <function threadsafety="unspecified" name="begin" fullname="TinyGPSCustom::begin" href="tinygpscustom.html#begin" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void begin(TinyGPSPlus &amp;gps, const char *_sentenceName, int _termNumber)">
                <parameter left="TinyGPSPlus &amp;" right="" name="gps" default=""/>
                <parameter left="const char *" right="" name="_sentenceName" default=""/>
                <parameter left="int" right="" name="_termNumber" default=""/>
            </function>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSCustom::commit" href="tinygpscustom.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="201" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="set" fullname="TinyGPSCustom::set" href="tinygpscustom.html#set" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="202" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSCustom::isUpdated" href="tinygpscustom.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="196" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSCustom::isValid" href="tinygpscustom.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="197" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSDate" href="tinygpsdate.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="77">
            <function threadsafety="unspecified" name="TinyGPSDate" fullname="TinyGPSDate::TinyGPSDate" href="tinygpsdate.html#TinyGPSDate" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="89" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSDate()"/>
            <function threadsafety="unspecified" name="year" fullname="TinyGPSDate::year" href="tinygpsdate.html#year" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint16_t" signature="uint16_t year()"/>
            <function threadsafety="unspecified" name="value" fullname="TinyGPSDate::value" href="tinygpsdate.html#value" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t value()"/>
            <function threadsafety="unspecified" name="day" fullname="TinyGPSDate::day" href="tinygpsdate.html#day" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="87" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t day()"/>
            <function threadsafety="unspecified" name="month" fullname="TinyGPSDate::month" href="tinygpsdate.html#month" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="86" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t month()"/>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSDate::commit" href="tinygpsdate.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="setDate" fullname="TinyGPSDate::setDate" href="tinygpsdate.html#setDate" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="97" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDate(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSDate::isUpdated" href="tinygpsdate.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="82" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSDate::isValid" href="tinygpsdate.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="81" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSDecimal" href="tinygpsdecimal.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="124">
            <function threadsafety="unspecified" name="TinyGPSDecimal" fullname="TinyGPSDecimal::TinyGPSDecimal" href="tinygpsdecimal.html#TinyGPSDecimal" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="132" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSDecimal()"/>
            <function threadsafety="unspecified" name="value" fullname="TinyGPSDecimal::value" href="tinygpsdecimal.html#value" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="130" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int32_t" signature="int32_t value()"/>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSDecimal::commit" href="tinygpsdecimal.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="set" fullname="TinyGPSDecimal::set" href="tinygpsdecimal.html#set" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSDecimal::isUpdated" href="tinygpsdecimal.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="129" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSDecimal::isValid" href="tinygpsdecimal.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="128" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSHDOP" href="tinygpshdop.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="183" bases="TinyGPSDecimal">
            <function threadsafety="unspecified" name="hdop" fullname="TinyGPSHDOP::hdop" href="tinygpshdop.html#hdop" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="185" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double hdop()"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSInteger" href="tinygpsinteger.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="143">
            <function threadsafety="unspecified" name="TinyGPSInteger" fullname="TinyGPSInteger::TinyGPSInteger" href="tinygpsinteger.html#TinyGPSInteger" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="151" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSInteger()"/>
            <function threadsafety="unspecified" name="value" fullname="TinyGPSInteger::value" href="tinygpsinteger.html#value" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t value()"/>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSInteger::commit" href="tinygpsinteger.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="set" fullname="TinyGPSInteger::set" href="tinygpsinteger.html#set" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="159" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSInteger::isUpdated" href="tinygpsinteger.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="148" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSInteger::isValid" href="tinygpsinteger.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="147" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSLocation" href="tinygpslocation.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="54">
            <function threadsafety="unspecified" name="TinyGPSLocation" fullname="TinyGPSLocation::TinyGPSLocation" href="tinygpslocation.html#TinyGPSLocation" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="65" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSLocation()"/>
            <function threadsafety="unspecified" name="rawLat" fullname="TinyGPSLocation::rawLat" href="tinygpslocation.html#rawLat" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const RawDegrees &amp;" signature="const RawDegrees &amp; rawLat()"/>
            <function threadsafety="unspecified" name="rawLng" fullname="TinyGPSLocation::rawLng" href="tinygpslocation.html#rawLng" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const RawDegrees &amp;" signature="const RawDegrees &amp; rawLng()"/>
            <function threadsafety="unspecified" name="lat" fullname="TinyGPSLocation::lat" href="tinygpslocation.html#lat" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double lat()"/>
            <function threadsafety="unspecified" name="lng" fullname="TinyGPSLocation::lng" href="tinygpslocation.html#lng" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double lng()"/>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSLocation::commit" href="tinygpslocation.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="setLatitude" fullname="TinyGPSLocation::setLatitude" href="tinygpslocation.html#setLatitude" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLatitude(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="setLongitude" fullname="TinyGPSLocation::setLongitude" href="tinygpslocation.html#setLongitude" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLongitude(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSLocation::isUpdated" href="tinygpslocation.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSLocation::isValid" href="tinygpslocation.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="58" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSPlus" href="tinygpsplus.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="214">
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="TinyGPSPlus::operator&lt;&lt;" href="tinygpsplus.html#operator-lt-lt" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="219" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TinyGPSPlus &amp;" signature="TinyGPSPlus &amp; operator&lt;&lt;(char c)">
                <parameter left="char" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="TinyGPSPlus" fullname="TinyGPSPlus::TinyGPSPlus" href="tinygpsplus.html#TinyGPSPlus" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="217" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSPlus()"/>
            <function threadsafety="unspecified" name="encode" fullname="TinyGPSPlus::encode" href="tinygpsplus.html#encode" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="218" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool encode(char c)">
                <parameter left="char" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="endOfTermHandler" fullname="TinyGPSPlus::endOfTermHandler" href="tinygpsplus.html#endOfTermHandler" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="270" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool endOfTermHandler()"/>
            <function threadsafety="unspecified" name="cardinal" fullname="TinyGPSPlus::cardinal" href="tinygpsplus.html#cardinal" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="234" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * cardinal(double course)">
                <parameter left="double" right="" name="course" default=""/>
            </function>
            <function threadsafety="unspecified" name="libraryVersion" fullname="TinyGPSPlus::libraryVersion" href="tinygpsplus.html#libraryVersion" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="230" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * libraryVersion()"/>
            <function threadsafety="unspecified" name="distanceBetween" fullname="TinyGPSPlus::distanceBetween" href="tinygpsplus.html#distanceBetween" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="232" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double distanceBetween(double lat1, double long1, double lat2, double long2)">
                <parameter left="double" right="" name="lat1" default=""/>
                <parameter left="double" right="" name="long1" default=""/>
                <parameter left="double" right="" name="lat2" default=""/>
                <parameter left="double" right="" name="long2" default=""/>
            </function>
            <function threadsafety="unspecified" name="fromHex" fullname="TinyGPSPlus::fromHex" href="tinygpsplus.html#fromHex" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="269" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int fromHex(char a)">
                <parameter left="char" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="parseDecimal" fullname="TinyGPSPlus::parseDecimal" href="tinygpsplus.html#parseDecimal" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="236" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int32_t" signature="int32_t parseDecimal(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="courseTo" fullname="TinyGPSPlus::courseTo" href="tinygpsplus.html#courseTo" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="233" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t courseTo(double lat1, double long1, double lat2, double long2)">
                <parameter left="double" right="" name="lat1" default=""/>
                <parameter left="double" right="" name="long1" default=""/>
                <parameter left="double" right="" name="lat2" default=""/>
                <parameter left="double" right="" name="long2" default=""/>
            </function>
            <function threadsafety="unspecified" name="insertCustom" fullname="TinyGPSPlus::insertCustom" href="tinygpsplus.html#insertCustom" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="260" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int index)">
                <parameter left="TinyGPSCustom *" right="" name="pElt" default=""/>
                <parameter left="const char *" right="" name="sentenceName" default=""/>
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="parseDegrees" fullname="TinyGPSPlus::parseDegrees" href="tinygpsplus.html#parseDegrees" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="237" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parseDegrees(const char *term, RawDegrees &amp;deg)">
                <parameter left="const char *" right="" name="term" default=""/>
                <parameter left="RawDegrees &amp;" right="" name="deg" default=""/>
            </function>
            <function threadsafety="unspecified" name="charsProcessed" fullname="TinyGPSPlus::charsProcessed" href="tinygpsplus.html#charsProcessed" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="239" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t charsProcessed() const"/>
            <function threadsafety="unspecified" name="failedChecksum" fullname="TinyGPSPlus::failedChecksum" href="tinygpsplus.html#failedChecksum" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="241" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t failedChecksum() const"/>
            <function threadsafety="unspecified" name="passedChecksum" fullname="TinyGPSPlus::passedChecksum" href="tinygpsplus.html#passedChecksum" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="242" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t passedChecksum() const"/>
            <function threadsafety="unspecified" name="sentencesWithFix" fullname="TinyGPSPlus::sentencesWithFix" href="tinygpsplus.html#sentencesWithFix" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="240" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t sentencesWithFix() const"/>
            <variable threadsafety="unspecified" name="GPS_SENTENCE_GPGGA" fullname="TinyGPSPlus::GPS_SENTENCE_GPGGA" href="tinygpsplus.html#GPS_SENTENCE_GPGGA-var" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="245" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="GPS_SENTENCE_GPRMC" fullname="TinyGPSPlus::GPS_SENTENCE_GPRMC" href="tinygpsplus.html#GPS_SENTENCE_GPRMC-var" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="245" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="GPS_SENTENCE_OTHER" fullname="TinyGPSPlus::GPS_SENTENCE_OTHER" href="tinygpsplus.html#GPS_SENTENCE_OTHER-var" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="245" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="altitude" fullname="TinyGPSPlus::altitude" href="tinygpsplus.html#altitude-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="226" type="TinyGPSAltitude" static="false"/>
            <variable threadsafety="unspecified" name="course" fullname="TinyGPSPlus::course" href="tinygpsplus.html#course-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="225" type="TinyGPSCourse" static="false"/>
            <variable threadsafety="unspecified" name="date" fullname="TinyGPSPlus::date" href="tinygpsplus.html#date-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="222" type="TinyGPSDate" static="false"/>
            <variable threadsafety="unspecified" name="hdop" fullname="TinyGPSPlus::hdop" href="tinygpsplus.html#hdop-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="228" type="TinyGPSHDOP" static="false"/>
            <variable threadsafety="unspecified" name="location" fullname="TinyGPSPlus::location" href="tinygpsplus.html#location-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="221" type="TinyGPSLocation" static="false"/>
            <variable threadsafety="unspecified" name="satellites" fullname="TinyGPSPlus::satellites" href="tinygpsplus.html#satellites-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="227" type="TinyGPSInteger" static="false"/>
            <variable threadsafety="unspecified" name="speed" fullname="TinyGPSPlus::speed" href="tinygpsplus.html#speed-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="224" type="TinyGPSSpeed" static="false"/>
            <variable threadsafety="unspecified" name="time" fullname="TinyGPSPlus::time" href="tinygpsplus.html#time-var" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="223" type="TinyGPSTime" static="false"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSSpeed" href="tinygpsspeed.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="162" bases="TinyGPSDecimal">
            <function threadsafety="unspecified" name="kmph" fullname="TinyGPSSpeed::kmph" href="tinygpsspeed.html#kmph" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double kmph()"/>
            <function threadsafety="unspecified" name="knots" fullname="TinyGPSSpeed::knots" href="tinygpsspeed.html#knots" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double knots()"/>
            <function threadsafety="unspecified" name="mph" fullname="TinyGPSSpeed::mph" href="tinygpsspeed.html#mph" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="165" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double mph()"/>
            <function threadsafety="unspecified" name="mps" fullname="TinyGPSSpeed::mps" href="tinygpsspeed.html#mps" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double mps()"/>
        </class>
        <class threadsafety="unspecified" name="TinyGPSTime" href="tinygpstime.html" status="internal" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="100">
            <function threadsafety="unspecified" name="TinyGPSTime" fullname="TinyGPSTime::TinyGPSTime" href="tinygpstime.html#TinyGPSTime" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="113" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TinyGPSTime()"/>
            <function threadsafety="unspecified" name="value" fullname="TinyGPSTime::value" href="tinygpstime.html#value" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32_t" signature="uint32_t value()"/>
            <function threadsafety="unspecified" name="centisecond" fullname="TinyGPSTime::centisecond" href="tinygpstime.html#centisecond" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t centisecond()"/>
            <function threadsafety="unspecified" name="hour" fullname="TinyGPSTime::hour" href="tinygpstime.html#hour" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t hour()"/>
            <function threadsafety="unspecified" name="minute" fullname="TinyGPSTime::minute" href="tinygpstime.html#minute" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t minute()"/>
            <function threadsafety="unspecified" name="second" fullname="TinyGPSTime::second" href="tinygpstime.html#second" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t" signature="uint8_t second()"/>
            <function threadsafety="unspecified" name="commit" fullname="TinyGPSTime::commit" href="tinygpstime.html#commit" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commit()"/>
            <function threadsafety="unspecified" name="setTime" fullname="TinyGPSTime::setTime" href="tinygpstime.html#setTime" status="active" access="private" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setTime(const char *term)">
                <parameter left="const char *" right="" name="term" default=""/>
            </function>
            <function threadsafety="unspecified" name="isUpdated" fullname="TinyGPSTime::isUpdated" href="tinygpstime.html#isUpdated" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="105" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUpdated() const"/>
            <function threadsafety="unspecified" name="isValid" fullname="TinyGPSTime::isValid" href="tinygpstime.html#isValid" status="active" access="public" location="TinyGPS++.h" filepath="/usr/local/include/TinyGPS++.h" lineno="104" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
        </class>
        <namespace threadsafety="unspecified" name="cv" href="cv.html" status="internal" access="private" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="437">
            <namespace threadsafety="unspecified" name="fisheye" fullname="cv::fisheye" href="cv-fisheye.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3760">
                <variable threadsafety="unspecified" name="CALIB_CHECK_COND" fullname="cv::fisheye::CALIB_CHECK_COND" href="cv-fisheye.html#CALIB_CHECK_COND-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3768" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_INTRINSIC" fullname="cv::fisheye::CALIB_FIX_INTRINSIC" href="cv-fisheye.html#CALIB_FIX_INTRINSIC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3774" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_K1" fullname="cv::fisheye::CALIB_FIX_K1" href="cv-fisheye.html#CALIB_FIX_K1-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3770" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_K2" fullname="cv::fisheye::CALIB_FIX_K2" href="cv-fisheye.html#CALIB_FIX_K2-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3771" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_K3" fullname="cv::fisheye::CALIB_FIX_K3" href="cv-fisheye.html#CALIB_FIX_K3-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3772" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_K4" fullname="cv::fisheye::CALIB_FIX_K4" href="cv-fisheye.html#CALIB_FIX_K4-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3773" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_PRINCIPAL_POINT" fullname="cv::fisheye::CALIB_FIX_PRINCIPAL_POINT" href="cv-fisheye.html#CALIB_FIX_PRINCIPAL_POINT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3775" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_FIX_SKEW" fullname="cv::fisheye::CALIB_FIX_SKEW" href="cv-fisheye.html#CALIB_FIX_SKEW-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3769" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_RECOMPUTE_EXTRINSIC" fullname="cv::fisheye::CALIB_RECOMPUTE_EXTRINSIC" href="cv-fisheye.html#CALIB_RECOMPUTE_EXTRINSIC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3767" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_USE_INTRINSIC_GUESS" fullname="cv::fisheye::CALIB_USE_INTRINSIC_GUESS" href="cv-fisheye.html#CALIB_USE_INTRINSIC_GUESS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3766" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CALIB_ZERO_DISPARITY" fullname="cv::fisheye::CALIB_ZERO_DISPARITY" href="cv-fisheye.html#CALIB_ZERO_DISPARITY-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3777" type="const int" static="true"/>
            </namespace>
            <class threadsafety="unspecified" name="CirclesGridFinderParameters" fullname="cv::CirclesGridFinderParameters" href="cv-circlesgridfinderparameters.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="1630">
                <enum threadsafety="unspecified" name="GridType" fullname="cv::CirclesGridFinderParameters::GridType" href="cv-circlesgridfinderparameters.html#GridType-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="1647">
                    <value name="SYMMETRIC_GRID" value="0"/>
                    <value name="ASYMMETRIC_GRID" value="1"/>
                </enum>
                <function threadsafety="unspecified" name="CirclesGridFinderParameters" fullname="cv::CirclesGridFinderParameters::CirclesGridFinderParameters" href="cv-circlesgridfinderparameters.html#CirclesGridFinderParameters" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="1632" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP CirclesGridFinderParameters()"/>
                <variable threadsafety="unspecified" name="gridType" fullname="cv::CirclesGridFinderParameters::gridType" href="cv-circlesgridfinderparameters.html#gridType-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="1651" type="GridType" static="false"/>
            </class>
            <class threadsafety="unspecified" name="LMSolver" fullname="cv::LMSolver" href="cv-lmsolver.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="604" bases="cv::Algorithm">
                <class threadsafety="unspecified" name="Callback" fullname="cv::LMSolver::Callback" href="cv-lmsolver-callback.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="607">
                    <function threadsafety="unspecified" name="~Callback" fullname="cv::LMSolver::Callback::~Callback" href="cv-lmsolver-callback.html#dtor.Callback" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="610" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Callback()"/>
                    <function threadsafety="unspecified" name="compute" fullname="cv::LMSolver::Callback::compute" href="cv-lmsolver-callback.html#compute" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="623" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool compute(InputArray param, OutputArray err, OutputArray J) const = 0">
                        <parameter left="InputArray" right="" name="param" default=""/>
                        <parameter left="OutputArray" right="" name="err" default=""/>
                        <parameter left="OutputArray" right="" name="J" default=""/>
                    </function>
                </class>
                <function threadsafety="unspecified" name="create" fullname="cv::LMSolver::create" href="cv-lmsolver.html#create" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="657" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;LMSolver&gt;" signature="Ptr&lt;LMSolver&gt; create(const Ptr&lt;LMSolver::Callback&gt; &amp;cb, int maxIters)">
                    <parameter left="const Ptr&lt;LMSolver::Callback&gt; &amp;" right="" name="cb" default=""/>
                    <parameter left="int" right="" name="maxIters" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::LMSolver::create" href="cv-lmsolver.html#create-1" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="658" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;LMSolver&gt;" signature="Ptr&lt;LMSolver&gt; create(const Ptr&lt;LMSolver::Callback&gt; &amp;cb, int maxIters, double eps)">
                    <parameter left="const Ptr&lt;LMSolver::Callback&gt; &amp;" right="" name="cb" default=""/>
                    <parameter left="int" right="" name="maxIters" default=""/>
                    <parameter left="double" right="" name="eps" default=""/>
                </function>
                <function threadsafety="unspecified" name="setMaxIters" fullname="cv::LMSolver::setMaxIters" href="cv-lmsolver.html#setMaxIters" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="644" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaxIters(int maxIters) = 0">
                    <parameter left="int" right="" name="maxIters" default=""/>
                </function>
                <function threadsafety="unspecified" name="getMaxIters" fullname="cv::LMSolver::getMaxIters" href="cv-lmsolver.html#getMaxIters" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="648" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getMaxIters() const = 0"/>
                <function threadsafety="unspecified" name="run" fullname="cv::LMSolver::run" href="cv-lmsolver.html#run" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="638" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int run(InputOutputArray param) const = 0">
                    <parameter left="InputOutputArray" right="" name="param" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="StereoBM" fullname="cv::StereoBM" href="cv-stereobm.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3417" bases="cv::StereoMatcher">
                <variable threadsafety="unspecified" name="PREFILTER_NORMALIZED_RESPONSE" fullname="cv::StereoBM::PREFILTER_NORMALIZED_RESPONSE" href="cv-stereobm.html#PREFILTER_NORMALIZED_RESPONSE-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3420" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PREFILTER_XSOBEL" fullname="cv::StereoBM::PREFILTER_XSOBEL" href="cv-stereobm.html#PREFILTER_XSOBEL-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3422" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="StereoMatcher" fullname="cv::StereoMatcher" href="cv-stereomatcher.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3376" bases="cv::Algorithm">
                <variable threadsafety="unspecified" name="DISP_SCALE" fullname="cv::StereoMatcher::DISP_SCALE" href="cv-stereomatcher.html#DISP_SCALE-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3381" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="DISP_SHIFT" fullname="cv::StereoMatcher::DISP_SHIFT" href="cv-stereomatcher.html#DISP_SHIFT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3379" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="StereoSGBM" fullname="cv::StereoSGBM" href="cv-stereosgbm.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3482" bases="cv::StereoMatcher">
                <variable threadsafety="unspecified" name="MODE_HH" fullname="cv::StereoSGBM::MODE_HH" href="cv-stereosgbm.html#MODE_HH-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3488" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MODE_HH4" fullname="cv::StereoSGBM::MODE_HH4" href="cv-stereosgbm.html#MODE_HH4-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3491" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MODE_SGBM" fullname="cv::StereoSGBM::MODE_SGBM" href="cv-stereosgbm.html#MODE_SGBM-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3487" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MODE_SGBM_3WAY" fullname="cv::StereoSGBM::MODE_SGBM_3WAY" href="cv-stereosgbm.html#MODE_SGBM_3WAY-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3489" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="UsacParams" fullname="cv::UsacParams" href="cv-usacparams.html" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="552">
                <function threadsafety="unspecified" name="UsacParams" fullname="cv::UsacParams::UsacParams" href="cv-usacparams.html#UsacParams" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="554" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP UsacParams()"/>
            </class>
            <enum threadsafety="unspecified" name="HandEyeCalibrationMethod" fullname="cv::HandEyeCalibrationMethod" href="cv.html#HandEyeCalibrationMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="530">
                <value name="CALIB_HAND_EYE_TSAI" value="0"/>
                <value name="CALIB_HAND_EYE_PARK" value="1"/>
                <value name="CALIB_HAND_EYE_HORAUD" value="2"/>
                <value name="CALIB_HAND_EYE_ANDREFF" value="3"/>
                <value name="CALIB_HAND_EYE_DANIILIDIS" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="LocalOptimMethod" fullname="cv::LocalOptimMethod" href="cv.html#LocalOptimMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="547">
                <value name="LOCAL_OPTIM_NULL" value="0"/>
                <value name="LOCAL_OPTIM_INNER_LO" value="1"/>
                <value name="LOCAL_OPTIM_INNER_AND_ITER_LO" value="2"/>
                <value name="LOCAL_OPTIM_GC" value="3"/>
                <value name="LOCAL_OPTIM_SIGMA" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="NeighborSearchMethod" fullname="cv::NeighborSearchMethod" href="cv.html#NeighborSearchMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="550">
                <value name="NEIGH_FLANN_KNN" value="0"/>
                <value name="NEIGH_GRID" value="1"/>
                <value name="NEIGH_FLANN_RADIUS" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="RobotWorldHandEyeCalibrationMethod" fullname="cv::RobotWorldHandEyeCalibrationMethod" href="cv.html#RobotWorldHandEyeCalibrationMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="539">
                <value name="CALIB_ROBOT_WORLD_HAND_EYE_SHAH" value="0"/>
                <value name="CALIB_ROBOT_WORLD_HAND_EYE_LI" value="1"/>
            </enum>
            <enum threadsafety="unspecified" name="SamplingMethod" fullname="cv::SamplingMethod" href="cv.html#SamplingMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="545">
                <value name="SAMPLING_UNIFORM" value="0"/>
                <value name="SAMPLING_PROGRESSIVE_NAPSAC" value="1"/>
                <value name="SAMPLING_NAPSAC" value="2"/>
                <value name="SAMPLING_PROSAC" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="ScoreMethod" fullname="cv::ScoreMethod" href="cv.html#ScoreMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="549">
                <value name="SCORE_METHOD_RANSAC" value="0"/>
                <value name="SCORE_METHOD_MSAC" value="1"/>
                <value name="SCORE_METHOD_MAGSAC" value="2"/>
                <value name="SCORE_METHOD_LMEDS" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="SolvePnPMethod" fullname="cv::SolvePnPMethod" href="cv.html#SolvePnPMethod-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="456">
                <value name="SOLVEPNP_ITERATIVE" value="0"/>
                <value name="SOLVEPNP_EPNP" value="1"/>
                <value name="SOLVEPNP_P3P" value="2"/>
                <value name="SOLVEPNP_DLS" value="3"/>
                <value name="SOLVEPNP_UPNP" value="4"/>
                <value name="SOLVEPNP_AP3P" value="5"/>
                <value name="SOLVEPNP_IPPE" value="6"/>
                <value name="SOLVEPNP_IPPE_SQUARE" value="7"/>
                <value name="SOLVEPNP_SQPNP" value="8"/>
                <value name="SOLVEPNP_MAX_COUNT" value="9"/>
            </enum>
            <enum threadsafety="unspecified" name="UndistortTypes" fullname="cv::UndistortTypes" href="cv.html#UndistortTypes-enum" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3554">
                <value name="PROJ_SPHERICAL_ORTHO" value="0"/>
                <value name="PROJ_SPHERICAL_EQRECT" value="1"/>
            </enum>
            <typedef threadsafety="unspecified" name="CirclesGridFinderParameters2" fullname="cv::CirclesGridFinderParameters2" href="cv.html#CirclesGridFinderParameters2-typedef" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="1658"/>
            <function threadsafety="unspecified" name="initWideAngleProjMap" fullname="cv::initWideAngleProjMap" href="cv.html#initWideAngleProjMap" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="3667" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float initWideAngleProjMap(InputArray cameraMatrix, InputArray distCoeffs, Size imageSize, int destImageWidth, int m1type, OutputArray map1, OutputArray map2, int projType, double alpha)">
                <parameter left="InputArray" right="" name="cameraMatrix" default=""/>
                <parameter left="InputArray" right="" name="distCoeffs" default=""/>
                <parameter left="Size" right="" name="imageSize" default=""/>
                <parameter left="int" right="" name="destImageWidth" default=""/>
                <parameter left="int" right="" name="m1type" default=""/>
                <parameter left="OutputArray" right="" name="map1" default=""/>
                <parameter left="OutputArray" right="" name="map2" default=""/>
                <parameter left="int" right="" name="projType" default=""/>
                <parameter left="double" right="" name="alpha" default="0"/>
            </function>
            <variable threadsafety="unspecified" name="CALIB_CB_ACCURACY" fullname="cv::CALIB_CB_ACCURACY" href="cv.html#CALIB_CB_ACCURACY-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="485" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_ADAPTIVE_THRESH" fullname="cv::CALIB_CB_ADAPTIVE_THRESH" href="cv.html#CALIB_CB_ADAPTIVE_THRESH-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="480" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_ASYMMETRIC_GRID" fullname="cv::CALIB_CB_ASYMMETRIC_GRID" href="cv.html#CALIB_CB_ASYMMETRIC_GRID-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="491" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_CLUSTERING" fullname="cv::CALIB_CB_CLUSTERING" href="cv.html#CALIB_CB_CLUSTERING-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="493" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_EXHAUSTIVE" fullname="cv::CALIB_CB_EXHAUSTIVE" href="cv.html#CALIB_CB_EXHAUSTIVE-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="484" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_FAST_CHECK" fullname="cv::CALIB_CB_FAST_CHECK" href="cv.html#CALIB_CB_FAST_CHECK-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="483" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_FILTER_QUADS" fullname="cv::CALIB_CB_FILTER_QUADS" href="cv.html#CALIB_CB_FILTER_QUADS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="482" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_LARGER" fullname="cv::CALIB_CB_LARGER" href="cv.html#CALIB_CB_LARGER-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="486" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_MARKER" fullname="cv::CALIB_CB_MARKER" href="cv.html#CALIB_CB_MARKER-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="488" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_NORMALIZE_IMAGE" fullname="cv::CALIB_CB_NORMALIZE_IMAGE" href="cv.html#CALIB_CB_NORMALIZE_IMAGE-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="481" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_CB_SYMMETRIC_GRID" fullname="cv::CALIB_CB_SYMMETRIC_GRID" href="cv.html#CALIB_CB_SYMMETRIC_GRID-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="490" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_ASPECT_RATIO" fullname="cv::CALIB_FIX_ASPECT_RATIO" href="cv.html#CALIB_FIX_ASPECT_RATIO-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="497" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_FOCAL_LENGTH" fullname="cv::CALIB_FIX_FOCAL_LENGTH" href="cv.html#CALIB_FIX_FOCAL_LENGTH-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="500" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_INTRINSIC" fullname="cv::CALIB_FIX_INTRINSIC" href="cv.html#CALIB_FIX_INTRINSIC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="515" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K1" fullname="cv::CALIB_FIX_K1" href="cv.html#CALIB_FIX_K1-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="501" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K2" fullname="cv::CALIB_FIX_K2" href="cv.html#CALIB_FIX_K2-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="502" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K3" fullname="cv::CALIB_FIX_K3" href="cv.html#CALIB_FIX_K3-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="503" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K4" fullname="cv::CALIB_FIX_K4" href="cv.html#CALIB_FIX_K4-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="504" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K5" fullname="cv::CALIB_FIX_K5" href="cv.html#CALIB_FIX_K5-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="505" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_K6" fullname="cv::CALIB_FIX_K6" href="cv.html#CALIB_FIX_K6-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="506" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_PRINCIPAL_POINT" fullname="cv::CALIB_FIX_PRINCIPAL_POINT" href="cv.html#CALIB_FIX_PRINCIPAL_POINT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="498" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_S1_S2_S3_S4" fullname="cv::CALIB_FIX_S1_S2_S3_S4" href="cv.html#CALIB_FIX_S1_S2_S3_S4-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="509" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_TANGENT_DIST" fullname="cv::CALIB_FIX_TANGENT_DIST" href="cv.html#CALIB_FIX_TANGENT_DIST-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="513" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_FIX_TAUX_TAUY" fullname="cv::CALIB_FIX_TAUX_TAUY" href="cv.html#CALIB_FIX_TAUX_TAUY-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="511" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_NINTRINSIC" fullname="cv::CALIB_NINTRINSIC" href="cv.html#CALIB_NINTRINSIC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="495" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_RATIONAL_MODEL" fullname="cv::CALIB_RATIONAL_MODEL" href="cv.html#CALIB_RATIONAL_MODEL-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="507" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_SAME_FOCAL_LENGTH" fullname="cv::CALIB_SAME_FOCAL_LENGTH" href="cv.html#CALIB_SAME_FOCAL_LENGTH-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="516" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_THIN_PRISM_MODEL" fullname="cv::CALIB_THIN_PRISM_MODEL" href="cv.html#CALIB_THIN_PRISM_MODEL-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="508" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_TILTED_MODEL" fullname="cv::CALIB_TILTED_MODEL" href="cv.html#CALIB_TILTED_MODEL-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="510" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_USE_EXTRINSIC_GUESS" fullname="cv::CALIB_USE_EXTRINSIC_GUESS" href="cv.html#CALIB_USE_EXTRINSIC_GUESS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="521" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_USE_INTRINSIC_GUESS" fullname="cv::CALIB_USE_INTRINSIC_GUESS" href="cv.html#CALIB_USE_INTRINSIC_GUESS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="496" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_USE_LU" fullname="cv::CALIB_USE_LU" href="cv.html#CALIB_USE_LU-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="519" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_USE_QR" fullname="cv::CALIB_USE_QR" href="cv.html#CALIB_USE_QR-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="512" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_ZERO_DISPARITY" fullname="cv::CALIB_ZERO_DISPARITY" href="cv.html#CALIB_ZERO_DISPARITY-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="518" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CALIB_ZERO_TANGENT_DIST" fullname="cv::CALIB_ZERO_TANGENT_DIST" href="cv.html#CALIB_ZERO_TANGENT_DIST-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="499" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="FM_7POINT" fullname="cv::FM_7POINT" href="cv.html#FM_7POINT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="524" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="FM_8POINT" fullname="cv::FM_8POINT" href="cv.html#FM_8POINT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="525" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="FM_LMEDS" fullname="cv::FM_LMEDS" href="cv.html#FM_LMEDS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="526" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="FM_RANSAC" fullname="cv::FM_RANSAC" href="cv.html#FM_RANSAC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="528" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="LMEDS" fullname="cv::LMEDS" href="cv.html#LMEDS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="444" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="RANSAC" fullname="cv::RANSAC" href="cv.html#RANSAC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="445" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="RHO" fullname="cv::RHO" href="cv.html#RHO-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="446" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_ACCURATE" fullname="cv::USAC_ACCURATE" href="cv.html#USAC_ACCURATE-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="451" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_DEFAULT" fullname="cv::USAC_DEFAULT" href="cv.html#USAC_DEFAULT-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="447" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_FAST" fullname="cv::USAC_FAST" href="cv.html#USAC_FAST-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="450" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_FM_8PTS" fullname="cv::USAC_FM_8PTS" href="cv.html#USAC_FM_8PTS-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="449" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_MAGSAC" fullname="cv::USAC_MAGSAC" href="cv.html#USAC_MAGSAC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="454" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_PARALLEL" fullname="cv::USAC_PARALLEL" href="cv.html#USAC_PARALLEL-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="448" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="USAC_PROSAC" fullname="cv::USAC_PROSAC" href="cv.html#USAC_PROSAC-var" status="active" access="public" location="calib3d.hpp" filepath="/usr/local/include/opencv4/opencv2/calib3d.hpp" lineno="452" type="const int" static="true"/>
            <class threadsafety="unspecified" name="Algorithm" fullname="cv::Algorithm" href="cv-algorithm.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3091">
                <function threadsafety="unspecified" name="Algorithm" fullname="cv::Algorithm::Algorithm" href="cv-algorithm.html#Algorithm" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3094" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Algorithm()"/>
                <function threadsafety="unspecified" name="~Algorithm" fullname="cv::Algorithm::~Algorithm" href="cv-algorithm.html#dtor.Algorithm" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3095" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Algorithm()"/>
                <function threadsafety="unspecified" name="writeFormat" fullname="cv::Algorithm::writeFormat" href="cv-algorithm.html#writeFormat" status="active" access="protected" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3187" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void writeFormat(FileStorage &amp;fs) const">
                    <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Formatted" fullname="cv::Formatted" href="cv-formatted.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3024">
                <function threadsafety="unspecified" name="next" fullname="cv::Formatted::next" href="cv-formatted.html#next" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3027" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * next() = 0"/>
                <function threadsafety="unspecified" name="reset" fullname="cv::Formatted::reset" href="cv-formatted.html#reset" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3028" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset() = 0"/>
                <function threadsafety="unspecified" name="~Formatted" fullname="cv::Formatted::~Formatted" href="cv-formatted.html#dtor.Formatted" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3029" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Formatted()"/>
            </class>
            <class threadsafety="unspecified" name="Formatter" fullname="cv::Formatter" href="cv-formatter.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3033">
                <enum threadsafety="unspecified" name="FormatType" fullname="cv::Formatter::FormatType" href="cv-formatter.html#FormatType-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3036">
                    <value name="FMT_DEFAULT" value="0"/>
                    <value name="FMT_MATLAB" value="1"/>
                    <value name="FMT_CSV" value="2"/>
                    <value name="FMT_PYTHON" value="3"/>
                    <value name="FMT_NUMPY" value="4"/>
                    <value name="FMT_C" value="5"/>
                </enum>
                <function threadsafety="unspecified" name="get" fullname="cv::Formatter::get" href="cv-formatter.html#get" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3054" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Formatter&gt;" signature="Ptr&lt;Formatter&gt; get(Formatter::FormatType fmt)">
                    <parameter left="Formatter::FormatType" right="" name="fmt" default="FMT_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="set16fPrecision" fullname="cv::Formatter::set16fPrecision" href="cv-formatter.html#set16fPrecision" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3049" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set16fPrecision(int p) = 0">
                    <parameter left="int" right="" name="p" default="4"/>
                </function>
                <function threadsafety="unspecified" name="set32fPrecision" fullname="cv::Formatter::set32fPrecision" href="cv-formatter.html#set32fPrecision" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3050" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set32fPrecision(int p) = 0">
                    <parameter left="int" right="" name="p" default="8"/>
                </function>
                <function threadsafety="unspecified" name="set64fPrecision" fullname="cv::Formatter::set64fPrecision" href="cv-formatter.html#set64fPrecision" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3051" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set64fPrecision(int p) = 0">
                    <parameter left="int" right="" name="p" default="16"/>
                </function>
                <function threadsafety="unspecified" name="setMultiline" fullname="cv::Formatter::setMultiline" href="cv-formatter.html#setMultiline" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3052" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMultiline(bool ml) = 0">
                    <parameter left="bool" right="" name="ml" default="true"/>
                </function>
                <function threadsafety="unspecified" name="~Formatter" fullname="cv::Formatter::~Formatter" href="cv-formatter.html#dtor.Formatter" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3045" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Formatter()"/>
                <function threadsafety="unspecified" name="format" fullname="cv::Formatter::format" href="cv-formatter.html#format" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3047" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Formatted&gt;" signature="Ptr&lt;Formatted&gt; format(const Mat &amp;mtx) const = 0">
                    <parameter left="const Mat &amp;" right="" name="mtx" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="LDA" fullname="cv::LDA" href="cv-lda.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2563">
                <function threadsafety="unspecified" name="LDA" fullname="cv::LDA::LDA" href="cv-lda.html#LDA-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2576" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LDA(InputArrayOfArrays src, InputArray labels, int num_components)">
                    <parameter left="InputArrayOfArrays" right="" name="src" default=""/>
                    <parameter left="InputArray" right="" name="labels" default=""/>
                    <parameter left="int" right="" name="num_components" default="0"/>
                </function>
                <function threadsafety="unspecified" name="LDA" fullname="cv::LDA::LDA" href="cv-lda.html#LDA" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2569" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LDA(int num_components)">
                    <parameter left="int" right="" name="num_components" default="0"/>
                </function>
                <function threadsafety="unspecified" name="project" fullname="cv::LDA::project" href="cv-lda.html#project" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2605" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat project(InputArray src)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="reconstruct" fullname="cv::LDA::reconstruct" href="cv-lda.html#reconstruct" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2610" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat reconstruct(InputArray src)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="subspaceProject" fullname="cv::LDA::subspaceProject" href="cv-lda.html#subspaceProject" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2620" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat subspaceProject(InputArray W, InputArray mean, InputArray src)">
                    <parameter left="InputArray" right="" name="W" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="InputArray" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="subspaceReconstruct" fullname="cv::LDA::subspaceReconstruct" href="cv-lda.html#subspaceReconstruct" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2621" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat subspaceReconstruct(InputArray W, InputArray mean, InputArray src)">
                    <parameter left="InputArray" right="" name="W" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="InputArray" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::LDA::compute" href="cv-lda.html#compute" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2600" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(InputArrayOfArrays src, InputArray labels)">
                    <parameter left="InputArrayOfArrays" right="" name="src" default=""/>
                    <parameter left="InputArray" right="" name="labels" default=""/>
                </function>
                <function threadsafety="unspecified" name="lda" fullname="cv::LDA::lda" href="cv-lda.html#lda" status="active" access="protected" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2627" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void lda(InputArrayOfArrays src, InputArray labels)">
                    <parameter left="InputArrayOfArrays" right="" name="src" default=""/>
                    <parameter left="InputArray" right="" name="labels" default=""/>
                </function>
                <function threadsafety="unspecified" name="load" fullname="cv::LDA::load" href="cv-lda.html#load-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2592" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load(const FileStorage &amp;node)">
                    <parameter left="const FileStorage &amp;" right="" name="node" default=""/>
                </function>
                <function threadsafety="unspecified" name="load" fullname="cv::LDA::load" href="cv-lda.html#load" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2584" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load(const String &amp;filename)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <function threadsafety="unspecified" name="~LDA" fullname="cv::LDA::~LDA" href="cv-lda.html#dtor.LDA" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2596" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~LDA()"/>
                <function threadsafety="unspecified" name="eigenvalues" fullname="cv::LDA::eigenvalues" href="cv-lda.html#eigenvalues" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2618" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat eigenvalues() const"/>
                <function threadsafety="unspecified" name="eigenvectors" fullname="cv::LDA::eigenvectors" href="cv-lda.html#eigenvectors" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2614" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat eigenvectors() const"/>
                <function threadsafety="unspecified" name="save" fullname="cv::LDA::save" href="cv-lda.html#save-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2588" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save(FileStorage &amp;fs) const">
                    <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                </function>
                <function threadsafety="unspecified" name="save" fullname="cv::LDA::save" href="cv-lda.html#save" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2580" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save(const String &amp;filename) const">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <variable threadsafety="unspecified" name="_eigenvalues" fullname="cv::LDA::_eigenvalues" href="cv-lda.html#_eigenvalues-var" status="active" access="protected" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2626" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="_eigenvectors" fullname="cv::LDA::_eigenvectors" href="cv-lda.html#_eigenvectors-var" status="active" access="protected" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2625" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="_num_components" fullname="cv::LDA::_num_components" href="cv-lda.html#_num_components-var" status="active" access="protected" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2624" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="PCA" fullname="cv::PCA" href="cv-pca.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2407">
                <enum threadsafety="unspecified" name="Flags" fullname="cv::PCA::Flags" href="cv-pca.html#Flags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2410">
                    <value name="DATA_AS_ROW" value="0"/>
                    <value name="DATA_AS_COL" value="1"/>
                    <value name="USE_AVG" value="2"/>
                </enum>
                <function threadsafety="unspecified" name="operator()" fullname="cv::PCA::operator()" href="cv-pca.html#operator-28-29-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2478" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PCA &amp;" signature="PCA &amp; operator()(InputArray data, InputArray mean, int flags, double retainedVariance)">
                    <parameter left="InputArray" right="" name="data" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="int" right="" name="flags" default=""/>
                    <parameter left="double" right="" name="retainedVariance" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::PCA::operator()" href="cv-pca.html#operator-28-29" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2465" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PCA &amp;" signature="PCA &amp; operator()(InputArray data, InputArray mean, int flags, int maxComponents)">
                    <parameter left="InputArray" right="" name="data" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="int" right="" name="flags" default=""/>
                    <parameter left="int" right="" name="maxComponents" default="0"/>
                </function>
                <function threadsafety="unspecified" name="PCA" fullname="cv::PCA::PCA" href="cv-pca.html#PCA" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2420" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PCA()"/>
                <function threadsafety="unspecified" name="PCA" fullname="cv::PCA::PCA" href="cv-pca.html#PCA-2" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2443" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PCA(InputArray data, InputArray mean, int flags, double retainedVariance)">
                    <parameter left="InputArray" right="" name="data" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="int" right="" name="flags" default=""/>
                    <parameter left="double" right="" name="retainedVariance" default=""/>
                </function>
                <function threadsafety="unspecified" name="PCA" fullname="cv::PCA::PCA" href="cv-pca.html#PCA-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2431" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PCA(InputArray data, InputArray mean, int flags, int maxComponents)">
                    <parameter left="InputArray" right="" name="data" default=""/>
                    <parameter left="InputArray" right="" name="mean" default=""/>
                    <parameter left="int" right="" name="flags" default=""/>
                    <parameter left="int" right="" name="maxComponents" default="0"/>
                </function>
                <function threadsafety="unspecified" name="read" fullname="cv::PCA::read" href="cv-pca.html#read" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2544" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;fn)">
                    <parameter left="const FileNode &amp;" right="" name="fn" default=""/>
                </function>
                <function threadsafety="unspecified" name="backProject" fullname="cv::PCA::backProject" href="cv-pca.html#backProject" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2523" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat backProject(InputArray vec) const">
                    <parameter left="InputArray" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="project" fullname="cv::PCA::project" href="cv-pca.html#project" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2494" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat project(InputArray vec) const">
                    <parameter left="InputArray" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="backProject" fullname="cv::PCA::backProject" href="cv-pca.html#backProject-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2532" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void backProject(InputArray vec, OutputArray result) const">
                    <parameter left="InputArray" right="" name="vec" default=""/>
                    <parameter left="OutputArray" right="" name="result" default=""/>
                </function>
                <function threadsafety="unspecified" name="project" fullname="cv::PCA::project" href="cv-pca.html#project-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2508" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void project(InputArray vec, OutputArray result) const">
                    <parameter left="InputArray" right="" name="vec" default=""/>
                    <parameter left="OutputArray" right="" name="result" default=""/>
                </function>
                <function threadsafety="unspecified" name="write" fullname="cv::PCA::write" href="cv-pca.html#write" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2538" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs) const">
                    <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                </function>
                <variable threadsafety="unspecified" name="eigenvalues" fullname="cv::PCA::eigenvalues" href="cv-pca.html#eigenvalues-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2547" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="eigenvectors" fullname="cv::PCA::eigenvectors" href="cv-pca.html#eigenvectors-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2546" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="mean" fullname="cv::PCA::mean" href="cv-pca.html#mean-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2548" type="Mat" static="false"/>
            </class>
            <class threadsafety="unspecified" name="ParamType" fullname="cv::ParamType" href="cv-paramtype.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3077"/>
            <class threadsafety="unspecified" name="RNG" fullname="cv::RNG" href="cv-rng.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2783">
                <function threadsafety="unspecified" name="RNG" fullname="cv::RNG::RNG" href="cv-rng.html#RNG" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2798" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RNG()"/>
                <function threadsafety="unspecified" name="RNG" fullname="cv::RNG::RNG" href="cv-rng.html#RNG-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2802" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RNG(uint64 state)">
                    <parameter left="uint64" right="" name="state" default=""/>
                </function>
                <function threadsafety="unspecified" name="gaussian" fullname="cv::RNG::gaussian" href="cv-rng.html#gaussian" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2928" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double gaussian(double sigma)">
                    <parameter left="double" right="" name="sigma" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG::uniform" href="cv-rng.html#uniform-2" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2882" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double uniform(double a, double b)">
                    <parameter left="double" right="" name="a" default=""/>
                    <parameter left="double" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG::uniform" href="cv-rng.html#uniform-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2880" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float uniform(float a, float b)">
                    <parameter left="float" right="" name="a" default=""/>
                    <parameter left="float" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG::uniform" href="cv-rng.html#uniform" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2878" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int uniform(int a, int b)">
                    <parameter left="int" right="" name="a" default=""/>
                    <parameter left="int" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator double" fullname="cv::RNG::operator double" href="cv-rng.html#operator-double" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2827" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator double()"/>
                <function threadsafety="unspecified" name="operator float" fullname="cv::RNG::operator float" href="cv-rng.html#operator-float" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2825" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator float()"/>
                <function threadsafety="unspecified" name="operator int" fullname="cv::RNG::operator int" href="cv-rng.html#operator-int" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2823" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator int()"/>
                <function threadsafety="unspecified" name="operator schar" fullname="cv::RNG::operator schar" href="cv-rng.html#operator-schar" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2815" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator schar()"/>
                <function threadsafety="unspecified" name="operator short" fullname="cv::RNG::operator short" href="cv-rng.html#operator-short" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2819" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator short()"/>
                <function threadsafety="unspecified" name="operator uchar" fullname="cv::RNG::operator uchar" href="cv-rng.html#operator-uchar" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2813" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator uchar()"/>
                <function threadsafety="unspecified" name="operator unsigned" fullname="cv::RNG::operator unsigned" href="cv-rng.html#operator-unsigned" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2821" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator unsigned()"/>
                <function threadsafety="unspecified" name="operator ushort" fullname="cv::RNG::operator ushort" href="cv-rng.html#operator-ushort" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2817" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator ushort()"/>
                <function threadsafety="unspecified" name="next" fullname="cv::RNG::next" href="cv-rng.html#next" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2805" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned next()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::RNG::operator()" href="cv-rng.html#operator-28-29" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2836" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned operator()()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::RNG::operator()" href="cv-rng.html#operator-28-29-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2840" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned operator()(unsigned N)">
                    <parameter left="unsigned" right="" name="N" default=""/>
                </function>
                <function threadsafety="unspecified" name="fill" fullname="cv::RNG::fill" href="cv-rng.html#fill" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2918" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void fill(InputOutputArray mat, int distType, InputArray a, InputArray b, bool saturateRange)">
                    <parameter left="InputOutputArray" right="" name="mat" default=""/>
                    <parameter left="int" right="" name="distType" default=""/>
                    <parameter left="InputArray" right="" name="a" default=""/>
                    <parameter left="InputArray" right="" name="b" default=""/>
                    <parameter left="bool" right="" name="saturateRange" default="false"/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::RNG::operator==" href="cv-rng.html#operator-eq-eq" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2932" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const RNG &amp;other) const">
                    <parameter left="const RNG &amp;" right="" name="other" default=""/>
                </function>
                <variable threadsafety="unspecified" name="NORMAL" fullname="cv::RNG::NORMAL" href="cv-rng.html#NORMAL-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2788" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="UNIFORM" fullname="cv::RNG::UNIFORM" href="cv-rng.html#UNIFORM-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2786" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="state" fullname="cv::RNG::state" href="cv-rng.html#state-var" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2930" type="uint64" static="false"/>
            </class>
            <class threadsafety="unspecified" name="RNG_MT19937" fullname="cv::RNG_MT19937" href="cv-rng-mt19937.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2940">
                <enum threadsafety="unspecified" name="PeriodParameters" fullname="cv::RNG_MT19937::PeriodParameters" href="cv-rng-mt19937.html#PeriodParameters-enum" status="active" access="private" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2965">
                    <value name="N" value="624"/>
                    <value name="M" value="397"/>
                </enum>
                <function threadsafety="unspecified" name="RNG_MT19937" fullname="cv::RNG_MT19937::RNG_MT19937" href="cv-rng-mt19937.html#RNG_MT19937" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2943" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RNG_MT19937()"/>
                <function threadsafety="unspecified" name="RNG_MT19937" fullname="cv::RNG_MT19937::RNG_MT19937" href="cv-rng-mt19937.html#RNG_MT19937-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2944" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RNG_MT19937(unsigned s)">
                    <parameter left="unsigned" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG_MT19937::uniform" href="cv-rng-mt19937.html#uniform-2" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2962" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double uniform(double a, double b)">
                    <parameter left="double" right="" name="a" default=""/>
                    <parameter left="double" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG_MT19937::uniform" href="cv-rng-mt19937.html#uniform-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2960" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float uniform(float a, float b)">
                    <parameter left="float" right="" name="a" default=""/>
                    <parameter left="float" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="uniform" fullname="cv::RNG_MT19937::uniform" href="cv-rng-mt19937.html#uniform" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2958" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int uniform(int a, int b)">
                    <parameter left="int" right="" name="a" default=""/>
                    <parameter left="int" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator double" fullname="cv::RNG_MT19937::operator double" href="cv-rng-mt19937.html#operator-double" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2952" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator double()"/>
                <function threadsafety="unspecified" name="operator float" fullname="cv::RNG_MT19937::operator float" href="cv-rng-mt19937.html#operator-float" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2951" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator float()"/>
                <function threadsafety="unspecified" name="operator int" fullname="cv::RNG_MT19937::operator int" href="cv-rng-mt19937.html#operator-int" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2949" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator int()"/>
                <function threadsafety="unspecified" name="operator unsigned" fullname="cv::RNG_MT19937::operator unsigned" href="cv-rng-mt19937.html#operator-unsigned" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2950" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator unsigned()"/>
                <function threadsafety="unspecified" name="next" fullname="cv::RNG_MT19937::next" href="cv-rng-mt19937.html#next" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2947" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned next()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::RNG_MT19937::operator()" href="cv-rng-mt19937.html#operator-28-29-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2955" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned operator()()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::RNG_MT19937::operator()" href="cv-rng-mt19937.html#operator-28-29" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2954" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned operator()(unsigned N)">
                    <parameter left="unsigned" right="" name="N" default=""/>
                </function>
                <function threadsafety="unspecified" name="seed" fullname="cv::RNG_MT19937::seed" href="cv-rng-mt19937.html#seed" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2945" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void seed(unsigned s)">
                    <parameter left="unsigned" right="" name="s" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="SVD" fullname="cv::SVD" href="cv-svd.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2644">
                <enum threadsafety="unspecified" name="Flags" fullname="cv::SVD::Flags" href="cv-svd.html#Flags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2647">
                    <value name="MODIFY_A" value="1"/>
                    <value name="NO_UV" value="2"/>
                    <value name="FULL_UV" value="4"/>
                </enum>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SVD::operator()" href="cv-svd.html#operator-28-29" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2684" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SVD &amp;" signature="SVD &amp; operator()(InputArray src, int flags)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="int" right="" name="flags" default="0"/>
                </function>
                <function threadsafety="unspecified" name="SVD" fullname="cv::SVD::SVD" href="cv-svd.html#SVD" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2664" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SVD()"/>
                <function threadsafety="unspecified" name="SVD" fullname="cv::SVD::SVD" href="cv-svd.html#SVD-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2671" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SVD(InputArray src, int flags)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="int" right="" name="flags" default="0"/>
                </function>
                <function threadsafety="unspecified" name="backSubst" fullname="cv::SVD::backSubst" href="cv-svd.html#backSubst" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2716" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void backSubst(InputArray w, InputArray u, InputArray vt, InputArray rhs, OutputArray dst)">
                    <parameter left="InputArray" right="" name="w" default=""/>
                    <parameter left="InputArray" right="" name="u" default=""/>
                    <parameter left="InputArray" right="" name="vt" default=""/>
                    <parameter left="InputArray" right="" name="rhs" default=""/>
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="backSubst" fullname="cv::SVD::backSubst" href="cv-svd.html#backSubst-2" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2765" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void backSubst(const Matx&lt;_Tp, nm, 1&gt; &amp;w, const Matx&lt;_Tp, m, nm&gt; &amp;u, const Matx&lt;_Tp, n, nm&gt; &amp;vt, const Matx&lt;_Tp, m, nb&gt; &amp;rhs, Matx&lt;_Tp, n, nb&gt; &amp;dst)">
                    <parameter left="const Matx&lt;_Tp, nm, 1&gt; &amp;" right="" name="w" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, nm&gt; &amp;" right="" name="u" default=""/>
                    <parameter left="const Matx&lt;_Tp, n, nm&gt; &amp;" right="" name="vt" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, nb&gt; &amp;" right="" name="rhs" default=""/>
                    <parameter left="Matx&lt;_Tp, n, nb&gt; &amp;" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::SVD::compute" href="cv-svd.html#compute" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2703" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(InputArray src, OutputArray w, OutputArray u, OutputArray vt, int flags)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="OutputArray" right="" name="w" default=""/>
                    <parameter left="OutputArray" right="" name="u" default=""/>
                    <parameter left="OutputArray" right="" name="vt" default=""/>
                    <parameter left="int" right="" name="flags" default="0"/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::SVD::compute" href="cv-svd.html#compute-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2712" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(InputArray src, OutputArray w, int flags)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="OutputArray" right="" name="w" default=""/>
                    <parameter left="int" right="" name="flags" default="0"/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::SVD::compute" href="cv-svd.html#compute-3" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2761" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(const Matx&lt;_Tp, m, n&gt; &amp;a, Matx&lt;_Tp, nm, 1&gt; &amp;w)">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="Matx&lt;_Tp, nm, 1&gt; &amp;" right="" name="w" default=""/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::SVD::compute" href="cv-svd.html#compute-2" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2757" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(const Matx&lt;_Tp, m, n&gt; &amp;a, Matx&lt;_Tp, nm, 1&gt; &amp;w, Matx&lt;_Tp, m, nm&gt; &amp;u, Matx&lt;_Tp, n, nm&gt; &amp;vt)">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="Matx&lt;_Tp, nm, 1&gt; &amp;" right="" name="w" default=""/>
                    <parameter left="Matx&lt;_Tp, m, nm&gt; &amp;" right="" name="u" default=""/>
                    <parameter left="Matx&lt;_Tp, n, nm&gt; &amp;" right="" name="vt" default=""/>
                </function>
                <function threadsafety="unspecified" name="solveZ" fullname="cv::SVD::solveZ" href="cv-svd.html#solveZ" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2730" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void solveZ(InputArray src, OutputArray dst)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="backSubst" fullname="cv::SVD::backSubst" href="cv-svd.html#backSubst-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="2754" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void backSubst(InputArray rhs, OutputArray dst) const">
                    <parameter left="InputArray" right="" name="rhs" default=""/>
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                </function>
            </class>
            <enum threadsafety="unspecified" name="CovarFlags" fullname="cv::CovarFlags" href="cv.html#CovarFlags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="175">
                <value name="COVAR_SCRAMBLED" value="0"/>
                <value name="COVAR_NORMAL" value="1"/>
                <value name="COVAR_USE_AVG" value="2"/>
                <value name="COVAR_SCALE" value="4"/>
                <value name="COVAR_ROWS" value="8"/>
                <value name="COVAR_COLS" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="KmeansFlags" fullname="cv::KmeansFlags" href="cv.html#KmeansFlags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="214">
                <value name="KMEANS_RANDOM_CENTERS" value="0"/>
                <value name="KMEANS_PP_CENTERS" value="2"/>
                <value name="KMEANS_USE_INITIAL_LABELS" value="1"/>
            </enum>
            <enum threadsafety="unspecified" name="Param" fullname="cv::Param" href="cv.html#Param-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3190">
                <value name="INT" value="0"/>
                <value name="BOOLEAN" value="1"/>
                <value name="REAL" value="2"/>
                <value name="STRING" value="3"/>
                <value name="MAT" value="4"/>
                <value name="MAT_VECTOR" value="5"/>
                <value name="ALGORITHM" value="6"/>
                <value name="FLOAT" value="7"/>
                <value name="UNSIGNED_INT" value="8"/>
                <value name="UINT64" value="9"/>
                <value name="UCHAR" value="11"/>
                <value name="SCALAR" value="12"/>
            </enum>
            <enum threadsafety="unspecified" name="ReduceTypes" fullname="cv::ReduceTypes" href="cv.html#ReduceTypes-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="231">
                <value name="REDUCE_SUM" value="0"/>
                <value name="REDUCE_AVG" value="1"/>
                <value name="REDUCE_MAX" value="2"/>
                <value name="REDUCE_MIN" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="RotateFlags" fullname="cv::RotateFlags" href="cv.html#RotateFlags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="1073">
                <value name="ROTATE_90_CLOCKWISE" value="0"/>
                <value name="ROTATE_180" value="1"/>
                <value name="ROTATE_90_COUNTERCLOCKWISE" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="SortFlags" fullname="cv::SortFlags" href="cv.html#SortFlags-enum" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="158">
                <value name="SORT_EVERY_ROW" value="0"/>
                <value name="SORT_EVERY_COLUMN" value="1"/>
                <value name="SORT_ASCENDING" value="0"/>
                <value name="SORT_DESCENDING" value="16"/>
            </enum>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3058" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="String &amp;" signature="String &amp; operator&lt;&lt;(String &amp;out, Ptr&lt;Formatted&gt; fmtd)">
                <parameter left="String &amp;" right="" name="out" default=""/>
                <parameter left="Ptr&lt;Formatted&gt;" right="" name="fmtd" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-1" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/core.hpp" lineno="3067" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="String &amp;" signature="String &amp; operator&lt;&lt;(String &amp;out, const Mat &amp;mtx)">
                <parameter left="String &amp;" right="" name="out" default=""/>
                <parameter left="const Mat &amp;" right="" name="mtx" default=""/>
            </function>
            <class threadsafety="unspecified" name="AsyncArray" fullname="cv::AsyncArray" href="cv-asyncarray.html" status="active" access="public" location="async.hpp" filepath="/usr/local/include/opencv4/opencv2/core/async.hpp" lineno="31">
                <function threadsafety="unspecified" name="get" fullname="cv::AsyncArray::get" href="cv-asyncarray.html#get" status="active" access="public" location="async.hpp" filepath="/usr/local/include/opencv4/opencv2/core/async.hpp" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool get(OutputArray dst, int64 timeoutNs) const">
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                    <parameter left="int64" right="" name="timeoutNs" default=""/>
                </function>
                <variable threadsafety="unspecified" name="p" fullname="cv::AsyncArray::p" href="cv-asyncarray.html#p-var" status="active" access="protected" location="async.hpp" filepath="/usr/local/include/opencv4/opencv2/core/async.hpp" lineno="99" type="Impl *" static="false"/>
            </class>
            <namespace threadsafety="unspecified" name="Error" fullname="cv::Error" href="cv-error.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="66">
                <enum threadsafety="unspecified" name="Code" fullname="cv::Error::Code" href="cv-error.html#Code-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="68">
                    <value name="StsOk" value="0"/>
                    <value name="StsBackTrace" value="-1"/>
                    <value name="StsError" value="-2"/>
                    <value name="StsInternal" value="-3"/>
                    <value name="StsNoMem" value="-4"/>
                    <value name="StsBadArg" value="-5"/>
                    <value name="StsBadFunc" value="-6"/>
                    <value name="StsNoConv" value="-7"/>
                    <value name="StsAutoTrace" value="-8"/>
                    <value name="HeaderIsNull" value="-9"/>
                    <value name="BadImageSize" value="-10"/>
                    <value name="BadOffset" value="-11"/>
                    <value name="BadDataPtr" value="-12"/>
                    <value name="BadStep" value="-13"/>
                    <value name="BadModelOrChSeq" value="-14"/>
                    <value name="BadNumChannels" value="-15"/>
                    <value name="BadNumChannel1U" value="-16"/>
                    <value name="BadDepth" value="-17"/>
                    <value name="BadAlphaChannel" value="-18"/>
                    <value name="BadOrder" value="-19"/>
                    <value name="BadOrigin" value="-20"/>
                    <value name="BadAlign" value="-21"/>
                    <value name="BadCallBack" value="-22"/>
                    <value name="BadTileSize" value="-23"/>
                    <value name="BadCOI" value="-24"/>
                    <value name="BadROISize" value="-25"/>
                    <value name="MaskIsTiled" value="-26"/>
                    <value name="StsNullPtr" value="-27"/>
                    <value name="StsVecLengthErr" value="-28"/>
                    <value name="StsFilterStructContentErr" value="-29"/>
                    <value name="StsKernelStructContentErr" value="-30"/>
                    <value name="StsFilterOffsetErr" value="-31"/>
                    <value name="StsBadSize" value="-201"/>
                    <value name="StsDivByZero" value="-202"/>
                    <value name="StsInplaceNotSupported" value="-203"/>
                    <value name="StsObjectNotFound" value="-204"/>
                    <value name="StsUnmatchedFormats" value="-205"/>
                    <value name="StsBadFlag" value="-206"/>
                    <value name="StsBadPoint" value="-207"/>
                    <value name="StsBadMask" value="-208"/>
                    <value name="StsUnmatchedSizes" value="-209"/>
                    <value name="StsUnsupportedFormat" value="-210"/>
                    <value name="StsOutOfRange" value="-211"/>
                    <value name="StsParseError" value="-212"/>
                    <value name="StsNotImplemented" value="-213"/>
                    <value name="StsBadMemBlock" value="-214"/>
                    <value name="StsAssert" value="-215"/>
                    <value name="GpuNotSupported" value="-216"/>
                    <value name="GpuApiCallError" value="-217"/>
                    <value name="OpenGlNotSupported" value="-218"/>
                    <value name="OpenGlApiCallError" value="-219"/>
                    <value name="OpenCLApiCallError" value="-220"/>
                    <value name="OpenCLDoubleNotSupported" value="-221"/>
                    <value name="OpenCLInitError" value="-222"/>
                    <value name="OpenCLNoAMDBlasFft" value="-223"/>
                </enum>
            </namespace>
            <namespace threadsafety="unspecified" name="cuda" fullname="cv::cuda" href="cv-cuda.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="606">
                <class threadsafety="unspecified" name="BufferPool" fullname="cv::cuda::BufferPool" href="cv-cuda-bufferpool.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="484">
                    <function threadsafety="unspecified" name="BufferPool" fullname="cv::cuda::BufferPool::BufferPool" href="cv-cuda-bufferpool.html#BufferPool" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="489" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BufferPool(Stream &amp;stream)">
                        <parameter left="Stream &amp;" right="" name="stream" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeviceInfo" fullname="cv::cuda::DeviceInfo" href="cv-cuda-deviceinfo.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="829">
                    <enum threadsafety="unspecified" name="ComputeMode" fullname="cv::cuda::DeviceInfo::ComputeMode" href="cv-cuda-deviceinfo.html#ComputeMode-enum" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="905">
                        <value name="ComputeModeDefault" value="0"/>
                        <value name="ComputeModeExclusive" value="1"/>
                        <value name="ComputeModeProhibited" value="2"/>
                        <value name="ComputeModeExclusiveProcess" value="3"/>
                    </enum>
                    <function threadsafety="unspecified" name="DeviceInfo" fullname="cv::cuda::DeviceInfo::DeviceInfo" href="cv-cuda-deviceinfo.html#DeviceInfo" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="833" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DeviceInfo()"/>
                    <function threadsafety="unspecified" name="DeviceInfo" fullname="cv::cuda::DeviceInfo::DeviceInfo" href="cv-cuda-deviceinfo.html#DeviceInfo-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="842" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DeviceInfo(int device_id)">
                        <parameter left="int" right="" name="device_id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="supports" fullname="cv::cuda::DeviceInfo::supports" href="cv-cuda-deviceinfo.html#supports" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="1023" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool supports(FeatureSet feature_set) const">
                        <parameter left="FeatureSet" right="" name="feature_set" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="name" fullname="cv::cuda::DeviceInfo::name" href="cv-cuda-deviceinfo.html#name" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="849" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * name() const"/>
                </class>
                <class threadsafety="unspecified" name="Event" fullname="cv::cuda::Event" href="cv-cuda-event.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="701">
                    <enum threadsafety="unspecified" name="CreateFlags" fullname="cv::cuda::Event::CreateFlags" href="cv-cuda-event.html#CreateFlags-enum" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="704">
                        <value name="DEFAULT" value="0x00"/>
                        <value name="BLOCKING_SYNC" value="0x01"/>
                        <value name="DISABLE_TIMING" value="0x02"/>
                        <value name="INTERPROCESS" value="0x04"/>
                    </enum>
                    <function threadsafety="unspecified" name="Event" fullname="cv::cuda::Event::Event" href="cv-cuda-event.html#Event" status="active" access="private" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="730" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Event(const Ptr&lt;Impl&gt; &amp;impl)">
                        <parameter left="const Ptr&lt;Impl&gt; &amp;" right="" name="impl" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda-gpumat.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="105">
                    <class threadsafety="unspecified" name="Allocator" fullname="cv::cuda::GpuMat::Allocator" href="cv-cuda-gpumat-allocator.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="108">
                        <function threadsafety="unspecified" name="allocate" fullname="cv::cuda::GpuMat::Allocator::allocate" href="cv-cuda-gpumat-allocator.html#allocate" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="114" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool allocate(GpuMat *mat, int rows, int cols, size_t elemSize) = 0">
                            <parameter left="GpuMat *" right="" name="mat" default=""/>
                            <parameter left="int" right="" name="rows" default=""/>
                            <parameter left="int" right="" name="cols" default=""/>
                            <parameter left="size_t" right="" name="elemSize" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="free" fullname="cv::cuda::GpuMat::Allocator::free" href="cv-cuda-gpumat-allocator.html#free" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="115" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void free(GpuMat *mat) = 0">
                            <parameter left="GpuMat *" right="" name="mat" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~Allocator" fullname="cv::cuda::GpuMat::Allocator::~Allocator" href="cv-cuda-gpumat-allocator.html#dtor.Allocator" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="111" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Allocator()"/>
                    </class>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="127" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(Size size, int type, GpuMat::Allocator *allocator)">
                        <parameter left="Size" right="" name="size" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="GpuMat::Allocator *" right="" name="allocator" default="GpuMat::defaultAllocator()"/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-3" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="131" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(Size size, int type, Scalar s, GpuMat::Allocator *allocator)">
                        <parameter left="Size" right="" name="size" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="Scalar" right="" name="s" default=""/>
                        <parameter left="GpuMat::Allocator *" right="" name="allocator" default="GpuMat::defaultAllocator()"/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-4" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="134" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(const GpuMat &amp;m)">
                        <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-7" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="141" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(const GpuMat &amp;m, Range rowRange, Range colRange)">
                        <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                        <parameter left="Range" right="" name="rowRange" default=""/>
                        <parameter left="Range" right="" name="colRange" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-8" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="142" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(const GpuMat &amp;m, Rect roi)">
                        <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                        <parameter left="Rect" right="" name="roi" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="126" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(int rows, int cols, int type, GpuMat::Allocator *allocator)">
                        <parameter left="int" right="" name="rows" default=""/>
                        <parameter left="int" right="" name="cols" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="GpuMat::Allocator *" right="" name="allocator" default="GpuMat::defaultAllocator()"/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-2" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="130" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GpuMat(int rows, int cols, int type, Scalar s, GpuMat::Allocator *allocator)">
                        <parameter left="int" right="" name="rows" default=""/>
                        <parameter left="int" right="" name="cols" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="Scalar" right="" name="s" default=""/>
                        <parameter left="GpuMat::Allocator *" right="" name="allocator" default="GpuMat::defaultAllocator()"/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::cuda::GpuMat::operator=" href="cv-cuda-gpumat.html#operator-eq" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="151" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat &amp;" signature="GpuMat &amp; operator=(const GpuMat &amp;m)">
                        <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-6" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="138" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(Size size, int type, void *data, size_t step)">
                        <parameter left="Size" right="" name="size" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="void *" right="" name="data" default=""/>
                        <parameter left="size_t" right="" name="step" default="Mat::AUTO_STEP"/>
                    </function>
                    <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat::GpuMat" href="cv-cuda-gpumat.html#GpuMat-5" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(int rows, int cols, int type, void *data, size_t step)">
                        <parameter left="int" right="" name="rows" default=""/>
                        <parameter left="int" right="" name="cols" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="void *" right="" name="data" default=""/>
                        <parameter left="size_t" right="" name="step" default="Mat::AUTO_STEP"/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::GpuMat::ptr" href="cv-cuda-gpumat.html#ptr-2" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="246" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(int y)">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::GpuMat::ptr" href="cv-cuda-gpumat.html#ptr" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="242" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int y)">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::cuda::GpuMat::release" href="cv-cuda-gpumat.html#release" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="~GpuMat" fullname="cv::cuda::GpuMat::~GpuMat" href="cv-cuda-gpumat.html#dtor.GpuMat" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="148" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GpuMat()"/>
                    <function threadsafety="unspecified" name="operator()" fullname="cv::cuda::GpuMat::operator()" href="cv-cuda-gpumat.html#operator-28-29" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="267" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat operator()(Range rowRange, Range colRange) const">
                        <parameter left="Range" right="" name="rowRange" default=""/>
                        <parameter left="Range" right="" name="colRange" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator()" fullname="cv::cuda::GpuMat::operator()" href="cv-cuda-gpumat.html#operator-28-29-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="268" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat operator()(Rect roi) const">
                        <parameter left="Rect" right="" name="roi" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::GpuMat::ptr" href="cv-cuda-gpumat.html#ptr-3" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="247" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(int y) const">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::GpuMat::ptr" href="cv-cuda-gpumat.html#ptr-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="243" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int y) const">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="operator PtrStep&lt;_Tp&gt;" fullname="cv::cuda::GpuMat::operator PtrStep&lt;_Tp&gt;" href="cv-cuda-gpumat.html#operator-PtrStep-lt_Tp-gt" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="250" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator PtrStep&lt;_Tp&gt;() const"/>
                    <function threadsafety="unspecified" name="operator PtrStepSz&lt;_Tp&gt;" fullname="cv::cuda::GpuMat::operator PtrStepSz&lt;_Tp&gt;" href="cv-cuda-gpumat.html#operator-PtrStepSz-lt_Tp-gt" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="249" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator PtrStepSz&lt;_Tp&gt;() const"/>
                    <variable threadsafety="unspecified" name="allocator" fullname="cv::cuda::GpuMat::allocator" href="cv-cuda-gpumat.html#allocator-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="340" type="Allocator *" static="false"/>
                    <variable threadsafety="unspecified" name="data" fullname="cv::cuda::GpuMat::data" href="cv-cuda-gpumat.html#data-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="329" type="uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="dataend" fullname="cv::cuda::GpuMat::dataend" href="cv-cuda-gpumat.html#dataend-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="337" type="const uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="datastart" fullname="cv::cuda::GpuMat::datastart" href="cv-cuda-gpumat.html#datastart-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="336" type="uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="refcount" fullname="cv::cuda::GpuMat::refcount" href="cv-cuda-gpumat.html#refcount-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="333" type="int *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda-hostmem.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="527">
                    <enum threadsafety="unspecified" name="AllocType" fullname="cv::cuda::HostMem::AllocType" href="cv-cuda-hostmem.html#AllocType-enum" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="530">
                        <value name="PAGE_LOCKED" value="1"/>
                        <value name="SHARED" value="2"/>
                        <value name="WRITE_COMBINED" value="4"/>
                    </enum>
                    <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem::HostMem" href="cv-cuda-hostmem.html#HostMem-2" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="539" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HostMem(Size size, int type, HostMem::AllocType alloc_type)">
                        <parameter left="Size" right="" name="size" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="HostMem::AllocType" right="" name="alloc_type" default="HostMem::AllocType::PAGE_LOCKED"/>
                    </function>
                    <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem::HostMem" href="cv-cuda-hostmem.html#HostMem-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="538" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HostMem(int rows, int cols, int type, HostMem::AllocType alloc_type)">
                        <parameter left="int" right="" name="rows" default=""/>
                        <parameter left="int" right="" name="cols" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                        <parameter left="HostMem::AllocType" right="" name="alloc_type" default="HostMem::AllocType::PAGE_LOCKED"/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::cuda::HostMem::operator=" href="cv-cuda-hostmem.html#operator-eq" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="546" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HostMem &amp;" signature="HostMem &amp; operator=(const HostMem &amp;m)">
                        <parameter left="const HostMem &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem::HostMem" href="cv-cuda-hostmem.html#HostMem" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="536" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(const HostMem &amp;m)">
                        <parameter left="const HostMem &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getAllocator" fullname="cv::cuda::HostMem::getAllocator" href="cv-cuda-hostmem.html#getAllocator" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="532" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatAllocator *" signature="MatAllocator * getAllocator(HostMem::AllocType alloc_type)">
                        <parameter left="HostMem::AllocType" right="" name="alloc_type" default="HostMem::AllocType::PAGE_LOCKED"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::cuda::HostMem::create" href="cv-cuda-hostmem.html#create" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="556" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size size, int type)">
                        <parameter left="Size" right="" name="size" default=""/>
                        <parameter left="int" right="" name="type" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::cuda::HostMem::release" href="cv-cuda-hostmem.html#release" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="563" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="~HostMem" fullname="cv::cuda::HostMem::~HostMem" href="cv-cuda-hostmem.html#dtor.HostMem" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="544" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HostMem()"/>
                    <function threadsafety="unspecified" name="createGpuMatHeader" fullname="cv::cuda::HostMem::createGpuMatHeader" href="cv-cuda-hostmem.html#createGpuMatHeader" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="575" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat createGpuMatHeader() const"/>
                    <variable threadsafety="unspecified" name="alloc_type" fullname="cv::cuda::HostMem::alloc_type" href="cv-cuda-hostmem.html#alloc_type-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="599" type="AllocType" static="false"/>
                    <variable threadsafety="unspecified" name="data" fullname="cv::cuda::HostMem::data" href="cv-cuda-hostmem.html#data-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="593" type="uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="dataend" fullname="cv::cuda::HostMem::dataend" href="cv-cuda-hostmem.html#dataend-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="597" type="const uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="datastart" fullname="cv::cuda::HostMem::datastart" href="cv-cuda-hostmem.html#datastart-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="596" type="uchar *" static="false"/>
                    <variable threadsafety="unspecified" name="flags" fullname="cv::cuda::HostMem::flags" href="cv-cuda-hostmem.html#flags-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="589" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="refcount" fullname="cv::cuda::HostMem::refcount" href="cv-cuda-hostmem.html#refcount-var" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="594" type="int *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Stream" fullname="cv::cuda::Stream" href="cv-cuda-stream.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="645">
                    <typedef threadsafety="unspecified" name="StreamCallback" fullname="cv::cuda::Stream::StreamCallback" href="cv-cuda-stream.html#StreamCallback-typedef" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="651"/>
                    <function threadsafety="unspecified" name="Stream" fullname="cv::cuda::Stream::Stream" href="cv-cuda-stream.html#Stream" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="654" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Stream()"/>
                    <function threadsafety="unspecified" name="Stream" fullname="cv::cuda::Stream::Stream" href="cv-cuda-stream.html#Stream-1" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="657" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Stream(const Ptr&lt;GpuMat::Allocator&gt; &amp;allocator)">
                        <parameter left="const Ptr&lt;GpuMat::Allocator&gt; &amp;" right="" name="allocator" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Stream" fullname="cv::cuda::Stream::Stream" href="cv-cuda-stream.html#Stream-2" status="active" access="private" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="694" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Stream(const Ptr&lt;Impl&gt; &amp;impl)">
                        <parameter left="const Ptr&lt;Impl&gt; &amp;" right="" name="impl" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="enqueueHostCallback" fullname="cv::cuda::Stream::enqueueHostCallback" href="cv-cuda-stream.html#enqueueHostCallback" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="679" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void enqueueHostCallback(StreamCallback callback, void *userData)">
                        <parameter left="StreamCallback" right="" name="callback" default=""/>
                        <parameter left="void *" right="" name="userData" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator bool_type" fullname="cv::cuda::Stream::operator bool_type" href="cv-cuda-stream.html#operator-bool_type" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="685" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator bool_type() const"/>
                    <function threadsafety="unspecified" name="this_type_does_not_support_comparisons" fullname="cv::cuda::Stream::this_type_does_not_support_comparisons" href="cv-cuda-stream.html#this_type_does_not_support_comparisons" status="active" access="private" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="648" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void this_type_does_not_support_comparisons() const"/>
                </class>
                <class threadsafety="unspecified" name="TargetArchs" fullname="cv::cuda::TargetArchs" href="cv-cuda-targetarchs.html" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="802">
                    <function threadsafety="unspecified" name="builtWith" fullname="cv::cuda::TargetArchs::builtWith" href="cv-cuda-targetarchs.html#builtWith" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="809" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool builtWith(FeatureSet feature_set)">
                        <parameter left="FeatureSet" right="" name="feature_set" default=""/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="FeatureSet" fullname="cv::cuda::FeatureSet" href="cv-cuda.html#FeatureSet-enum" status="active" access="public" location="cuda.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.hpp" lineno="773">
                    <value name="FEATURE_SET_COMPUTE_10" value="10"/>
                    <value name="FEATURE_SET_COMPUTE_11" value="11"/>
                    <value name="FEATURE_SET_COMPUTE_12" value="12"/>
                    <value name="FEATURE_SET_COMPUTE_13" value="13"/>
                    <value name="FEATURE_SET_COMPUTE_20" value="20"/>
                    <value name="FEATURE_SET_COMPUTE_21" value="21"/>
                    <value name="FEATURE_SET_COMPUTE_30" value="30"/>
                    <value name="FEATURE_SET_COMPUTE_32" value="32"/>
                    <value name="FEATURE_SET_COMPUTE_35" value="35"/>
                    <value name="FEATURE_SET_COMPUTE_50" value="50"/>
                    <value name="GLOBAL_ATOMICS" value="FEATURE_SET_COMPUTE_11"/>
                    <value name="SHARED_ATOMICS" value="FEATURE_SET_COMPUTE_12"/>
                    <value name="NATIVE_DOUBLE" value="FEATURE_SET_COMPUTE_13"/>
                    <value name="WARP_SHUFFLE_FUNCTIONS" value="FEATURE_SET_COMPUTE_30"/>
                    <value name="DYNAMIC_PARALLELISM" value="FEATURE_SET_COMPUTE_35"/>
                </enum>
                <function threadsafety="unspecified" name="DeviceInfo" fullname="cv::cuda::DeviceInfo" href="cv-cuda.html#DeviceInfo" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="575" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeviceInfo()"/>
                <function threadsafety="unspecified" name="DeviceInfo" fullname="cv::cuda::DeviceInfo" href="cv-cuda.html#DeviceInfo-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="581" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DeviceInfo(int device_id)">
                    <parameter left="int" right="" name="device_id" default=""/>
                </function>
                <function threadsafety="unspecified" name="Event" fullname="cv::cuda::Event" href="cv-cuda.html#Event" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="553" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Event(const Ptr&lt;Impl&gt; &amp;impl)">
                    <parameter left="const Ptr&lt;Impl&gt; &amp;" right="" name="impl" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::cuda::operator=" href="cv-cuda.html#operator-eq" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat &amp;" signature="GpuMat &amp; operator=(const GpuMat &amp;m)">
                    <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="setTo" fullname="cv::cuda::setTo" href="cv-cuda.html#setTo" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat &amp;" signature="GpuMat &amp; setTo(Scalar s)">
                    <parameter left="Scalar" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="setTo" fullname="cv::cuda::setTo" href="cv-cuda.html#setTo-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat &amp;" signature="GpuMat &amp; setTo(Scalar s, InputArray mask)">
                    <parameter left="Scalar" right="" name="s" default=""/>
                    <parameter left="InputArray" right="" name="mask" default=""/>
                </function>
                <function threadsafety="unspecified" name="createContinuous" fullname="cv::cuda::createContinuous" href="cv-cuda.html#createContinuous-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="366" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat createContinuous(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="createContinuous" fullname="cv::cuda::createContinuous" href="cv-cuda.html#createContinuous" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="352" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat createContinuous(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(Allocator *allocator_)">
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-6" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(InputArray arr, Allocator *allocator_)">
                    <parameter left="InputArray" right="" name="arr" default=""/>
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="70" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(Size size_, int type_, Allocator *allocator_)">
                    <parameter left="Size" right="" name="size_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-4" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(Size size_, int type_, Scalar s_, Allocator *allocator_)">
                    <parameter left="Size" right="" name="size_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="Scalar" right="" name="s_" default=""/>
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-5" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(const GpuMat &amp;m)">
                    <parameter left="const GpuMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(int rows_, int cols_, int type_, Allocator *allocator_)">
                    <parameter left="int" right="" name="rows_" default=""/>
                    <parameter left="int" right="" name="cols_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="GpuMat" fullname="cv::cuda::GpuMat" href="cv-cuda.html#GpuMat-3" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GpuMat(int rows_, int cols_, int type_, Scalar s_, Allocator *allocator_)">
                    <parameter left="int" right="" name="rows_" default=""/>
                    <parameter left="int" right="" name="cols_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="Scalar" right="" name="s_" default=""/>
                    <parameter left="Allocator *" right="" name="allocator_" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::cuda::operator=" href="cv-cuda.html#operator-eq-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="433" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HostMem &amp;" signature="HostMem &amp; operator=(const HostMem &amp;m)">
                    <parameter left="const HostMem &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda.html#HostMem" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="390" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(AllocType alloc_type_)">
                    <parameter left="AllocType" right="" name="alloc_type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda.html#HostMem-4" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="420" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(InputArray arr, AllocType alloc_type_)">
                    <parameter left="InputArray" right="" name="arr" default=""/>
                    <parameter left="AllocType" right="" name="alloc_type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda.html#HostMem-3" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="412" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(Size size_, int type_, AllocType alloc_type_)">
                    <parameter left="Size" right="" name="size_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="AllocType" right="" name="alloc_type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda.html#HostMem-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="396" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(const HostMem &amp;m)">
                    <parameter left="const HostMem &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="HostMem" fullname="cv::cuda::HostMem" href="cv-cuda.html#HostMem-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="404" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HostMem(int rows_, int cols_, int type_, AllocType alloc_type_)">
                    <parameter left="int" right="" name="rows_" default=""/>
                    <parameter left="int" right="" name="cols_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                    <parameter left="AllocType" right="" name="alloc_type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="Stream" fullname="cv::cuda::Stream" href="cv-cuda.html#Stream" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="543" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Stream(const Ptr&lt;Impl&gt; &amp;impl)">
                    <parameter left="const Ptr&lt;Impl&gt; &amp;" right="" name="impl" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::ptr" href="cv-cuda.html#ptr-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="220" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(int y)">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="has" fullname="cv::cuda::has" href="cv-cuda.html#has" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="563" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool has(int major, int minor)">
                    <parameter left="int" right="" name="major" default=""/>
                    <parameter left="int" right="" name="minor" default=""/>
                </function>
                <function threadsafety="unspecified" name="hasEqualOrGreater" fullname="cv::cuda::hasEqualOrGreater" href="cv-cuda.html#hasEqualOrGreater" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="569" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool hasEqualOrGreater(int major, int minor)">
                    <parameter left="int" right="" name="major" default=""/>
                    <parameter left="int" right="" name="minor" default=""/>
                </function>
                <function threadsafety="unspecified" name="isAligned" fullname="cv::cuda::isAligned" href="cv-cuda.html#isAligned" status="active" access="public" location="common.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/common.hpp" lineno="79" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isAligned(const T *ptr, size_t size)">
                    <parameter left="const T *" right="" name="ptr" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="isAligned" fullname="cv::cuda::isAligned" href="cv-cuda.html#isAligned-1" status="active" access="public" location="common.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/common.hpp" lineno="84" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isAligned(size_t step, size_t size)">
                    <parameter left="size_t" right="" name="step" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::ptr" href="cv-cuda.html#ptr" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="206" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int y)">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="checkCudaError" fullname="cv::cuda::checkCudaError" href="cv-cuda.html#checkCudaError" status="active" access="public" location="common.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/common.hpp" lineno="66" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void checkCudaError(cudaError_t err, const char *file, const int line, const char *func)">
                    <parameter left="cudaError_t" right="" name="err" default=""/>
                    <parameter left="const char *" right="" name="file" default=""/>
                    <parameter left="const int" right="" name="line" default=""/>
                    <parameter left="const char *" right="" name="func" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::cuda::create" href="cv-cuda.html#create-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="467" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size size_, int type_)">
                    <parameter left="Size" right="" name="size_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::cuda::create" href="cv-cuda.html#create" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size size_, int type_)">
                    <parameter left="Size" right="" name="size_" default=""/>
                    <parameter left="int" right="" name="type_" default=""/>
                </function>
                <function threadsafety="unspecified" name="createContinuous" fullname="cv::cuda::createContinuous" href="cv-cuda.html#createContinuous-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="360" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void createContinuous(Size size, int type, OutputArray arr)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="OutputArray" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="ensureSizeIsEnough" fullname="cv::cuda::ensureSizeIsEnough" href="cv-cuda.html#ensureSizeIsEnough" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="374" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ensureSizeIsEnough(Size size, int type, OutputArray arr)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="OutputArray" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::cuda::swap" href="cv-cuda.html#swap-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="380" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(GpuMat &amp;a, GpuMat &amp;b)">
                    <parameter left="GpuMat &amp;" right="" name="a" default=""/>
                    <parameter left="GpuMat &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::cuda::swap" href="cv-cuda.html#swap" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(GpuMat &amp;b)">
                    <parameter left="GpuMat &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::cuda::swap" href="cv-cuda.html#swap-3" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="533" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(HostMem &amp;a, HostMem &amp;b)">
                    <parameter left="HostMem &amp;" right="" name="a" default=""/>
                    <parameter left="HostMem &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::cuda::swap" href="cv-cuda.html#swap-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="445" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(HostMem &amp;b)">
                    <parameter left="HostMem &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="~GpuMat" fullname="cv::cuda::~GpuMat" href="cv-cuda.html#dtor.GpuMat" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="115" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GpuMat()"/>
                <function threadsafety="unspecified" name="~HostMem" fullname="cv::cuda::~HostMem" href="cv-cuda.html#dtor.HostMem" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="427" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HostMem()"/>
                <function threadsafety="unspecified" name="clone" fullname="cv::cuda::clone" href="cv-cuda.html#clone" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="153" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat clone() const"/>
                <function threadsafety="unspecified" name="col" fullname="cv::cuda::col" href="cv-cuda.html#col" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="250" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat col(int x) const">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::cuda::colRange" href="cv-cuda.html#colRange-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="274" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat colRange(Range r) const">
                    <parameter left="Range" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::cuda::colRange" href="cv-cuda.html#colRange" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="268" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat colRange(int startcol, int endcol) const">
                    <parameter left="int" right="" name="startcol" default=""/>
                    <parameter left="int" right="" name="endcol" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::cuda::operator()" href="cv-cuda.html#operator-28-29" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="280" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat operator()(Range rowRange_, Range colRange_) const">
                    <parameter left="Range" right="" name="rowRange_" default=""/>
                    <parameter left="Range" right="" name="colRange_" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::cuda::operator()" href="cv-cuda.html#operator-28-29-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="286" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat operator()(Rect roi) const">
                    <parameter left="Rect" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::cuda::row" href="cv-cuda.html#row" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="244" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat row(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::cuda::rowRange" href="cv-cuda.html#rowRange-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="262" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat rowRange(Range r) const">
                    <parameter left="Range" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::cuda::rowRange" href="cv-cuda.html#rowRange" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="256" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GpuMat" signature="GpuMat rowRange(int startrow, int endrow) const">
                    <parameter left="int" right="" name="startrow" default=""/>
                    <parameter left="int" right="" name="endrow" default=""/>
                </function>
                <function threadsafety="unspecified" name="clone" fullname="cv::cuda::clone" href="cv-cuda.html#clone-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="459" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HostMem" signature="HostMem clone() const"/>
                <function threadsafety="unspecified" name="createMatHeader" fullname="cv::cuda::createMatHeader" href="cv-cuda.html#createMatHeader" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="473" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat createMatHeader() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::cuda::size" href="cv-cuda.html#size" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="334" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::cuda::size" href="cv-cuda.html#size-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="521" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size() const"/>
                <function threadsafety="unspecified" name="empty" fullname="cv::cuda::empty" href="cv-cuda.html#empty-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="527" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="empty" fullname="cv::cuda::empty" href="cv-cuda.html#empty" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="340" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="isContinuous" fullname="cv::cuda::isContinuous" href="cv-cuda.html#isContinuous-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="479" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isContinuous() const"/>
                <function threadsafety="unspecified" name="isContinuous" fullname="cv::cuda::isContinuous" href="cv-cuda.html#isContinuous" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="292" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isContinuous() const"/>
                <function threadsafety="unspecified" name="supports" fullname="cv::cuda::supports" href="cv-cuda.html#supports" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="610" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool supports(FeatureSet feature_set) const">
                    <parameter left="FeatureSet" right="" name="feature_set" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::ptr" href="cv-cuda.html#ptr-3" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="226" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::cuda::ptr" href="cv-cuda.html#ptr-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="213" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="channels" fullname="cv::cuda::channels" href="cv-cuda.html#channels-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="509" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="channels" fullname="cv::cuda::channels" href="cv-cuda.html#channels" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="322" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="depth" fullname="cv::cuda::depth" href="cv-cuda.html#depth-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="503" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="depth" fullname="cv::cuda::depth" href="cv-cuda.html#depth" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="deviceID" fullname="cv::cuda::deviceID" href="cv-cuda.html#deviceID" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="588" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int deviceID() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::cuda::type" href="cv-cuda.html#type-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="497" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::cuda::type" href="cv-cuda.html#type" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="310" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="operator PtrStep&lt;T&gt;" fullname="cv::cuda::operator PtrStep&lt;T&gt;" href="cv-cuda.html#operator-PtrStep-ltT-gt" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="238" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator PtrStep&lt;T&gt;() const"/>
                <function threadsafety="unspecified" name="operator PtrStepSz&lt;T&gt;" fullname="cv::cuda::operator PtrStepSz&lt;T&gt;" href="cv-cuda.html#operator-PtrStepSz-ltT-gt" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="232" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator PtrStepSz&lt;T&gt;() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::cuda::elemSize" href="cv-cuda.html#elemSize-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="485" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::cuda::elemSize" href="cv-cuda.html#elemSize" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="298" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::cuda::elemSize1" href="cv-cuda.html#elemSize1-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="491" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::cuda::elemSize1" href="cv-cuda.html#elemSize1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="304" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="freeMemory" fullname="cv::cuda::freeMemory" href="cv-cuda.html#freeMemory" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="594" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t freeMemory() const"/>
                <function threadsafety="unspecified" name="step1" fullname="cv::cuda::step1" href="cv-cuda.html#step1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="328" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step1() const"/>
                <function threadsafety="unspecified" name="step1" fullname="cv::cuda::step1" href="cv-cuda.html#step1-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="515" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step1() const"/>
                <function threadsafety="unspecified" name="totalMemory" fullname="cv::cuda::totalMemory" href="cv-cuda.html#totalMemory" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="602" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t totalMemory() const"/>
                <function threadsafety="unspecified" name="cudaPtr" fullname="cv::cuda::cudaPtr" href="cv-cuda.html#cudaPtr" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="346" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * cudaPtr() const"/>
                <function threadsafety="unspecified" name="assignTo" fullname="cv::cuda::assignTo" href="cv-cuda.html#assignTo" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="197" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assignTo(GpuMat &amp;m, int _type) const">
                    <parameter left="GpuMat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="_type" default=""/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::cuda::convertTo" href="cv-cuda.html#convertTo" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="179" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(OutputArray dst, int rtype) const">
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::cuda::convertTo" href="cv-cuda.html#convertTo-2" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="191" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(OutputArray dst, int rtype, double alpha, Stream &amp;stream) const">
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                    <parameter left="double" right="" name="alpha" default=""/>
                    <parameter left="Stream &amp;" right="" name="stream" default=""/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::cuda::convertTo" href="cv-cuda.html#convertTo-1" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="185" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(OutputArray dst, int rtype, double alpha, double beta) const">
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                    <parameter left="double" right="" name="alpha" default=""/>
                    <parameter left="double" right="" name="beta" default=""/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::cuda::copyTo" href="cv-cuda.html#copyTo" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="161" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray dst, InputArray mask) const">
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                    <parameter left="InputArray" right="" name="mask" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="device" fullname="cv::cuda::device" href="cv-cuda-device.html" status="active" access="public" location="block.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/block.hpp" lineno="52">
                    <class threadsafety="unspecified" name="Block" fullname="cv::cuda::device::Block" href="cv-cuda-device-block.html" status="active" access="public" location="block.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/block.hpp" lineno="54"/>
                    <class threadsafety="unspecified" name="BorderReader" fullname="cv::cuda::device::BorderReader" href="cv-cuda-device-borderreader.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="680">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::BorderReader::elem_type" href="cv-cuda-device-borderreader.html#elem_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="682"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::BorderReader::index_type" href="cv-cuda-device-borderreader.html#index_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="683"/>
                        <variable threadsafety="unspecified" name="b" fullname="cv::cuda::device::BorderReader::b" href="cv-cuda-device-borderreader.html#b-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="693" type="B" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdColConstant" fullname="cv::cuda::device::BrdColConstant" href="cv-cuda-device-brdcolconstant.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="86">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdColConstant::result_type" href="cv-cuda-device-brdcolconstant.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="88"/>
                        <variable threadsafety="unspecified" name="val" fullname="cv::cuda::device::BrdColConstant::val" href="cv-cuda-device-brdcolconstant.html#val-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="108" type="D" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdColReflect" fullname="cv::cuda::device::BrdColReflect" href="cv-cuda-device-brdcolreflect.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="445">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdColReflect::result_type" href="cv-cuda-device-brdcolreflect.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="447"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdColReflect101" fullname="cv::cuda::device::BrdColReflect101" href="cv-cuda-device-brdcolreflect101.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="311">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdColReflect101::result_type" href="cv-cuda-device-brdcolreflect101.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="313"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdColReplicate" fullname="cv::cuda::device::BrdColReplicate" href="cv-cuda-device-brdcolreplicate.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="177">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdColReplicate::result_type" href="cv-cuda-device-brdcolreplicate.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="179"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdColWrap" fullname="cv::cuda::device::BrdColWrap" href="cv-cuda-device-brdcolwrap.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="579">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdColWrap::result_type" href="cv-cuda-device-brdcolwrap.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="581"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdConstant" fullname="cv::cuda::device::BrdConstant" href="cv-cuda-device-brdconstant.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="111">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdConstant::result_type" href="cv-cuda-device-brdconstant.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="113"/>
                        <variable threadsafety="unspecified" name="val" fullname="cv::cuda::device::BrdConstant::val" href="cv-cuda-device-brdconstant.html#val-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="131" type="D" static="false"/>
                        <variable threadsafety="unspecified" name="width" fullname="cv::cuda::device::BrdConstant::width" href="cv-cuda-device-brdconstant.html#width-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="130" type="int" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdReflect" fullname="cv::cuda::device::BrdReflect" href="cv-cuda-device-brdreflect.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="485">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdReflect::result_type" href="cv-cuda-device-brdreflect.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="487"/>
                        <variable threadsafety="unspecified" name="last_col" fullname="cv::cuda::device::BrdReflect::last_col" href="cv-cuda-device-brdreflect.html#last_col-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="533" type="int" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdReflect101" fullname="cv::cuda::device::BrdReflect101" href="cv-cuda-device-brdreflect101.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="351">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdReflect101::result_type" href="cv-cuda-device-brdreflect101.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="353"/>
                        <variable threadsafety="unspecified" name="last_col" fullname="cv::cuda::device::BrdReflect101::last_col" href="cv-cuda-device-brdreflect101.html#last_col-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="399" type="int" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdReplicate" fullname="cv::cuda::device::BrdReplicate" href="cv-cuda-device-brdreplicate.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="217">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdReplicate::result_type" href="cv-cuda-device-brdreplicate.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="219"/>
                        <variable threadsafety="unspecified" name="last_col" fullname="cv::cuda::device::BrdReplicate::last_col" href="cv-cuda-device-brdreplicate.html#last_col-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="265" type="int" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdRowConstant" fullname="cv::cuda::device::BrdRowConstant" href="cv-cuda-device-brdrowconstant.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="61">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdRowConstant::result_type" href="cv-cuda-device-brdrowconstant.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="63"/>
                        <variable threadsafety="unspecified" name="val" fullname="cv::cuda::device::BrdRowConstant::val" href="cv-cuda-device-brdrowconstant.html#val-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="83" type="D" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdRowReflect" fullname="cv::cuda::device::BrdRowReflect" href="cv-cuda-device-brdrowreflect.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="405">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdRowReflect::result_type" href="cv-cuda-device-brdrowreflect.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="407"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdRowReflect101" fullname="cv::cuda::device::BrdRowReflect101" href="cv-cuda-device-brdrowreflect101.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="271">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdRowReflect101::result_type" href="cv-cuda-device-brdrowreflect101.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="273"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdRowReplicate" fullname="cv::cuda::device::BrdRowReplicate" href="cv-cuda-device-brdrowreplicate.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="137">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdRowReplicate::result_type" href="cv-cuda-device-brdrowreplicate.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="139"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdRowWrap" fullname="cv::cuda::device::BrdRowWrap" href="cv-cuda-device-brdrowwrap.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="539">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdRowWrap::result_type" href="cv-cuda-device-brdrowwrap.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="541"/>
                    </class>
                    <class threadsafety="unspecified" name="BrdWrap" fullname="cv::cuda::device::BrdWrap" href="cv-cuda-device-brdwrap.html" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="619">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::BrdWrap::result_type" href="cv-cuda-device-brdwrap.html#result_type-typedef" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="621"/>
                        <variable threadsafety="unspecified" name="width" fullname="cv::cuda::device::BrdWrap::width" href="cv-cuda-device-brdwrap.html#width-var" status="active" access="public" location="border_interpolate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/border_interpolate.hpp" lineno="674" type="int" static="false"/>
                    </class>
                    <namespace threadsafety="unspecified" name="color_detail" fullname="cv::cuda::device::color_detail" href="cv-cuda-device-color-detail.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="60">
                        <class threadsafety="unspecified" name="ColorChannel" fullname="cv::cuda::device::color_detail::ColorChannel" href="cv-cuda-device-color-detail-colorchannel.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="62">
                            <typedef threadsafety="unspecified" name="worktype_f" fullname="cv::cuda::device::color_detail::ColorChannel::worktype_f" href="cv-cuda-device-color-detail-colorchannel.html#worktype_f-typedef" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="64"/>
                        </class>
                        <class threadsafety="unspecified" name="Gray2RGB" fullname="cv::cuda::device::color_detail::Gray2RGB" href="cv-cuda-device-color-detail-gray2rgb.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="354"/>
                        <class threadsafety="unspecified" name="Gray2RGB5x5" fullname="cv::cuda::device::color_detail::Gray2RGB5x5" href="cv-cuda-device-color-detail-gray2rgb5x5.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="416"/>
                        <class threadsafety="unspecified" name="RGB2RGB" fullname="cv::cuda::device::color_detail::RGB2RGB" href="cv-cuda-device-color-detail-rgb2rgb.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="148">
                            <function threadsafety="unspecified" name="operator()" fullname="cv::cuda::device::color_detail::RGB2RGB::operator()" href="cv-cuda-device-color-detail-rgb2rgb.html#operator-28-29" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="151" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__device__" signature="__device__ operator()(const TypeVec&lt;T, scn&gt;::vec_type &amp;src) const">
                                <parameter left="const TypeVec&lt;T, scn&gt;::vec_type &amp;" right="" name="src" default=""/>
                            </function>
                        </class>
                        <class threadsafety="unspecified" name="RGB5x52Gray" fullname="cv::cuda::device::color_detail::RGB5x52Gray" href="cv-cuda-device-color-detail-rgb5x52gray.html" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="459"/>
                        <variable threadsafety="unspecified" name="B2UI" fullname="cv::cuda::device::color_detail::B2UI" href="cv-cuda-device-color-detail.html#B2UI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="108" type="const int = 8061" static="false"/>
                        <variable threadsafety="unspecified" name="B2Y" fullname="cv::cuda::device::color_detail::B2Y" href="cv-cuda-device-color-detail.html#B2Y-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="136" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="BLOCK_SIZE" fullname="cv::cuda::device::color_detail::BLOCK_SIZE" href="cv-cuda-device-color-detail.html#BLOCK_SIZE-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="141" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="BY15" fullname="cv::cuda::device::color_detail::BY15" href="cv-cuda-device-color-detail.html#BY15-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="139" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="CB2BI" fullname="cv::cuda::device::color_detail::CB2BI" href="cv-cuda-device-color-detail.html#CB2BI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="124" type="const int = 29049" static="false"/>
                        <variable threadsafety="unspecified" name="CB2GI" fullname="cv::cuda::device::color_detail::CB2GI" href="cv-cuda-device-color-detail.html#CB2GI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="125" type="const int =-5636" static="false"/>
                        <variable threadsafety="unspecified" name="CR2GI" fullname="cv::cuda::device::color_detail::CR2GI" href="cv-cuda-device-color-detail.html#CR2GI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="126" type="const int =-11698" static="false"/>
                        <variable threadsafety="unspecified" name="CR2RI" fullname="cv::cuda::device::color_detail::CR2RI" href="cv-cuda-device-color-detail.html#CR2RI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="127" type="const int = 22987" static="false"/>
                        <variable threadsafety="unspecified" name="G2Y" fullname="cv::cuda::device::color_detail::G2Y" href="cv-cuda-device-color-detail.html#G2Y-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="135" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="GAMMA_TAB_SIZE" fullname="cv::cuda::device::color_detail::GAMMA_TAB_SIZE" href="cv-cuda-device-color-detail.html#GAMMA_TAB_SIZE-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1561" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="GY15" fullname="cv::cuda::device::color_detail::GY15" href="cv-cuda-device-color-detail.html#GY15-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="138" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="LAB_CBRT_TAB_SIZE" fullname="cv::cuda::device::color_detail::LAB_CBRT_TAB_SIZE" href="cv-cuda-device-color-detail.html#LAB_CBRT_TAB_SIZE-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1560" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="LAB_CBRT_TAB_SIZE_B" fullname="cv::cuda::device::color_detail::LAB_CBRT_TAB_SIZE_B" href="cv-cuda-device-color-detail.html#LAB_CBRT_TAB_SIZE_B-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1566" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="R2VI" fullname="cv::cuda::device::color_detail::R2VI" href="cv-cuda-device-color-detail.html#R2VI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="109" type="const int = 14369" static="false"/>
                        <variable threadsafety="unspecified" name="R2Y" fullname="cv::cuda::device::color_detail::R2Y" href="cv-cuda-device-color-detail.html#R2Y-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="134" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="RY15" fullname="cv::cuda::device::color_detail::RY15" href="cv-cuda-device-color-detail.html#RY15-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="137" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="U2BI" fullname="cv::cuda::device::color_detail::U2BI" href="cv-cuda-device-color-detail.html#U2BI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="115" type="const int = 33292" static="false"/>
                        <variable threadsafety="unspecified" name="U2GI" fullname="cv::cuda::device::color_detail::U2GI" href="cv-cuda-device-color-detail.html#U2GI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="116" type="const int =-6472" static="false"/>
                        <variable threadsafety="unspecified" name="V2GI" fullname="cv::cuda::device::color_detail::V2GI" href="cv-cuda-device-color-detail.html#V2GI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="117" type="const int =-9519" static="false"/>
                        <variable threadsafety="unspecified" name="V2RI" fullname="cv::cuda::device::color_detail::V2RI" href="cv-cuda-device-color-detail.html#V2RI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="118" type="const int = 18678" static="false"/>
                        <variable threadsafety="unspecified" name="YCBI" fullname="cv::cuda::device::color_detail::YCBI" href="cv-cuda-device-color-detail.html#YCBI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="103" type="const int = 9241" static="false"/>
                        <variable threadsafety="unspecified" name="YCRI" fullname="cv::cuda::device::color_detail::YCRI" href="cv-cuda-device-color-detail.html#YCRI-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="104" type="const int = 11682" static="false"/>
                        <variable threadsafety="unspecified" name="gamma_shift" fullname="cv::cuda::device::color_detail::gamma_shift" href="cv-cuda-device-color-detail.html#gamma_shift-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1563" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="gray_shift" fullname="cv::cuda::device::color_detail::gray_shift" href="cv-cuda-device-color-detail.html#gray_shift-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="133" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="lab_shift" fullname="cv::cuda::device::color_detail::lab_shift" href="cv-cuda-device-color-detail.html#lab_shift-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1562" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="lab_shift2" fullname="cv::cuda::device::color_detail::lab_shift2" href="cv-cuda-device-color-detail.html#lab_shift2-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="1564" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="xyz_shift" fullname="cv::cuda::device::color_detail::xyz_shift" href="cv-cuda-device-color-detail.html#xyz_shift-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="132" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="yuv_shift" fullname="cv::cuda::device::color_detail::yuv_shift" href="cv-cuda-device-color-detail.html#yuv_shift-var" status="active" access="public" location="color_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/color_detail.hpp" lineno="131" type="const int" static="true"/>
                    </namespace>
                    <namespace threadsafety="unspecified" name="reduce_detail" fullname="cv::cuda::device::reduce_detail" href="cv-cuda-device-reduce-detail.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="54">
                        <class threadsafety="unspecified" name="Dispatcher" fullname="cv::cuda::device::reduce_detail::Dispatcher" href="cv-cuda-device-reduce-detail-dispatcher.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="348">
                            <typedef threadsafety="unspecified" name="reductor" fullname="cv::cuda::device::reduce_detail::Dispatcher::reductor" href="cv-cuda-device-reduce-detail-dispatcher.html#reductor-typedef" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="350"/>
                        </class>
                        <class threadsafety="unspecified" name="For" fullname="cv::cuda::device::reduce_detail::For" href="cv-cuda-device-reduce-detail-for.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="71"/>
                        <class threadsafety="unspecified" name="GenericOptimized32" fullname="cv::cuda::device::reduce_detail::GenericOptimized32" href="cv-cuda-device-reduce-detail-genericoptimized32.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="292">
                            <variable threadsafety="unspecified" name="M" fullname="cv::cuda::device::reduce_detail::GenericOptimized32::M" href="cv-cuda-device-reduce-detail-genericoptimized32.html#M-var" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="294" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsPowerOf2" fullname="cv::cuda::device::reduce_detail::IsPowerOf2" href="cv-cuda-device-reduce-detail-ispowerof2.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="343">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::reduce_detail::IsPowerOf2::value" href="cv-cuda-device-reduce-detail-ispowerof2.html#value-var" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="345" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="Unroll" fullname="cv::cuda::device::reduce_detail::Unroll" href="cv-cuda-device-reduce-detail-unroll.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="249"/>
                        <class threadsafety="unspecified" name="WarpOptimized" fullname="cv::cuda::device::reduce_detail::WarpOptimized" href="cv-cuda-device-reduce-detail-warpoptimized.html" status="active" access="public" location="reduce.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce.hpp" lineno="273"/>
                    </namespace>
                    <namespace threadsafety="unspecified" name="reduce_key_val_detail" fullname="cv::cuda::device::reduce_key_val_detail" href="cv-cuda-device-reduce-key-val-detail.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="54">
                        <class threadsafety="unspecified" name="Dispatcher" fullname="cv::cuda::device::reduce_key_val_detail::Dispatcher" href="cv-cuda-device-reduce-key-val-detail-dispatcher.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="485">
                            <typedef threadsafety="unspecified" name="reductor" fullname="cv::cuda::device::reduce_key_val_detail::Dispatcher::reductor" href="cv-cuda-device-reduce-key-val-detail-dispatcher.html#reductor-typedef" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="487"/>
                        </class>
                        <class threadsafety="unspecified" name="For" fullname="cv::cuda::device::reduce_key_val_detail::For" href="cv-cuda-device-reduce-key-val-detail-for.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="71"/>
                        <class threadsafety="unspecified" name="GenericOptimized32" fullname="cv::cuda::device::reduce_key_val_detail::GenericOptimized32" href="cv-cuda-device-reduce-key-val-detail-genericoptimized32.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="420">
                            <variable threadsafety="unspecified" name="M" fullname="cv::cuda::device::reduce_key_val_detail::GenericOptimized32::M" href="cv-cuda-device-reduce-key-val-detail-genericoptimized32.html#M-var" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="422" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsPowerOf2" fullname="cv::cuda::device::reduce_key_val_detail::IsPowerOf2" href="cv-cuda-device-reduce-key-val-detail-ispowerof2.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="480">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::reduce_key_val_detail::IsPowerOf2::value" href="cv-cuda-device-reduce-key-val-detail-ispowerof2.html#value-var" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="482" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="Unroll" fullname="cv::cuda::device::reduce_key_val_detail::Unroll" href="cv-cuda-device-reduce-key-val-detail-unroll.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="375"/>
                        <class threadsafety="unspecified" name="WarpOptimized" fullname="cv::cuda::device::reduce_key_val_detail::WarpOptimized" href="cv-cuda-device-reduce-key-val-detail-warpoptimized.html" status="active" access="public" location="reduce_key_val.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/reduce_key_val.hpp" lineno="399"/>
                    </namespace>
                    <namespace threadsafety="unspecified" name="transform_detail" fullname="cv::cuda::device::transform_detail" href="cv-cuda-device-transform-detail.html" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="54">
                        <class threadsafety="unspecified" name="BinaryReadWriteTraits" fullname="cv::cuda::device::transform_detail::BinaryReadWriteTraits" href="cv-cuda-device-transform-detail-binaryreadwritetraits.html" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="64">
                            <typedef threadsafety="unspecified" name="read_type1" fullname="cv::cuda::device::transform_detail::BinaryReadWriteTraits::read_type1" href="cv-cuda-device-transform-detail-binaryreadwritetraits.html#read_type1-typedef" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="66"/>
                            <typedef threadsafety="unspecified" name="read_type2" fullname="cv::cuda::device::transform_detail::BinaryReadWriteTraits::read_type2" href="cv-cuda-device-transform-detail-binaryreadwritetraits.html#read_type2-typedef" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="67"/>
                            <typedef threadsafety="unspecified" name="write_type" fullname="cv::cuda::device::transform_detail::BinaryReadWriteTraits::write_type" href="cv-cuda-device-transform-detail-binaryreadwritetraits.html#write_type-typedef" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="68"/>
                        </class>
                        <class threadsafety="unspecified" name="UnaryReadWriteTraits" fullname="cv::cuda::device::transform_detail::UnaryReadWriteTraits" href="cv-cuda-device-transform-detail-unaryreadwritetraits.html" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="58">
                            <typedef threadsafety="unspecified" name="read_type" fullname="cv::cuda::device::transform_detail::UnaryReadWriteTraits::read_type" href="cv-cuda-device-transform-detail-unaryreadwritetraits.html#read_type-typedef" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="60"/>
                            <typedef threadsafety="unspecified" name="write_type" fullname="cv::cuda::device::transform_detail::UnaryReadWriteTraits::write_type" href="cv-cuda-device-transform-detail-unaryreadwritetraits.html#write_type-typedef" status="active" access="public" location="transform_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/transform_detail.hpp" lineno="61"/>
                        </class>
                    </namespace>
                    <namespace threadsafety="unspecified" name="type_traits_detail" fullname="cv::cuda::device::type_traits_detail" href="cv-cuda-device-type-traits-detail.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="53">
                        <class threadsafety="unspecified" name="AddParameterType" fullname="cv::cuda::device::type_traits_detail::AddParameterType" href="cv-cuda-device-type-traits-detail-addparametertype.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="124">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::AddParameterType::type" href="cv-cuda-device-type-traits-detail-addparametertype.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="124"/>
                        </class>
                        <class threadsafety="unspecified" name="IsFloat" fullname="cv::cuda::device::type_traits_detail::IsFloat" href="cv-cuda-device-type-traits-detail-isfloat.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="78">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::IsFloat::value" href="cv-cuda-device-type-traits-detail-isfloat.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="78" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsIntegral" fullname="cv::cuda::device::type_traits_detail::IsIntegral" href="cv-cuda-device-type-traits-detail-isintegral.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="74">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::IsIntegral::value" href="cv-cuda-device-type-traits-detail-isintegral.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="74" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsSignedIntergral" fullname="cv::cuda::device::type_traits_detail::IsSignedIntergral" href="cv-cuda-device-type-traits-detail-issignedintergral.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="58">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::IsSignedIntergral::value" href="cv-cuda-device-type-traits-detail-issignedintergral.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="58" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsUnsignedIntegral" fullname="cv::cuda::device::type_traits_detail::IsUnsignedIntegral" href="cv-cuda-device-type-traits-detail-isunsignedintegral.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="66">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::IsUnsignedIntegral::value" href="cv-cuda-device-type-traits-detail-isunsignedintegral.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="66" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="IsVec" fullname="cv::cuda::device::type_traits_detail::IsVec" href="cv-cuda-device-type-traits-detail-isvec.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="82">
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::IsVec::value" href="cv-cuda-device-type-traits-detail-isvec.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="82" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="PointerTraits" fullname="cv::cuda::device::type_traits_detail::PointerTraits" href="cv-cuda-device-type-traits-detail-pointertraits.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="139">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::PointerTraits::type" href="cv-cuda-device-type-traits-detail-pointertraits.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="142"/>
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::PointerTraits::value" href="cv-cuda-device-type-traits-detail-pointertraits.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="141" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="ReferenceTraits" fullname="cv::cuda::device::type_traits_detail::ReferenceTraits" href="cv-cuda-device-type-traits-detail-referencetraits.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="128">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::ReferenceTraits::type" href="cv-cuda-device-type-traits-detail-referencetraits.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="131"/>
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::ReferenceTraits::value" href="cv-cuda-device-type-traits-detail-referencetraits.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="130" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="Select" fullname="cv::cuda::device::type_traits_detail::Select" href="cv-cuda-device-type-traits-detail-select.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="55">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::Select::type" href="cv-cuda-device-type-traits-detail-select.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="55"/>
                        </class>
                        <class threadsafety="unspecified" name="UnConst" fullname="cv::cuda::device::type_traits_detail::UnConst" href="cv-cuda-device-type-traits-detail-unconst.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="155">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::UnConst::type" href="cv-cuda-device-type-traits-detail-unconst.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="157"/>
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::UnConst::value" href="cv-cuda-device-type-traits-detail-unconst.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="158" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="UnVolatile" fullname="cv::cuda::device::type_traits_detail::UnVolatile" href="cv-cuda-device-type-traits-detail-unvolatile.html" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="171">
                            <typedef threadsafety="unspecified" name="type" fullname="cv::cuda::device::type_traits_detail::UnVolatile::type" href="cv-cuda-device-type-traits-detail-unvolatile.html#type-typedef" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="173"/>
                            <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::type_traits_detail::UnVolatile::value" href="cv-cuda-device-type-traits-detail-unvolatile.html#value-var" status="active" access="public" location="type_traits_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/type_traits_detail.hpp" lineno="174" type="const int" static="true"/>
                        </class>
                    </namespace>
                    <namespace threadsafety="unspecified" name="vec_distance_detail" fullname="cv::cuda::device::vec_distance_detail" href="cv-cuda-device-vec-distance-detail.html" status="active" access="public" location="vec_distance_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/vec_distance_detail.hpp" lineno="52">
                        <class threadsafety="unspecified" name="UnrollVecDiffCached" fullname="cv::cuda::device::vec_distance_detail::UnrollVecDiffCached" href="cv-cuda-device-vec-distance-detail-unrollvecdiffcached.html" status="active" access="public" location="vec_distance_detail.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/detail/vec_distance_detail.hpp" lineno="54"/>
                    </namespace>
                    <class threadsafety="unspecified" name="DynamicSharedMem" fullname="cv::cuda::device::DynamicSharedMem" href="cv-cuda-device-dynamicsharedmem.html" status="active" access="public" location="dynamic_smem.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/dynamic_smem.hpp" lineno="54">
                        <function threadsafety="unspecified" name="operatorT*" fullname="cv::cuda::device::DynamicSharedMem::operatorT*" href="cv-cuda-device-dynamicsharedmem.html#operatorT-2a" status="active" access="public" location="dynamic_smem.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/dynamic_smem.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__device__" signature="__device__ operatorT*()"/>
                        <function threadsafety="unspecified" name="operatorconstT*" fullname="cv::cuda::device::DynamicSharedMem::operatorconstT*" href="cv-cuda-device-dynamicsharedmem.html#operatorconstT-2a" status="active" access="public" location="dynamic_smem.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/dynamic_smem.hpp" lineno="62" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__device__" signature="__device__ operatorconstT*() const"/>
                    </class>
                    <class threadsafety="unspecified" name="Emulation" fullname="cv::cuda::device::Emulation" href="cv-cuda-device-emulation.html" status="active" access="public" location="emulation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/emulation.hpp" lineno="57">
                        <class threadsafety="unspecified" name="glob" fullname="cv::cuda::device::Emulation::glob" href="cv-cuda-device-emulation-glob.html" status="active" access="public" location="emulation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/emulation.hpp" lineno="143"/>
                    </class>
                    <class threadsafety="unspecified" name="AreaFilter" fullname="cv::cuda::device::AreaFilter" href="cv-cuda-device-areafilter.html" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="216">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::AreaFilter::elem_type" href="cv-cuda-device-areafilter.html#elem_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="218"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::AreaFilter::index_type" href="cv-cuda-device-areafilter.html#index_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="219"/>
                    </class>
                    <class threadsafety="unspecified" name="CubicFilter" fullname="cv::cuda::device::CubicFilter" href="cv-cuda-device-cubicfilter.html" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="119">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::CubicFilter::elem_type" href="cv-cuda-device-cubicfilter.html#elem_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="121"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::CubicFilter::index_type" href="cv-cuda-device-cubicfilter.html#index_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="122"/>
                        <typedef threadsafety="unspecified" name="work_type" fullname="cv::cuda::device::CubicFilter::work_type" href="cv-cuda-device-cubicfilter.html#work_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="123"/>
                    </class>
                    <class threadsafety="unspecified" name="IntegerAreaFilter" fullname="cv::cuda::device::IntegerAreaFilter" href="cv-cuda-device-integerareafilter.html" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="178">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::IntegerAreaFilter::elem_type" href="cv-cuda-device-integerareafilter.html#elem_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="180"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::IntegerAreaFilter::index_type" href="cv-cuda-device-integerareafilter.html#index_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="181"/>
                    </class>
                    <class threadsafety="unspecified" name="LinearFilter" fullname="cv::cuda::device::LinearFilter" href="cv-cuda-device-linearfilter.html" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="79">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::LinearFilter::elem_type" href="cv-cuda-device-linearfilter.html#elem_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="81"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::LinearFilter::index_type" href="cv-cuda-device-linearfilter.html#index_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="82"/>
                    </class>
                    <class threadsafety="unspecified" name="PointFilter" fullname="cv::cuda::device::PointFilter" href="cv-cuda-device-pointfilter.html" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="59">
                        <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::device::PointFilter::elem_type" href="cv-cuda-device-pointfilter.html#elem_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="61"/>
                        <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::device::PointFilter::index_type" href="cv-cuda-device-pointfilter.html#index_type-typedef" status="active" access="public" location="filters.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/filters.hpp" lineno="62"/>
                    </class>
                    <function threadsafety="unspecified" name="printFuncAttrib" fullname="cv::cuda::device::printFuncAttrib" href="cv-cuda-device.html#printFuncAttrib" status="active" access="public" location="funcattrib.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/funcattrib.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void printFuncAttrib(Func &amp;func)">
                        <parameter left="Func &amp;" right="" name="func" default=""/>
                    </function>
                    <namespace threadsafety="unspecified" name="functional_detail" fullname="cv::cuda::device::functional_detail" href="cv-cuda-device-functional-detail.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="751">
                        <class threadsafety="unspecified" name="BinOpShift" fullname="cv::cuda::device::functional_detail::BinOpShift" href="cv-cuda-device-functional-detail-binopshift.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="762">
                            <variable threadsafety="unspecified" name="shift" fullname="cv::cuda::device::functional_detail::BinOpShift::shift" href="cv-cuda-device-functional-detail-binopshift.html#shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="762" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="DefaultBinaryShift" fullname="cv::cuda::device::functional_detail::DefaultBinaryShift" href="cv-cuda-device-functional-detail-defaultbinaryshift.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="766">
                            <variable threadsafety="unspecified" name="shift" fullname="cv::cuda::device::functional_detail::DefaultBinaryShift::shift" href="cv-cuda-device-functional-detail-defaultbinaryshift.html#shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="768" type="const int" static="true"/>
                            <variable threadsafety="unspecified" name="sizeof" fullname="cv::cuda::device::functional_detail::DefaultBinaryShift::sizeof" href="cv-cuda-device-functional-detail-defaultbinaryshift.html#sizeof-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="768" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="DefaultUnaryShift" fullname="cv::cuda::device::functional_detail::DefaultUnaryShift" href="cv-cuda-device-functional-detail-defaultunaryshift.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="757">
                            <variable threadsafety="unspecified" name="shift" fullname="cv::cuda::device::functional_detail::DefaultUnaryShift::shift" href="cv-cuda-device-functional-detail-defaultunaryshift.html#shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="759" type="const int" static="true"/>
                            <variable threadsafety="unspecified" name="sizeof" fullname="cv::cuda::device::functional_detail::DefaultUnaryShift::sizeof" href="cv-cuda-device-functional-detail-defaultunaryshift.html#sizeof-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="759" type="const int" static="true"/>
                        </class>
                        <class threadsafety="unspecified" name="UnOpShift" fullname="cv::cuda::device::functional_detail::UnOpShift" href="cv-cuda-device-functional-detail-unopshift.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="753">
                            <variable threadsafety="unspecified" name="shift" fullname="cv::cuda::device::functional_detail::UnOpShift::shift" href="cv-cuda-device-functional-detail-unopshift.html#shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="753" type="const int" static="true"/>
                        </class>
                    </namespace>
                    <class threadsafety="unspecified" name="DefaultTransformFunctorTraits" fullname="cv::cuda::device::DefaultTransformFunctorTraits" href="cv-cuda-device-defaulttransformfunctortraits.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="787">
                        <variable threadsafety="unspecified" name="simple_block_dim_x" fullname="cv::cuda::device::DefaultTransformFunctorTraits::simple_block_dim_x" href="cv-cuda-device-defaulttransformfunctortraits.html#simple_block_dim_x-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="789" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="simple_block_dim_y" fullname="cv::cuda::device::DefaultTransformFunctorTraits::simple_block_dim_y" href="cv-cuda-device-defaulttransformfunctortraits.html#simple_block_dim_y-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="790" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="smart_block_dim_x" fullname="cv::cuda::device::DefaultTransformFunctorTraits::smart_block_dim_x" href="cv-cuda-device-defaulttransformfunctortraits.html#smart_block_dim_x-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="792" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="smart_block_dim_y" fullname="cv::cuda::device::DefaultTransformFunctorTraits::smart_block_dim_y" href="cv-cuda-device-defaulttransformfunctortraits.html#smart_block_dim_y-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="793" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="smart_shift" fullname="cv::cuda::device::DefaultTransformFunctorTraits::smart_shift" href="cv-cuda-device-defaulttransformfunctortraits.html#smart_shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="794" type="const int" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="DefaultTransformShift" fullname="cv::cuda::device::DefaultTransformShift" href="cv-cuda-device-defaulttransformshift.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="782">
                        <variable threadsafety="unspecified" name="shift" fullname="cv::cuda::device::DefaultTransformShift::shift" href="cv-cuda-device-defaulttransformshift.html#shift-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="784" type="const int" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="IsBinaryFunction" fullname="cv::cuda::device::IsBinaryFunction" href="cv-cuda-device-isbinaryfunction.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="738">
                        <class threadsafety="unspecified" name="No" fullname="cv::cuda::device::IsBinaryFunction::No" href="cv-cuda-device-isbinaryfunction-no.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="741">
                            <variable threadsafety="unspecified" name="a" fullname="cv::cuda::device::IsBinaryFunction::No::a" href="cv-cuda-device-isbinaryfunction-no.html#a-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="741" type="Yes[2]" static="false"/>
                        </class>
                        <typedef threadsafety="unspecified" name="Yes" fullname="cv::cuda::device::IsBinaryFunction::Yes" href="cv-cuda-device-isbinaryfunction.html#Yes-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="740"/>
                        <function threadsafety="unspecified" name="makeF" fullname="cv::cuda::device::IsBinaryFunction::makeF" href="cv-cuda-device-isbinaryfunction.html#makeF" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="746" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="F" signature="F makeF()"/>
                        <function threadsafety="unspecified" name="check" fullname="cv::cuda::device::IsBinaryFunction::check" href="cv-cuda-device-isbinaryfunction.html#check-1" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="744" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="No" signature="No check(... )">
                            <parameter left="..." right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="check" fullname="cv::cuda::device::IsBinaryFunction::check" href="cv-cuda-device-isbinaryfunction.html#check" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="743" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Yes" signature="Yes check(binary_function&lt;T1, T2, D&gt; )">
                            <parameter left="binary_function&lt;T1, T2, D&gt;" right="" name="" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::IsBinaryFunction::value" href="cv-cuda-device-isbinaryfunction.html#value-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="748" type="const int" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="TransformFunctorTraits" fullname="cv::cuda::device::TransformFunctorTraits" href="cv-cuda-device-transformfunctortraits.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="797" bases="cv::cuda::device::DefaultTransformFunctorTraits"/>
                    <class threadsafety="unspecified" name="binary_function" fullname="cv::cuda::device::binary_function" href="cv-cuda-device-binary-function.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="65">
                        <typedef threadsafety="unspecified" name="first_argument_type" fullname="cv::cuda::device::binary_function::first_argument_type" href="cv-cuda-device-binary-function.html#first_argument_type-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="67"/>
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::binary_function::result_type" href="cv-cuda-device-binary-function.html#result_type-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="69"/>
                        <typedef threadsafety="unspecified" name="second_argument_type" fullname="cv::cuda::device::binary_function::second_argument_type" href="cv-cuda-device-binary-function.html#second_argument_type-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="68"/>
                    </class>
                    <class threadsafety="unspecified" name="bit_and" fullname="cv::cuda::device::bit_and" href="cv-cuda-device-bit-and.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="239" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="bit_not" fullname="cv::cuda::device::bit_not" href="cv-cuda-device-bit-not.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="272" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="bit_or" fullname="cv::cuda::device::bit_or" href="cv-cuda-device-bit-or.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="250" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="bit_xor" fullname="cv::cuda::device::bit_xor" href="cv-cuda-device-bit-xor.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="261" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="divides" fullname="cv::cuda::device::divides" href="cv-cuda-device-divides.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="106" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="equal_to" fullname="cv::cuda::device::equal_to" href="cv-cuda-device-equal-to.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="139" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="greater" fullname="cv::cuda::device::greater" href="cv-cuda-device-greater.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="161" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="greater_equal" fullname="cv::cuda::device::greater_equal" href="cv-cuda-device-greater-equal.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="183" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="identity" fullname="cv::cuda::device::identity" href="cv-cuda-device-identity.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="283" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="less" fullname="cv::cuda::device::less" href="cv-cuda-device-less.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="172" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="less_equal" fullname="cv::cuda::device::less_equal" href="cv-cuda-device-less-equal.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="194" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="logical_and" fullname="cv::cuda::device::logical_and" href="cv-cuda-device-logical-and.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="206" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="logical_not" fullname="cv::cuda::device::logical_not" href="cv-cuda-device-logical-not.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="228" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="logical_or" fullname="cv::cuda::device::logical_or" href="cv-cuda-device-logical-or.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="217" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="maximum" fullname="cv::cuda::device::maximum" href="cv-cuda-device-maximum.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="323" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="minus" fullname="cv::cuda::device::minus" href="cv-cuda-device-minus.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="84" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="modulus" fullname="cv::cuda::device::modulus" href="cv-cuda-device-modulus.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="117" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="multiplies" fullname="cv::cuda::device::multiplies" href="cv-cuda-device-multiplies.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="95" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="negate" fullname="cv::cuda::device::negate" href="cv-cuda-device-negate.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="128" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="not_equal_to" fullname="cv::cuda::device::not_equal_to" href="cv-cuda-device-not-equal-to.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="150" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="plus" fullname="cv::cuda::device::plus" href="cv-cuda-device-plus.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="73" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="project1st" fullname="cv::cuda::device::project1st" href="cv-cuda-device-project1st.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="293" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="project2nd" fullname="cv::cuda::device::project2nd" href="cv-cuda-device-project2nd.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="303" bases="cv::cuda::device::binary_function"/>
                    <class threadsafety="unspecified" name="saturate_cast_func" fullname="cv::cuda::device::saturate_cast_func" href="cv-cuda-device-saturate-cast-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="547" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="thresh_binary_func" fullname="cv::cuda::device::thresh_binary_func" href="cv-cuda-device-thresh-binary-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="558" bases="cv::cuda::device::unary_function">
                        <variable threadsafety="unspecified" name="maxVal" fullname="cv::cuda::device::thresh_binary_func::maxVal" href="cv-cuda-device-thresh-binary-func.html#maxVal-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="572" type="T" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="thresh_binary_inv_func" fullname="cv::cuda::device::thresh_binary_inv_func" href="cv-cuda-device-thresh-binary-inv-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="575" bases="cv::cuda::device::unary_function">
                        <variable threadsafety="unspecified" name="maxVal" fullname="cv::cuda::device::thresh_binary_inv_func::maxVal" href="cv-cuda-device-thresh-binary-inv-func.html#maxVal-var" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="589" type="T" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="thresh_to_zero_func" fullname="cv::cuda::device::thresh_to_zero_func" href="cv-cuda-device-thresh-to-zero-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="608" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="thresh_to_zero_inv_func" fullname="cv::cuda::device::thresh_to_zero_inv_func" href="cv-cuda-device-thresh-to-zero-inv-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="624" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="thresh_trunc_func" fullname="cv::cuda::device::thresh_trunc_func" href="cv-cuda-device-thresh-trunc-func.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="592" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="unary_function" fullname="cv::cuda::device::unary_function" href="cv-cuda-device-unary-function.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="60">
                        <typedef threadsafety="unspecified" name="argument_type" fullname="cv::cuda::device::unary_function::argument_type" href="cv-cuda-device-unary-function.html#argument_type-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="62"/>
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::unary_function::result_type" href="cv-cuda-device-unary-function.html#result_type-typedef" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="63"/>
                    </class>
                    <class threadsafety="unspecified" name="unary_negate" fullname="cv::cuda::device::unary_negate" href="cv-cuda-device-unary-negate.html" status="active" access="public" location="functional.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/functional.hpp" lineno="641" bases="cv::cuda::device::unary_function"/>
                    <class threadsafety="unspecified" name="BlockScan" fullname="cv::cuda::device::BlockScan" href="cv-cuda-device-blockscan.html" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="135">
                        <variable threadsafety="unspecified" name="warp_mask" fullname="cv::cuda::device::BlockScan::warp_mask" href="cv-cuda-device-blockscan.html#warp_mask-var" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="176" type="const int = 31" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="WarpScan" fullname="cv::cuda::device::WarpScan" href="cv-cuda-device-warpscan.html" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="61">
                        <typedef threadsafety="unspecified" name="merge" fullname="cv::cuda::device::WarpScan::merge" href="cv-cuda-device-warpscan.html#merge-typedef" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="92"/>
                    </class>
                    <class threadsafety="unspecified" name="WarpScanNoComp" fullname="cv::cuda::device::WarpScanNoComp" href="cv-cuda-device-warpscannocomp.html" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="95">
                        <typedef threadsafety="unspecified" name="merge" fullname="cv::cuda::device::WarpScanNoComp::merge" href="cv-cuda-device-warpscannocomp.html#merge-typedef" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="132"/>
                        <variable threadsafety="unspecified" name="warp_log" fullname="cv::cuda::device::WarpScanNoComp::warp_log" href="cv-cuda-device-warpscannocomp.html#warp_log-var" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="129" type="const int = 5" static="true"/>
                        <variable threadsafety="unspecified" name="warp_mask" fullname="cv::cuda::device::WarpScanNoComp::warp_mask" href="cv-cuda-device-warpscannocomp.html#warp_mask-var" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="130" type="const int = 31" static="true"/>
                        <variable threadsafety="unspecified" name="warp_offset" fullname="cv::cuda::device::WarpScanNoComp::warp_offset" href="cv-cuda-device-warpscannocomp.html#warp_offset-var" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="128" type="const int = 16" static="true"/>
                    </class>
                    <enum threadsafety="unspecified" name="ScanKind" fullname="cv::cuda::device::ScanKind" href="cv-cuda-device.html#ScanKind-enum" status="active" access="public" location="scan.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/scan.hpp" lineno="59">
                        <value name="EXCLUSIVE" value="0"/>
                        <value name="INCLUSIVE" value="1"/>
                    </enum>
                    <function threadsafety="unspecified" name="transform" fullname="cv::cuda::device::transform" href="cv-cuda-device.html#transform-1" status="active" access="public" location="transform.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/transform.hpp" lineno="66" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void transform(PtrStepSz&lt;T1&gt; src1, PtrStepSz&lt;T2&gt; src2, PtrStepSz&lt;D&gt; dst, BinOp op, const Mask &amp;mask, cudaStream_t stream)">
                        <parameter left="PtrStepSz&lt;T1&gt;" right="" name="src1" default=""/>
                        <parameter left="PtrStepSz&lt;T2&gt;" right="" name="src2" default=""/>
                        <parameter left="PtrStepSz&lt;D&gt;" right="" name="dst" default=""/>
                        <parameter left="BinOp" right="" name="op" default=""/>
                        <parameter left="const Mask &amp;" right="" name="mask" default=""/>
                        <parameter left="cudaStream_t" right="" name="stream" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="transform" fullname="cv::cuda::device::transform" href="cv-cuda-device.html#transform" status="active" access="public" location="transform.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/transform.hpp" lineno="59" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void transform(PtrStepSz&lt;T&gt; src, PtrStepSz&lt;D&gt; dst, UnOp op, const Mask &amp;mask, cudaStream_t stream)">
                        <parameter left="PtrStepSz&lt;T&gt;" right="" name="src" default=""/>
                        <parameter left="PtrStepSz&lt;D&gt;" right="" name="dst" default=""/>
                        <parameter left="UnOp" right="" name="op" default=""/>
                        <parameter left="const Mask &amp;" right="" name="mask" default=""/>
                        <parameter left="cudaStream_t" right="" name="stream" default=""/>
                    </function>
                    <class threadsafety="unspecified" name="IsSimpleParameter" fullname="cv::cuda::device::IsSimpleParameter" href="cv-cuda-device-issimpleparameter.html" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="56">
                        <variable threadsafety="unspecified" name="value" fullname="cv::cuda::device::IsSimpleParameter::value" href="cv-cuda-device-issimpleparameter.html#value-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="59" type="const int" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="TypeTraits" fullname="cv::cuda::device::TypeTraits" href="cv-cuda-device-typetraits.html" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="62">
                        <typedef threadsafety="unspecified" name="NonConstType" fullname="cv::cuda::device::TypeTraits::NonConstType" href="cv-cuda-device-typetraits.html#NonConstType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="64"/>
                        <typedef threadsafety="unspecified" name="NonVolatileType" fullname="cv::cuda::device::TypeTraits::NonVolatileType" href="cv-cuda-device-typetraits.html#NonVolatileType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="65"/>
                        <typedef threadsafety="unspecified" name="ParameterType" fullname="cv::cuda::device::TypeTraits::ParameterType" href="cv-cuda-device-typetraits.html#ParameterType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="83"/>
                        <typedef threadsafety="unspecified" name="PointeeType" fullname="cv::cuda::device::TypeTraits::PointeeType" href="cv-cuda-device-typetraits.html#PointeeType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="67"/>
                        <typedef threadsafety="unspecified" name="ReferredType" fullname="cv::cuda::device::TypeTraits::ReferredType" href="cv-cuda-device-typetraits.html#ReferredType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="68"/>
                        <typedef threadsafety="unspecified" name="UnqualifiedType" fullname="cv::cuda::device::TypeTraits::UnqualifiedType" href="cv-cuda-device-typetraits.html#UnqualifiedType-typedef" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="66"/>
                        <variable threadsafety="unspecified" name="isArith" fullname="cv::cuda::device::TypeTraits::isArith" href="cv-cuda-device-typetraits.html#isArith-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="80" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isConst" fullname="cv::cuda::device::TypeTraits::isConst" href="cv-cuda-device-typetraits.html#isConst-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="70" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isFloat" fullname="cv::cuda::device::TypeTraits::isFloat" href="cv-cuda-device-typetraits.html#isFloat-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="79" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isIntegral" fullname="cv::cuda::device::TypeTraits::isIntegral" href="cv-cuda-device-typetraits.html#isIntegral-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="78" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isPointer" fullname="cv::cuda::device::TypeTraits::isPointer" href="cv-cuda-device-typetraits.html#isPointer-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="74" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isReference" fullname="cv::cuda::device::TypeTraits::isReference" href="cv-cuda-device-typetraits.html#isReference-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="73" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isSignedInt" fullname="cv::cuda::device::TypeTraits::isSignedInt" href="cv-cuda-device-typetraits.html#isSignedInt-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="77" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isUnsignedInt" fullname="cv::cuda::device::TypeTraits::isUnsignedInt" href="cv-cuda-device-typetraits.html#isUnsignedInt-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="76" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isVec" fullname="cv::cuda::device::TypeTraits::isVec" href="cv-cuda-device-typetraits.html#isVec-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="81" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="isVolatile" fullname="cv::cuda::device::TypeTraits::isVolatile" href="cv-cuda-device-typetraits.html#isVolatile-var" status="active" access="public" location="type_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/type_traits.hpp" lineno="71" type="const int" static="true"/>
                    </class>
                    <class threadsafety="unspecified" name="MaskCollection" fullname="cv::cuda::device::MaskCollection" href="cv-cuda-device-maskcollection.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="113">
                        <variable threadsafety="unspecified" name="curMask" fullname="cv::cuda::device::MaskCollection::curMask" href="cv-cuda-device-maskcollection.html#curMask-var" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="137" type="PtrStepb" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="SingleMaskChannels" fullname="cv::cuda::device::SingleMaskChannels" href="cv-cuda-device-singlemaskchannels.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="97">
                        <variable threadsafety="unspecified" name="channels" fullname="cv::cuda::device::SingleMaskChannels::channels" href="cv-cuda-device-singlemaskchannels.html#channels-var" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="110" type="int" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="ThrustAllocator" fullname="cv::cuda::device::ThrustAllocator" href="cv-cuda-device-thrustallocator.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="57">
                        <typedef threadsafety="unspecified" name="value_type" fullname="cv::cuda::device::ThrustAllocator::value_type" href="cv-cuda-device-thrustallocator.html#value_type-typedef" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="59"/>
                        <function threadsafety="unspecified" name="getAllocator" fullname="cv::cuda::device::ThrustAllocator::getAllocator" href="cv-cuda-device-thrustallocator.html#getAllocator" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="ThrustAllocator &amp;" signature="ThrustAllocator &amp; getAllocator()"/>
                        <function threadsafety="unspecified" name="setAllocator" fullname="cv::cuda::device::ThrustAllocator::setAllocator" href="cv-cuda-device-thrustallocator.html#setAllocator" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="64" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAllocator(ThrustAllocator *allocator)">
                            <parameter left="ThrustAllocator *" right="" name="allocator" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~ThrustAllocator" fullname="cv::cuda::device::ThrustAllocator::~ThrustAllocator" href="cv-cuda-device-thrustallocator.html#dtor.ThrustAllocator" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="60" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ThrustAllocator()"/>
                    </class>
                    <class threadsafety="unspecified" name="WithOutMask" fullname="cv::cuda::device::WithOutMask" href="cv-cuda-device-withoutmask.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/utility.hpp" lineno="140"/>
                    <class threadsafety="unspecified" name="HammingDist" fullname="cv::cuda::device::HammingDist" href="cv-cuda-device-hammingdist.html" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="133">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::HammingDist::result_type" href="cv-cuda-device-hammingdist.html#result_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="136"/>
                        <typedef threadsafety="unspecified" name="value_type" fullname="cv::cuda::device::HammingDist::value_type" href="cv-cuda-device-hammingdist.html#value_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="135"/>
                    </class>
                    <class threadsafety="unspecified" name="L1Dist" fullname="cv::cuda::device::L1Dist" href="cv-cuda-device-l1dist.html" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="58">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::L1Dist::result_type" href="cv-cuda-device-l1dist.html#result_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="61"/>
                        <typedef threadsafety="unspecified" name="value_type" fullname="cv::cuda::device::L1Dist::value_type" href="cv-cuda-device-l1dist.html#value_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="60"/>
                    </class>
                    <class threadsafety="unspecified" name="L2Dist" fullname="cv::cuda::device::L2Dist" href="cv-cuda-device-l2dist.html" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="107">
                        <typedef threadsafety="unspecified" name="result_type" fullname="cv::cuda::device::L2Dist::result_type" href="cv-cuda-device-l2dist.html#result_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="110"/>
                        <typedef threadsafety="unspecified" name="value_type" fullname="cv::cuda::device::L2Dist::value_type" href="cv-cuda-device-l2dist.html#value_type-typedef" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="109"/>
                    </class>
                    <class threadsafety="unspecified" name="VecDiffCachedRegister" fullname="cv::cuda::device::VecDiffCachedRegister" href="cv-cuda-device-vecdiffcachedregister.html" status="active" access="public" location="vec_distance.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_distance.hpp" lineno="203"/>
                    <namespace threadsafety="unspecified" name="vec_math_detail" fullname="cv::cuda::device::vec_math_detail" href="cv-cuda-device-vec-math-detail.html" status="active" access="public" location="vec_math.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/vec_math.hpp" lineno="60"/>
                    <class threadsafety="unspecified" name="Warp" fullname="cv::cuda::device::Warp" href="cv-cuda-device-warp.html" status="active" access="public" location="warp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/warp.hpp" lineno="54">
                        <variable threadsafety="unspecified" name="LOG_WARP_SIZE" fullname="cv::cuda::device::Warp::LOG_WARP_SIZE" href="cv-cuda-device-warp.html#LOG_WARP_SIZE-var" status="active" access="public" location="warp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/warp.hpp" lineno="58" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="STRIDE" fullname="cv::cuda::device::Warp::STRIDE" href="cv-cuda-device-warp.html#STRIDE-var" status="active" access="public" location="warp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/warp.hpp" lineno="61" type="const int" static="true"/>
                        <variable threadsafety="unspecified" name="WARP_SIZE" fullname="cv::cuda::device::Warp::WARP_SIZE" href="cv-cuda-device-warp.html#WARP_SIZE-var" status="active" access="public" location="warp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda/warp.hpp" lineno="59" type="const int" static="true"/>
                    </class>
                </namespace>
                <class threadsafety="unspecified" name="EventAccessor" fullname="cv::cuda::EventAccessor" href="cv-cuda-eventaccessor.html" status="active" access="public" location="cuda_stream_accessor.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_stream_accessor.hpp" lineno="75"/>
                <class threadsafety="unspecified" name="StreamAccessor" fullname="cv::cuda::StreamAccessor" href="cv-cuda-streamaccessor.html" status="active" access="public" location="cuda_stream_accessor.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_stream_accessor.hpp" lineno="67"/>
                <class threadsafety="unspecified" name="DevPtr" fullname="cv::cuda::DevPtr" href="cv-cuda-devptr.html" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="77">
                    <typedef threadsafety="unspecified" name="elem_type" fullname="cv::cuda::DevPtr::elem_type" href="cv-cuda-devptr.html#elem_type-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="79"/>
                    <typedef threadsafety="unspecified" name="index_type" fullname="cv::cuda::DevPtr::index_type" href="cv-cuda-devptr.html#index_type-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="80"/>
                    <function threadsafety="unspecified" name="DevPtr" fullname="cv::cuda::DevPtr::DevPtr" href="cv-cuda-devptr.html#DevPtr" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="86" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ DevPtr()"/>
                    <function threadsafety="unspecified" name="DevPtr" fullname="cv::cuda::DevPtr::DevPtr" href="cv-cuda-devptr.html#DevPtr-1" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="87" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ DevPtr(T *data_)">
                        <parameter left="T *" right="" name="data_" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="data" fullname="cv::cuda::DevPtr::data" href="cv-cuda-devptr.html#data-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="84" type="T *" static="false"/>
                    <variable threadsafety="unspecified" name="elem_size" fullname="cv::cuda::DevPtr::elem_size" href="cv-cuda-devptr.html#elem_size-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="82" type="const int" static="true"/>
                </class>
                <class threadsafety="unspecified" name="PtrStep" fullname="cv::cuda::PtrStep" href="cv-cuda-ptrstep.html" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="102" bases="cv::cuda::DevPtr">
                    <function threadsafety="unspecified" name="PtrStep" fullname="cv::cuda::PtrStep::PtrStep" href="cv-cuda-ptrstep.html#PtrStep" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="104" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrStep()"/>
                    <function threadsafety="unspecified" name="PtrStep" fullname="cv::cuda::PtrStep::PtrStep" href="cv-cuda-ptrstep.html#PtrStep-1" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="105" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrStep(T *data_, size_t step_)">
                        <parameter left="T *" right="" name="data_" default=""/>
                        <parameter left="size_t" right="" name="step_" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="step" fullname="cv::cuda::PtrStep::step" href="cv-cuda-ptrstep.html#step-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="107" type="size_t" static="false"/>
                </class>
                <class threadsafety="unspecified" name="PtrStepSz" fullname="cv::cuda::PtrStepSz" href="cv-cuda-ptrstepsz.html" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="116" bases="cv::cuda::PtrStep">
                    <function threadsafety="unspecified" name="PtrStepSz" fullname="cv::cuda::PtrStepSz::PtrStepSz" href="cv-cuda-ptrstepsz.html#PtrStepSz-2" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="123" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PtrStepSz(const PtrStepSz&lt;U&gt; &amp;d)">
                        <parameter left="const PtrStepSz&lt;U&gt; &amp;" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PtrStepSz" fullname="cv::cuda::PtrStepSz::PtrStepSz" href="cv-cuda-ptrstepsz.html#PtrStepSz" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="118" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrStepSz()"/>
                    <function threadsafety="unspecified" name="PtrStepSz" fullname="cv::cuda::PtrStepSz::PtrStepSz" href="cv-cuda-ptrstepsz.html#PtrStepSz-1" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="119" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrStepSz(int rows_, int cols_, T *data_, size_t step_)">
                        <parameter left="int" right="" name="rows_" default=""/>
                        <parameter left="int" right="" name="cols_" default=""/>
                        <parameter left="T *" right="" name="data_" default=""/>
                        <parameter left="size_t" right="" name="step_" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="cols" fullname="cv::cuda::PtrStepSz::cols" href="cv-cuda-ptrstepsz.html#cols-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="125" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="rows" fullname="cv::cuda::PtrStepSz::rows" href="cv-cuda-ptrstepsz.html#rows-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="126" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="PtrSz" fullname="cv::cuda::PtrSz" href="cv-cuda-ptrsz.html" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="94" bases="cv::cuda::DevPtr">
                    <function threadsafety="unspecified" name="PtrSz" fullname="cv::cuda::PtrSz::PtrSz" href="cv-cuda-ptrsz.html#PtrSz" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="96" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrSz()"/>
                    <function threadsafety="unspecified" name="PtrSz" fullname="cv::cuda::PtrSz::PtrSz" href="cv-cuda-ptrsz.html#PtrSz-1" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="97" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_CUDA_HOST_DEVICE__" signature="__CV_CUDA_HOST_DEVICE__ PtrSz(T *data_, size_t size_)">
                        <parameter left="T *" right="" name="data_" default=""/>
                        <parameter left="size_t" right="" name="size_" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="size" fullname="cv::cuda::PtrSz::size" href="cv-cuda-ptrsz.html#size-var" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="99" type="size_t" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="PtrStepSzb" fullname="cv::cuda::PtrStepSzb" href="cv-cuda.html#PtrStepSzb-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="129"/>
                <typedef threadsafety="unspecified" name="PtrStepSzf" fullname="cv::cuda::PtrStepSzf" href="cv-cuda.html#PtrStepSzf-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="131"/>
                <typedef threadsafety="unspecified" name="PtrStepSzi" fullname="cv::cuda::PtrStepSzi" href="cv-cuda.html#PtrStepSzi-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="132"/>
                <typedef threadsafety="unspecified" name="PtrStepSzus" fullname="cv::cuda::PtrStepSzus" href="cv-cuda.html#PtrStepSzus-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="130"/>
                <typedef threadsafety="unspecified" name="PtrStepb" fullname="cv::cuda::PtrStepb" href="cv-cuda.html#PtrStepb-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="134"/>
                <typedef threadsafety="unspecified" name="PtrStepf" fullname="cv::cuda::PtrStepf" href="cv-cuda.html#PtrStepf-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="136"/>
                <typedef threadsafety="unspecified" name="PtrStepi" fullname="cv::cuda::PtrStepi" href="cv-cuda.html#PtrStepi-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="137"/>
                <typedef threadsafety="unspecified" name="PtrStepus" fullname="cv::cuda::PtrStepus" href="cv-cuda.html#PtrStepus-typedef" status="active" access="public" location="cuda_types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda_types.hpp" lineno="135"/>
            </namespace>
            <namespace threadsafety="unspecified" name="cudev" fullname="cv::cudev" href="cv-cudev.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="614"/>
            <namespace threadsafety="unspecified" name="ipp" fullname="cv::ipp" href="cv-ipp.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="619">
                <function threadsafety="unspecified" name="useIPP_NE" fullname="cv::ipp::useIPP_NE" href="cv-ipp.html#useIPP_NE" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="635" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool useIPP_NE()"/>
                <function threadsafety="unspecified" name="setUseIPP_NE" fullname="cv::ipp::setUseIPP_NE" href="cv-ipp.html#setUseIPP_NE" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="636" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setUseIPP_NE(bool flag)">
                    <parameter left="bool" right="" name="flag" default=""/>
                </function>
            </namespace>
            <namespace threadsafety="unspecified" name="ogl" fullname="cv::ogl" href="cv-ogl.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="599">
                <namespace threadsafety="unspecified" name="ocl" fullname="cv::ogl::ocl" href="cv-ogl-ocl.html" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="517"/>
                <class threadsafety="unspecified" name="Arrays" fullname="cv::ogl::Arrays" href="cv-ogl-arrays.html" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="406">
                    <function threadsafety="unspecified" name="Arrays" fullname="cv::ogl::Arrays::Arrays" href="cv-ogl-arrays.html#Arrays" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="411" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Arrays()"/>
                    <function threadsafety="unspecified" name="release" fullname="cv::ogl::Arrays::release" href="cv-ogl-arrays.html#release" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="451" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="resetColorArray" fullname="cv::ogl::Arrays::resetColorArray" href="cv-ogl-arrays.html#resetColorArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="429" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetColorArray()"/>
                    <function threadsafety="unspecified" name="resetNormalArray" fullname="cv::ogl::Arrays::resetNormalArray" href="cv-ogl-arrays.html#resetNormalArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="438" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetNormalArray()"/>
                    <function threadsafety="unspecified" name="resetTexCoordArray" fullname="cv::ogl::Arrays::resetTexCoordArray" href="cv-ogl-arrays.html#resetTexCoordArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="447" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetTexCoordArray()"/>
                    <function threadsafety="unspecified" name="resetVertexArray" fullname="cv::ogl::Arrays::resetVertexArray" href="cv-ogl-arrays.html#resetVertexArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="420" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetVertexArray()"/>
                    <function threadsafety="unspecified" name="setAutoRelease" fullname="cv::ogl::Arrays::setAutoRelease" href="cv-ogl-arrays.html#setAutoRelease" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="456" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAutoRelease(bool flag)">
                        <parameter left="bool" right="" name="flag" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setColorArray" fullname="cv::ogl::Arrays::setColorArray" href="cv-ogl-arrays.html#setColorArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="425" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setColorArray(InputArray color)">
                        <parameter left="InputArray" right="" name="color" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setNormalArray" fullname="cv::ogl::Arrays::setNormalArray" href="cv-ogl-arrays.html#setNormalArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setNormalArray(InputArray normal)">
                        <parameter left="InputArray" right="" name="normal" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setTexCoordArray" fullname="cv::ogl::Arrays::setTexCoordArray" href="cv-ogl-arrays.html#setTexCoordArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="443" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setTexCoordArray(InputArray texCoord)">
                        <parameter left="InputArray" right="" name="texCoord" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setVertexArray" fullname="cv::ogl::Arrays::setVertexArray" href="cv-ogl-arrays.html#setVertexArray" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setVertexArray(InputArray vertex)">
                        <parameter left="InputArray" right="" name="vertex" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ogl::Arrays::empty" href="cv-ogl-arrays.html#empty" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="465" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::ogl::Arrays::size" href="cv-ogl-arrays.html#size" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="464" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
                    <function threadsafety="unspecified" name="bind" fullname="cv::ogl::Arrays::bind" href="cv-ogl-arrays.html#bind" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="460" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void bind() const"/>
                </class>
                <class threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer" href="cv-ogl-buffer.html" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="79">
                    <enum threadsafety="unspecified" name="Access" fullname="cv::ogl::Buffer::Access" href="cv-ogl-buffer.html#Access-enum" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="92">
                        <value name="READ_ONLY" value="0x88B8"/>
                        <value name="WRITE_ONLY" value="0x88B9"/>
                        <value name="READ_WRITE" value="0x88BA"/>
                    </enum>
                    <enum threadsafety="unspecified" name="Target" fullname="cv::ogl::Buffer::Target" href="cv-ogl-buffer.html#Target-enum" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="84">
                        <value name="ARRAY_BUFFER" value="0x8892"/>
                        <value name="ELEMENT_ARRAY_BUFFER" value="0x8893"/>
                        <value name="PIXEL_PACK_BUFFER" value="0x88EB"/>
                        <value name="PIXEL_UNPACK_BUFFER" value="0x88EC"/>
                    </enum>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="104" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer()"/>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer-5" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="145" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(InputArray arr, Target target, bool autoRelease)">
                        <parameter left="InputArray" right="" name="arr" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer-4" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="138" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(Size asize, int atype, Target target, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer-2" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="121" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(Size asize, int atype, unsigned int abufId, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="unsigned int" right="" name="abufId" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer-3" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="130" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(int arows, int acols, int atype, Target target, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Buffer" fullname="cv::ogl::Buffer::Buffer" href="cv-ogl-buffer.html#Buffer-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="113" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(int arows, int acols, int atype, unsigned int abufId, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="unsigned int" right="" name="abufId" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="mapHost" fullname="cv::ogl::Buffer::mapHost" href="cv-ogl-buffer.html#mapHost" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="236" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat mapHost(Access access)">
                        <parameter left="Access" right="" name="access" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapDevice" fullname="cv::ogl::Buffer::mapDevice" href="cv-ogl-buffer.html#mapDevice" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="243" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cuda::GpuMat" signature="cuda::GpuMat mapDevice()"/>
                    <function threadsafety="unspecified" name="mapDevice" fullname="cv::ogl::Buffer::mapDevice" href="cv-ogl-buffer.html#mapDevice-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="252" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cuda::GpuMat" signature="cuda::GpuMat mapDevice(cuda::Stream &amp;stream)">
                        <parameter left="cuda::Stream &amp;" right="" name="stream" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copyFrom" fullname="cv::ogl::Buffer::copyFrom" href="cv-ogl-buffer.html#copyFrom" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="187" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyFrom(InputArray arr, Target target, bool autoRelease)">
                        <parameter left="InputArray" right="" name="arr" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="copyFrom" fullname="cv::ogl::Buffer::copyFrom" href="cv-ogl-buffer.html#copyFrom-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="190" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyFrom(InputArray arr, cuda::Stream &amp;stream, Target target, bool autoRelease)">
                        <parameter left="InputArray" right="" name="arr" default=""/>
                        <parameter left="cuda::Stream &amp;" right="" name="stream" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ogl::Buffer::create" href="cv-ogl-buffer.html#create-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="163" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size asize, int atype, Target target, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ogl::Buffer::create" href="cv-ogl-buffer.html#create" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int arows, int acols, int atype, Target target, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="int" right="" name="atype" default=""/>
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::ogl::Buffer::release" href="cv-ogl-buffer.html#release" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="setAutoRelease" fullname="cv::ogl::Buffer::setAutoRelease" href="cv-ogl-buffer.html#setAutoRelease" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="180" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAutoRelease(bool flag)">
                        <parameter left="bool" right="" name="flag" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="unbind" fullname="cv::ogl::Buffer::unbind" href="cv-ogl-buffer.html#unbind" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="219" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unbind(Target target)">
                        <parameter left="Target" right="" name="target" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="unmapDevice" fullname="cv::ogl::Buffer::unmapDevice" href="cv-ogl-buffer.html#unmapDevice" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="244" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unmapDevice()"/>
                    <function threadsafety="unspecified" name="unmapDevice" fullname="cv::ogl::Buffer::unmapDevice" href="cv-ogl-buffer.html#unmapDevice-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="256" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unmapDevice(cuda::Stream &amp;stream)">
                        <parameter left="cuda::Stream &amp;" right="" name="stream" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="unmapHost" fullname="cv::ogl::Buffer::unmapHost" href="cv-ogl-buffer.html#unmapHost" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="240" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unmapHost()"/>
                    <function threadsafety="unspecified" name="clone" fullname="cv::ogl::Buffer::clone" href="cv-ogl-buffer.html#clone" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="207" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Buffer" signature="Buffer clone(Target target, bool autoRelease) const">
                        <parameter left="Target" right="" name="target" default="ARRAY_BUFFER"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="size" fullname="cv::ogl::Buffer::size" href="cv-ogl-buffer.html#size" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="260" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ogl::Buffer::empty" href="cv-ogl-buffer.html#empty" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="261" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="channels" fullname="cv::ogl::Buffer::channels" href="cv-ogl-buffer.html#channels" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="265" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                    <function threadsafety="unspecified" name="cols" fullname="cv::ogl::Buffer::cols" href="cv-ogl-buffer.html#cols" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="259" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols() const"/>
                    <function threadsafety="unspecified" name="depth" fullname="cv::ogl::Buffer::depth" href="cv-ogl-buffer.html#depth" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="264" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                    <function threadsafety="unspecified" name="elemSize" fullname="cv::ogl::Buffer::elemSize" href="cv-ogl-buffer.html#elemSize" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="266" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int elemSize() const"/>
                    <function threadsafety="unspecified" name="elemSize1" fullname="cv::ogl::Buffer::elemSize1" href="cv-ogl-buffer.html#elemSize1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="267" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int elemSize1() const"/>
                    <function threadsafety="unspecified" name="rows" fullname="cv::ogl::Buffer::rows" href="cv-ogl-buffer.html#rows" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="258" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows() const"/>
                    <function threadsafety="unspecified" name="type" fullname="cv::ogl::Buffer::type" href="cv-ogl-buffer.html#type" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="263" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                    <function threadsafety="unspecified" name="bufId" fullname="cv::ogl::Buffer::bufId" href="cv-ogl-buffer.html#bufId" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="270" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int bufId() const"/>
                    <function threadsafety="unspecified" name="bind" fullname="cv::ogl::Buffer::bind" href="cv-ogl-buffer.html#bind" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="213" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void bind(Target target) const">
                        <parameter left="Target" right="" name="target" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copyTo" fullname="cv::ogl::Buffer::copyTo" href="cv-ogl-buffer.html#copyTo" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="197" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray arr) const">
                        <parameter left="OutputArray" right="" name="arr" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copyTo" fullname="cv::ogl::Buffer::copyTo" href="cv-ogl-buffer.html#copyTo-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="200" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray arr, cuda::Stream &amp;stream) const">
                        <parameter left="OutputArray" right="" name="arr" default=""/>
                        <parameter left="cuda::Stream &amp;" right="" name="stream" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D" href="cv-ogl-texture2d.html" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="283">
                    <enum threadsafety="unspecified" name="Format" fullname="cv::ogl::Texture2D::Format" href="cv-ogl-texture2d.html#Format-enum" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="288">
                        <value name="NONE" value="0"/>
                        <value name="DEPTH_COMPONENT" value="0x1902"/>
                        <value name="RGB" value="0x1907"/>
                        <value name="RGBA" value="0x1908"/>
                    </enum>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="301" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D()"/>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D-5" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="328" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(InputArray arr, bool autoRelease)">
                        <parameter left="InputArray" right="" name="arr" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D-4" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="322" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(Size asize, Format aformat, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D-2" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="307" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(Size asize, Format aformat, unsigned int atexId, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="unsigned int" right="" name="atexId" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D-3" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="315" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(int arows, int acols, Format aformat, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="Texture2D" fullname="cv::ogl::Texture2D::Texture2D" href="cv-ogl-texture2d.html#Texture2D-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="304" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(int arows, int acols, Format aformat, unsigned int atexId, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="unsigned int" right="" name="atexId" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="copyFrom" fullname="cv::ogl::Texture2D::copyFrom" href="cv-ogl-texture2d.html#copyFrom" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="368" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyFrom(InputArray arr, bool autoRelease)">
                        <parameter left="InputArray" right="" name="arr" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ogl::Texture2D::create" href="cv-ogl-texture2d.html#create-1" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="343" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size asize, Format aformat, bool autoRelease)">
                        <parameter left="Size" right="" name="asize" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ogl::Texture2D::create" href="cv-ogl-texture2d.html#create" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="337" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int arows, int acols, Format aformat, bool autoRelease)">
                        <parameter left="int" right="" name="arows" default=""/>
                        <parameter left="int" right="" name="acols" default=""/>
                        <parameter left="Format" right="" name="aformat" default=""/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::ogl::Texture2D::release" href="cv-ogl-texture2d.html#release" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="349" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="setAutoRelease" fullname="cv::ogl::Texture2D::setAutoRelease" href="cv-ogl-texture2d.html#setAutoRelease" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="361" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAutoRelease(bool flag)">
                        <parameter left="bool" right="" name="flag" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="format" fullname="cv::ogl::Texture2D::format" href="cv-ogl-texture2d.html#format" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="388" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Format" signature="Format format() const"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::ogl::Texture2D::size" href="cv-ogl-texture2d.html#size" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="385" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ogl::Texture2D::empty" href="cv-ogl-texture2d.html#empty" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="386" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="cols" fullname="cv::ogl::Texture2D::cols" href="cv-ogl-texture2d.html#cols" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="384" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols() const"/>
                    <function threadsafety="unspecified" name="rows" fullname="cv::ogl::Texture2D::rows" href="cv-ogl-texture2d.html#rows" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="383" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows() const"/>
                    <function threadsafety="unspecified" name="texId" fullname="cv::ogl::Texture2D::texId" href="cv-ogl-texture2d.html#texId" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="391" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int texId() const"/>
                    <function threadsafety="unspecified" name="bind" fullname="cv::ogl::Texture2D::bind" href="cv-ogl-texture2d.html#bind" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="381" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void bind() const"/>
                    <function threadsafety="unspecified" name="copyTo" fullname="cv::ogl::Texture2D::copyTo" href="cv-ogl-texture2d.html#copyTo" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="377" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray arr, int ddepth, bool autoRelease) const">
                        <parameter left="OutputArray" right="" name="arr" default=""/>
                        <parameter left="int" right="" name="ddepth" default="CV_32F"/>
                        <parameter left="bool" right="" name="autoRelease" default="false"/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="RenderModes" fullname="cv::ogl::RenderModes" href="cv-ogl.html#RenderModes-enum" status="active" access="public" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="478">
                    <value name="POINTS" value="0x0000"/>
                    <value name="LINES" value="0x0001"/>
                    <value name="LINE_LOOP" value="0x0002"/>
                    <value name="LINE_STRIP" value="0x0003"/>
                    <value name="TRIANGLES" value="0x0004"/>
                    <value name="TRIANGLE_STRIP" value="0x0005"/>
                    <value name="TRIANGLE_FAN" value="0x0006"/>
                    <value name="QUADS" value="0x0007"/>
                    <value name="QUAD_STRIP" value="0x0008"/>
                    <value name="POLYGON" value="0x0009"/>
                </enum>
            </namespace>
            <class threadsafety="unspecified" name="Hamming" fullname="cv::Hamming" href="cv-hamming.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="382">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cv::Hamming::ResultType" href="cv-hamming.html#ResultType-typedef" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="386"/>
                <typedef threadsafety="unspecified" name="ValueType" fullname="cv::Hamming::ValueType" href="cv-hamming.html#ValueType-typedef" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="385"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Hamming::operator()" href="cv-hamming.html#operator-28-29" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="390" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const unsigned char *a, const unsigned char *b, int size) const">
                    <parameter left="const unsigned char *" right="" name="a" default=""/>
                    <parameter left="const unsigned char *" right="" name="b" default=""/>
                    <parameter left="int" right="" name="size" default=""/>
                </function>
                <variable threadsafety="unspecified" name="normType" fullname="cv::Hamming::normType" href="cv-hamming.html#normType-var" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="384" type="const NormTypes = NORM_HAMMING" static="true"/>
            </class>
            <enum threadsafety="unspecified" name="BorderTypes" fullname="cv::BorderTypes" href="cv.html#BorderTypes-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="268">
                <value name="BORDER_CONSTANT" value="0"/>
                <value name="BORDER_REPLICATE" value="1"/>
                <value name="BORDER_REFLECT" value="2"/>
                <value name="BORDER_WRAP" value="3"/>
                <value name="BORDER_REFLECT_101" value="4"/>
                <value name="BORDER_TRANSPARENT" value="5"/>
                <value name="BORDER_REFLECT101" value="BORDER_REFLECT_101"/>
                <value name="BORDER_DEFAULT" value="BORDER_REFLECT_101"/>
                <value name="BORDER_ISOLATED" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="CmpTypes" fullname="cv::CmpTypes" href="cv.html#CmpTypes-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="211">
                <value name="CMP_EQ" value="0"/>
                <value name="CMP_GT" value="1"/>
                <value name="CMP_GE" value="2"/>
                <value name="CMP_LT" value="3"/>
                <value name="CMP_LE" value="4"/>
                <value name="CMP_NE" value="5"/>
            </enum>
            <enum threadsafety="unspecified" name="DecompTypes" fullname="cv::DecompTypes" href="cv.html#DecompTypes-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="133">
                <value name="DECOMP_LU" value="0"/>
                <value name="DECOMP_SVD" value="1"/>
                <value name="DECOMP_EIG" value="2"/>
                <value name="DECOMP_CHOLESKY" value="3"/>
                <value name="DECOMP_QR" value="4"/>
                <value name="DECOMP_NORMAL" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="DftFlags" fullname="cv::DftFlags" href="cv.html#DftFlags-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="225">
                <value name="DFT_INVERSE" value="1"/>
                <value name="DFT_SCALE" value="2"/>
                <value name="DFT_ROWS" value="4"/>
                <value name="DFT_COMPLEX_OUTPUT" value="16"/>
                <value name="DFT_REAL_OUTPUT" value="32"/>
                <value name="DFT_COMPLEX_INPUT" value="64"/>
                <value name="DCT_INVERSE" value="DFT_INVERSE"/>
                <value name="DCT_ROWS" value="DFT_ROWS"/>
            </enum>
            <enum threadsafety="unspecified" name="GemmFlags" fullname="cv::GemmFlags" href="cv.html#GemmFlags-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="220">
                <value name="GEMM_1_T" value="1"/>
                <value name="GEMM_2_T" value="2"/>
                <value name="GEMM_3_T" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="NormTypes" fullname="cv::NormTypes" href="cv.html#NormTypes-enum" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="159">
                <value name="NORM_INF" value="1"/>
                <value name="NORM_L1" value="2"/>
                <value name="NORM_L2" value="4"/>
                <value name="NORM_L2SQR" value="5"/>
                <value name="NORM_HAMMING" value="6"/>
                <value name="NORM_HAMMING2" value="7"/>
                <value name="NORM_TYPE_MASK" value="7"/>
                <value name="NORM_RELATIVE" value="8"/>
                <value name="NORM_MINMAX" value="32"/>
            </enum>
            <typedef threadsafety="unspecified" name="HammingLUT" fullname="cv::HammingLUT" href="cv.html#HammingLUT-typedef" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="393"/>
            <typedef threadsafety="unspecified" name="MatND" fullname="cv::MatND" href="cv.html#MatND-typedef" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="586"/>
            <function threadsafety="unspecified" name="Mat" fullname="cv::Mat" href="cv.html#Mat" status="active" access="public" location="cuda.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cuda.inl.hpp" lineno="626" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const cuda::GpuMat &amp;m)">
                <parameter left="const cuda::GpuMat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="normInf" fullname="cv::normInf" href="cv.html#normInf-1" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="520" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normInf(const _Tp *a, const _Tp *b, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="const _Tp *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normInf" fullname="cv::normInf" href="cv.html#normInf" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="440" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normInf(const _Tp *a, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL1" fullname="cv::normL1" href="cv.html#normL1-1" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="480" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL1(const _Tp *a, const _Tp *b, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="const _Tp *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL1" fullname="cv::normL1" href="cv.html#normL1" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="423" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL1(const _Tp *a, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-1" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="449" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL2Sqr(const _Tp *a, const _Tp *b, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="const _Tp *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="403" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL2Sqr(const _Tp *a, int n)">
                <parameter left="const _Tp *" right="" name="a" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv_abs" fullname="cv::cv_abs" href="cv.html#cv_abs" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="397" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp cv_abs(_Tp x)">
                <parameter left="_Tp" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL1" fullname="cv::normL1" href="cv.html#normL1-2" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="500" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float normL1(const float *a, const float *b, int n)">
                <parameter left="const float *" right="" name="a" default=""/>
                <parameter left="const float *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-2" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="469" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float normL2Sqr(const float *a, const float *b, int n)">
                <parameter left="const float *" right="" name="a" default=""/>
                <parameter left="const float *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv_abs" fullname="cv::cv_abs" href="cv.html#cv_abs-2" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="399" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cv_abs(schar x)">
                <parameter left="schar" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv_abs" fullname="cv::cv_abs" href="cv.html#cv_abs-4" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="401" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cv_abs(short x)">
                <parameter left="short" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv_abs" fullname="cv::cv_abs" href="cv.html#cv_abs-1" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="398" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cv_abs(uchar x)">
                <parameter left="uchar" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv_abs" fullname="cv::cv_abs" href="cv.html#cv_abs-3" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="400" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cv_abs(ushort x)">
                <parameter left="ushort" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL1" fullname="cv::normL1" href="cv.html#normL1-3" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/core/base.hpp" lineno="510" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int normL1(const uchar *a, const uchar *b, int n)">
                <parameter left="const uchar *" right="" name="a" default=""/>
                <parameter left="const uchar *" right="" name="b" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <namespace threadsafety="unspecified" name="utils" fullname="cv::utils" href="cv-utils.html" status="active" access="public" location="bindings_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bindings_utils.hpp" lineno="11">
                <class threadsafety="unspecified" name="AllocatorStatisticsInterface" fullname="cv::utils::AllocatorStatisticsInterface" href="cv-utils-allocatorstatisticsinterface.html" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="12">
                    <function threadsafety="unspecified" name="AllocatorStatisticsInterface" fullname="cv::utils::AllocatorStatisticsInterface::AllocatorStatisticsInterface" href="cv-utils-allocatorstatisticsinterface.html#AllocatorStatisticsInterface" status="active" access="protected" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="15" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AllocatorStatisticsInterface()"/>
                    <function threadsafety="unspecified" name="resetPeakUsage" fullname="cv::utils::AllocatorStatisticsInterface::resetPeakUsage" href="cv-utils-allocatorstatisticsinterface.html#resetPeakUsage" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="24" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetPeakUsage() = 0"/>
                    <function threadsafety="unspecified" name="~AllocatorStatisticsInterface" fullname="cv::utils::AllocatorStatisticsInterface::~AllocatorStatisticsInterface" href="cv-utils-allocatorstatisticsinterface.html#dtor.AllocatorStatisticsInterface" status="active" access="protected" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="16" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~AllocatorStatisticsInterface()"/>
                    <function threadsafety="unspecified" name="getCurrentUsage" fullname="cv::utils::AllocatorStatisticsInterface::getCurrentUsage" href="cv-utils-allocatorstatisticsinterface.html#getCurrentUsage" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="18" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t getCurrentUsage() const = 0"/>
                    <function threadsafety="unspecified" name="getNumberOfAllocations" fullname="cv::utils::AllocatorStatisticsInterface::getNumberOfAllocations" href="cv-utils-allocatorstatisticsinterface.html#getNumberOfAllocations" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="20" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t getNumberOfAllocations() const = 0"/>
                    <function threadsafety="unspecified" name="getPeakUsage" fullname="cv::utils::AllocatorStatisticsInterface::getPeakUsage" href="cv-utils-allocatorstatisticsinterface.html#getPeakUsage" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="21" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t getPeakUsage() const = 0"/>
                    <function threadsafety="unspecified" name="getTotalUsage" fullname="cv::utils::AllocatorStatisticsInterface::getTotalUsage" href="cv-utils-allocatorstatisticsinterface.html#getTotalUsage" status="active" access="public" location="allocator_stats.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.hpp" lineno="19" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t getTotalUsage() const = 0"/>
                </class>
                <class threadsafety="unspecified" name="AllocatorStatistics" fullname="cv::utils::AllocatorStatistics" href="cv-utils-allocatorstatistics.html" status="active" access="public" location="allocator_stats.impl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.impl.hpp" lineno="43" bases="cv::utils::AllocatorStatisticsInterface">
                    <typedef threadsafety="unspecified" name="counter_t" fullname="cv::utils::AllocatorStatistics::counter_t" href="cv-utils-allocatorstatistics.html#counter_t-typedef" status="active" access="protected" location="allocator_stats.impl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.impl.hpp" lineno="111"/>
                    <function threadsafety="unspecified" name="AllocatorStatistics" fullname="cv::utils::AllocatorStatistics::AllocatorStatistics" href="cv-utils-allocatorstatistics.html#AllocatorStatistics" status="active" access="public" location="allocator_stats.impl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/allocator_stats.impl.hpp" lineno="114" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AllocatorStatistics()"/>
                </class>
                <namespace threadsafety="unspecified" name="fs" fullname="cv::utils::fs" href="cv-utils-fs.html" status="active" access="public" location="filesystem.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/filesystem.hpp" lineno="8"/>
                <namespace threadsafety="unspecified" name="logging" fullname="cv::utils::logging" href="cv-utils-logging.html" status="active" access="public" location="logger.defines.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logger.defines.hpp" lineno="22">
                    <enum threadsafety="unspecified" name="LogLevel" fullname="cv::utils::logging::LogLevel" href="cv-utils-logging.html#LogLevel-enum" status="active" access="public" location="logger.defines.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logger.defines.hpp" lineno="25">
                        <value name="LOG_LEVEL_SILENT" value="0"/>
                        <value name="LOG_LEVEL_FATAL" value="1"/>
                        <value name="LOG_LEVEL_ERROR" value="2"/>
                        <value name="LOG_LEVEL_WARNING" value="3"/>
                        <value name="LOG_LEVEL_INFO" value="4"/>
                        <value name="LOG_LEVEL_DEBUG" value="5"/>
                        <value name="LOG_LEVEL_VERBOSE" value="6"/>
                        <value name="ENUM_LOG_LEVEL_FORCE_INT" value="INT_MAX"/>
                    </enum>
                    <namespace threadsafety="unspecified" name="internal" fullname="cv::utils::logging::internal" href="cv-utils-logging-internal.html" status="active" access="public" location="logger.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logger.hpp" lineno="35"/>
                    <class threadsafety="unspecified" name="LogTagAuto" fullname="cv::utils::logging::LogTagAuto" href="cv-utils-logging-logtagauto.html" status="active" access="public" location="logger.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logger.hpp" lineno="48" bases="cv::utils::logging::LogTag">
                        <function threadsafety="unspecified" name="LogTagAuto" fullname="cv::utils::logging::LogTagAuto::LogTagAuto" href="cv-utils-logging-logtagauto.html#LogTagAuto" status="active" access="public" location="logger.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logger.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LogTagAuto(const char *_name, LogLevel _level)">
                            <parameter left="const char *" right="" name="_name" default=""/>
                            <parameter left="LogLevel" right="" name="_level" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="LogTag" fullname="cv::utils::logging::LogTag" href="cv-utils-logging-logtag.html" status="active" access="public" location="logtag.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logtag.hpp" lineno="15">
                        <function threadsafety="unspecified" name="LogTag" fullname="cv::utils::logging::LogTag::LogTag" href="cv-utils-logging-logtag.html#LogTag" status="active" access="public" location="logtag.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logtag.hpp" lineno="20" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LogTag(const char *_name, LogLevel _level)">
                            <parameter left="const char *" right="" name="_name" default=""/>
                            <parameter left="LogLevel" right="" name="_level" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="level" fullname="cv::utils::logging::LogTag::level" href="cv-utils-logging-logtag.html#level-var" status="active" access="public" location="logtag.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logtag.hpp" lineno="18" type="LogLevel" static="false"/>
                        <variable threadsafety="unspecified" name="name" fullname="cv::utils::logging::LogTag::name" href="cv-utils-logging-logtag.html#name-var" status="active" access="public" location="logtag.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/logtag.hpp" lineno="17" type="const char *" static="false"/>
                    </class>
                </namespace>
                <namespace threadsafety="unspecified" name="trace" fullname="cv::utils::trace" href="cv-utils-trace.html" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="12">
                    <namespace threadsafety="unspecified" name="details" fullname="cv::utils::trace::details" href="cv-utils-trace-details.html" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="42">
                        <class threadsafety="unspecified" name="Region" fullname="cv::utils::trace::details::Region" href="cv-utils-trace-details-region.html" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="67">
                            <class threadsafety="unspecified" name="LocationStaticStorage" fullname="cv::utils::trace::details::Region::LocationStaticStorage" href="cv-utils-trace-details-region-locationstaticstorage.html" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="71">
                                <variable threadsafety="unspecified" name="filename" fullname="cv::utils::trace::details::Region::LocationStaticStorage::filename" href="cv-utils-trace-details-region-locationstaticstorage.html#filename-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="75" type="const char *" static="false"/>
                                <variable threadsafety="unspecified" name="flags" fullname="cv::utils::trace::details::Region::LocationStaticStorage::flags" href="cv-utils-trace-details-region-locationstaticstorage.html#flags-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="77" type="int" static="false"/>
                                <variable threadsafety="unspecified" name="line" fullname="cv::utils::trace::details::Region::LocationStaticStorage::line" href="cv-utils-trace-details-region-locationstaticstorage.html#line-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="76" type="int" static="false"/>
                                <variable threadsafety="unspecified" name="name" fullname="cv::utils::trace::details::Region::LocationStaticStorage::name" href="cv-utils-trace-details-region-locationstaticstorage.html#name-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="74" type="const char *" static="false"/>
                                <variable threadsafety="unspecified" name="ppExtra" fullname="cv::utils::trace::details::Region::LocationStaticStorage::ppExtra" href="cv-utils-trace-details-region-locationstaticstorage.html#ppExtra-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="73" type="LocationExtraData **" static="false"/>
                            </class>
                            <function threadsafety="unspecified" name="operator=" fullname="cv::utils::trace::details::Region::operator=" href="cv-utils-trace-details-region.html#operator-eq" status="active" access="private" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="98" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Region &amp;" signature="Region &amp; operator=(const Region &amp;)">
                                <parameter left="const Region &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="Region" fullname="cv::utils::trace::details::Region::Region" href="cv-utils-trace-details-region.html#Region" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="80" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Region(const LocationStaticStorage &amp;location)">
                                <parameter left="const LocationStaticStorage &amp;" right="" name="location" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="Region" fullname="cv::utils::trace::details::Region::Region" href="cv-utils-trace-details-region.html#Region-1" status="active" access="private" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="97" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Region(const Region &amp;)">
                                <parameter left="const Region &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="destroy" fullname="cv::utils::trace::details::Region::destroy" href="cv-utils-trace-details-region.html#destroy" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void destroy()"/>
                            <function threadsafety="unspecified" name="~Region" fullname="cv::utils::trace::details::Region::~Region" href="cv-utils-trace-details-region.html#dtor.Region" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="81" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Region()"/>
                            <function threadsafety="unspecified" name="isActive" fullname="cv::utils::trace::details::Region::isActive" href="cv-utils-trace-details-region.html#isActive" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="93" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isActive() const"/>
                            <variable threadsafety="unspecified" name="implFlags" fullname="cv::utils::trace::details::Region::implFlags" href="cv-utils-trace-details-region.html#implFlags-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="91" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="pImpl" fullname="cv::utils::trace::details::Region::pImpl" href="cv-utils-trace-details-region.html#pImpl-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="90" type="Impl *" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="TraceArg" fullname="cv::utils::trace::details::TraceArg" href="cv-utils-trace-details-tracearg.html" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="119">
                            <variable threadsafety="unspecified" name="flags" fullname="cv::utils::trace::details::TraceArg::flags" href="cv-utils-trace-details-tracearg.html#flags-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="124" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="name" fullname="cv::utils::trace::details::TraceArg::name" href="cv-utils-trace-details-tracearg.html#name-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="123" type="const char *" static="false"/>
                            <variable threadsafety="unspecified" name="ppExtra" fullname="cv::utils::trace::details::TraceArg::ppExtra" href="cv-utils-trace-details-tracearg.html#ppExtra-var" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="122" type="ExtraData **" static="false"/>
                        </class>
                        <enum threadsafety="unspecified" name="RegionLocationFlag" fullname="cv::utils::trace::details::RegionLocationFlag" href="cv-utils-trace-details.html#RegionLocationFlag-enum" status="active" access="public" location="trace.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/trace.hpp" lineno="102">
                            <value name="REGION_FLAG_FUNCTION" value="( 1&lt;&lt;0 )"/>
                            <value name="REGION_FLAG_APP_CODE" value="( 1&lt;&lt;1 )"/>
                            <value name="REGION_FLAG_SKIP_NESTED" value="( 1&lt;&lt;2 )"/>
                            <value name="REGION_FLAG_IMPL_IPP" value="( 1&lt;&lt;16 )"/>
                            <value name="REGION_FLAG_IMPL_OPENCL" value="( 2&lt;&lt;16 )"/>
                            <value name="REGION_FLAG_IMPL_OPENVX" value="( 3&lt;&lt;16 )"/>
                            <value name="REGION_FLAG_IMPL_MASK" value="( 15&lt;&lt;16 )"/>
                            <value name="REGION_FLAG_REGION_FORCE" value="( 1&lt;&lt;30 )"/>
                            <value name="REGION_FLAG_REGION_NEXT" value="( 1&lt;&lt;31 )"/>
                            <value name="ENUM_REGION_FLAG_FORCE_INT" value="INT_MAX"/>
                        </enum>
                    </namespace>
                </namespace>
            </namespace>
            <class threadsafety="unspecified" name="BufferPoolController" fullname="cv::BufferPoolController" href="cv-bufferpoolcontroller.html" status="active" access="public" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="21">
                <function threadsafety="unspecified" name="freeAllReservedBuffers" fullname="cv::BufferPoolController::freeAllReservedBuffers" href="cv-bufferpoolcontroller.html#freeAllReservedBuffers" status="active" access="public" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="29" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void freeAllReservedBuffers() = 0"/>
                <function threadsafety="unspecified" name="setMaxReservedSize" fullname="cv::BufferPoolController::setMaxReservedSize" href="cv-bufferpoolcontroller.html#setMaxReservedSize" status="active" access="public" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="28" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaxReservedSize(size_t size) = 0">
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="~BufferPoolController" fullname="cv::BufferPoolController::~BufferPoolController" href="cv-bufferpoolcontroller.html#dtor.BufferPoolController" status="active" access="protected" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="24" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BufferPoolController()"/>
                <function threadsafety="unspecified" name="getMaxReservedSize" fullname="cv::BufferPoolController::getMaxReservedSize" href="cv-bufferpoolcontroller.html#getMaxReservedSize" status="active" access="public" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="27" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t getMaxReservedSize() const = 0"/>
                <function threadsafety="unspecified" name="getReservedSize" fullname="cv::BufferPoolController::getReservedSize" href="cv-bufferpoolcontroller.html#getReservedSize" status="active" access="public" location="bufferpool.hpp" filepath="/usr/local/include/opencv4/opencv2/core/bufferpool.hpp" lineno="26" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t getReservedSize() const = 0"/>
            </class>
            <namespace threadsafety="unspecified" name="detail" fullname="cv::detail" href="cv-detail.html" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="20">
                <class threadsafety="unspecified" name="CheckContext" fullname="cv::detail::CheckContext" href="cv-detail-checkcontext.html" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="39">
                    <variable threadsafety="unspecified" name="file" fullname="cv::detail::CheckContext::file" href="cv-detail-checkcontext.html#file-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="41" type="const char *" static="false"/>
                    <variable threadsafety="unspecified" name="func" fullname="cv::detail::CheckContext::func" href="cv-detail-checkcontext.html#func-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="40" type="const char *" static="false"/>
                    <variable threadsafety="unspecified" name="line" fullname="cv::detail::CheckContext::line" href="cv-detail-checkcontext.html#line-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="42" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="message" fullname="cv::detail::CheckContext::message" href="cv-detail-checkcontext.html#message-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="44" type="const char *" static="false"/>
                    <variable threadsafety="unspecified" name="p1_str" fullname="cv::detail::CheckContext::p1_str" href="cv-detail-checkcontext.html#p1_str-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="45" type="const char *" static="false"/>
                    <variable threadsafety="unspecified" name="p2_str" fullname="cv::detail::CheckContext::p2_str" href="cv-detail-checkcontext.html#p2_str-var" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="46" type="const char *" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="TestOp" fullname="cv::detail::TestOp" href="cv-detail.html#TestOp-enum" status="active" access="public" location="check.hpp" filepath="/usr/local/include/opencv4/opencv2/core/check.hpp" lineno="28">
                    <value name="TEST_CUSTOM" value="0"/>
                    <value name="TEST_EQ" value="1"/>
                    <value name="TEST_NE" value="2"/>
                    <value name="TEST_LE" value="3"/>
                    <value name="TEST_LT" value="4"/>
                    <value name="TEST_GE" value="5"/>
                    <value name="TEST_GT" value="6"/>
                    <value name="CV__LAST_TEST_OP" value="7"/>
                </enum>
                <function threadsafety="unspecified" name="createFromAxisRot" fullname="cv::detail::createFromAxisRot" href="cv-detail.html#createFromAxisRot" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="871" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromAxisRot(int axis, const T theta)">
                    <parameter left="int" right="" name="axis" default=""/>
                    <parameter left="const T" right="" name="theta" default=""/>
                </function>
                <function threadsafety="unspecified" name="isIntAngleType" fullname="cv::detail::isIntAngleType" href="cv-detail.html#isIntAngleType" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="883" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isIntAngleType(QuatEnum::EulerAnglesType eulerAnglesType)">
                    <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
                </function>
                <function threadsafety="unspecified" name="isTaitBryan" fullname="cv::detail::isTaitBryan" href="cv-detail.html#isTaitBryan" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="888" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isTaitBryan(QuatEnum::EulerAnglesType eulerAnglesType)">
                    <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
                </function>
                <class threadsafety="unspecified" name="get_in" fullname="cv::detail::get_in" href="cv-detail-get-in.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="203">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::get_in::get" href="cv-detail-get-in.html#get" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="205" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(GCPUContext &amp;ctx, int idx)">
                        <parameter left="GCPUContext &amp;" right="" name="ctx" default=""/>
                        <parameter left="int" right="" name="idx" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="tracked_cv_mat" fullname="cv::detail::tracked_cv_mat" href="cv-detail-tracked-cv-mat.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="208">
                    <function threadsafety="unspecified" name="operator cv::Mat &amp;" fullname="cv::detail::tracked_cv_mat::operator cv::Mat &amp;" href="cv-detail-tracked-cv-mat.html#operator-cv::Mat--and" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator cv::Mat &amp;()"/>
                    <function threadsafety="unspecified" name="tracked_cv_mat" fullname="cv::detail::tracked_cv_mat::tracked_cv_mat" href="cv-detail-tracked-cv-mat.html#tracked_cv_mat" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="209" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="tracked_cv_mat(cv::Mat &amp;m)">
                        <parameter left="cv::Mat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="validate" fullname="cv::detail::tracked_cv_mat::validate" href="cv-detail-tracked-cv-mat.html#validate" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void validate() const"/>
                    <variable threadsafety="unspecified" name="original_data" fullname="cv::detail::tracked_cv_mat::original_data" href="cv-detail-tracked-cv-mat.html#original_data-var" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="211" type="uchar *" static="false"/>
                </class>
                <function threadsafety="unspecified" name="postprocess" fullname="cv::detail::postprocess" href="cv-detail.html#postprocess" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="226" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void postprocess(Outputs &amp;... outs)">
                    <parameter left="Outputs &amp;..." right="" name="outs" default=""/>
                </function>
                <class threadsafety="unspecified" name="fluid_get_in" fullname="cv::detail::fluid_get_in" href="cv-detail-fluid-get-in.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="203">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::fluid_get_in::get" href="cv-detail-fluid-get-in.html#get" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="205" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; get(const cv::GArgs &amp;in_args, int idx)">
                        <parameter left="const cv::GArgs &amp;" right="" name="in_args" default=""/>
                        <parameter left="int" right="" name="idx" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="has_Window" fullname="cv::detail::has_Window" href="cv-detail-has-window.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="323"/>
                <class threadsafety="unspecified" name="is_gmat_type" fullname="cv::detail::is_gmat_type" href="cv-detail-is-gmat-type.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="256"/>
                <class threadsafety="unspecified" name="BasicVectorRef" fullname="cv::detail::BasicVectorRef" href="cv-detail-basicvectorref.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="121">
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::BasicVectorRef::mov" href="cv-detail-basicvectorref.html#mov" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="129" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mov(BasicVectorRef &amp;ref) = 0">
                        <parameter left="BasicVectorRef &amp;" right="" name="ref" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~BasicVectorRef" fullname="cv::detail::BasicVectorRef::~BasicVectorRef" href="cv-detail-basicvectorref.html#dtor.BasicVectorRef" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="127" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BasicVectorRef()"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::BasicVectorRef::ptr" href="cv-detail-basicvectorref.html#ptr" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="130" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const void *" signature="const void * ptr() const = 0"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::detail::BasicVectorRef::size" href="cv-detail-basicvectorref.html#size" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="131" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::size_t" signature="std::size_t size() const = 0"/>
                    <variable threadsafety="unspecified" name="m_desc" fullname="cv::detail::BasicVectorRef::m_desc" href="cv-detail-basicvectorref.html#m_desc-var" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="126" type="cv::GArrayDesc" static="false"/>
                    <variable threadsafety="unspecified" name="m_elemSize" fullname="cv::detail::BasicVectorRef::m_elemSize" href="cv-detail-basicvectorref.html#m_elemSize-var" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="125" type="std::size_t = 0ul" static="false"/>
                </class>
                <class threadsafety="unspecified" name="GArrayU" fullname="cv::detail::GArrayU" href="cv-detail-garrayu.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="70">
                    <function threadsafety="unspecified" name="GArrayU" fullname="cv::detail::GArrayU::GArrayU" href="cv-detail-garrayu.html#GArrayU-1" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="82" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArrayU()"/>
                    <function threadsafety="unspecified" name="GArrayU" fullname="cv::detail::GArrayU::GArrayU" href="cv-detail-garrayu.html#GArrayU" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="73" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArrayU(const GNode &amp;n, std::size_t out)">
                        <parameter left="const GNode &amp;" right="" name="n" default=""/>
                        <parameter left="std::size_t" right="" name="out" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="GArrayU" fullname="cv::detail::GArrayU::GArrayU" href="cv-detail-garrayu.html#GArrayU-2" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="83" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArrayU(const detail::VectorRef &amp;vref)">
                        <parameter left="const detail::VectorRef &amp;" right="" name="vref" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="priv" fullname="cv::detail::GArrayU::priv" href="cv-detail-garrayu.html#priv" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOrigin &amp;" signature="GOrigin &amp; priv()"/>
                    <function threadsafety="unspecified" name="setConstructFcn" fullname="cv::detail::GArrayU::setConstructFcn" href="cv-detail-garrayu.html#setConstructFcn" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="86" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setConstructFcn(ConstructVec &amp;&amp;cv)">
                        <parameter left="ConstructVec &amp;&amp;" right="" name="cv" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setKind" fullname="cv::detail::GArrayU::setKind" href="cv-detail-garrayu.html#setKind" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setKind(cv::detail::OpaqueKind )">
                        <parameter left="cv::detail::OpaqueKind" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="specifyType" fullname="cv::detail::GArrayU::specifyType" href="cv-detail-garrayu.html#specifyType" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void specifyType()"/>
                    <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::GArrayU::storeKind" href="cv-detail-garrayu.html#storeKind" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="92" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                    <function threadsafety="unspecified" name="holds" fullname="cv::detail::GArrayU::holds" href="cv-detail-garrayu.html#holds" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool holds() const"/>
                    <function threadsafety="unspecified" name="priv" fullname="cv::detail::GArrayU::priv" href="cv-detail-garrayu.html#priv-1" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="79" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GOrigin &amp;" signature="const GOrigin &amp; priv() const"/>
                    <variable threadsafety="unspecified" name="m_hint" fullname="cv::detail::GArrayU::m_hint" href="cv-detail-garrayu.html#m_hint-var" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="97" type="std::shared_ptr&lt;TypeHintBase&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="m_priv" fullname="cv::detail::GArrayU::m_priv" href="cv-detail-garrayu.html#m_priv-var" status="active" access="protected" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="96" type="std::shared_ptr&lt;GOrigin&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="TypeHint" fullname="cv::detail::TypeHint" href="cv-detail-typehint.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="65" bases="cv::detail::TypeHintBase"/>
                <class threadsafety="unspecified" name="TypeHintBase" fullname="cv::detail::TypeHintBase" href="cv-detail-typehintbase.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="61">
                    <function threadsafety="unspecified" name="~TypeHintBase" fullname="cv::detail::TypeHintBase::~TypeHintBase" href="cv-detail-typehintbase.html#dtor.TypeHintBase" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="61" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~TypeHintBase() = default"/>
                </class>
                <class threadsafety="unspecified" name="VectorRef" fullname="cv::detail::VectorRef" href="cv-detail-vectorref.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="236">
                    <function threadsafety="unspecified" name="VectorRef" fullname="cv::detail::VectorRef::VectorRef" href="cv-detail-vectorref.html#VectorRef" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="VectorRef() = default"/>
                    <function threadsafety="unspecified" name="VectorRef" fullname="cv::detail::VectorRef::VectorRef" href="cv-detail-vectorref.html#VectorRef-1" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="249" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRef(const std::vector&lt;T&gt; &amp;vec)">
                        <parameter left="const std::vector&lt;T&gt; &amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="VectorRef" fullname="cv::detail::VectorRef::VectorRef" href="cv-detail-vectorref.html#VectorRef-3" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="253" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRef(std::vector&lt;T&gt; &amp;&amp;vec)">
                        <parameter left="std::vector&lt;T&gt; &amp;&amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="VectorRef" fullname="cv::detail::VectorRef::VectorRef" href="cv-detail-vectorref.html#VectorRef-2" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="251" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRef(std::vector&lt;T&gt; &amp;vec)">
                        <parameter left="std::vector&lt;T&gt; &amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="wref" fullname="cv::detail::VectorRef::wref" href="cv-detail-vectorref.html#wref" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="275" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T&gt; &amp;" signature="std::vector&lt;T&gt; &amp; wref()"/>
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::VectorRef::mov" href="cv-detail-vectorref.html#mov" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="295" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mov(VectorRef &amp;v)">
                        <parameter left="VectorRef &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="reset" fullname="cv::detail::VectorRef::reset" href="cv-detail-vectorref.html#reset" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="261" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                    <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::VectorRef::storeKind" href="cv-detail-vectorref.html#storeKind" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="270" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                    <function threadsafety="unspecified" name="holds" fullname="cv::detail::VectorRef::holds" href="cv-detail-vectorref.html#holds" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="288" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool holds() const"/>
                    <function threadsafety="unspecified" name="rref" fullname="cv::detail::VectorRef::rref" href="cv-detail-vectorref.html#rref" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="281" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::vector&lt;T&gt; &amp;" signature="const std::vector&lt;T&gt; &amp; rref() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::VectorRef::ptr" href="cv-detail-vectorref.html#ptr" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="311" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const void *" signature="const void * ptr() const"/>
                    <function threadsafety="unspecified" name="descr_of" fullname="cv::detail::VectorRef::descr_of" href="cv-detail-vectorref.html#descr_of" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="300" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GArrayDesc" signature="cv::GArrayDesc descr_of() const"/>
                    <function threadsafety="unspecified" name="getKind" fullname="cv::detail::VectorRef::getKind" href="cv-detail-vectorref.html#getKind" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="256" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::detail::OpaqueKind" signature="cv::detail::OpaqueKind getKind() const"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::detail::VectorRef::size" href="cv-detail-vectorref.html#size" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="305" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::size_t" signature="std::size_t size() const"/>
                    <function threadsafety="unspecified" name="check" fullname="cv::detail::VectorRef::check" href="cv-detail-vectorref.html#check" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="241" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void check() const"/>
                </class>
                <class threadsafety="unspecified" name="VectorRefT" fullname="cv::detail::VectorRefT" href="cv-detail-vectorreft.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="134" bases="cv::detail::BasicVectorRef">
                    <function threadsafety="unspecified" name="VectorRefT" fullname="cv::detail::VectorRefT::VectorRefT" href="cv-detail-vectorreft.html#VectorRefT" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="154" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRefT()"/>
                    <function threadsafety="unspecified" name="VectorRefT" fullname="cv::detail::VectorRefT::VectorRefT" href="cv-detail-vectorreft.html#VectorRefT-1" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="157" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRefT(const std::vector&lt;T&gt; &amp;vec)">
                        <parameter left="const std::vector&lt;T&gt; &amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="VectorRefT" fullname="cv::detail::VectorRefT::VectorRefT" href="cv-detail-vectorreft.html#VectorRefT-3" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="159" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRefT(std::vector&lt;T&gt; &amp;&amp;vec)">
                        <parameter left="std::vector&lt;T&gt; &amp;&amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="VectorRefT" fullname="cv::detail::VectorRefT::VectorRefT" href="cv-detail-vectorreft.html#VectorRefT-2" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="158" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VectorRefT(std::vector&lt;T&gt; &amp;vec)">
                        <parameter left="std::vector&lt;T&gt; &amp;" right="" name="vec" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="wref" fullname="cv::detail::VectorRefT::wref" href="cv-detail-vectorreft.html#wref" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="186" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T&gt; &amp;" signature="std::vector&lt;T&gt; &amp; wref()"/>
                    <function threadsafety="unspecified" name="init" fullname="cv::detail::VectorRefT::init" href="cv-detail-vectorreft.html#init" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(const std::vector&lt;T&gt; *vec)">
                        <parameter left="const std::vector&lt;T&gt; *" right="" name="vec" default="nullptr"/>
                    </function>
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::VectorRefT::mov" href="cv-detail-vectorreft.html#mov" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="219" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mov(BasicVectorRef &amp;v) override">
                        <parameter left="BasicVectorRef &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="reset" fullname="cv::detail::VectorRefT::reset" href="cv-detail-vectorreft.html#reset" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                    <function threadsafety="unspecified" name="~VectorRefT" fullname="cv::detail::VectorRefT::~VectorRefT" href="cv-detail-vectorreft.html#dtor.VectorRefT" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="155" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~VectorRefT()"/>
                    <function threadsafety="unspecified" name="isEmpty" fullname="cv::detail::VectorRefT::isEmpty" href="cv-detail-vectorreft.html#isEmpty" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="142" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isEmpty() const"/>
                    <function threadsafety="unspecified" name="isROExt" fullname="cv::detail::VectorRefT::isROExt" href="cv-detail-vectorreft.html#isROExt" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="143" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isROExt() const"/>
                    <function threadsafety="unspecified" name="isRWExt" fullname="cv::detail::VectorRefT::isRWExt" href="cv-detail-vectorreft.html#isRWExt" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="144" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isRWExt() const"/>
                    <function threadsafety="unspecified" name="isRWOwn" fullname="cv::detail::VectorRefT::isRWOwn" href="cv-detail-vectorreft.html#isRWOwn" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="145" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isRWOwn() const"/>
                    <function threadsafety="unspecified" name="rref" fullname="cv::detail::VectorRefT::rref" href="cv-detail-vectorreft.html#rref" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="197" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::vector&lt;T&gt; &amp;" signature="const std::vector&lt;T&gt; &amp; rref() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::VectorRefT::ptr" href="cv-detail-vectorreft.html#ptr" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="225" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const void *" signature="const void * ptr() const override"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::detail::VectorRefT::size" href="cv-detail-vectorreft.html#size" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="226" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="std::size_t" signature="std::size_t size() const override"/>
                </class>
                <class threadsafety="unspecified" name="flatten_g" fullname="cv::detail::flatten_g" href="cv-detail-flatten-g.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="326"/>
                <function threadsafety="unspecified" name="specifyType" fullname="cv::detail::specifyType" href="cv-detail.html#specifyType" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void specifyType()"/>
                <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::storeKind" href="cv-detail.html#storeKind" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                <function threadsafety="unspecified" name="holds" fullname="cv::detail::holds" href="cv-detail.html#holds" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="101" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool holds() const"/>
                <class threadsafety="unspecified" name="GOpaqueTraits" fullname="cv::detail::GOpaqueTraits" href="cv-detail-gopaquetraits.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="62"/>
                <class threadsafety="unspecified" name="KernelTag" fullname="cv::detail::KernelTag" href="cv-detail-kerneltag.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="35"/>
                <class threadsafety="unspecified" name="TransformTag" fullname="cv::detail::TransformTag" href="cv-detail-transformtag.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="37"/>
                <enum threadsafety="unspecified" name="OpaqueKind" fullname="cv::detail::OpaqueKind" href="cv-detail.html#OpaqueKind-enum" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="42">
                    <value name="CV_UNKNOWN" value="0"/>
                    <value name="CV_BOOL" value="1"/>
                    <value name="CV_INT" value="2"/>
                    <value name="CV_DOUBLE" value="3"/>
                    <value name="CV_FLOAT" value="4"/>
                    <value name="CV_UINT64" value="5"/>
                    <value name="CV_STRING" value="6"/>
                    <value name="CV_POINT" value="7"/>
                    <value name="CV_POINT2F" value="8"/>
                    <value name="CV_SIZE" value="9"/>
                    <value name="CV_RECT" value="10"/>
                    <value name="CV_SCALAR" value="11"/>
                    <value name="CV_MAT" value="12"/>
                    <value name="CV_DRAW_PRIM" value="13"/>
                </enum>
                <class threadsafety="unspecified" name="GCompoundContext" fullname="cv::detail::GCompoundContext" href="cv-detail-gcompoundcontext.html" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="30">
                    <function threadsafety="unspecified" name="GCompoundContext" fullname="cv::detail::GCompoundContext::GCompoundContext" href="cv-detail-gcompoundcontext.html#GCompoundContext" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCompoundContext(const GArgs &amp;in_args)">
                        <parameter left="const GArgs &amp;" right="" name="in_args" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="inArg" fullname="cv::detail::GCompoundContext::inArg" href="cv-detail-gcompoundcontext.html#inArg" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; inArg(int input)">
                        <parameter left="int" right="" name="input" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="m_args" fullname="cv::detail::GCompoundContext::m_args" href="cv-detail-gcompoundcontext.html#m_args-var" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="36" type="GArgs" static="false"/>
                    <variable threadsafety="unspecified" name="m_results" fullname="cv::detail::GCompoundContext::m_results" href="cv-detail-gcompoundcontext.html#m_results-var" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="37" type="GArgs" static="false"/>
                </class>
                <class threadsafety="unspecified" name="GCompoundKernel" fullname="cv::detail::GCompoundKernel" href="cv-detail-gcompoundkernel.html" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="40">
                    <function threadsafety="unspecified" name="GCompoundKernel" fullname="cv::detail::GCompoundKernel::GCompoundKernel" href="cv-detail-gcompoundkernel.html#GCompoundKernel" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="46" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCompoundKernel(const F &amp;f)">
                        <parameter left="const F &amp;" right="" name="f" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="apply" fullname="cv::detail::GCompoundKernel::apply" href="cv-detail-gcompoundkernel.html#apply" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(GCompoundContext &amp;ctx)">
                        <parameter left="GCompoundContext &amp;" right="" name="ctx" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="m_f" fullname="cv::detail::GCompoundKernel::m_f" href="cv-detail-gcompoundkernel.html#m_f-var" status="active" access="protected" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="50" type="F" static="false"/>
                </class>
                <class threadsafety="unspecified" name="GCompoundKernelImpl" fullname="cv::detail::GCompoundKernelImpl" href="cv-detail-gcompoundkernelimpl.html" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="111" bases="cv::detail::KernelTag">
                    <function threadsafety="unspecified" name="kernel" fullname="cv::detail::GCompoundKernelImpl::kernel" href="cv-detail-gcompoundkernelimpl.html#kernel" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="120" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GCompoundKernel" signature="GCompoundKernel kernel()"/>
                    <function threadsafety="unspecified" name="backend" fullname="cv::detail::GCompoundKernelImpl::backend" href="cv-detail-gcompoundkernelimpl.html#backend" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="119" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend()"/>
                </class>
                <class threadsafety="unspecified" name="get_compound_in" fullname="cv::detail::get_compound_in" href="cv-detail-get-compound-in.html" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="53">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::get_compound_in::get" href="cv-detail-get-compound-in.html#get" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="55" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(GCompoundContext &amp;ctx, int idx)">
                        <parameter left="GCompoundContext &amp;" right="" name="ctx" default=""/>
                        <parameter left="int" right="" name="idx" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MetaType" fullname="cv::detail::MetaType" href="cv-detail-metatype.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="112"/>
                <class threadsafety="unspecified" name="NoTag" fullname="cv::detail::NoTag" href="cv-detail-notag.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="194"/>
                <function threadsafety="unspecified" name="get_in_meta" fullname="cv::detail::get_in_meta" href="cv-detail.html#get_in_meta" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;!is_nongapi_type&lt;T&gt;::value, MetaType&lt;T&gt;::type&gt;::type" signature="std::enable_if&lt;!is_nongapi_type&lt;T&gt;::value, MetaType&lt;T&gt;::type&gt;::type get_in_meta(const GMetaArgs &amp;in_meta, const GArgs &amp;, int idx)">
                    <parameter left="const GMetaArgs &amp;" right="" name="in_meta" default=""/>
                    <parameter left="const GArgs &amp;" right="" name="" default=""/>
                    <parameter left="int" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="get_in_meta" fullname="cv::detail::get_in_meta" href="cv-detail.html#get_in_meta-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="127" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;is_nongapi_type&lt;T&gt;::value, T&gt;::type" signature="std::enable_if&lt;is_nongapi_type&lt;T&gt;::value, T&gt;::type get_in_meta(const GMetaArgs &amp;, const GArgs &amp;in_args, int idx)">
                    <parameter left="const GMetaArgs &amp;" right="" name="" default=""/>
                    <parameter left="const GArgs &amp;" right="" name="in_args" default=""/>
                    <parameter left="int" right="" name="idx" default=""/>
                </function>
                <class threadsafety="unspecified" name="is_meta_descr" fullname="cv::detail::is_meta_descr" href="cv-detail-is-meta-descr.html" status="active" access="public" location="gmetaarg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmetaarg.hpp" lineno="55"/>
                <class threadsafety="unspecified" name="BasicOpaqueRef" fullname="cv::detail::BasicOpaqueRef" href="cv-detail-basicopaqueref.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="115">
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::BasicOpaqueRef::mov" href="cv-detail-basicopaqueref.html#mov" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="121" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mov(BasicOpaqueRef &amp;ref) = 0">
                        <parameter left="BasicOpaqueRef &amp;" right="" name="ref" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::detail::BasicOpaqueRef::set" href="cv-detail-basicopaqueref.html#set" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="123" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const cv::util::any &amp;a) = 0">
                        <parameter left="const cv::util::any &amp;" right="" name="a" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~BasicOpaqueRef" fullname="cv::detail::BasicOpaqueRef::~BasicOpaqueRef" href="cv-detail-basicopaqueref.html#dtor.BasicOpaqueRef" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="119" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BasicOpaqueRef()"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::BasicOpaqueRef::ptr" href="cv-detail-basicopaqueref.html#ptr" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="122" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const void *" signature="const void * ptr() const = 0"/>
                    <variable threadsafety="unspecified" name="m_desc" fullname="cv::detail::BasicOpaqueRef::m_desc" href="cv-detail-basicopaqueref.html#m_desc-var" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="118" type="cv::GOpaqueDesc" static="false"/>
                </class>
                <class threadsafety="unspecified" name="GOpaqueU" fullname="cv::detail::GOpaqueU" href="cv-detail-gopaqueu.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="64">
                    <function threadsafety="unspecified" name="GOpaqueU" fullname="cv::detail::GOpaqueU::GOpaqueU" href="cv-detail-gopaqueu.html#GOpaqueU-1" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="76" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOpaqueU()"/>
                    <function threadsafety="unspecified" name="GOpaqueU" fullname="cv::detail::GOpaqueU::GOpaqueU" href="cv-detail-gopaqueu.html#GOpaqueU" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="67" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOpaqueU(const GNode &amp;n, std::size_t out)">
                        <parameter left="const GNode &amp;" right="" name="n" default=""/>
                        <parameter left="std::size_t" right="" name="out" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="priv" fullname="cv::detail::GOpaqueU::priv" href="cv-detail-gopaqueu.html#priv" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOrigin &amp;" signature="GOrigin &amp; priv()"/>
                    <function threadsafety="unspecified" name="setConstructFcn" fullname="cv::detail::GOpaqueU::setConstructFcn" href="cv-detail-gopaqueu.html#setConstructFcn" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setConstructFcn(ConstructOpaque &amp;&amp;cv)">
                        <parameter left="ConstructOpaque &amp;&amp;" right="" name="cv" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setKind" fullname="cv::detail::GOpaqueU::setKind" href="cv-detail-gopaqueu.html#setKind" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="87" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setKind(cv::detail::OpaqueKind )">
                        <parameter left="cv::detail::OpaqueKind" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="specifyType" fullname="cv::detail::GOpaqueU::specifyType" href="cv-detail-gopaqueu.html#specifyType" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void specifyType()"/>
                    <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::GOpaqueU::storeKind" href="cv-detail-gopaqueu.html#storeKind" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                    <function threadsafety="unspecified" name="holds" fullname="cv::detail::GOpaqueU::holds" href="cv-detail-gopaqueu.html#holds" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="70" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool holds() const"/>
                    <function threadsafety="unspecified" name="priv" fullname="cv::detail::GOpaqueU::priv" href="cv-detail-gopaqueu.html#priv-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="73" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GOrigin &amp;" signature="const GOrigin &amp; priv() const"/>
                    <variable threadsafety="unspecified" name="m_hint" fullname="cv::detail::GOpaqueU::m_hint" href="cv-detail-gopaqueu.html#m_hint-var" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="90" type="std::shared_ptr&lt;TypeHintBase&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="m_priv" fullname="cv::detail::GOpaqueU::m_priv" href="cv-detail-gopaqueu.html#m_priv-var" status="active" access="protected" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="89" type="std::shared_ptr&lt;GOrigin&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="OpaqueRef" fullname="cv::detail::OpaqueRef" href="cv-detail-opaqueref.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="229">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::detail::OpaqueRef::operator=" href="cv-detail-opaqueref.html#operator-eq" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="296" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="OpaqueRef &amp;" signature="OpaqueRef &amp; operator=(const cv::util::any &amp;a)">
                        <parameter left="const cv::util::any &amp;" right="" name="a" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="OpaqueRef" fullname="cv::detail::OpaqueRef::OpaqueRef" href="cv-detail-opaqueref.html#OpaqueRef" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="240" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="OpaqueRef() = default"/>
                    <function threadsafety="unspecified" name="OpaqueRef" fullname="cv::detail::OpaqueRef::OpaqueRef" href="cv-detail-opaqueref.html#OpaqueRef-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="247" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpaqueRef(T &amp;&amp;obj)">
                        <parameter left="T &amp;&amp;" right="" name="obj" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="wref" fullname="cv::detail::OpaqueRef::wref" href="cv-detail-opaqueref.html#wref" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="270" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; wref()"/>
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::OpaqueRef::mov" href="cv-detail-opaqueref.html#mov" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="282" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mov(OpaqueRef &amp;v)">
                        <parameter left="OpaqueRef &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="reset" fullname="cv::detail::OpaqueRef::reset" href="cv-detail-opaqueref.html#reset" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="256" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                    <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::OpaqueRef::storeKind" href="cv-detail-opaqueref.html#storeKind" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="265" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                    <function threadsafety="unspecified" name="rref" fullname="cv::detail::OpaqueRef::rref" href="cv-detail-opaqueref.html#rref" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="276" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; rref() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::OpaqueRef::ptr" href="cv-detail-opaqueref.html#ptr" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="293" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const void *" signature="const void * ptr() const"/>
                    <function threadsafety="unspecified" name="descr_of" fullname="cv::detail::OpaqueRef::descr_of" href="cv-detail-opaqueref.html#descr_of" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="287" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOpaqueDesc" signature="cv::GOpaqueDesc descr_of() const"/>
                    <function threadsafety="unspecified" name="getKind" fullname="cv::detail::OpaqueRef::getKind" href="cv-detail-opaqueref.html#getKind" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="251" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::detail::OpaqueKind" signature="cv::detail::OpaqueKind getKind() const"/>
                    <function threadsafety="unspecified" name="check" fullname="cv::detail::OpaqueRef::check" href="cv-detail-opaqueref.html#check" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="234" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void check() const"/>
                </class>
                <class threadsafety="unspecified" name="OpaqueRefT" fullname="cv::detail::OpaqueRefT" href="cv-detail-opaquereft.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="126" bases="cv::detail::BasicOpaqueRef">
                    <function threadsafety="unspecified" name="OpaqueRefT" fullname="cv::detail::OpaqueRefT::OpaqueRefT" href="cv-detail-opaquereft.html#OpaqueRefT" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="145" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpaqueRefT()"/>
                    <function threadsafety="unspecified" name="OpaqueRefT" fullname="cv::detail::OpaqueRefT::OpaqueRefT" href="cv-detail-opaquereft.html#OpaqueRefT-3" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="150" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpaqueRefT(T &amp;&amp;obj)">
                        <parameter left="T &amp;&amp;" right="" name="obj" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="OpaqueRefT" fullname="cv::detail::OpaqueRefT::OpaqueRefT" href="cv-detail-opaquereft.html#OpaqueRefT-2" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="149" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpaqueRefT(T &amp;obj)">
                        <parameter left="T &amp;" right="" name="obj" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="OpaqueRefT" fullname="cv::detail::OpaqueRefT::OpaqueRefT" href="cv-detail-opaquereft.html#OpaqueRefT-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="148" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpaqueRefT(const T &amp;obj)">
                        <parameter left="const T &amp;" right="" name="obj" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="wref" fullname="cv::detail::OpaqueRefT::wref" href="cv-detail-opaquereft.html#wref" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="177" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; wref()"/>
                    <function threadsafety="unspecified" name="init" fullname="cv::detail::OpaqueRefT::init" href="cv-detail-opaquereft.html#init" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(const T *obj)">
                        <parameter left="const T *" right="" name="obj" default="nullptr"/>
                    </function>
                    <function threadsafety="unspecified" name="mov" fullname="cv::detail::OpaqueRefT::mov" href="cv-detail-opaquereft.html#mov" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="210" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mov(BasicOpaqueRef &amp;v) override">
                        <parameter left="BasicOpaqueRef &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="reset" fullname="cv::detail::OpaqueRefT::reset" href="cv-detail-opaquereft.html#reset" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                    <function threadsafety="unspecified" name="set" fullname="cv::detail::OpaqueRefT::set" href="cv-detail-opaquereft.html#set" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="218" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void set(const cv::util::any &amp;a) override">
                        <parameter left="const cv::util::any &amp;" right="" name="a" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~OpaqueRefT" fullname="cv::detail::OpaqueRefT::~OpaqueRefT" href="cv-detail-opaquereft.html#dtor.OpaqueRefT" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="146" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~OpaqueRefT()"/>
                    <function threadsafety="unspecified" name="isEmpty" fullname="cv::detail::OpaqueRefT::isEmpty" href="cv-detail-opaquereft.html#isEmpty" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="134" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isEmpty() const"/>
                    <function threadsafety="unspecified" name="isROExt" fullname="cv::detail::OpaqueRefT::isROExt" href="cv-detail-opaquereft.html#isROExt" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="135" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isROExt() const"/>
                    <function threadsafety="unspecified" name="isRWExt" fullname="cv::detail::OpaqueRefT::isRWExt" href="cv-detail-opaquereft.html#isRWExt" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="136" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isRWExt() const"/>
                    <function threadsafety="unspecified" name="isRWOwn" fullname="cv::detail::OpaqueRefT::isRWOwn" href="cv-detail-opaquereft.html#isRWOwn" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="137" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isRWOwn() const"/>
                    <function threadsafety="unspecified" name="rref" fullname="cv::detail::OpaqueRefT::rref" href="cv-detail-opaquereft.html#rref" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="188" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; rref() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::detail::OpaqueRefT::ptr" href="cv-detail-opaquereft.html#ptr" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="216" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="const void *" signature="const void * ptr() const override"/>
                </class>
                <function threadsafety="unspecified" name="packArgs" fullname="cv::detail::packArgs" href="cv-detail.html#packArgs" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GProtoArgs" signature="GProtoArgs packArgs(Ts... args)">
                    <parameter left="Ts..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="getGOut_impl" fullname="cv::detail::getGOut_impl" href="cv-detail.html#getGOut_impl" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="111" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GProtoOutputArgs" signature="GProtoOutputArgs getGOut_impl(const std::tuple&lt;Ts...&gt; &amp;ts, detail::Seq&lt;Indexes...&gt; )">
                    <parameter left="const std::tuple&lt;Ts...&gt; &amp;" right="" name="ts" default=""/>
                    <parameter left="detail::Seq&lt;Indexes...&gt;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="specifyType" fullname="cv::detail::specifyType" href="cv-detail.html#specifyType-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void specifyType()"/>
                <function threadsafety="unspecified" name="storeKind" fullname="cv::detail::storeKind" href="cv-detail.html#storeKind-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void storeKind()"/>
                <function threadsafety="unspecified" name="holds" fullname="cv::detail::holds" href="cv-detail.html#holds-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="94" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool holds() const"/>
                <class threadsafety="unspecified" name="OptRef" fullname="cv::detail::OptRef" href="cv-detail-optref.html" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="33">
                    <class threadsafety="unspecified" name="Holder" fullname="cv::detail::OptRef::Holder" href="cv-detail-optref-holder.html" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="40">
                        <function threadsafety="unspecified" name="Holder" fullname="cv::detail::OptRef::Holder::Holder" href="cv-detail-optref-holder.html#Holder" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="43" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Holder(cv::optional&lt;T&gt; &amp;opt)">
                            <parameter left="cv::optional&lt;T&gt; &amp;" right="" name="opt" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="mov" fullname="cv::detail::OptRef::Holder::mov" href="cv-detail-optref-holder.html#mov" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="45" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mov(RefHolder &amp;h) override">
                            <parameter left="RefHolder &amp;" right="" name="h" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="reset" fullname="cv::detail::OptRef::Holder::reset" href="cv-detail-optref-holder.html#reset" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="49" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void reset() override"/>
                        <variable threadsafety="unspecified" name="m_opt_ref" fullname="cv::detail::OptRef::Holder::m_opt_ref" href="cv-detail-optref-holder.html#m_opt_ref-var" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="41" type="std::reference_wrapper&lt;cv::optional&lt;T&gt; &gt;" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="OptHolder" fullname="cv::detail::OptRef::OptHolder" href="cv-detail-optref-optholder.html" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="34">
                        <function threadsafety="unspecified" name="mov" fullname="cv::detail::OptRef::OptHolder::mov" href="cv-detail-optref-optholder.html#mov" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="35" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mov(RefHolder &amp;h) = 0">
                            <parameter left="RefHolder &amp;" right="" name="h" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="reset" fullname="cv::detail::OptRef::OptHolder::reset" href="cv-detail-optref-optholder.html#reset" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="36" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset() = 0"/>
                        <function threadsafety="unspecified" name="~OptHolder" fullname="cv::detail::OptRef::OptHolder::~OptHolder" href="cv-detail-optref-optholder.html#dtor.OptHolder" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="37" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~OptHolder() = default"/>
                    </class>
                    <function threadsafety="unspecified" name="OptRef" fullname="cv::detail::OptRef::OptRef" href="cv-detail-optref.html#OptRef" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="54" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OptRef(cv::optional&lt;T&gt; &amp;t)">
                        <parameter left="cv::optional&lt;T&gt; &amp;" right="" name="t" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="wref_spec" fullname="cv::detail::wref_spec" href="cv-detail-wref-spec.html" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="25"/>
                <function threadsafety="unspecified" name="wrap_opt_arg" fullname="cv::detail::wrap_opt_arg" href="cv-detail.html#wrap_opt_arg" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="76" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOptRunArgP" signature="GOptRunArgP wrap_opt_arg(optional&lt;T&gt; &amp;arg)">
                    <parameter left="optional&lt;T&gt; &amp;" right="" name="arg" default=""/>
                </function>
                <function threadsafety="unspecified" name="wrap_opt_arg" fullname="cv::detail::wrap_opt_arg" href="cv-detail.html#wrap_opt_arg-2" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOptRunArgP" signature="GOptRunArgP wrap_opt_arg(optional&lt;cv::Mat&gt; &amp;m)">
                    <parameter left="optional&lt;cv::Mat&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="wrap_opt_arg" fullname="cv::detail::wrap_opt_arg" href="cv-detail.html#wrap_opt_arg-3" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOptRunArgP" signature="GOptRunArgP wrap_opt_arg(optional&lt;cv::Scalar&gt; &amp;s)">
                    <parameter left="optional&lt;cv::Scalar&gt; &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="wrap_opt_arg" fullname="cv::detail::wrap_opt_arg" href="cv-detail.html#wrap_opt_arg-1" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="81" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOptRunArgP" signature="GOptRunArgP wrap_opt_arg(optional&lt;std::vector&lt;T&gt; &gt; &amp;arg)">
                    <parameter left="optional&lt;std::vector&lt;T&gt; &gt; &amp;" right="" name="arg" default=""/>
                </function>
                <class threadsafety="unspecified" name="GObtainCtor" fullname="cv::detail::GObtainCtor" href="cv-detail-gobtainctor.html" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="208">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::GObtainCtor::get" href="cv-detail-gobtainctor.html#get" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="209" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="HostCtor" signature="HostCtor get()"/>
                </class>
                <class threadsafety="unspecified" name="GTypeOf" fullname="cv::detail::GTypeOf" href="cv-detail-gtypeof.html" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="128"/>
                <class threadsafety="unspecified" name="GTypeTraits" fullname="cv::detail::GTypeTraits" href="cv-detail-gtypetraits.html" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="51"/>
                <class threadsafety="unspecified" name="WrapValue" fullname="cv::detail::WrapValue" href="cv-detail-wrapvalue.html" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="165"/>
                <class threadsafety="unspecified" name="has_custom_wrap" fullname="cv::detail::has_custom_wrap" href="cv-detail-has-custom-wrap.html" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="105">
                    <function threadsafety="unspecified" name="test" fullname="cv::detail::has_custom_wrap::test" href="cv-detail-has-custom-wrap.html#test-1" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="109" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::false_type" signature="std::false_type test(... )">
                        <parameter left="..." right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="test" fullname="cv::detail::has_custom_wrap::test" href="cv-detail-has-custom-wrap.html#test" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="108" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::true_type" signature="std::true_type test(check&lt;C, decltype( &amp; GTypeTraits&lt;C&gt;::wrap_value ) &gt; *)">
                        <parameter left="check&lt;C, decltype( &amp; GTypeTraits&lt;C&gt;::wrap_value ) &gt; *" right="" name="" default=""/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="ArgKind" fullname="cv::detail::ArgKind" href="cv-detail.html#ArgKind-enum" status="active" access="public" location="gtype_traits.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtype_traits.hpp" lineno="30">
                    <value name="OPAQUE_VAL" value="0"/>
                    <value name="OPAQUE" value="OPAQUE_VAL"/>
                    <value name="GOBJREF" value=""/>
                    <value name="GMAT" value=""/>
                    <value name="GMATP" value=""/>
                    <value name="GFRAME" value=""/>
                    <value name="GSCALAR" value=""/>
                    <value name="GARRAY" value=""/>
                    <value name="GOPAQUE" value=""/>
                </enum>
                <class threadsafety="unspecified" name="accepted_infer_types" fullname="cv::detail::accepted_infer_types" href="cv-detail-accepted-infer-types.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="34"/>
                <function threadsafety="unspecified" name="strip" fullname="cv::detail::strip" href="cv-detail.html#strip" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="471" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="gapi::GNetParam" signature="gapi::GNetParam strip(T &amp;&amp;t)">
                    <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                </function>
                <class threadsafety="unspecified" name="ocl_get_in" fullname="cv::detail::ocl_get_in" href="cv-detail-ocl-get-in.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="123">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::ocl_get_in::get" href="cv-detail-ocl-get-in.html#get" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="125" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(GOCLContext &amp;ctx, int idx)">
                        <parameter left="GOCLContext &amp;" right="" name="ctx" default=""/>
                        <parameter left="int" right="" name="idx" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="tracked_cv_umat" fullname="cv::detail::tracked_cv_umat" href="cv-detail-tracked-cv-umat.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="128">
                    <function threadsafety="unspecified" name="operator cv::UMat &amp;" fullname="cv::detail::tracked_cv_umat::operator cv::UMat &amp;" href="cv-detail-tracked-cv-umat.html#operator-cv::UMat--and" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="136" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator cv::UMat &amp;()"/>
                    <function threadsafety="unspecified" name="tracked_cv_umat" fullname="cv::detail::tracked_cv_umat::tracked_cv_umat" href="cv-detail-tracked-cv-umat.html#tracked_cv_umat" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="131" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="tracked_cv_umat(cv::UMat &amp;m)">
                        <parameter left="cv::UMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="validate" fullname="cv::detail::tracked_cv_umat::validate" href="cv-detail-tracked-cv-umat.html#validate" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="137" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void validate() const"/>
                    <variable threadsafety="unspecified" name="original_data" fullname="cv::detail::tracked_cv_umat::original_data" href="cv-detail-tracked-cv-umat.html#original_data-var" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="134" type="uchar *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="plaidml_get_in" fullname="cv::detail::plaidml_get_in" href="cv-detail-plaidml-get-in.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="87">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::plaidml_get_in::get" href="cv-detail-plaidml-get-in.html#get" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="89" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(GPlaidMLContext &amp;ctx, int idx)">
                        <parameter left="GPlaidMLContext &amp;" right="" name="ctx" default=""/>
                        <parameter left="int" right="" name="idx" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MkSeq" fullname="cv::detail::MkSeq" href="cv-detail-mkseq.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="26"/>
                <class threadsafety="unspecified" name="Seq" fullname="cv::detail::Seq" href="cv-detail-seq.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="25"/>
                <class threadsafety="unspecified" name="all_but_last" fullname="cv::detail::all_but_last" href="cv-detail-all-but-last.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="72" bases="cv::detail::all_but_last"/>
                <class threadsafety="unspecified" name="all_satisfy" fullname="cv::detail::all_satisfy" href="cv-detail-all-satisfy.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="46" bases="cv::detail::all_satisfy"/>
                <class threadsafety="unspecified" name="all_unique" fullname="cv::detail::all_unique" href="cv-detail-all-unique.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="98"/>
                <class threadsafety="unspecified" name="contains" fullname="cv::detail::contains" href="cv-detail-contains.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="89"/>
                <class threadsafety="unspecified" name="max_of_t" fullname="cv::detail::max_of_t" href="cv-detail-max-of-t.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="78"/>
                <class threadsafety="unspecified" name="tuple_wrap_helper" fullname="cv::detail::tuple_wrap_helper" href="cv-detail-tuple-wrap-helper.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="107">
                    <function threadsafety="unspecified" name="get" fullname="cv::detail::tuple_wrap_helper::get" href="cv-detail-tuple-wrap-helper.html#get" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/util.hpp" lineno="110" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="type" signature="type get(T &amp;&amp;obj)">
                        <parameter left="T &amp;&amp;" right="" name="obj" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="GCGraph" fullname="cv::detail::GCGraph" href="cv-detail-gcgraph.html" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="48">
                    <class threadsafety="unspecified" name="Edge" fullname="cv::detail::GCGraph::Edge" href="cv-detail-gcgraph-edge.html" status="active" access="private" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="72">
                        <variable threadsafety="unspecified" name="dst" fullname="cv::detail::GCGraph::Edge::dst" href="cv-detail-gcgraph-edge.html#dst-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="75" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="next" fullname="cv::detail::GCGraph::Edge::next" href="cv-detail-gcgraph-edge.html#next-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="76" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="weight" fullname="cv::detail::GCGraph::Edge::weight" href="cv-detail-gcgraph-edge.html#weight-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="77" type="TWeight" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="Vtx" fullname="cv::detail::GCGraph::Vtx" href="cv-detail-gcgraph-vtx.html" status="active" access="private" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="61">
                        <variable threadsafety="unspecified" name="dist" fullname="cv::detail::GCGraph::Vtx::dist" href="cv-detail-gcgraph-vtx.html#dist-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="68" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="first" fullname="cv::detail::GCGraph::Vtx::first" href="cv-detail-gcgraph-vtx.html#first-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="66" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="next" fullname="cv::detail::GCGraph::Vtx::next" href="cv-detail-gcgraph-vtx.html#next-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="64" type="Vtx *" static="false"/>
                        <variable threadsafety="unspecified" name="parent" fullname="cv::detail::GCGraph::Vtx::parent" href="cv-detail-gcgraph-vtx.html#parent-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="65" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="t" fullname="cv::detail::GCGraph::Vtx::t" href="cv-detail-gcgraph-vtx.html#t-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="70" type="uchar" static="false"/>
                        <variable threadsafety="unspecified" name="ts" fullname="cv::detail::GCGraph::Vtx::ts" href="cv-detail-gcgraph-vtx.html#ts-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="67" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="weight" fullname="cv::detail::GCGraph::Vtx::weight" href="cv-detail-gcgraph-vtx.html#weight-var" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="69" type="TWeight" static="false"/>
                    </class>
                    <function threadsafety="unspecified" name="GCGraph" fullname="cv::detail::GCGraph::GCGraph" href="cv-detail-gcgraph.html#GCGraph" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCGraph()"/>
                    <function threadsafety="unspecified" name="GCGraph" fullname="cv::detail::GCGraph::GCGraph" href="cv-detail-gcgraph.html#GCGraph-1" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCGraph(unsigned int vtxCount, unsigned int edgeCount)">
                        <parameter left="unsigned int" right="" name="vtxCount" default=""/>
                        <parameter left="unsigned int" right="" name="edgeCount" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="maxFlow" fullname="cv::detail::GCGraph::maxFlow" href="cv-detail-gcgraph.html#maxFlow" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TWeight" signature="TWeight maxFlow()"/>
                    <function threadsafety="unspecified" name="inSourceSegment" fullname="cv::detail::GCGraph::inSourceSegment" href="cv-detail-gcgraph.html#inSourceSegment" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool inSourceSegment(int i)">
                        <parameter left="int" right="" name="i" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="addVtx" fullname="cv::detail::GCGraph::addVtx" href="cv-detail-gcgraph.html#addVtx" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int addVtx()"/>
                    <function threadsafety="unspecified" name="addEdges" fullname="cv::detail::GCGraph::addEdges" href="cv-detail-gcgraph.html#addEdges" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEdges(int i, int j, TWeight w, TWeight revw)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="int" right="" name="j" default=""/>
                        <parameter left="TWeight" right="" name="w" default=""/>
                        <parameter left="TWeight" right="" name="revw" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="addTermWeights" fullname="cv::detail::GCGraph::addTermWeights" href="cv-detail-gcgraph.html#addTermWeights" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addTermWeights(int i, TWeight sourceW, TWeight sinkW)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="TWeight" right="" name="sourceW" default=""/>
                        <parameter left="TWeight" right="" name="sinkW" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::detail::GCGraph::create" href="cv-detail-gcgraph.html#create" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="54" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(unsigned int vtxCount, unsigned int edgeCount)">
                        <parameter left="unsigned int" right="" name="vtxCount" default=""/>
                        <parameter left="unsigned int" right="" name="edgeCount" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~GCGraph" fullname="cv::detail::GCGraph::~GCGraph" href="cv-detail-gcgraph.html#dtor.GCGraph" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="53" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GCGraph()"/>
                </class>
                <function threadsafety="unspecified" name="FeatherBlender" fullname="cv::detail::FeatherBlender" href="cv-detail.html#FeatherBlender" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="123" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FeatherBlender(float _sharpness)">
                    <parameter left="float" right="" name="_sharpness" default=""/>
                </function>
                <function threadsafety="unspecified" name="GCGraph" fullname="cv::detail::GCGraph" href="cv-detail.html#GCGraph" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="86" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCGraph()"/>
                <function threadsafety="unspecified" name="GCGraph" fullname="cv::detail::GCGraph" href="cv-detail.html#GCGraph-1" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="91" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCGraph(unsigned int vtxCount, unsigned int edgeCount)">
                    <parameter left="unsigned int" right="" name="vtxCount" default=""/>
                    <parameter left="unsigned int" right="" name="edgeCount" default=""/>
                </function>
                <function threadsafety="unspecified" name="maxFlow" fullname="cv::detail::maxFlow" href="cv-detail.html#maxFlow" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="156" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TWeight" signature="TWeight maxFlow()"/>
                <function threadsafety="unspecified" name="inSourceSegment" fullname="cv::detail::inSourceSegment" href="cv-detail.html#inSourceSegment" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="384" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool inSourceSegment(int i)">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="addVtx" fullname="cv::detail::addVtx" href="cv-detail.html#addVtx" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int addVtx()"/>
                <function threadsafety="unspecified" name="addEdges" fullname="cv::detail::addEdges" href="cv-detail.html#addEdges" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEdges(int i, int j, TWeight w, TWeight revw)">
                    <parameter left="int" right="" name="i" default=""/>
                    <parameter left="int" right="" name="j" default=""/>
                    <parameter left="TWeight" right="" name="w" default=""/>
                    <parameter left="TWeight" right="" name="revw" default=""/>
                </function>
                <function threadsafety="unspecified" name="addTermWeights" fullname="cv::detail::addTermWeights" href="cv-detail.html#addTermWeights" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addTermWeights(int i, TWeight sourceW, TWeight sinkW)">
                    <parameter left="int" right="" name="i" default=""/>
                    <parameter left="TWeight" right="" name="sourceW" default=""/>
                    <parameter left="TWeight" right="" name="sinkW" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::detail::create" href="cv-detail.html#create" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(unsigned int vtxCount, unsigned int edgeCount)">
                    <parameter left="unsigned int" right="" name="vtxCount" default=""/>
                    <parameter left="unsigned int" right="" name="edgeCount" default=""/>
                </function>
                <function threadsafety="unspecified" name="postprocess_ocl" fullname="cv::detail::postprocess_ocl" href="cv-detail.html#postprocess_ocl" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void postprocess_ocl(Outputs &amp;... outs)">
                    <parameter left="Outputs &amp;..." right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="~GCGraph" fullname="cv::detail::~GCGraph" href="cv-detail.html#dtor.GCGraph" status="active" access="public" location="gcgraph.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/detail/gcgraph.hpp" lineno="96" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GCGraph()"/>
                <class threadsafety="unspecified" name="Blender" fullname="cv::detail::Blender" href="cv-detail-blender.html" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="63">
                    <function threadsafety="unspecified" name="~Blender" fullname="cv::detail::Blender::~Blender" href="cv-detail-blender.html#dtor.Blender" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="66" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Blender()"/>
                    <variable threadsafety="unspecified" name="FEATHER" fullname="cv::detail::Blender::FEATHER" href="cv-detail-blender.html#FEATHER-var" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="68" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="MULTI_BAND" fullname="cv::detail::Blender::MULTI_BAND" href="cv-detail-blender.html#MULTI_BAND-var" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="68" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="NO" fullname="cv::detail::Blender::NO" href="cv-detail-blender.html#NO-var" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="68" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="dst_roi_" fullname="cv::detail::Blender::dst_roi_" href="cv-detail-blender.html#dst_roi_-var" status="active" access="protected" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="95" type="Rect" static="false"/>
                </class>
                <class threadsafety="unspecified" name="FeatherBlender" fullname="cv::detail::FeatherBlender" href="cv-detail-featherblender.html" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="100" bases="cv::detail::Blender">
                    <function threadsafety="unspecified" name="FeatherBlender" fullname="cv::detail::FeatherBlender::FeatherBlender" href="cv-detail-featherblender.html#FeatherBlender" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="103" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP FeatherBlender(float sharpness)">
                        <parameter left="float" right="" name="sharpness" default="0.02f"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MultiBandBlender" fullname="cv::detail::MultiBandBlender" href="cv-detail-multibandblender.html" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="127" bases="cv::detail::Blender">
                    <function threadsafety="unspecified" name="MultiBandBlender" fullname="cv::detail::MultiBandBlender::MultiBandBlender" href="cv-detail-multibandblender.html#MultiBandBlender" status="active" access="public" location="blenders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/blenders.hpp" lineno="130" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP MultiBandBlender(int try_gpu, int num_bands, int weight_type)">
                        <parameter left="int" right="" name="try_gpu" default="false"/>
                        <parameter left="int" right="" name="num_bands" default="5"/>
                        <parameter left="int" right="" name="weight_type" default="CV_32F"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CameraParams" fullname="cv::detail::CameraParams" href="cv-detail-cameraparams.html" status="active" access="public" location="camera.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/camera.hpp" lineno="58">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::detail::CameraParams::operator=" href="cv-detail-cameraparams.html#operator-eq" status="active" access="public" location="camera.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/camera.hpp" lineno="62" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CameraParams &amp;" signature="CameraParams &amp; operator=(const CameraParams &amp;other)">
                        <parameter left="const CameraParams &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="CameraParams" fullname="cv::detail::CameraParams::CameraParams" href="cv-detail-cameraparams.html#CameraParams" status="active" access="public" location="camera.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/camera.hpp" lineno="60" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CameraParams()"/>
                    <function threadsafety="unspecified" name="CameraParams" fullname="cv::detail::CameraParams::CameraParams" href="cv-detail-cameraparams.html#CameraParams-1" status="active" access="public" location="camera.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/camera.hpp" lineno="61" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CameraParams(const CameraParams &amp;other)">
                        <parameter left="const CameraParams &amp;" right="" name="other" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="BlocksChannelsCompensator" fullname="cv::detail::BlocksChannelsCompensator" href="cv-detail-blockschannelscompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="231" bases="cv::detail::BlocksCompensator">
                    <function threadsafety="unspecified" name="BlocksChannelsCompensator" fullname="cv::detail::BlocksChannelsCompensator::BlocksChannelsCompensator" href="cv-detail-blockschannelscompensator.html#BlocksChannelsCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="234" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BlocksChannelsCompensator(int bl_width, int bl_height, int nr_feeds)">
                        <parameter left="int" right="" name="bl_width" default="32"/>
                        <parameter left="int" right="" name="bl_height" default="32"/>
                        <parameter left="int" right="" name="nr_feeds" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="BlocksCompensator" fullname="cv::detail::BlocksCompensator" href="cv-detail-blockscompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="169" bases="cv::detail::ExposureCompensator">
                    <function threadsafety="unspecified" name="BlocksCompensator" fullname="cv::detail::BlocksCompensator::BlocksCompensator" href="cv-detail-blockscompensator.html#BlocksCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="172" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BlocksCompensator(int bl_width, int bl_height, int nr_feeds)">
                        <parameter left="int" right="" name="bl_width" default="32"/>
                        <parameter left="int" right="" name="bl_height" default="32"/>
                        <parameter left="int" right="" name="nr_feeds" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="getGainMap" fullname="cv::detail::BlocksCompensator::getGainMap" href="cv-detail-blockscompensator.html#getGainMap-1" status="active" access="private" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="195" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat getGainMap(const ChannelsCompensator &amp;compensator, int bl_idx, Size bl_per_img)">
                        <parameter left="const ChannelsCompensator &amp;" right="" name="compensator" default=""/>
                        <parameter left="int" right="" name="bl_idx" default=""/>
                        <parameter left="Size" right="" name="bl_per_img" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getGainMap" fullname="cv::detail::BlocksCompensator::getGainMap" href="cv-detail-blockscompensator.html#getGainMap" status="active" access="private" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat getGainMap(const GainCompensator &amp;compensator, int bl_idx, Size bl_per_img)">
                        <parameter left="const GainCompensator &amp;" right="" name="compensator" default=""/>
                        <parameter left="int" right="" name="bl_idx" default=""/>
                        <parameter left="Size" right="" name="bl_per_img" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="feed" fullname="cv::detail::BlocksCompensator::feed" href="cv-detail-blockscompensator.html#feed" status="active" access="protected" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="190" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void feed(const std::vector&lt;Point&gt; &amp;corners, const std::vector&lt;UMat&gt; &amp;images, const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;masks)">
                        <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="corners" default=""/>
                        <parameter left="const std::vector&lt;UMat&gt; &amp;" right="" name="images" default=""/>
                        <parameter left="const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;" right="" name="masks" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="BlocksGainCompensator" fullname="cv::detail::BlocksGainCompensator" href="cv-detail-blocksgaincompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="207" bases="cv::detail::BlocksCompensator">
                    <function threadsafety="unspecified" name="BlocksGainCompensator" fullname="cv::detail::BlocksGainCompensator::BlocksGainCompensator" href="cv-detail-blocksgaincompensator.html#BlocksGainCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="211" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BlocksGainCompensator(int bl_width, int bl_height)">
                        <parameter left="int" right="" name="bl_width" default="32"/>
                        <parameter left="int" right="" name="bl_height" default="32"/>
                    </function>
                    <function threadsafety="unspecified" name="BlocksGainCompensator" fullname="cv::detail::BlocksGainCompensator::BlocksGainCompensator" href="cv-detail-blocksgaincompensator.html#BlocksGainCompensator-1" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="213" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BlocksGainCompensator(int bl_width, int bl_height, int nr_feeds)">
                        <parameter left="int" right="" name="bl_width" default=""/>
                        <parameter left="int" right="" name="bl_height" default=""/>
                        <parameter left="int" right="" name="nr_feeds" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ChannelsCompensator" fullname="cv::detail::ChannelsCompensator" href="cv-detail-channelscompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="145" bases="cv::detail::ExposureCompensator">
                    <function threadsafety="unspecified" name="ChannelsCompensator" fullname="cv::detail::ChannelsCompensator::ChannelsCompensator" href="cv-detail-channelscompensator.html#ChannelsCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="148" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP ChannelsCompensator(int nr_feeds)">
                        <parameter left="int" right="" name="nr_feeds" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ExposureCompensator" fullname="cv::detail::ExposureCompensator" href="cv-detail-exposurecompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="60">
                    <function threadsafety="unspecified" name="ExposureCompensator" fullname="cv::detail::ExposureCompensator::ExposureCompensator" href="cv-detail-exposurecompensator.html#ExposureCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="63" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ExposureCompensator()"/>
                    <function threadsafety="unspecified" name="feed" fullname="cv::detail::ExposureCompensator::feed" href="cv-detail-exposurecompensator.html#feed" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="78" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void feed(const std::vector&lt;Point&gt; &amp;corners, const std::vector&lt;UMat&gt; &amp;images, const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;masks) = 0">
                        <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="corners" default=""/>
                        <parameter left="const std::vector&lt;UMat&gt; &amp;" right="" name="images" default=""/>
                        <parameter left="const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;" right="" name="masks" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~ExposureCompensator" fullname="cv::detail::ExposureCompensator::~ExposureCompensator" href="cv-detail-exposurecompensator.html#dtor.ExposureCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="64" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ExposureCompensator()"/>
                    <variable threadsafety="unspecified" name="CHANNELS" fullname="cv::detail::ExposureCompensator::CHANNELS" href="cv-detail-exposurecompensator.html#CHANNELS-var" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="66" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="CHANNELS_BLOCKS" fullname="cv::detail::ExposureCompensator::CHANNELS_BLOCKS" href="cv-detail-exposurecompensator.html#CHANNELS_BLOCKS-var" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="66" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="GAIN" fullname="cv::detail::ExposureCompensator::GAIN" href="cv-detail-exposurecompensator.html#GAIN-var" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="66" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="GAIN_BLOCKS" fullname="cv::detail::ExposureCompensator::GAIN_BLOCKS" href="cv-detail-exposurecompensator.html#GAIN_BLOCKS-var" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="66" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="NO" fullname="cv::detail::ExposureCompensator::NO" href="cv-detail-exposurecompensator.html#NO-var" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="66" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="updateGain" fullname="cv::detail::ExposureCompensator::updateGain" href="cv-detail-exposurecompensator.html#updateGain-var" status="active" access="protected" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="93" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="GainCompensator" fullname="cv::detail::GainCompensator" href="cv-detail-gaincompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="111" bases="cv::detail::ExposureCompensator">
                    <function threadsafety="unspecified" name="GainCompensator" fullname="cv::detail::GainCompensator::GainCompensator" href="cv-detail-gaincompensator.html#GainCompensator" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="115" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GainCompensator()"/>
                    <function threadsafety="unspecified" name="GainCompensator" fullname="cv::detail::GainCompensator::GainCompensator" href="cv-detail-gaincompensator.html#GainCompensator-1" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="117" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GainCompensator(int nr_feeds)">
                        <parameter left="int" right="" name="nr_feeds" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="buildSimilarityMask" fullname="cv::detail::GainCompensator::buildSimilarityMask" href="cv-detail-gaincompensator.html#buildSimilarityMask" status="active" access="private" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat buildSimilarityMask(InputArray src_array1, InputArray src_array2)">
                        <parameter left="InputArray" right="" name="src_array1" default=""/>
                        <parameter left="InputArray" right="" name="src_array2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="singleFeed" fullname="cv::detail::GainCompensator::singleFeed" href="cv-detail-gaincompensator.html#singleFeed" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void singleFeed(const std::vector&lt;Point&gt; &amp;corners, const std::vector&lt;UMat&gt; &amp;images, const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;masks)">
                        <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="corners" default=""/>
                        <parameter left="const std::vector&lt;UMat&gt; &amp;" right="" name="images" default=""/>
                        <parameter left="const std::vector&lt;std::pair&lt;UMat, uchar&gt; &gt; &amp;" right="" name="masks" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="gains" fullname="cv::detail::GainCompensator::gains" href="cv-detail-gaincompensator.html#gains" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;double&gt;" signature="std::vector&lt;double&gt; gains() const"/>
                </class>
                <class threadsafety="unspecified" name="NoExposureCompensator" fullname="cv::detail::NoExposureCompensator" href="cv-detail-noexposurecompensator.html" status="active" access="public" location="exposure_compensate.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/exposure_compensate.hpp" lineno="98" bases="cv::detail::ExposureCompensator"/>
                <class threadsafety="unspecified" name="AffineBestOf2NearestMatcher" fullname="cv::detail::AffineBestOf2NearestMatcher" href="cv-detail-affinebestof2nearestmatcher.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="222" bases="cv::detail::BestOf2NearestMatcher">
                    <function threadsafety="unspecified" name="AffineBestOf2NearestMatcher" fullname="cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher" href="cv-detail-affinebestof2nearestmatcher.html#AffineBestOf2NearestMatcher" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="237" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP AffineBestOf2NearestMatcher(bool full_affine, bool try_use_gpu, float match_conf, int num_matches_thresh1)">
                        <parameter left="bool" right="" name="full_affine" default="false"/>
                        <parameter left="bool" right="" name="try_use_gpu" default="false"/>
                        <parameter left="float" right="" name="match_conf" default="0.3f"/>
                        <parameter left="int" right="" name="num_matches_thresh1" default="6"/>
                    </function>
                    <variable threadsafety="unspecified" name="full_affine_" fullname="cv::detail::AffineBestOf2NearestMatcher::full_affine_" href="cv-detail-affinebestof2nearestmatcher.html#full_affine_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="245" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="BestOf2NearestMatcher" fullname="cv::detail::BestOf2NearestMatcher" href="cv-detail-bestof2nearestmatcher.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="172" bases="cv::detail::FeaturesMatcher">
                    <function threadsafety="unspecified" name="BestOf2NearestMatcher" fullname="cv::detail::BestOf2NearestMatcher::BestOf2NearestMatcher" href="cv-detail-bestof2nearestmatcher.html#BestOf2NearestMatcher" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="184" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BestOf2NearestMatcher(bool try_use_gpu, float match_conf, int num_matches_thresh1, int num_matches_thresh2)">
                        <parameter left="bool" right="" name="try_use_gpu" default="false"/>
                        <parameter left="float" right="" name="match_conf" default="0.3f"/>
                        <parameter left="int" right="" name="num_matches_thresh1" default="6"/>
                        <parameter left="int" right="" name="num_matches_thresh2" default="6"/>
                    </function>
                    <variable threadsafety="unspecified" name="impl_" fullname="cv::detail::BestOf2NearestMatcher::impl_" href="cv-detail-bestof2nearestmatcher.html#impl_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="196" type="Ptr&lt;FeaturesMatcher&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="num_matches_thresh1_" fullname="cv::detail::BestOf2NearestMatcher::num_matches_thresh1_" href="cv-detail-bestof2nearestmatcher.html#num_matches_thresh1_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="194" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="num_matches_thresh2_" fullname="cv::detail::BestOf2NearestMatcher::num_matches_thresh2_" href="cv-detail-bestof2nearestmatcher.html#num_matches_thresh2_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="195" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="BestOf2NearestRangeMatcher" fullname="cv::detail::BestOf2NearestRangeMatcher" href="cv-detail-bestof2nearestrangematcher.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="199" bases="cv::detail::BestOf2NearestMatcher">
                    <function threadsafety="unspecified" name="BestOf2NearestRangeMatcher" fullname="cv::detail::BestOf2NearestRangeMatcher::BestOf2NearestRangeMatcher" href="cv-detail-bestof2nearestrangematcher.html#BestOf2NearestRangeMatcher" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BestOf2NearestRangeMatcher(int range_width, bool try_use_gpu, float match_conf, int num_matches_thresh1, int num_matches_thresh2)">
                        <parameter left="int" right="" name="range_width" default="5"/>
                        <parameter left="bool" right="" name="try_use_gpu" default="false"/>
                        <parameter left="float" right="" name="match_conf" default="0.3f"/>
                        <parameter left="int" right="" name="num_matches_thresh1" default="6"/>
                        <parameter left="int" right="" name="num_matches_thresh2" default="6"/>
                    </function>
                    <function threadsafety="unspecified" name="operator()" fullname="cv::detail::BestOf2NearestRangeMatcher::operator()" href="cv-detail-bestof2nearestrangematcher.html#operator-28-29" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="205" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(const std::vector&lt;ImageFeatures&gt; &amp;features, std::vector&lt;MatchesInfo&gt; &amp;pairwise_matches, const cv::UMat &amp;mask)">
                        <parameter left="const std::vector&lt;ImageFeatures&gt; &amp;" right="" name="features" default=""/>
                        <parameter left="std::vector&lt;MatchesInfo&gt; &amp;" right="" name="pairwise_matches" default=""/>
                        <parameter left="const cv::UMat &amp;" right="" name="mask" default="cv::UMat()"/>
                    </function>
                    <variable threadsafety="unspecified" name="range_width_" fullname="cv::detail::BestOf2NearestRangeMatcher::range_width_" href="cv-detail-bestof2nearestrangematcher.html#range_width_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="210" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="FeaturesMatcher" fullname="cv::detail::FeaturesMatcher" href="cv-detail-featuresmatcher.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="117">
                    <function threadsafety="unspecified" name="FeaturesMatcher" fullname="cv::detail::FeaturesMatcher::FeaturesMatcher" href="cv-detail-featuresmatcher.html#FeaturesMatcher" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="152" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FeaturesMatcher(bool is_thread_safe)">
                        <parameter left="bool" right="" name="is_thread_safe" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="match" fullname="cv::detail::FeaturesMatcher::match" href="cv-detail-featuresmatcher.html#match" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="161" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void match(const ImageFeatures &amp;features1, const ImageFeatures &amp;features2, MatchesInfo &amp;matches_info) = 0">
                        <parameter left="const ImageFeatures &amp;" right="" name="features1" default=""/>
                        <parameter left="const ImageFeatures &amp;" right="" name="features2" default=""/>
                        <parameter left="MatchesInfo &amp;" right="" name="matches_info" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="is_thread_safe_" fullname="cv::detail::FeaturesMatcher::is_thread_safe_" href="cv-detail-featuresmatcher.html#is_thread_safe_-var" status="active" access="protected" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="164" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ImageFeatures" fullname="cv::detail::ImageFeatures" href="cv-detail-imagefeatures.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="58">
                    <variable threadsafety="unspecified" name="keypoints" fullname="cv::detail::ImageFeatures::keypoints" href="cv-detail-imagefeatures.html#keypoints-var" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="62" type="std::vector&lt;KeyPoint&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="MatchesInfo" fullname="cv::detail::MatchesInfo" href="cv-detail-matchesinfo.html" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="99">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::detail::MatchesInfo::operator=" href="cv-detail-matchesinfo.html#operator-eq" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="103" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatchesInfo &amp;" signature="MatchesInfo &amp; operator=(const MatchesInfo &amp;other)">
                        <parameter left="const MatchesInfo &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="MatchesInfo" fullname="cv::detail::MatchesInfo::MatchesInfo" href="cv-detail-matchesinfo.html#MatchesInfo" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="101" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatchesInfo()"/>
                    <function threadsafety="unspecified" name="MatchesInfo" fullname="cv::detail::MatchesInfo::MatchesInfo" href="cv-detail-matchesinfo.html#MatchesInfo-1" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="102" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatchesInfo(const MatchesInfo &amp;other)">
                        <parameter left="const MatchesInfo &amp;" right="" name="other" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="inliers_mask" fullname="cv::detail::MatchesInfo::inliers_mask" href="cv-detail-matchesinfo.html#inliers_mask-var" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="108" type="std::vector&lt;uchar&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="matches" fullname="cv::detail::MatchesInfo::matches" href="cv-detail-matchesinfo.html#matches-var" status="active" access="public" location="matchers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/matchers.hpp" lineno="107" type="std::vector&lt;DMatch&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="AffineBasedEstimator" fullname="cv::detail::AffineBasedEstimator" href="cv-detail-affinebasedestimator.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="121" bases="cv::detail::Estimator">
                    <function threadsafety="unspecified" name="AffineBasedEstimator" fullname="cv::detail::AffineBasedEstimator::AffineBasedEstimator" href="cv-detail-affinebasedestimator.html#AffineBasedEstimator" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="124" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP AffineBasedEstimator()"/>
                </class>
                <class threadsafety="unspecified" name="BundleAdjusterAffine" fullname="cv::detail::BundleAdjusterAffine" href="cv-detail-bundleadjusteraffine.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="289" bases="cv::detail::BundleAdjusterBase">
                    <function threadsafety="unspecified" name="BundleAdjusterAffine" fullname="cv::detail::BundleAdjusterAffine::BundleAdjusterAffine" href="cv-detail-bundleadjusteraffine.html#BundleAdjusterAffine" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="292" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BundleAdjusterAffine()"/>
                </class>
                <class threadsafety="unspecified" name="BundleAdjusterAffinePartial" fullname="cv::detail::BundleAdjusterAffinePartial" href="cv-detail-bundleadjusteraffinepartial.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="313" bases="cv::detail::BundleAdjusterBase">
                    <function threadsafety="unspecified" name="BundleAdjusterAffinePartial" fullname="cv::detail::BundleAdjusterAffinePartial::BundleAdjusterAffinePartial" href="cv-detail-bundleadjusteraffinepartial.html#BundleAdjusterAffinePartial" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="316" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BundleAdjusterAffinePartial()"/>
                </class>
                <class threadsafety="unspecified" name="BundleAdjusterBase" fullname="cv::detail::BundleAdjusterBase" href="cv-detail-bundleadjusterbase.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="133" bases="cv::detail::Estimator">
                    <function threadsafety="unspecified" name="BundleAdjusterBase" fullname="cv::detail::BundleAdjusterBase::BundleAdjusterBase" href="cv-detail-bundleadjusterbase.html#BundleAdjusterBase" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="155" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BundleAdjusterBase(int num_params_per_cam, int num_errs_per_measurement)">
                        <parameter left="int" right="" name="num_params_per_cam" default=""/>
                        <parameter left="int" right="" name="num_errs_per_measurement" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="calcError" fullname="cv::detail::BundleAdjusterBase::calcError" href="cv-detail-bundleadjusterbase.html#calcError" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="185" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcError(Mat &amp;err) = 0">
                        <parameter left="Mat &amp;" right="" name="err" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="calcJacobian" fullname="cv::detail::BundleAdjusterBase::calcJacobian" href="cv-detail-bundleadjusterbase.html#calcJacobian" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="191" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcJacobian(Mat &amp;jac) = 0">
                        <parameter left="Mat &amp;" right="" name="jac" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setUpInitialCameraParams" fullname="cv::detail::BundleAdjusterBase::setUpInitialCameraParams" href="cv-detail-bundleadjusterbase.html#setUpInitialCameraParams" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="175" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setUpInitialCameraParams(const std::vector&lt;CameraParams&gt; &amp;cameras) = 0">
                        <parameter left="const std::vector&lt;CameraParams&gt; &amp;" right="" name="cameras" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="obtainRefinedCameraParams" fullname="cv::detail::BundleAdjusterBase::obtainRefinedCameraParams" href="cv-detail-bundleadjusterbase.html#obtainRefinedCameraParams" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="180" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void obtainRefinedCameraParams(std::vector&lt;CameraParams&gt; &amp;cameras) const = 0">
                        <parameter left="std::vector&lt;CameraParams&gt; &amp;" right="" name="cameras" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="cam_params_" fullname="cv::detail::BundleAdjusterBase::cam_params_" href="cv-detail-bundleadjusterbase.html#cam_params_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="212" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="conf_thresh_" fullname="cv::detail::BundleAdjusterBase::conf_thresh_" href="cv-detail-bundleadjusterbase.html#conf_thresh_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="206" type="double" static="false"/>
                    <variable threadsafety="unspecified" name="edges_" fullname="cv::detail::BundleAdjusterBase::edges_" href="cv-detail-bundleadjusterbase.html#edges_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="215" type="std::vector&lt;std::pair&lt;int, int&gt; &gt;" static="false"/>
                    <variable threadsafety="unspecified" name="features_" fullname="cv::detail::BundleAdjusterBase::features_" href="cv-detail-bundleadjusterbase.html#features_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="202" type="const ImageFeatures *" static="false"/>
                    <variable threadsafety="unspecified" name="num_errs_per_measurement_" fullname="cv::detail::BundleAdjusterBase::num_errs_per_measurement_" href="cv-detail-bundleadjusterbase.html#num_errs_per_measurement_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="200" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="num_images_" fullname="cv::detail::BundleAdjusterBase::num_images_" href="cv-detail-bundleadjusterbase.html#num_images_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="196" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="num_params_per_cam_" fullname="cv::detail::BundleAdjusterBase::num_params_per_cam_" href="cv-detail-bundleadjusterbase.html#num_params_per_cam_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="199" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="pairwise_matches_" fullname="cv::detail::BundleAdjusterBase::pairwise_matches_" href="cv-detail-bundleadjusterbase.html#pairwise_matches_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="203" type="const MatchesInfo *" static="false"/>
                    <variable threadsafety="unspecified" name="refinement_mask_" fullname="cv::detail::BundleAdjusterBase::refinement_mask_" href="cv-detail-bundleadjusterbase.html#refinement_mask_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="194" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="term_criteria_" fullname="cv::detail::BundleAdjusterBase::term_criteria_" href="cv-detail-bundleadjusterbase.html#term_criteria_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="209" type="TermCriteria" static="false"/>
                    <variable threadsafety="unspecified" name="total_num_matches_" fullname="cv::detail::BundleAdjusterBase::total_num_matches_" href="cv-detail-bundleadjusterbase.html#total_num_matches_-var" status="active" access="protected" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="197" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="BundleAdjusterRay" fullname="cv::detail::BundleAdjusterRay" href="cv-detail-bundleadjusterray.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="265" bases="cv::detail::BundleAdjusterBase">
                    <function threadsafety="unspecified" name="BundleAdjusterRay" fullname="cv::detail::BundleAdjusterRay::BundleAdjusterRay" href="cv-detail-bundleadjusterray.html#BundleAdjusterRay" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="268" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BundleAdjusterRay()"/>
                </class>
                <class threadsafety="unspecified" name="BundleAdjusterReproj" fullname="cv::detail::BundleAdjusterReproj" href="cv-detail-bundleadjusterreproj.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="245" bases="cv::detail::BundleAdjusterBase">
                    <function threadsafety="unspecified" name="BundleAdjusterReproj" fullname="cv::detail::BundleAdjusterReproj::BundleAdjusterReproj" href="cv-detail-bundleadjusterreproj.html#BundleAdjusterReproj" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BundleAdjusterReproj()"/>
                </class>
                <class threadsafety="unspecified" name="Estimator" fullname="cv::detail::Estimator" href="cv-detail-estimator.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="65">
                    <function threadsafety="unspecified" name="~Estimator" fullname="cv::detail::Estimator::~Estimator" href="cv-detail-estimator.html#dtor.Estimator" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="68" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Estimator()"/>
                </class>
                <class threadsafety="unspecified" name="HomographyBasedEstimator" fullname="cv::detail::HomographyBasedEstimator" href="cv-detail-homographybasedestimator.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="100" bases="cv::detail::Estimator">
                    <function threadsafety="unspecified" name="HomographyBasedEstimator" fullname="cv::detail::HomographyBasedEstimator::HomographyBasedEstimator" href="cv-detail-homographybasedestimator.html#HomographyBasedEstimator" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="103" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HomographyBasedEstimator(bool is_focals_estimated)">
                        <parameter left="bool" right="" name="is_focals_estimated" default="false"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="NoBundleAdjuster" fullname="cv::detail::NoBundleAdjuster" href="cv-detail-nobundleadjuster.html" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="221" bases="cv::detail::BundleAdjusterBase">
                    <function threadsafety="unspecified" name="NoBundleAdjuster" fullname="cv::detail::NoBundleAdjuster::NoBundleAdjuster" href="cv-detail-nobundleadjuster.html#NoBundleAdjuster" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="224" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP NoBundleAdjuster()"/>
                </class>
                <enum threadsafety="unspecified" name="WaveCorrectKind" fullname="cv::detail::WaveCorrectKind" href="cv-detail.html#WaveCorrectKind-enum" status="active" access="public" location="motion_estimators.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/motion_estimators.hpp" lineno="328">
                    <value name="WAVE_CORRECT_HORIZ" value="0"/>
                    <value name="WAVE_CORRECT_VERT" value="1"/>
                    <value name="WAVE_CORRECT_AUTO" value="2"/>
                </enum>
                <class threadsafety="unspecified" name="DpSeamFinder" fullname="cv::detail::DpSeamFinder" href="cv-detail-dpseamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="120" bases="cv::detail::SeamFinder">
                    <class threadsafety="unspecified" name="ClosePoints" fullname="cv::detail::DpSeamFinder::ClosePoints" href="cv-detail-dpseamfinder-closepoints.html" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="167">
                        <function threadsafety="unspecified" name="ClosePoints" fullname="cv::detail::DpSeamFinder::ClosePoints::ClosePoints" href="cv-detail-dpseamfinder-closepoints.html#ClosePoints" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="170" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ClosePoints(int minDist)">
                            <parameter left="int" right="" name="minDist" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator()" fullname="cv::detail::DpSeamFinder::ClosePoints::operator()" href="cv-detail-dpseamfinder-closepoints.html#operator-28-29" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="172" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const Point &amp;p1, const Point &amp;p2) const">
                            <parameter left="const Point &amp;" right="" name="p1" default=""/>
                            <parameter left="const Point &amp;" right="" name="p2" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="ImagePairLess" fullname="cv::detail::DpSeamFinder::ImagePairLess" href="cv-detail-dpseamfinder-imagepairless.html" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="143">
                        <function threadsafety="unspecified" name="ImagePairLess" fullname="cv::detail::DpSeamFinder::ImagePairLess::ImagePairLess" href="cv-detail-dpseamfinder-imagepairless.html#ImagePairLess" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="146" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ImagePairLess(const std::vector&lt;Mat&gt; &amp;images, const std::vector&lt;Point&gt; &amp;corners)">
                            <parameter left="const std::vector&lt;Mat&gt; &amp;" right="" name="images" default=""/>
                            <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="corners" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator()" fullname="cv::detail::DpSeamFinder::ImagePairLess::operator()" href="cv-detail-dpseamfinder-imagepairless.html#operator-28-29" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="149" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const std::pair&lt;size_t, size_t&gt; &amp;l, const std::pair&lt;size_t, size_t&gt; &amp;r) const">
                            <parameter left="const std::pair&lt;size_t, size_t&gt; &amp;" right="" name="l" default=""/>
                            <parameter left="const std::pair&lt;size_t, size_t&gt; &amp;" right="" name="r" default=""/>
                        </function>
                    </class>
                    <enum threadsafety="unspecified" name="ComponentState" fullname="cv::detail::DpSeamFinder::ComponentState" href="cv-detail-dpseamfinder.html#ComponentState-enum" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="136">
                        <value name="FIRST" value="1"/>
                        <value name="SECOND" value="2"/>
                        <value name="INTERS" value="4"/>
                        <value name="INTERS_FIRST" value="INTERS | FIRST"/>
                        <value name="INTERS_SECOND" value="INTERS | SECOND"/>
                    </enum>
                    <enum threadsafety="unspecified" name="CostFunction" fullname="cv::detail::DpSeamFinder::CostFunction" href="cv-detail-dpseamfinder.html#CostFunction-enum" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="123">
                        <value name="COLOR" value="0"/>
                        <value name="COLOR_GRAD" value="1"/>
                    </enum>
                    <function threadsafety="unspecified" name="DpSeamFinder" fullname="cv::detail::DpSeamFinder::DpSeamFinder" href="cv-detail-dpseamfinder.html#DpSeamFinder-1" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="126" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DpSeamFinder(String costFunc)">
                        <parameter left="String" right="" name="costFunc" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DpSeamFinder" fullname="cv::detail::DpSeamFinder::DpSeamFinder" href="cv-detail-dpseamfinder.html#DpSeamFinder" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="125" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DpSeamFinder(CostFunction costFunc)">
                        <parameter left="CostFunction" right="" name="costFunc" default="COLOR"/>
                    </function>
                    <function threadsafety="unspecified" name="closeToContour" fullname="cv::detail::DpSeamFinder::closeToContour" href="cv-detail-dpseamfinder.html#closeToContour" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="196" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool closeToContour(int y, int x, const Mat_&lt;uchar&gt; &amp;contourMask)">
                        <parameter left="int" right="" name="y" default=""/>
                        <parameter left="int" right="" name="x" default=""/>
                        <parameter left="const Mat_&lt;uchar&gt; &amp;" right="" name="contourMask" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="estimateSeam" fullname="cv::detail::DpSeamFinder::estimateSeam" href="cv-detail-dpseamfinder.html#estimateSeam" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="204" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool estimateSeam(const Mat &amp;image1, const Mat &amp;image2, Point tl1, Point tl2, int comp, Point p1, Point p2, std::vector&lt;Point&gt; &amp;seam, bool &amp;isHorizontal)">
                        <parameter left="const Mat &amp;" right="" name="image1" default=""/>
                        <parameter left="const Mat &amp;" right="" name="image2" default=""/>
                        <parameter left="Point" right="" name="tl1" default=""/>
                        <parameter left="Point" right="" name="tl2" default=""/>
                        <parameter left="int" right="" name="comp" default=""/>
                        <parameter left="Point" right="" name="p1" default=""/>
                        <parameter left="Point" right="" name="p2" default=""/>
                        <parameter left="std::vector&lt;Point&gt; &amp;" right="" name="seam" default=""/>
                        <parameter left="bool &amp;" right="" name="isHorizontal" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getSeamTips" fullname="cv::detail::DpSeamFinder::getSeamTips" href="cv-detail-dpseamfinder.html#getSeamTips" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="198" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getSeamTips(int comp1, int comp2, Point &amp;p1, Point &amp;p2)">
                        <parameter left="int" right="" name="comp1" default=""/>
                        <parameter left="int" right="" name="comp2" default=""/>
                        <parameter left="Point &amp;" right="" name="p1" default=""/>
                        <parameter left="Point &amp;" right="" name="p2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="hasOnlyOneNeighbor" fullname="cv::detail::DpSeamFinder::hasOnlyOneNeighbor" href="cv-detail-dpseamfinder.html#hasOnlyOneNeighbor" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool hasOnlyOneNeighbor(int comp)">
                        <parameter left="int" right="" name="comp" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="computeCosts" fullname="cv::detail::DpSeamFinder::computeCosts" href="cv-detail-dpseamfinder.html#computeCosts" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="200" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeCosts(const Mat &amp;image1, const Mat &amp;image2, Point tl1, Point tl2, int comp, Mat_&lt;float&gt; &amp;costV, Mat_&lt;float&gt; &amp;costH)">
                        <parameter left="const Mat &amp;" right="" name="image1" default=""/>
                        <parameter left="const Mat &amp;" right="" name="image2" default=""/>
                        <parameter left="Point" right="" name="tl1" default=""/>
                        <parameter left="Point" right="" name="tl2" default=""/>
                        <parameter left="int" right="" name="comp" default=""/>
                        <parameter left="Mat_&lt;float&gt; &amp;" right="" name="costV" default=""/>
                        <parameter left="Mat_&lt;float&gt; &amp;" right="" name="costH" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="computeGradients" fullname="cv::detail::DpSeamFinder::computeGradients" href="cv-detail-dpseamfinder.html#computeGradients" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="192" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeGradients(const Mat &amp;image1, const Mat &amp;image2)">
                        <parameter left="const Mat &amp;" right="" name="image1" default=""/>
                        <parameter left="const Mat &amp;" right="" name="image2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="findComponents" fullname="cv::detail::DpSeamFinder::findComponents" href="cv-detail-dpseamfinder.html#findComponents" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="185" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findComponents()"/>
                    <function threadsafety="unspecified" name="findEdges" fullname="cv::detail::DpSeamFinder::findEdges" href="cv-detail-dpseamfinder.html#findEdges" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="187" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findEdges()"/>
                    <function threadsafety="unspecified" name="process" fullname="cv::detail::DpSeamFinder::process" href="cv-detail-dpseamfinder.html#process" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="182" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void process(const Mat &amp;image1, const Mat &amp;image2, Point tl1, Point tl2, Mat &amp;mask1, Mat &amp;mask2)">
                        <parameter left="const Mat &amp;" right="" name="image1" default=""/>
                        <parameter left="const Mat &amp;" right="" name="image2" default=""/>
                        <parameter left="Point" right="" name="tl1" default=""/>
                        <parameter left="Point" right="" name="tl2" default=""/>
                        <parameter left="Mat &amp;" right="" name="mask1" default=""/>
                        <parameter left="Mat &amp;" right="" name="mask2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="resolveConflicts" fullname="cv::detail::DpSeamFinder::resolveConflicts" href="cv-detail-dpseamfinder.html#resolveConflicts" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="189" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resolveConflicts(const Mat &amp;image1, const Mat &amp;image2, Point tl1, Point tl2, Mat &amp;mask1, Mat &amp;mask2)">
                        <parameter left="const Mat &amp;" right="" name="image1" default=""/>
                        <parameter left="const Mat &amp;" right="" name="image2" default=""/>
                        <parameter left="Point" right="" name="tl1" default=""/>
                        <parameter left="Point" right="" name="tl2" default=""/>
                        <parameter left="Mat &amp;" right="" name="mask1" default=""/>
                        <parameter left="Mat &amp;" right="" name="mask2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setCostFunction" fullname="cv::detail::DpSeamFinder::setCostFunction" href="cv-detail-dpseamfinder.html#setCostFunction" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setCostFunction(CostFunction val)">
                        <parameter left="CostFunction" right="" name="val" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="updateLabelsUsingSeam" fullname="cv::detail::DpSeamFinder::updateLabelsUsingSeam" href="cv-detail-dpseamfinder.html#updateLabelsUsingSeam" status="active" access="private" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="208" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateLabelsUsingSeam(int comp1, int comp2, const std::vector&lt;Point&gt; &amp;seam, bool isHorizontalSeam)">
                        <parameter left="int" right="" name="comp1" default=""/>
                        <parameter left="int" right="" name="comp2" default=""/>
                        <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="seam" default=""/>
                        <parameter left="bool" right="" name="isHorizontalSeam" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="costFunction" fullname="cv::detail::DpSeamFinder::costFunction" href="cv-detail-dpseamfinder.html#costFunction" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="128" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CostFunction" signature="CostFunction costFunction() const"/>
                </class>
                <class threadsafety="unspecified" name="GraphCutSeamFinder" fullname="cv::detail::GraphCutSeamFinder" href="cv-detail-graphcutseamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="240" bases="cv::detail::GraphCutSeamFinderBase,cv::detail::SeamFinder">
                    <function threadsafety="unspecified" name="GraphCutSeamFinder" fullname="cv::detail::GraphCutSeamFinder::GraphCutSeamFinder" href="cv-detail-graphcutseamfinder.html#GraphCutSeamFinder-1" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="245" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP GraphCutSeamFinder(String cost_type, float terminal_cost, float bad_region_penalty)">
                        <parameter left="String" right="" name="cost_type" default=""/>
                        <parameter left="float" right="" name="terminal_cost" default="10000.f"/>
                        <parameter left="float" right="" name="bad_region_penalty" default="1000.f"/>
                    </function>
                    <function threadsafety="unspecified" name="GraphCutSeamFinder" fullname="cv::detail::GraphCutSeamFinder::GraphCutSeamFinder" href="cv-detail-graphcutseamfinder.html#GraphCutSeamFinder" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="243" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GraphCutSeamFinder(int cost_type, float terminal_cost, float bad_region_penalty)">
                        <parameter left="int" right="" name="cost_type" default="COST_COLOR_GRAD"/>
                        <parameter left="float" right="" name="terminal_cost" default="10000.f"/>
                        <parameter left="float" right="" name="bad_region_penalty" default="1000.f"/>
                    </function>
                    <function threadsafety="unspecified" name="~GraphCutSeamFinder" fullname="cv::detail::GraphCutSeamFinder::~GraphCutSeamFinder" href="cv-detail-graphcutseamfinder.html#dtor.GraphCutSeamFinder" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="248" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GraphCutSeamFinder()"/>
                </class>
                <class threadsafety="unspecified" name="GraphCutSeamFinderBase" fullname="cv::detail::GraphCutSeamFinderBase" href="cv-detail-graphcutseamfinderbase.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="232">
                    <enum threadsafety="unspecified" name="CostType" fullname="cv::detail::GraphCutSeamFinderBase::CostType" href="cv-detail-graphcutseamfinderbase.html#CostType-enum" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="235">
                        <value name="COST_COLOR" value="0"/>
                        <value name="COST_COLOR_GRAD" value="1"/>
                    </enum>
                </class>
                <class threadsafety="unspecified" name="NoSeamFinder" fullname="cv::detail::NoSeamFinder" href="cv-detail-noseamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="76" bases="cv::detail::SeamFinder"/>
                <class threadsafety="unspecified" name="PairwiseSeamFinder" fullname="cv::detail::PairwiseSeamFinder" href="cv-detail-pairwiseseamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="84" bases="cv::detail::SeamFinder">
                    <function threadsafety="unspecified" name="findInPair" fullname="cv::detail::PairwiseSeamFinder::findInPair" href="cv-detail-pairwiseseamfinder.html#findInPair" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="98" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findInPair(size_t first, size_t second, Rect roi) = 0">
                        <parameter left="size_t" right="" name="first" default=""/>
                        <parameter left="size_t" right="" name="second" default=""/>
                        <parameter left="Rect" right="" name="roi" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="run" fullname="cv::detail::PairwiseSeamFinder::run" href="cv-detail-pairwiseseamfinder.html#run" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="91" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void run()"/>
                    <variable threadsafety="unspecified" name="corners_" fullname="cv::detail::PairwiseSeamFinder::corners_" href="cv-detail-pairwiseseamfinder.html#corners_-var" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="102" type="std::vector&lt;Point&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="images_" fullname="cv::detail::PairwiseSeamFinder::images_" href="cv-detail-pairwiseseamfinder.html#images_-var" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="100" type="std::vector&lt;UMat&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="masks_" fullname="cv::detail::PairwiseSeamFinder::masks_" href="cv-detail-pairwiseseamfinder.html#masks_-var" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="103" type="std::vector&lt;UMat&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="sizes_" fullname="cv::detail::PairwiseSeamFinder::sizes_" href="cv-detail-pairwiseseamfinder.html#sizes_-var" status="active" access="protected" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="101" type="std::vector&lt;Size&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SeamFinder" fullname="cv::detail::SeamFinder" href="cv-detail-seamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="58"/>
                <class threadsafety="unspecified" name="VoronoiSeamFinder" fullname="cv::detail::VoronoiSeamFinder" href="cv-detail-voronoiseamfinder.html" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="108" bases="cv::detail::PairwiseSeamFinder">
                    <function threadsafety="unspecified" name="find" fullname="cv::detail::VoronoiSeamFinder::find" href="cv-detail-voronoiseamfinder.html#find" status="active" access="public" location="seam_finders.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/seam_finders.hpp" lineno="113" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void find(const std::vector&lt;Size&gt; &amp;size, const std::vector&lt;Point&gt; &amp;corners, std::vector&lt;UMat&gt; &amp;masks)">
                        <parameter left="const std::vector&lt;Size&gt; &amp;" right="" name="size" default=""/>
                        <parameter left="const std::vector&lt;Point&gt; &amp;" right="" name="corners" default=""/>
                        <parameter left="std::vector&lt;UMat&gt; &amp;" right="" name="masks" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Timelapser" fullname="cv::detail::Timelapser" href="cv-detail-timelapser.html" status="active" access="public" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="57">
                    <function threadsafety="unspecified" name="test_point" fullname="cv::detail::Timelapser::test_point" href="cv-detail-timelapser.html#test_point" status="active" access="protected" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="73" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool test_point(Point pt)">
                        <parameter left="Point" right="" name="pt" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Timelapser" fullname="cv::detail::Timelapser::~Timelapser" href="cv-detail-timelapser.html#dtor.Timelapser" status="active" access="public" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="63" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Timelapser()"/>
                    <variable threadsafety="unspecified" name="AS_IS" fullname="cv::detail::Timelapser::AS_IS" href="cv-detail-timelapser.html#AS_IS-var" status="active" access="public" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="61" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="CROP" fullname="cv::detail::Timelapser::CROP" href="cv-detail-timelapser.html#CROP-var" status="active" access="public" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="61" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="dst_" fullname="cv::detail::Timelapser::dst_" href="cv-detail-timelapser.html#dst_-var" status="active" access="protected" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="75" type="UMat" static="false"/>
                    <variable threadsafety="unspecified" name="dst_roi_" fullname="cv::detail::Timelapser::dst_roi_" href="cv-detail-timelapser.html#dst_roi_-var" status="active" access="protected" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="76" type="Rect" static="false"/>
                </class>
                <class threadsafety="unspecified" name="TimelapserCrop" fullname="cv::detail::TimelapserCrop" href="cv-detail-timelapsercrop.html" status="active" access="public" location="timelapsers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/timelapsers.hpp" lineno="80" bases="cv::detail::Timelapser"/>
                <class threadsafety="unspecified" name="DisjointSets" fullname="cv::detail::DisjointSets" href="cv-detail-disjointsets.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="55">
                    <function threadsafety="unspecified" name="DisjointSets" fullname="cv::detail::DisjointSets::DisjointSets" href="cv-detail-disjointsets.html#DisjointSets" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DisjointSets(int elem_count)">
                        <parameter left="int" right="" name="elem_count" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="findSetByElem" fullname="cv::detail::DisjointSets::findSetByElem" href="cv-detail-disjointsets.html#findSetByElem" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int findSetByElem(int elem)">
                        <parameter left="int" right="" name="elem" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mergeSets" fullname="cv::detail::DisjointSets::mergeSets" href="cv-detail-disjointsets.html#mergeSets" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int mergeSets(int set1, int set2)">
                        <parameter left="int" right="" name="set1" default=""/>
                        <parameter left="int" right="" name="set2" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="createOneElemSets" fullname="cv::detail::DisjointSets::createOneElemSets" href="cv-detail-disjointsets.html#createOneElemSets" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void createOneElemSets(int elem_count)">
                        <parameter left="int" right="" name="elem_count" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="parent" fullname="cv::detail::DisjointSets::parent" href="cv-detail-disjointsets.html#parent-var" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="64" type="std::vector&lt;int&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="size" fullname="cv::detail::DisjointSets::size" href="cv-detail-disjointsets.html#size-var" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="65" type="std::vector&lt;int&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Graph" fullname="cv::detail::Graph" href="cv-detail-graph.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="85">
                    <function threadsafety="unspecified" name="Graph" fullname="cv::detail::Graph::Graph" href="cv-detail-graph.html#Graph" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="88" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Graph(int num_vertices)">
                        <parameter left="int" right="" name="num_vertices" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="addEdge" fullname="cv::detail::Graph::addEdge" href="cv-detail-graph.html#addEdge" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="91" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEdge(int from, int to, float weight)">
                        <parameter left="int" right="" name="from" default=""/>
                        <parameter left="int" right="" name="to" default=""/>
                        <parameter left="float" right="" name="weight" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::detail::Graph::create" href="cv-detail-graph.html#create" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int num_vertices)">
                        <parameter left="int" right="" name="num_vertices" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="forEach" fullname="cv::detail::Graph::forEach" href="cv-detail-graph.html#forEach" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="92" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="B" signature="B forEach(B body) const">
                        <parameter left="B" right="" name="body" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="walkBreadthFirst" fullname="cv::detail::Graph::walkBreadthFirst" href="cv-detail-graph.html#walkBreadthFirst" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="93" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="B" signature="B walkBreadthFirst(int from, B body) const">
                        <parameter left="int" right="" name="from" default=""/>
                        <parameter left="B" right="" name="body" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="numVertices" fullname="cv::detail::Graph::numVertices" href="cv-detail-graph.html#numVertices" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="90" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int numVertices() const"/>
                </class>
                <class threadsafety="unspecified" name="GraphEdge" fullname="cv::detail::GraphEdge" href="cv-detail-graphedge.html" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="72">
                    <function threadsafety="unspecified" name="GraphEdge" fullname="cv::detail::GraphEdge::GraphEdge" href="cv-detail-graphedge.html#GraphEdge" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GraphEdge(int from, int to, float weight)">
                        <parameter left="int" right="" name="from" default=""/>
                        <parameter left="int" right="" name="to" default=""/>
                        <parameter left="float" right="" name="weight" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;" fullname="cv::detail::GraphEdge::operator&lt;" href="cv-detail-graphedge.html#operator-lt" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="75" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const GraphEdge &amp;other) const">
                        <parameter left="const GraphEdge &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&gt;" fullname="cv::detail::GraphEdge::operator&gt;" href="cv-detail-graphedge.html#operator-gt" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&gt;(const GraphEdge &amp;other) const">
                        <parameter left="const GraphEdge &amp;" right="" name="other" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="weight" fullname="cv::detail::GraphEdge::weight" href="cv-detail-graphedge.html#weight-var" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="79" type="float" static="false"/>
                </class>
                <function threadsafety="unspecified" name="GraphEdge" fullname="cv::detail::GraphEdge" href="cv-detail.html#GraphEdge" status="active" access="public" location="util.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GraphEdge(int _from, int _to, float _weight)">
                    <parameter left="int" right="" name="_from" default=""/>
                    <parameter left="int" right="" name="_to" default=""/>
                    <parameter left="float" right="" name="_weight" default=""/>
                </function>
                <function threadsafety="unspecified" name="normL2sq" fullname="cv::detail::normL2sq" href="cv-detail.html#normL2sq" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="115" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double normL2sq(const Mat &amp;r)">
                    <parameter left="const Mat &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="sqr" fullname="cv::detail::sqr" href="cv-detail.html#sqr-2" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="124" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double sqr(double x)">
                    <parameter left="double" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="normL2" fullname="cv::detail::normL2" href="cv-detail.html#normL2" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="101" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float normL2(const Point3f &amp;a)">
                    <parameter left="const Point3f &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="normL2" fullname="cv::detail::normL2" href="cv-detail.html#normL2-1" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="108" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float normL2(const Point3f &amp;a, const Point3f &amp;b)">
                    <parameter left="const Point3f &amp;" right="" name="a" default=""/>
                    <parameter left="const Point3f &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="sqr" fullname="cv::detail::sqr" href="cv-detail.html#sqr-1" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="123" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float sqr(float x)">
                    <parameter left="float" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="sqr" fullname="cv::detail::sqr" href="cv-detail.html#sqr" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="122" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int sqr(int x)">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="forEach" fullname="cv::detail::forEach" href="cv-detail.html#forEach" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="B" signature="B forEach(B body) const">
                    <parameter left="B" right="" name="body" default=""/>
                </function>
                <function threadsafety="unspecified" name="walkBreadthFirst" fullname="cv::detail::walkBreadthFirst" href="cv-detail.html#walkBreadthFirst" status="active" access="public" location="util_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/util_inl.hpp" lineno="69" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="B" signature="B walkBreadthFirst(int from, B body) const">
                    <parameter left="int" right="" name="from" default=""/>
                    <parameter left="B" right="" name="body" default=""/>
                </function>
                <class threadsafety="unspecified" name="AffineWarper" fullname="cv::detail::AffineWarper" href="cv-detail-affinewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="235" bases="cv::detail::PlaneWarper">
                    <function threadsafety="unspecified" name="AffineWarper" fullname="cv::detail::AffineWarper::AffineWarper" href="cv-detail-affinewarper.html#AffineWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="242" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AffineWarper(float scale)">
                        <parameter left="float" right="" name="scale" default="1.f"/>
                    </function>
                    <function threadsafety="unspecified" name="getRTfromHomogeneous" fullname="cv::detail::AffineWarper::getRTfromHomogeneous" href="cv-detail-affinewarper.html#getRTfromHomogeneous" status="active" access="protected" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="298" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getRTfromHomogeneous(InputArray H, Mat &amp;R, Mat &amp;T)">
                        <parameter left="InputArray" right="" name="H" default=""/>
                        <parameter left="Mat &amp;" right="" name="R" default=""/>
                        <parameter left="Mat &amp;" right="" name="T" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CompressedRectilinearPortraitProjector" fullname="cv::detail::CompressedRectilinearPortraitProjector" href="cv-detail-compressedrectilinearportraitprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="409" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::CompressedRectilinearPortraitProjector::mapBackward" href="cv-detail-compressedrectilinearportraitprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="414" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::CompressedRectilinearPortraitProjector::mapForward" href="cv-detail-compressedrectilinearportraitprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="413" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CompressedRectilinearPortraitWarper" fullname="cv::detail::CompressedRectilinearPortraitWarper" href="cv-detail-compressedrectilinearportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="418" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="CompressedRectilinearPortraitWarper" fullname="cv::detail::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper" href="cv-detail-compressedrectilinearportraitwarper.html#CompressedRectilinearPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="421" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompressedRectilinearPortraitWarper(float scale, float A, float B)">
                        <parameter left="float" right="" name="scale" default=""/>
                        <parameter left="float" right="" name="A" default="1"/>
                        <parameter left="float" right="" name="B" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CompressedRectilinearProjector" fullname="cv::detail::CompressedRectilinearProjector" href="cv-detail-compressedrectilinearprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="388" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::CompressedRectilinearProjector::mapBackward" href="cv-detail-compressedrectilinearprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="393" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::CompressedRectilinearProjector::mapForward" href="cv-detail-compressedrectilinearprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="392" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CompressedRectilinearWarper" fullname="cv::detail::CompressedRectilinearWarper" href="cv-detail-compressedrectilinearwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="397" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="CompressedRectilinearWarper" fullname="cv::detail::CompressedRectilinearWarper::CompressedRectilinearWarper" href="cv-detail-compressedrectilinearwarper.html#CompressedRectilinearWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="400" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompressedRectilinearWarper(float scale, float A, float B)">
                        <parameter left="float" right="" name="scale" default=""/>
                        <parameter left="float" right="" name="A" default="1"/>
                        <parameter left="float" right="" name="B" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CylindricalPortraitProjector" fullname="cv::detail::CylindricalPortraitProjector" href="cv-detail-cylindricalportraitprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="637" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::CylindricalPortraitProjector::mapBackward" href="cv-detail-cylindricalportraitprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="640" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::CylindricalPortraitProjector::mapForward" href="cv-detail-cylindricalportraitprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="639" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CylindricalPortraitWarper" fullname="cv::detail::CylindricalPortraitWarper" href="cv-detail-cylindricalportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="644" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="CylindricalPortraitWarper" fullname="cv::detail::CylindricalPortraitWarper::CylindricalPortraitWarper" href="cv-detail-cylindricalportraitwarper.html#CylindricalPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="647" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CylindricalPortraitWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CylindricalProjector" fullname="cv::detail::CylindricalProjector" href="cv-detail-cylindricalprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="332" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::CylindricalProjector::mapBackward" href="cv-detail-cylindricalprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="335" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::CylindricalProjector::mapForward" href="cv-detail-cylindricalprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="334" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CylindricalWarper" fullname="cv::detail::CylindricalWarper" href="cv-detail-cylindricalwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="341" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="CylindricalWarper" fullname="cv::detail::CylindricalWarper::CylindricalWarper" href="cv-detail-cylindricalwarper.html#CylindricalWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="348" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CylindricalWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CylindricalWarperGpu" fullname="cv::detail::CylindricalWarperGpu" href="cv-detail-cylindricalwarpergpu.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="587" bases="cv::detail::CylindricalWarper">
                    <function threadsafety="unspecified" name="CylindricalWarperGpu" fullname="cv::detail::CylindricalWarperGpu::CylindricalWarperGpu" href="cv-detail-cylindricalwarpergpu.html#CylindricalWarperGpu" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="590" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CylindricalWarperGpu(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warp" fullname="cv::detail::CylindricalWarperGpu::warp" href="cv-detail-cylindricalwarpergpu.html#warp" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="611" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point warp(const cuda::GpuMat &amp;src, InputArray K, InputArray R, int interp_mode, int border_mode, cuda::GpuMat &amp;dst)">
                        <parameter left="const cuda::GpuMat &amp;" right="" name="src" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="int" right="" name="interp_mode" default=""/>
                        <parameter left="int" right="" name="border_mode" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="dst" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="FisheyeProjector" fullname="cv::detail::FisheyeProjector" href="cv-detail-fisheyeprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="360" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::FisheyeProjector::mapBackward" href="cv-detail-fisheyeprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="363" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::FisheyeProjector::mapForward" href="cv-detail-fisheyeprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="362" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="FisheyeWarper" fullname="cv::detail::FisheyeWarper" href="cv-detail-fisheyewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="367" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="FisheyeWarper" fullname="cv::detail::FisheyeWarper::FisheyeWarper" href="cv-detail-fisheyewarper.html#FisheyeWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="370" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FisheyeWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MercatorProjector" fullname="cv::detail::MercatorProjector" href="cv-detail-mercatorprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="473" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::MercatorProjector::mapBackward" href="cv-detail-mercatorprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="476" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::MercatorProjector::mapForward" href="cv-detail-mercatorprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="475" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MercatorWarper" fullname="cv::detail::MercatorWarper" href="cv-detail-mercatorwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="480" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="MercatorWarper" fullname="cv::detail::MercatorWarper::MercatorWarper" href="cv-detail-mercatorwarper.html#MercatorWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="483" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MercatorWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PaniniPortraitProjector" fullname="cv::detail::PaniniPortraitProjector" href="cv-detail-paniniportraitprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="451" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::PaniniPortraitProjector::mapBackward" href="cv-detail-paniniportraitprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="456" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::PaniniPortraitProjector::mapForward" href="cv-detail-paniniportraitprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="455" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PaniniPortraitWarper" fullname="cv::detail::PaniniPortraitWarper" href="cv-detail-paniniportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="460" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="PaniniPortraitWarper" fullname="cv::detail::PaniniPortraitWarper::PaniniPortraitWarper" href="cv-detail-paniniportraitwarper.html#PaniniPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="463" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PaniniPortraitWarper(float scale, float A, float B)">
                        <parameter left="float" right="" name="scale" default=""/>
                        <parameter left="float" right="" name="A" default="1"/>
                        <parameter left="float" right="" name="B" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PaniniProjector" fullname="cv::detail::PaniniProjector" href="cv-detail-paniniprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="430" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::PaniniProjector::mapBackward" href="cv-detail-paniniprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="435" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::PaniniProjector::mapForward" href="cv-detail-paniniprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PaniniWarper" fullname="cv::detail::PaniniWarper" href="cv-detail-paniniwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="439" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="PaniniWarper" fullname="cv::detail::PaniniWarper::PaniniWarper" href="cv-detail-paniniwarper.html#PaniniWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="442" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PaniniWarper(float scale, float A, float B)">
                        <parameter left="float" right="" name="scale" default=""/>
                        <parameter left="float" right="" name="A" default="1"/>
                        <parameter left="float" right="" name="B" default="1"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PlanePortraitProjector" fullname="cv::detail::PlanePortraitProjector" href="cv-detail-planeportraitprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="656" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::PlanePortraitProjector::mapBackward" href="cv-detail-planeportraitprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="659" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::PlanePortraitProjector::mapForward" href="cv-detail-planeportraitprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="658" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PlanePortraitWarper" fullname="cv::detail::PlanePortraitWarper" href="cv-detail-planeportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="663" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="PlanePortraitWarper" fullname="cv::detail::PlanePortraitWarper::PlanePortraitWarper" href="cv-detail-planeportraitwarper.html#PlanePortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="666" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlanePortraitWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PlaneProjector" fullname="cv::detail::PlaneProjector" href="cv-detail-planeprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="191" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::PlaneProjector::mapBackward" href="cv-detail-planeprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::PlaneProjector::mapForward" href="cv-detail-planeprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="193" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PlaneWarper" fullname="cv::detail::PlaneWarper" href="cv-detail-planewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="199" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="PlaneWarper" fullname="cv::detail::PlaneWarper::PlaneWarper" href="cv-detail-planewarper.html#PlaneWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="206" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlaneWarper(float scale)">
                        <parameter left="float" right="" name="scale" default="1.f"/>
                    </function>
                    <function threadsafety="unspecified" name="warpPoint" fullname="cv::detail::PlaneWarper::warpPoint" href="cv-detail-planewarper.html#warpPoint" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="209" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPoint(const Point2f &amp;pt, InputArray K, InputArray R, InputArray T)">
                        <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="InputArray" right="" name="T" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warpPointBackward" fullname="cv::detail::PlaneWarper::warpPointBackward" href="cv-detail-planewarper.html#warpPointBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPointBackward(const Point2f &amp;pt, InputArray K, InputArray R, InputArray T)">
                        <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="InputArray" right="" name="T" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warpRoi" fullname="cv::detail::PlaneWarper::warpRoi" href="cv-detail-planewarper.html#warpRoi" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="223" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect warpRoi(Size src_size, InputArray K, InputArray R, InputArray T)">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="InputArray" right="" name="T" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PlaneWarperGpu" fullname="cv::detail::PlaneWarperGpu" href="cv-detail-planewarpergpu.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="501" bases="cv::detail::PlaneWarper">
                    <function threadsafety="unspecified" name="PlaneWarperGpu" fullname="cv::detail::PlaneWarperGpu::PlaneWarperGpu" href="cv-detail-planewarpergpu.html#PlaneWarperGpu" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="504" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlaneWarperGpu(float scale)">
                        <parameter left="float" right="" name="scale" default="1.f"/>
                    </function>
                    <function threadsafety="unspecified" name="warp" fullname="cv::detail::PlaneWarperGpu::warp" href="cv-detail-planewarpergpu.html#warp-1" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="547" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point warp(const cuda::GpuMat &amp;src, InputArray K, InputArray R, InputArray T, int interp_mode, int border_mode, cuda::GpuMat &amp;dst)">
                        <parameter left="const cuda::GpuMat &amp;" right="" name="src" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="InputArray" right="" name="T" default=""/>
                        <parameter left="int" right="" name="interp_mode" default=""/>
                        <parameter left="int" right="" name="border_mode" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="dst" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warp" fullname="cv::detail::PlaneWarperGpu::warp" href="cv-detail-planewarpergpu.html#warp" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="544" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point warp(const cuda::GpuMat &amp;src, InputArray K, InputArray R, int interp_mode, int border_mode, cuda::GpuMat &amp;dst)">
                        <parameter left="const cuda::GpuMat &amp;" right="" name="src" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="int" right="" name="interp_mode" default=""/>
                        <parameter left="int" right="" name="border_mode" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="dst" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="buildMaps" fullname="cv::detail::PlaneWarperGpu::buildMaps" href="cv-detail-planewarpergpu.html#buildMaps" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="542" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect buildMaps(Size src_size, InputArray K, InputArray R, InputArray T, cuda::GpuMat &amp;xmap, cuda::GpuMat &amp;ymap)">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="InputArray" right="" name="T" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="xmap" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="ymap" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ProjectorBase" fullname="cv::detail::ProjectorBase" href="cv-detail-projectorbase.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="141">
                    <function threadsafety="unspecified" name="setCameraParams" fullname="cv::detail::ProjectorBase::setCameraParams" href="cv-detail-projectorbase.html#setCameraParams" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setCameraParams(InputArray K, InputArray R, InputArray T)">
                        <parameter left="InputArray" right="" name="K" default="Mat::eye( 3, 3, CV_32F )"/>
                        <parameter left="InputArray" right="" name="R" default="Mat::eye( 3, 3, CV_32F )"/>
                        <parameter left="InputArray" right="" name="T" default="Mat::zeros( 3, 1, CV_32F )"/>
                    </function>
                    <variable threadsafety="unspecified" name="k" fullname="cv::detail::ProjectorBase::k" href="cv-detail-projectorbase.html#k-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="148" type="float[9]" static="false"/>
                    <variable threadsafety="unspecified" name="k_rinv" fullname="cv::detail::ProjectorBase::k_rinv" href="cv-detail-projectorbase.html#k_rinv-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="151" type="float[9]" static="false"/>
                    <variable threadsafety="unspecified" name="r_kinv" fullname="cv::detail::ProjectorBase::r_kinv" href="cv-detail-projectorbase.html#r_kinv-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="150" type="float[9]" static="false"/>
                    <variable threadsafety="unspecified" name="rinv" fullname="cv::detail::ProjectorBase::rinv" href="cv-detail-projectorbase.html#rinv-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="149" type="float[9]" static="false"/>
                    <variable threadsafety="unspecified" name="scale" fullname="cv::detail::ProjectorBase::scale" href="cv-detail-projectorbase.html#scale-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="147" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="t" fullname="cv::detail::ProjectorBase::t" href="cv-detail-projectorbase.html#t-var" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="152" type="float[3]" static="false"/>
                </class>
                <class threadsafety="unspecified" name="RotationWarper" fullname="cv::detail::RotationWarper" href="cv-detail-rotationwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="59">
                    <function threadsafety="unspecified" name="warpPoint" fullname="cv::detail::RotationWarper::warpPoint" href="cv-detail-rotationwarper.html#warpPoint" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="71" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPoint(const Point2f &amp;pt, InputArray K, InputArray R) = 0">
                        <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warpPointBackward" fullname="cv::detail::RotationWarper::warpPointBackward" href="cv-detail-rotationwarper.html#warpPointBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="81" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPointBackward(const Point2f &amp;pt, InputArray K, InputArray R)">
                        <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="buildMaps" fullname="cv::detail::RotationWarper::buildMaps" href="cv-detail-rotationwarper.html#buildMaps" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="99" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect buildMaps(Size src_size, InputArray K, InputArray R, OutputArray xmap, OutputArray ymap) = 0">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="OutputArray" right="" name="xmap" default=""/>
                        <parameter left="OutputArray" right="" name="ymap" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="warpRoi" fullname="cv::detail::RotationWarper::warpRoi" href="cv-detail-rotationwarper.html#warpRoi" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="133" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect warpRoi(Size src_size, InputArray K, InputArray R) = 0">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setScale" fullname="cv::detail::RotationWarper::setScale" href="cv-detail-rotationwarper.html#setScale" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="136" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setScale(float )">
                        <parameter left="float" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~RotationWarper" fullname="cv::detail::RotationWarper::~RotationWarper" href="cv-detail-rotationwarper.html#dtor.RotationWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="62" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~RotationWarper()"/>
                    <function threadsafety="unspecified" name="getScale" fullname="cv::detail::RotationWarper::getScale" href="cv-detail-rotationwarper.html#getScale" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="135" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float getScale() const"/>
                </class>
                <class threadsafety="unspecified" name="RotationWarperBase" fullname="cv::detail::RotationWarperBase" href="cv-detail-rotationwarperbase.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="158" bases="cv::detail::RotationWarper">
                    <function threadsafety="unspecified" name="detectResultRoi" fullname="cv::detail::RotationWarperBase::detectResultRoi" href="cv-detail-rotationwarperbase.html#detectResultRoi" status="active" access="protected" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="181" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detectResultRoi(Size src_size, Point &amp;dst_tl, Point &amp;dst_br)">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="Point &amp;" right="" name="dst_tl" default=""/>
                        <parameter left="Point &amp;" right="" name="dst_br" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="detectResultRoiByBorder" fullname="cv::detail::RotationWarperBase::detectResultRoiByBorder" href="cv-detail-rotationwarperbase.html#detectResultRoiByBorder" status="active" access="protected" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="185" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detectResultRoiByBorder(Size src_size, Point &amp;dst_tl, Point &amp;dst_br)">
                        <parameter left="Size" right="" name="src_size" default=""/>
                        <parameter left="Point &amp;" right="" name="dst_tl" default=""/>
                        <parameter left="Point &amp;" right="" name="dst_br" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="projector_" fullname="cv::detail::RotationWarperBase::projector_" href="cv-detail-rotationwarperbase.html#projector_-var" status="active" access="protected" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="187" type="P" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SphericalPortraitProjector" fullname="cv::detail::SphericalPortraitProjector" href="cv-detail-sphericalportraitprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="619" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::SphericalPortraitProjector::mapBackward" href="cv-detail-sphericalportraitprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="622" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::SphericalPortraitProjector::mapForward" href="cv-detail-sphericalportraitprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="621" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SphericalPortraitWarper" fullname="cv::detail::SphericalPortraitWarper" href="cv-detail-sphericalportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="628" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="SphericalPortraitWarper" fullname="cv::detail::SphericalPortraitWarper::SphericalPortraitWarper" href="cv-detail-sphericalportraitwarper.html#SphericalPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="631" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SphericalPortraitWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SphericalProjector" fullname="cv::detail::SphericalProjector" href="cv-detail-sphericalprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="302" bases="cv::detail::ProjectorBase"/>
                <class threadsafety="unspecified" name="SphericalWarper" fullname="cv::detail::SphericalWarper" href="cv-detail-sphericalwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="315" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="SphericalWarper" fullname="cv::detail::SphericalWarper::SphericalWarper" href="cv-detail-sphericalwarper.html#SphericalWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="323" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SphericalWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SphericalWarperGpu" fullname="cv::detail::SphericalWarperGpu" href="cv-detail-sphericalwarpergpu.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="555" bases="cv::detail::SphericalWarper">
                    <function threadsafety="unspecified" name="warp" fullname="cv::detail::SphericalWarperGpu::warp" href="cv-detail-sphericalwarpergpu.html#warp" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="579" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point warp(const cuda::GpuMat &amp;src, InputArray K, InputArray R, int interp_mode, int border_mode, cuda::GpuMat &amp;dst)">
                        <parameter left="const cuda::GpuMat &amp;" right="" name="src" default=""/>
                        <parameter left="InputArray" right="" name="K" default=""/>
                        <parameter left="InputArray" right="" name="R" default=""/>
                        <parameter left="int" right="" name="interp_mode" default=""/>
                        <parameter left="int" right="" name="border_mode" default=""/>
                        <parameter left="cuda::GpuMat &amp;" right="" name="dst" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SphericalWarperGpu" fullname="cv::detail::SphericalWarperGpu::SphericalWarperGpu" href="cv-detail-sphericalwarpergpu.html#SphericalWarperGpu" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="558" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SphericalWarperGpu(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="StereographicProjector" fullname="cv::detail::StereographicProjector" href="cv-detail-stereographicprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="374" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::StereographicProjector::mapBackward" href="cv-detail-stereographicprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="377" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::StereographicProjector::mapForward" href="cv-detail-stereographicprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="376" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="StereographicWarper" fullname="cv::detail::StereographicWarper" href="cv-detail-stereographicwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="381" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="StereographicWarper" fullname="cv::detail::StereographicWarper::StereographicWarper" href="cv-detail-stereographicwarper.html#StereographicWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="384" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="StereographicWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TransverseMercatorProjector" fullname="cv::detail::TransverseMercatorProjector" href="cv-detail-transversemercatorprojector.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="487" bases="cv::detail::ProjectorBase">
                    <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::TransverseMercatorProjector::mapBackward" href="cv-detail-transversemercatorprojector.html#mapBackward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="490" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                        <parameter left="float" right="" name="u" default=""/>
                        <parameter left="float" right="" name="v" default=""/>
                        <parameter left="float &amp;" right="" name="x" default=""/>
                        <parameter left="float &amp;" right="" name="y" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::TransverseMercatorProjector::mapForward" href="cv-detail-transversemercatorprojector.html#mapForward" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="489" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                        <parameter left="float" right="" name="x" default=""/>
                        <parameter left="float" right="" name="y" default=""/>
                        <parameter left="float &amp;" right="" name="u" default=""/>
                        <parameter left="float &amp;" right="" name="v" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TransverseMercatorWarper" fullname="cv::detail::TransverseMercatorWarper" href="cv-detail-transversemercatorwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="494" bases="cv::detail::RotationWarperBase">
                    <function threadsafety="unspecified" name="TransverseMercatorWarper" fullname="cv::detail::TransverseMercatorWarper::TransverseMercatorWarper" href="cv-detail-transversemercatorwarper.html#TransverseMercatorWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers.hpp" lineno="497" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TransverseMercatorWarper(float scale)">
                        <parameter left="float" right="" name="scale" default=""/>
                    </function>
                </class>
                <function threadsafety="unspecified" name="warp" fullname="cv::detail::warp" href="cv-detail.html#warp" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point warp(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode, OutputArray dst)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                    <parameter left="int" right="" name="interp_mode" default=""/>
                    <parameter left="int" right="" name="border_mode" default=""/>
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="warpPoint" fullname="cv::detail::warpPoint" href="cv-detail.html#warpPoint" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPoint(const Point2f &amp;pt, InputArray K, InputArray R)">
                    <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                </function>
                <function threadsafety="unspecified" name="warpPointBackward" fullname="cv::detail::warpPointBackward" href="cv-detail.html#warpPointBackward" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point2f" signature="Point2f warpPointBackward(const Point2f &amp;pt, InputArray K, InputArray R)">
                    <parameter left="const Point2f &amp;" right="" name="pt" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                </function>
                <function threadsafety="unspecified" name="buildMaps" fullname="cv::detail::buildMaps" href="cv-detail.html#buildMaps" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect buildMaps(Size src_size, InputArray K, InputArray R, OutputArray _xmap, OutputArray _ymap)">
                    <parameter left="Size" right="" name="src_size" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                    <parameter left="OutputArray" right="" name="_xmap" default=""/>
                    <parameter left="OutputArray" right="" name="_ymap" default=""/>
                </function>
                <function threadsafety="unspecified" name="warpRoi" fullname="cv::detail::warpRoi" href="cv-detail.html#warpRoi" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect warpRoi(Size src_size, InputArray K, InputArray R)">
                    <parameter left="Size" right="" name="src_size" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                </function>
                <function threadsafety="unspecified" name="detectResultRoi" fullname="cv::detail::detectResultRoi" href="cv-detail.html#detectResultRoi" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="159" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detectResultRoi(Size src_size, Point &amp;dst_tl, Point &amp;dst_br)">
                    <parameter left="Size" right="" name="src_size" default=""/>
                    <parameter left="Point &amp;" right="" name="dst_tl" default=""/>
                    <parameter left="Point &amp;" right="" name="dst_br" default=""/>
                </function>
                <function threadsafety="unspecified" name="detectResultRoiByBorder" fullname="cv::detail::detectResultRoiByBorder" href="cv-detail.html#detectResultRoiByBorder" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="185" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detectResultRoiByBorder(Size src_size, Point &amp;dst_tl, Point &amp;dst_br)">
                    <parameter left="Size" right="" name="src_size" default=""/>
                    <parameter left="Point &amp;" right="" name="dst_tl" default=""/>
                    <parameter left="Point &amp;" right="" name="dst_br" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-6" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="446" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-5" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="408" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-7" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="490" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-4" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="370" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-8" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="539" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-3" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="331" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-9" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="582" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-2" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="298" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-10" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="621" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-1" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="265" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="236" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u, float v, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u" default=""/>
                    <parameter left="float" right="" name="v" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-11" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="663" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u0, float v0, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u0" default=""/>
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-12" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="709" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u0, float v0, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u0" default=""/>
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapBackward" fullname="cv::detail::mapBackward" href="cv-detail.html#mapBackward-13" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="757" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapBackward(float u0, float v0, float &amp;x, float &amp;y)">
                    <parameter left="float" right="" name="u0" default=""/>
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float &amp;" right="" name="x" default=""/>
                    <parameter left="float &amp;" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-6" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="432" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-7" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="470" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-5" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="394" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-8" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="519" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-4" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="354" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-9" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="568" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-3" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="317" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-10" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="605" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-2" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="286" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-1" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="252" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="221" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u, float &amp;v)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u" default=""/>
                    <parameter left="float &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-11" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="644" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u0, float &amp;v0)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u0" default=""/>
                    <parameter left="float &amp;" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-12" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="690" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u0, float &amp;v0)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u0" default=""/>
                    <parameter left="float &amp;" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="mapForward" fullname="cv::detail::mapForward" href="cv-detail.html#mapForward-13" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="735" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void mapForward(float x, float y, float &amp;u0, float &amp;v0)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float &amp;" right="" name="u0" default=""/>
                    <parameter left="float &amp;" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="warpBackward" fullname="cv::detail::warpBackward" href="cv-detail.html#warpBackward" status="active" access="public" location="warpers_inl.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/detail/warpers_inl.hpp" lineno="116" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void warpBackward(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode, Size dst_size, OutputArray dst)">
                    <parameter left="InputArray" right="" name="src" default=""/>
                    <parameter left="InputArray" right="" name="K" default=""/>
                    <parameter left="InputArray" right="" name="R" default=""/>
                    <parameter left="int" right="" name="interp_mode" default=""/>
                    <parameter left="int" right="" name="border_mode" default=""/>
                    <parameter left="Size" right="" name="dst_size" default=""/>
                    <parameter left="OutputArray" right="" name="dst" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="CV_StaticAssert_test" fullname="cv::CV_StaticAssert_test" href="cv-cv-staticassert-test.html" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="140"/>
            <namespace threadsafety="unspecified" name="details" fullname="cv::details" href="cv-details.html" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="157">
                <function threadsafety="unspecified" name="char_tolower" fullname="cv::details::char_tolower" href="cv-details.html#char_tolower" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="159" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="char" signature="char char_tolower(char ch)">
                    <parameter left="char" right="" name="ch" default=""/>
                </function>
                <function threadsafety="unspecified" name="char_toupper" fullname="cv::details::char_toupper" href="cv-details.html#char_toupper" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="164" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="char" signature="char char_toupper(char ch)">
                    <parameter left="char" right="" name="ch" default=""/>
                </function>
            </namespace>
            <typedef threadsafety="unspecified" name="String" fullname="cv::String" href="cv.html#String-typedef" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="152"/>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="441" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator&amp;(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="428" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator*(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator+(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator-" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="422" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator-(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator/(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="453" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator^(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="447" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator|(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator~" fullname="cv::operator~" href="cv.html#operator-7e" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="459" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_INLINE" signature="CV_INLINE operator~(const v_reg&lt;_Tp, n&gt; &amp;a)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="makePtr" fullname="cv::makePtr" href="cv.html#makePtr" status="active" access="public" location="cvstd_wrapper.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd_wrapper.hpp" lineno="142" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;_Tp&gt;" signature="Ptr&lt;_Tp&gt; makePtr(const A1 &amp;... a1)">
                <parameter left="const A1 &amp;..." right="" name="a1" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_mul_wrap" fullname="cv::v_mul_wrap" href="cv.html#v_mul_wrap" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Tvec" signature="Tvec v_mul_wrap(const Tvec &amp;a, const Tvec &amp;b)">
                <parameter left="const Tvec &amp;" right="" name="a" default=""/>
                <parameter left="const Tvec &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f32" fullname="cv::v_cvt_f32" href="cv.html#v_cvt_f32-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="165" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT32" signature="__CV_V_FLOAT32 v_cvt_f32(const __CV_V_FLOAT64 &amp;a)">
                <parameter left="const __CV_V_FLOAT64 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f32" fullname="cv::v_cvt_f32" href="cv.html#v_cvt_f32-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT32" signature="__CV_V_FLOAT32 v_cvt_f32(const __CV_V_FLOAT64 &amp;a, const __CV_V_FLOAT64 &amp;b)">
                <parameter left="const __CV_V_FLOAT64 &amp;" right="" name="a" default=""/>
                <parameter left="const __CV_V_FLOAT64 &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f32" fullname="cv::v_cvt_f32" href="cv.html#v_cvt_f32" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT32" signature="__CV_V_FLOAT32 v_cvt_f32(const __CV_V_INT32 &amp;a)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f64" fullname="cv::v_cvt_f64" href="cv.html#v_cvt_f64-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT64" signature="__CV_V_FLOAT64 v_cvt_f64(const __CV_V_FLOAT32 &amp;a)">
                <parameter left="const __CV_V_FLOAT32 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f64" fullname="cv::v_cvt_f64" href="cv.html#v_cvt_f64" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT64" signature="__CV_V_FLOAT64 v_cvt_f64(const __CV_V_INT32 &amp;a)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f64" fullname="cv::v_cvt_f64" href="cv.html#v_cvt_f64-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="171" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT64" signature="__CV_V_FLOAT64 v_cvt_f64(const __CV_V_INT64 &amp;a)">
                <parameter left="const __CV_V_INT64 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f64_high" fullname="cv::v_cvt_f64_high" href="cv.html#v_cvt_f64_high-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT64" signature="__CV_V_FLOAT64 v_cvt_f64_high(const __CV_V_FLOAT32 &amp;a)">
                <parameter left="const __CV_V_FLOAT32 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_cvt_f64_high" fullname="cv::v_cvt_f64_high" href="cv.html#v_cvt_f64_high" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_FLOAT64" signature="__CV_V_FLOAT64 v_cvt_f64_high(const __CV_V_INT32 &amp;a)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT16" signature="__CV_V_INT16 v_expand_high(const __CV_V_INT8 &amp;)">
                <parameter left="const __CV_V_INT8 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT16" signature="__CV_V_INT16 v_expand_low(const __CV_V_INT8 &amp;)">
                <parameter left="const __CV_V_INT8 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack-3" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT16" signature="__CV_V_INT16 v_pack(const __CV_V_INT32 &amp;, const __CV_V_INT32 &amp;)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high-3" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT32" signature="__CV_V_INT32 v_expand_high(const __CV_V_INT16 &amp;)">
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low-3" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT32" signature="__CV_V_INT32 v_expand_low(const __CV_V_INT16 &amp;)">
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack-5" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="132" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT32" signature="__CV_V_INT32 v_pack(const __CV_V_INT64 &amp;, const __CV_V_INT64 &amp;)">
                <parameter left="const __CV_V_INT64 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_INT64 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high-5" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT64" signature="__CV_V_INT64 v_expand_high(const __CV_V_INT32 &amp;)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low-5" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT64" signature="__CV_V_INT64 v_expand_low(const __CV_V_INT32 &amp;)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="127" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_INT8" signature="__CV_V_INT8 v_pack(const __CV_V_INT16 &amp;, const __CV_V_INT16 &amp;)">
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT16" signature="__CV_V_UINT16 v_expand_high(const __CV_V_UINT8 &amp;)">
                <parameter left="const __CV_V_UINT8 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT16" signature="__CV_V_UINT16 v_expand_low(const __CV_V_UINT8 &amp;)">
                <parameter left="const __CV_V_UINT8 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="128" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT16" signature="__CV_V_UINT16 v_pack(const __CV_V_UINT32 &amp;, const __CV_V_UINT32 &amp;)">
                <parameter left="const __CV_V_UINT32 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_UINT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack_u" fullname="cv::v_pack_u" href="cv.html#v_pack_u-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT16" signature="__CV_V_UINT16 v_pack_u(const __CV_V_INT32 &amp;, const __CV_V_INT32 &amp;)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT32" signature="__CV_V_UINT32 v_expand_high(const __CV_V_UINT16 &amp;)">
                <parameter left="const __CV_V_UINT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="103" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT32" signature="__CV_V_UINT32 v_expand_low(const __CV_V_UINT16 &amp;)">
                <parameter left="const __CV_V_UINT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack-4" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="131" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT32" signature="__CV_V_UINT32 v_pack(const __CV_V_UINT64 &amp;, const __CV_V_UINT64 &amp;)">
                <parameter left="const __CV_V_UINT64 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_UINT64 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_high" fullname="cv::v_expand_high" href="cv.html#v_expand_high-4" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="112" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT64" signature="__CV_V_UINT64 v_expand_high(const __CV_V_UINT32 &amp;)">
                <parameter left="const __CV_V_UINT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand_low" fullname="cv::v_expand_low" href="cv.html#v_expand_low-4" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT64" signature="__CV_V_UINT64 v_expand_low(const __CV_V_UINT32 &amp;)">
                <parameter left="const __CV_V_UINT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack" fullname="cv::v_pack" href="cv.html#v_pack" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT8" signature="__CV_V_UINT8 v_pack(const __CV_V_UINT16 &amp;, const __CV_V_UINT16 &amp;)">
                <parameter left="const __CV_V_UINT16 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_UINT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_pack_u" fullname="cv::v_pack_u" href="cv.html#v_pack_u" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="__CV_V_UINT8" signature="__CV_V_UINT8 v_pack_u(const __CV_V_INT16 &amp;, const __CV_V_INT16 &amp;)">
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-2" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="77" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, Ptr&lt;Formatted&gt; fmtd)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="Ptr&lt;Formatted&gt;" right="" name="fmtd" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-5" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="98" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Complex&lt;_Tp&gt; &amp;c)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-3" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="86" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Mat &amp;mtx)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Mat &amp;" right="" name="mtx" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-14" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="172" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const MatSize &amp;msize)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const MatSize &amp;" right="" name="msize" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-8" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="118" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Matx&lt;_Tp, m, n&gt; &amp;matx)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="matx" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-10" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="131" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Point3_&lt;_Tp&gt; &amp;p)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Point3_&lt;_Tp&gt; &amp;" right="" name="p" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-9" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="124" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Point_&lt;_Tp&gt; &amp;p)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="p" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-13" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="166" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Rect_&lt;_Tp&gt; &amp;rect)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Rect_&lt;_Tp&gt; &amp;" right="" name="rect" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-12" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="160" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Size_&lt;_Tp&gt; &amp;size)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="size" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-4" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="92" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const UMat &amp;m)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const UMat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-11" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="138" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Vec&lt;_Tp, n&gt; &amp;vec)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const Vec&lt;_Tp, n&gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-7" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="111" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const std::vector&lt;Point3_&lt;_Tp&gt; &gt; &amp;vec)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const std::vector&lt;Point3_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-6" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="104" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const std::vector&lt;Point_&lt;_Tp&gt; &gt; &amp;vec)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const std::vector&lt;Point_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-15" status="active" access="public" location="cvstd.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.inl.hpp" lineno="184" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;s, cv::Range &amp;r)">
                <parameter left="std::ostream &amp;" right="" name="s" default=""/>
                <parameter left="cv::Range &amp;" right="" name="r" default=""/>
            </function>
            <function threadsafety="unspecified" name="toLowerCase" fullname="cv::toLowerCase" href="cv.html#toLowerCase" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="171" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::string" signature="std::string toLowerCase(const std::string &amp;str)">
                <parameter left="const std::string &amp;" right="" name="str" default=""/>
            </function>
            <function threadsafety="unspecified" name="toUpperCase" fullname="cv::toUpperCase" href="cv.html#toUpperCase" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="178" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::string" signature="std::string toUpperCase(const std::string &amp;str)">
                <parameter left="const std::string &amp;" right="" name="str" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="66" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar abs(uchar a)">
                <parameter left="uchar" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-3" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="69" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 abs(uint64 a)">
                <parameter left="uint64" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-2" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="68" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned abs(unsigned a)">
                <parameter left="unsigned" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-1" status="active" access="public" location="cvstd.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd.hpp" lineno="67" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort abs(ushort a)">
                <parameter left="ushort" right="" name="a" default=""/>
            </function>
            <namespace threadsafety="unspecified" name="sfinae" fullname="cv::sfinae" href="cv-sfinae.html" status="active" access="public" location="cvstd_wrapper.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd_wrapper.hpp" lineno="39">
                <class threadsafety="unspecified" name="has_parenthesis_operator" fullname="cv::sfinae::has_parenthesis_operator" href="cv-sfinae-has-parenthesis-operator.html" status="active" access="public" location="cvstd_wrapper.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd_wrapper.hpp" lineno="41"/>
            </namespace>
            <class threadsafety="unspecified" name="Ptr" fullname="cv::Ptr" href="cv-ptr.html" status="active" access="public" location="cvstd_wrapper.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd_wrapper.hpp" lineno="73"/>
            <class threadsafety="unspecified" name="has_custom_delete" fullname="cv::has_custom_delete" href="cv-has-custom-delete.html" status="active" access="public" location="cvstd_wrapper.hpp" filepath="/usr/local/include/opencv4/opencv2/core/cvstd_wrapper.hpp" lineno="62"/>
            <class threadsafety="unspecified" name="AsyncPromise" fullname="cv::AsyncPromise" href="cv-asyncpromise.html" status="active" access="public" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="22">
                <function threadsafety="unspecified" name="getArrayResult" fullname="cv::AsyncPromise::getArrayResult" href="cv-asyncpromise.html#getArrayResult" status="active" access="public" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="AsyncArray" signature="AsyncArray getArrayResult()"/>
                <function threadsafety="unspecified" name="setException" fullname="cv::AsyncPromise::setException" href="cv-asyncpromise.html#setException-1" status="active" access="public" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setException(const cv::Exception &amp;exception)">
                    <parameter left="const cv::Exception &amp;" right="" name="exception" default=""/>
                </function>
                <function threadsafety="unspecified" name="setException" fullname="cv::AsyncPromise::setException" href="cv-asyncpromise.html#setException" status="active" access="public" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setException(std::exception_ptr exception)">
                    <parameter left="std::exception_ptr" right="" name="exception" default=""/>
                </function>
                <function threadsafety="unspecified" name="setValue" fullname="cv::AsyncPromise::setValue" href="cv-asyncpromise.html#setValue" status="active" access="public" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setValue(InputArray value)">
                    <parameter left="InputArray" right="" name="value" default=""/>
                </function>
                <variable threadsafety="unspecified" name="p" fullname="cv::AsyncPromise::p" href="cv-asyncpromise.html#p-var" status="active" access="protected" location="async_promise.hpp" filepath="/usr/local/include/opencv4/opencv2/core/detail/async_promise.hpp" lineno="65" type="Impl *" static="false"/>
            </class>
            <namespace threadsafety="unspecified" name="directx" fullname="cv::directx" href="cv-directx.html" status="active" access="public" location="directx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/directx.hpp" lineno="65">
                <namespace threadsafety="unspecified" name="ocl" fullname="cv::directx::ocl" href="cv-directx-ocl.html" status="active" access="public" location="directx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/directx.hpp" lineno="67"/>
            </namespace>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-6" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="355" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Mat &amp;src, Eigen::Matrix&lt;_Tp, 1, Eigen::Dynamic&gt; &amp;dst)">
                <parameter left="const Mat &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, 1, Eigen::Dynamic&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-4" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="309" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Mat &amp;src, Eigen::Matrix&lt;_Tp, Eigen::Dynamic, 1&gt; &amp;dst)">
                <parameter left="const Mat &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, Eigen::Dynamic, 1&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-2" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="262" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Mat &amp;src, Eigen::Matrix&lt;_Tp, Eigen::Dynamic, Eigen::Dynamic&gt; &amp;dst)">
                <parameter left="const Mat &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, Eigen::Dynamic, Eigen::Dynamic&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="216" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Mat &amp;src, Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;dst)">
                <parameter left="const Mat &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-7" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="379" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Matx&lt;_Tp, 1, _cols&gt; &amp;src, Eigen::Matrix&lt;_Tp, 1, Eigen::Dynamic&gt; &amp;dst)">
                <parameter left="const Matx&lt;_Tp, 1, _cols&gt; &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, 1, Eigen::Dynamic&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-5" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="334" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Matx&lt;_Tp, _rows, 1&gt; &amp;src, Eigen::Matrix&lt;_Tp, Eigen::Dynamic, 1&gt; &amp;dst)">
                <parameter left="const Matx&lt;_Tp, _rows, 1&gt; &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, Eigen::Dynamic, 1&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-3" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="290" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Matx&lt;_Tp, _rows, _cols&gt; &amp;src, Eigen::Matrix&lt;_Tp, Eigen::Dynamic, Eigen::Dynamic&gt; &amp;dst)">
                <parameter left="const Matx&lt;_Tp, _rows, _cols&gt; &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, Eigen::Dynamic, Eigen::Dynamic&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="cv2eigen" fullname="cv::cv2eigen" href="cv.html#cv2eigen-1" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="244" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cv2eigen(const Matx&lt;_Tp, _rows, _cols&gt; &amp;src, Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;dst)">
                <parameter left="const Matx&lt;_Tp, _rows, _cols&gt; &amp;" right="" name="src" default=""/>
                <parameter left="Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="eigen2cv" fullname="cv::eigen2cv" href="cv.html#eigen2cv-1" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="202" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void eigen2cv(const Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;src, Matx&lt;_Tp, _rows, _cols&gt; &amp;dst)">
                <parameter left="const Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;" right="" name="src" default=""/>
                <parameter left="Matx&lt;_Tp, _rows, _cols&gt; &amp;" right="" name="dst" default=""/>
            </function>
            <function threadsafety="unspecified" name="eigen2cv" fullname="cv::eigen2cv" href="cv.html#eigen2cv" status="active" access="public" location="eigen.hpp" filepath="/usr/local/include/opencv4/opencv2/core/eigen.hpp" lineno="184" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void eigen2cv(const Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;src, OutputArray dst)">
                <parameter left="const Eigen::Matrix&lt;_Tp, _rows, _cols, _options, _maxRows, _maxCols&gt; &amp;" right="" name="src" default=""/>
                <parameter left="OutputArray" right="" name="dst" default=""/>
            </function>
            <namespace threadsafety="unspecified" name="hal" fullname="cv::hal" href="cv-hal.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="52">
                <class threadsafety="unspecified" name="DCT2D" fullname="cv::hal::DCT2D" href="cv-hal-dct2d.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="220">
                    <function threadsafety="unspecified" name="create" fullname="cv::hal::DCT2D::create" href="cv-hal-dct2d.html#create" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="222" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DCT2D&gt;" signature="Ptr&lt;DCT2D&gt; create(int width, int height, int depth, int flags)">
                        <parameter left="int" right="" name="width" default=""/>
                        <parameter left="int" right="" name="height" default=""/>
                        <parameter left="int" right="" name="depth" default=""/>
                        <parameter left="int" right="" name="flags" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::DCT2D::apply" href="cv-hal-dct2d.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="223" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(const uchar *src_data, size_t src_step, uchar *dst_data, size_t dst_step) = 0">
                        <parameter left="const uchar *" right="" name="src_data" default=""/>
                        <parameter left="size_t" right="" name="src_step" default=""/>
                        <parameter left="uchar *" right="" name="dst_data" default=""/>
                        <parameter left="size_t" right="" name="dst_step" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~DCT2D" fullname="cv::hal::DCT2D::~DCT2D" href="cv-hal-dct2d.html#dtor.DCT2D" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="224" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DCT2D()"/>
                </class>
                <class threadsafety="unspecified" name="DFT1D" fullname="cv::hal::DFT1D" href="cv-hal-dft1d.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="204">
                    <function threadsafety="unspecified" name="create" fullname="cv::hal::DFT1D::create" href="cv-hal-dft1d.html#create" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="206" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DFT1D&gt;" signature="Ptr&lt;DFT1D&gt; create(int len, int count, int depth, int flags, bool *useBuffer)">
                        <parameter left="int" right="" name="len" default=""/>
                        <parameter left="int" right="" name="count" default=""/>
                        <parameter left="int" right="" name="depth" default=""/>
                        <parameter left="int" right="" name="flags" default=""/>
                        <parameter left="bool *" right="" name="useBuffer" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::DFT1D::apply" href="cv-hal-dft1d.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="207" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(const uchar *src, uchar *dst) = 0">
                        <parameter left="const uchar *" right="" name="src" default=""/>
                        <parameter left="uchar *" right="" name="dst" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~DFT1D" fullname="cv::hal::DFT1D::~DFT1D" href="cv-hal-dft1d.html#dtor.DFT1D" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="208" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DFT1D()"/>
                </class>
                <class threadsafety="unspecified" name="DFT2D" fullname="cv::hal::DFT2D" href="cv-hal-dft2d.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="211">
                    <function threadsafety="unspecified" name="create" fullname="cv::hal::DFT2D::create" href="cv-hal-dft2d.html#create" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="213" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DFT2D&gt;" signature="Ptr&lt;DFT2D&gt; create(int width, int height, int depth, int src_channels, int dst_channels, int flags, int nonzero_rows)">
                        <parameter left="int" right="" name="width" default=""/>
                        <parameter left="int" right="" name="height" default=""/>
                        <parameter left="int" right="" name="depth" default=""/>
                        <parameter left="int" right="" name="src_channels" default=""/>
                        <parameter left="int" right="" name="dst_channels" default=""/>
                        <parameter left="int" right="" name="flags" default=""/>
                        <parameter left="int" right="" name="nonzero_rows" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::DFT2D::apply" href="cv-hal-dft2d.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="216" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(const uchar *src_data, size_t src_step, uchar *dst_data, size_t dst_step) = 0">
                        <parameter left="const uchar *" right="" name="src_data" default=""/>
                        <parameter left="size_t" right="" name="src_step" default=""/>
                        <parameter left="uchar *" right="" name="dst_data" default=""/>
                        <parameter left="size_t" right="" name="dst_step" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~DFT2D" fullname="cv::hal::DFT2D::~DFT2D" href="cv-hal-dft2d.html#dtor.DFT2D" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/hal.hpp" lineno="217" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DFT2D()"/>
                </class>
                <class threadsafety="unspecified" name="Filter2D" fullname="cv::hal::Filter2D" href="cv-hal-filter2d.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="16">
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::Filter2D::apply" href="cv-hal-filter2d.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="25" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(uchar *, size_t , uchar *, size_t , int , int , int , int , int , int ) = 0">
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Filter2D" fullname="cv::hal::Filter2D::~Filter2D" href="cv-hal-filter2d.html#dtor.Filter2D" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="30" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Filter2D()"/>
                </class>
                <class threadsafety="unspecified" name="Morph" fullname="cv::hal::Morph" href="cv-hal-morph.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="49">
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::Morph::apply" href="cv-hal-morph.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="57" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(uchar *, size_t , uchar *, size_t , int , int , int , int , int , int , int , int , int , int ) = 0">
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Morph" fullname="cv::hal::Morph::~Morph" href="cv-hal-morph.html#dtor.Morph" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="60" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Morph()"/>
                </class>
                <class threadsafety="unspecified" name="SepFilter2D" fullname="cv::hal::SepFilter2D" href="cv-hal-sepfilter2d.html" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="33">
                    <function threadsafety="unspecified" name="apply" fullname="cv::hal::SepFilter2D::apply" href="cv-hal-sepfilter2d.html#apply" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="40" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(uchar *, size_t , uchar *, size_t , int , int , int , int , int , int ) = 0">
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="uchar *" right="" name="" default=""/>
                        <parameter left="size_t" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                        <parameter left="int" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~SepFilter2D" fullname="cv::hal::SepFilter2D::~SepFilter2D" href="cv-hal-sepfilter2d.html#dtor.SepFilter2D" status="active" access="public" location="hal.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/hal/hal.hpp" lineno="45" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SepFilter2D()"/>
                </class>
            </namespace>
            <class threadsafety="unspecified" name="v_float32x8" fullname="cv::v_float32x8" href="cv-v-float32x8.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="274">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x8::lane_type" href="cv-v-float32x8.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="276"/>
                <function threadsafety="unspecified" name="v_float32x8" fullname="cv::v_float32x8::v_float32x8" href="cv-v-float32x8.html#v_float32x8-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="287" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x8()"/>
                <function threadsafety="unspecified" name="v_float32x8" fullname="cv::v_float32x8::v_float32x8" href="cv-v-float32x8.html#v_float32x8" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="280" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x8(__m256 v)">
                    <parameter left="__m256" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x8" fullname="cv::v_float32x8::v_float32x8" href="cv-v-float32x8.html#v_float32x8-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="281" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x8(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                    <parameter left="float" right="" name="v4" default=""/>
                    <parameter left="float" right="" name="v5" default=""/>
                    <parameter left="float" right="" name="v6" default=""/>
                    <parameter left="float" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x8::get0" href="cv-v-float32x8.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="289" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x8::nlanes" href="cv-v-float32x8.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="277" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x8::val" href="cv-v-float32x8.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="278" type="__m256" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x4" fullname="cv::v_float64x4" href="cv-v-float64x4.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="340">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x4::lane_type" href="cv-v-float64x4.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="342"/>
                <function threadsafety="unspecified" name="v_float64x4" fullname="cv::v_float64x4::v_float64x4" href="cv-v-float64x4.html#v_float64x4-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="350" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x4()"/>
                <function threadsafety="unspecified" name="v_float64x4" fullname="cv::v_float64x4::v_float64x4" href="cv-v-float64x4.html#v_float64x4" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="346" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x4(__m256d v)">
                    <parameter left="__m256d" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x4" fullname="cv::v_float64x4::v_float64x4" href="cv-v-float64x4.html#v_float64x4-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="347" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x4(double v0, double v1, double v2, double v3)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                    <parameter left="double" right="" name="v2" default=""/>
                    <parameter left="double" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x4::get0" href="cv-v-float64x4.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="352" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x4::nlanes" href="cv-v-float64x4.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="343" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x4::val" href="cv-v-float64x4.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="344" type="__m256d" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x16" fullname="cv::v_int16x16" href="cv-v-int16x16.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="216">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x16::lane_type" href="cv-v-int16x16.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="218"/>
                <function threadsafety="unspecified" name="v_int16x16" fullname="cv::v_int16x16::v_int16x16" href="cv-v-int16x16.html#v_int16x16-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="232" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x16()"/>
                <function threadsafety="unspecified" name="v_int16x16" fullname="cv::v_int16x16::v_int16x16" href="cv-v-int16x16.html#v_int16x16" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="222" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x16(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x16" fullname="cv::v_int16x16::v_int16x16" href="cv-v-int16x16.html#v_int16x16-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="223" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x16(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7, short v8, short v9, short v10, short v11, short v12, short v13, short v14, short v15)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                    <parameter left="short" right="" name="v8" default=""/>
                    <parameter left="short" right="" name="v9" default=""/>
                    <parameter left="short" right="" name="v10" default=""/>
                    <parameter left="short" right="" name="v11" default=""/>
                    <parameter left="short" right="" name="v12" default=""/>
                    <parameter left="short" right="" name="v13" default=""/>
                    <parameter left="short" right="" name="v14" default=""/>
                    <parameter left="short" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x16::get0" href="cv-v-int16x16.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="234" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x16::nlanes" href="cv-v-int16x16.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="219" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x16::val" href="cv-v-int16x16.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="220" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x8" fullname="cv::v_int32x8" href="cv-v-int32x8.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="256">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x8::lane_type" href="cv-v-int32x8.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="258"/>
                <function threadsafety="unspecified" name="v_int32x8" fullname="cv::v_int32x8::v_int32x8" href="cv-v-int32x8.html#v_int32x8-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="269" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x8()"/>
                <function threadsafety="unspecified" name="v_int32x8" fullname="cv::v_int32x8::v_int32x8" href="cv-v-int32x8.html#v_int32x8" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="262" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x8(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x8" fullname="cv::v_int32x8::v_int32x8" href="cv-v-int32x8.html#v_int32x8-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="263" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x8(int v0, int v1, int v2, int v3, int v4, int v5, int v6, int v7)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                    <parameter left="int" right="" name="v4" default=""/>
                    <parameter left="int" right="" name="v5" default=""/>
                    <parameter left="int" right="" name="v6" default=""/>
                    <parameter left="int" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x8::get0" href="cv-v-int32x8.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="271" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x8::nlanes" href="cv-v-int32x8.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="259" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x8::val" href="cv-v-int32x8.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="260" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x4" fullname="cv::v_int64x4" href="cv-v-int64x4.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="316">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x4::lane_type" href="cv-v-int64x4.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="318"/>
                <function threadsafety="unspecified" name="v_int64x4" fullname="cv::v_int64x4::v_int64x4" href="cv-v-int64x4.html#v_int64x4-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="326" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x4()"/>
                <function threadsafety="unspecified" name="v_int64x4" fullname="cv::v_int64x4::v_int64x4" href="cv-v-int64x4.html#v_int64x4" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="322" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x4(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x4" fullname="cv::v_int64x4::v_int64x4" href="cv-v-int64x4.html#v_int64x4-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="323" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x4(int64 v0, int64 v1, int64 v2, int64 v3)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                    <parameter left="int64" right="" name="v2" default=""/>
                    <parameter left="int64" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x4::get0" href="cv-v-int64x4.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="328" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x4::nlanes" href="cv-v-int64x4.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="319" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x4::val" href="cv-v-int64x4.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="320" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x32" fullname="cv::v_int8x32" href="cv-v-int8x32.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="168">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x32::lane_type" href="cv-v-int8x32.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="170"/>
                <function threadsafety="unspecified" name="v_int8x32" fullname="cv::v_int8x32::v_int8x32" href="cv-v-int8x32.html#v_int8x32-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="189" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x32()"/>
                <function threadsafety="unspecified" name="v_int8x32" fullname="cv::v_int8x32::v_int8x32" href="cv-v-int8x32.html#v_int8x32" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="174" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x32(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x32" fullname="cv::v_int8x32::v_int8x32" href="cv-v-int8x32.html#v_int8x32-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="175" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x32(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15, schar v16, schar v17, schar v18, schar v19, schar v20, schar v21, schar v22, schar v23, schar v24, schar v25, schar v26, schar v27, schar v28, schar v29, schar v30, schar v31)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                    <parameter left="schar" right="" name="v16" default=""/>
                    <parameter left="schar" right="" name="v17" default=""/>
                    <parameter left="schar" right="" name="v18" default=""/>
                    <parameter left="schar" right="" name="v19" default=""/>
                    <parameter left="schar" right="" name="v20" default=""/>
                    <parameter left="schar" right="" name="v21" default=""/>
                    <parameter left="schar" right="" name="v22" default=""/>
                    <parameter left="schar" right="" name="v23" default=""/>
                    <parameter left="schar" right="" name="v24" default=""/>
                    <parameter left="schar" right="" name="v25" default=""/>
                    <parameter left="schar" right="" name="v26" default=""/>
                    <parameter left="schar" right="" name="v27" default=""/>
                    <parameter left="schar" right="" name="v28" default=""/>
                    <parameter left="schar" right="" name="v29" default=""/>
                    <parameter left="schar" right="" name="v30" default=""/>
                    <parameter left="schar" right="" name="v31" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x32::get0" href="cv-v-int8x32.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="191" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x32::nlanes" href="cv-v-int8x32.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="171" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x32::val" href="cv-v-int8x32.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="172" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x16" fullname="cv::v_uint16x16" href="cv-v-uint16x16.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="194">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x16::lane_type" href="cv-v-uint16x16.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="196"/>
                <function threadsafety="unspecified" name="v_uint16x16" fullname="cv::v_uint16x16::v_uint16x16" href="cv-v-uint16x16.html#v_uint16x16-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="211" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x16()"/>
                <function threadsafety="unspecified" name="v_uint16x16" fullname="cv::v_uint16x16::v_uint16x16" href="cv-v-uint16x16.html#v_uint16x16" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x16(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x16" fullname="cv::v_uint16x16::v_uint16x16" href="cv-v-uint16x16.html#v_uint16x16-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="201" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x16(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7, ushort v8, ushort v9, ushort v10, ushort v11, ushort v12, ushort v13, ushort v14, ushort v15)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                    <parameter left="ushort" right="" name="v8" default=""/>
                    <parameter left="ushort" right="" name="v9" default=""/>
                    <parameter left="ushort" right="" name="v10" default=""/>
                    <parameter left="ushort" right="" name="v11" default=""/>
                    <parameter left="ushort" right="" name="v12" default=""/>
                    <parameter left="ushort" right="" name="v13" default=""/>
                    <parameter left="ushort" right="" name="v14" default=""/>
                    <parameter left="ushort" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x16::get0" href="cv-v-uint16x16.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="213" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x16::nlanes" href="cv-v-uint16x16.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="197" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x16::val" href="cv-v-uint16x16.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="198" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x8" fullname="cv::v_uint32x8" href="cv-v-uint32x8.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="237">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x8::lane_type" href="cv-v-uint32x8.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="239"/>
                <function threadsafety="unspecified" name="v_uint32x8" fullname="cv::v_uint32x8::v_uint32x8" href="cv-v-uint32x8.html#v_uint32x8-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="251" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x8()"/>
                <function threadsafety="unspecified" name="v_uint32x8" fullname="cv::v_uint32x8::v_uint32x8" href="cv-v-uint32x8.html#v_uint32x8" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="243" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x8(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x8" fullname="cv::v_uint32x8::v_uint32x8" href="cv-v-uint32x8.html#v_uint32x8-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="244" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x8(unsigned v0, unsigned v1, unsigned v2, unsigned v3, unsigned v4, unsigned v5, unsigned v6, unsigned v7)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                    <parameter left="unsigned" right="" name="v4" default=""/>
                    <parameter left="unsigned" right="" name="v5" default=""/>
                    <parameter left="unsigned" right="" name="v6" default=""/>
                    <parameter left="unsigned" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x8::get0" href="cv-v-uint32x8.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="253" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x8::nlanes" href="cv-v-uint32x8.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="240" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x8::val" href="cv-v-uint32x8.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="241" type="__m256i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x4" fullname="cv::v_uint64x4" href="cv-v-uint64x4.html" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="292">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x4::lane_type" href="cv-v-uint64x4.html#lane_type-typedef" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="294"/>
                <function threadsafety="unspecified" name="v_uint64x4" fullname="cv::v_uint64x4::v_uint64x4" href="cv-v-uint64x4.html#v_uint64x4-2" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="302" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x4()"/>
                <function threadsafety="unspecified" name="v_uint64x4" fullname="cv::v_uint64x4::v_uint64x4" href="cv-v-uint64x4.html#v_uint64x4" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="298" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x4(__m256i v)">
                    <parameter left="__m256i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x4" fullname="cv::v_uint64x4::v_uint64x4" href="cv-v-uint64x4.html#v_uint64x4-1" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="299" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x4(uint64 v0, uint64 v1, uint64 v2, uint64 v3)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                    <parameter left="uint64" right="" name="v2" default=""/>
                    <parameter left="uint64" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x4::get0" href="cv-v-uint64x4.html#get0" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="304" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x4::nlanes" href="cv-v-uint64x4.html#nlanes-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="295" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x4::val" href="cv-v-uint64x4.html#val-var" status="active" access="public" location="intrin_avx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_avx.hpp" lineno="296" type="__m256i" static="false"/>
            </class>
            <typedef threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv.html#v_float32x4-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="405"/>
            <typedef threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv.html#v_float64x2-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="407"/>
            <typedef threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv.html#v_int16x8-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="399"/>
            <typedef threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv.html#v_int32x4-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="403"/>
            <typedef threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv.html#v_int64x2-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="411"/>
            <typedef threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv.html#v_int8x16-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="395"/>
            <typedef threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv.html#v_uint16x8-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="397"/>
            <typedef threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv.html#v_uint32x4-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="401"/>
            <typedef threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv.html#v_uint64x2-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="409"/>
            <typedef threadsafety="unspecified" name="v_uint8x16" fullname="cv::v_uint8x16" href="cv.html#v_uint8x16-typedef" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="393"/>
            <function threadsafety="unspecified" name="v_popcount" fullname="cv::v_popcount" href="cv.html#v_popcount" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="712" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_reg&lt;V_TypeTraits&lt;_Tp&gt;::abs_type, n&gt;" signature="v_reg&lt;V_TypeTraits&lt;_Tp&gt;::abs_type, n&gt; v_popcount(const v_reg&lt;_Tp, n&gt; &amp;a)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand-3" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="97" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_INT16 &amp;, __CV_V_INT32 &amp;, __CV_V_INT32 &amp;)">
                <parameter left="const __CV_V_INT16 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT32 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand-5" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_INT32 &amp;, __CV_V_INT64 &amp;, __CV_V_INT64 &amp;)">
                <parameter left="const __CV_V_INT32 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT64 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT64 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand-1" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_INT8 &amp;, __CV_V_INT16 &amp;, __CV_V_INT16 &amp;)">
                <parameter left="const __CV_V_INT8 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT16 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_INT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand-2" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_UINT16 &amp;, __CV_V_UINT32 &amp;, __CV_V_UINT32 &amp;)">
                <parameter left="const __CV_V_UINT16 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT32 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT32 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand-4" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="98" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_UINT32 &amp;, __CV_V_UINT64 &amp;, __CV_V_UINT64 &amp;)">
                <parameter left="const __CV_V_UINT32 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT64 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT64 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_expand" fullname="cv::v_expand" href="cv.html#v_expand" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_expand(const __CV_V_UINT8 &amp;, __CV_V_UINT16 &amp;, __CV_V_UINT16 &amp;)">
                <parameter left="const __CV_V_UINT8 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT16 &amp;" right="" name="" default=""/>
                <parameter left="__CV_V_UINT16 &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_minmax" fullname="cv::v_minmax" href="cv.html#v_minmax" status="active" access="public" location="intrin_cpp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_cpp.hpp" lineno="723" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_minmax(const v_reg&lt;_Tp, n&gt; &amp;a, const v_reg&lt;_Tp, n&gt; &amp;b, v_reg&lt;_Tp, n&gt; &amp;minval, v_reg&lt;_Tp, n&gt; &amp;maxval)">
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const v_reg&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="v_reg&lt;_Tp, n&gt; &amp;" right="" name="minval" default=""/>
                <parameter left="v_reg&lt;_Tp, n&gt; &amp;" right="" name="maxval" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_mul_expand" fullname="cv::v_mul_expand" href="cv.html#v_mul_expand" status="active" access="public" location="intrin_forward.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_forward.hpp" lineno="153" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void v_mul_expand(const Tvec &amp;a, const Tvec &amp;b, Twvec &amp;c, Twvec &amp;d)">
                <parameter left="const Tvec &amp;" right="" name="a" default=""/>
                <parameter left="const Tvec &amp;" right="" name="b" default=""/>
                <parameter left="Twvec &amp;" right="" name="c" default=""/>
                <parameter left="Twvec &amp;" right="" name="d" default=""/>
            </function>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="151">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="153"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="156" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="158" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="157" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(v4f32 v)">
                    <parameter left="v4f32" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="164" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="154" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="169" type="v4f32" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="214">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="216"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="219" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="221" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="220" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(v2f64 v)">
                    <parameter left="v2f64" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="227" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="217" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="232" type="v2f64" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="88">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="90"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="93" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="95" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="94" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(v8i16 v)">
                    <parameter left="v8i16" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="101" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="91" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="106" type="v8i16" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="130">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="132"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="135" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="136" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(v4i32 v)">
                    <parameter left="v4i32" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="143" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="133" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="148" type="v4i32" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="193">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="195"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="198" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="199" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(v2i64 v)">
                    <parameter left="v2i64" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="206" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="196" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="211" type="v2i64" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="45">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="47"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(v16i8 v)">
                    <parameter left="v16i8" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="48" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="64" type="v16i8" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="67">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="69"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="72" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="73" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(v8u16 v)">
                    <parameter left="v8u16" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="80" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="70" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="85" type="v8u16" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="109">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="111"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="114" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="116" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned int v0, unsigned int v1, unsigned int v2, unsigned int v3)">
                    <parameter left="unsigned int" right="" name="v0" default=""/>
                    <parameter left="unsigned int" right="" name="v1" default=""/>
                    <parameter left="unsigned int" right="" name="v2" default=""/>
                    <parameter left="unsigned int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="115" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(v4u32 v)">
                    <parameter left="v4u32" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="122" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="112" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="127" type="v4u32" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="172">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="174"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="177" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="179" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="178" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(v2u64 v)">
                    <parameter left="v2u64" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="185" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="175" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_msa.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_msa.hpp" lineno="190" type="v2u64" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="243">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="245"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="250" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="249" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float32x4_t v)">
                    <parameter left="float32x4_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="255" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="246" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="259" type="float32x4_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="301">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="303"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="306" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="308" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="307" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(float64x2_t v)">
                    <parameter left="float64x2_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="313" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="304" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="317" type="float64x2_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="184">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="186"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="189" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="190" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(int16x8_t v)">
                    <parameter left="int16x8_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="191" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="196" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="187" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="201" type="int16x8_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="224">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="226"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="229" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="231" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="230" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int32x4_t v)">
                    <parameter left="int32x4_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="236" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="227" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="240" type="int32x4_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="281">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="283"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="286" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="288" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="287" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64x2_t v)">
                    <parameter left="int64x2_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="293" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="284" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="297" type="int64x2_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="143">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="145"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="148" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="149" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(int8x16_t v)">
                    <parameter left="int8x16_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="150" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="156" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="146" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="161" type="int8x16_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="164">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="166"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="169" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="170" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(uint16x8_t v)">
                    <parameter left="uint16x8_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="171" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="167" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="181" type="uint16x8_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="204">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="206"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="209" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="210" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(uint32x4_t v)">
                    <parameter left="uint32x4_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="211" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="207" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="221" type="uint32x4_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="262">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="264"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="267" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="269" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="268" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64x2_t v)">
                    <parameter left="uint64x2_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="274" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="265" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_neon.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_neon.hpp" lineno="278" type="uint64x2_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="420">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="422"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="425" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="431" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="426" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(vfloat32m1_t v)">
                    <parameter left="vfloat32m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="444" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <function threadsafety="unspecified" name="operator vfloat32m1_t" fullname="cv::v_float32x4::operator vfloat32m1_t" href="cv-v-float32x4.html#operator-vfloat32m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="439" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vfloat32m1_t() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="423" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="448" type="float[4]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="516">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="518"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="521" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="527" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="522" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(vfloat64m1_t v)">
                    <parameter left="vfloat64m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="540" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <function threadsafety="unspecified" name="operator vfloat64m1_t" fullname="cv::v_float64x2::operator vfloat64m1_t" href="cv-v-float64x2.html#operator-vfloat64m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="535" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vfloat64m1_t() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="519" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="545" type="double[2]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="325">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="327"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="330" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="336" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="331" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(vint16m1_t v)">
                    <parameter left="vint16m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator vint16m1_t" fullname="cv::v_int16x8::operator vint16m1_t" href="cv-v-int16x8.html#operator-vint16m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="344" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vint16m1_t() const"/>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="349" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="328" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="354" type="short[8]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="389">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="391"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="394" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="400" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="395" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(vint32m1_t v)">
                    <parameter left="vint32m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="413" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <function threadsafety="unspecified" name="operator vint32m1_t" fullname="cv::v_int32x4::operator vint32m1_t" href="cv-v-int32x4.html#operator-vint32m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="408" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vint32m1_t() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="392" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="417" type="int[4]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="483">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="485"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="488" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="494" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="489" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(vint64m1_t v)">
                    <parameter left="vint64m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="507" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <function threadsafety="unspecified" name="operator vint64m1_t" fullname="cv::v_int64x2::operator vint64m1_t" href="cv-v-int64x2.html#operator-vint64m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="502" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vint64m1_t() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="486" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="512" type="int64[2]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="260">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="262"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="265" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="271" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="266" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(vint8m1_t v)">
                    <parameter left="vint8m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator vint8m1_t" fullname="cv::v_int8x16::operator vint8m1_t" href="cv-v-int8x16.html#operator-vint8m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="280" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vint8m1_t() const"/>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="285" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="263" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="290" type="schar[16]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="293">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="295"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="298" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="304" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="299" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(vuint16m1_t v)">
                    <parameter left="vuint16m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator vuint16m1_t" fullname="cv::v_uint16x8::operator vuint16m1_t" href="cv-v-uint16x8.html#operator-vuint16m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="312" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vuint16m1_t() const"/>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="317" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="296" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="322" type="ushort[8]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="357">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="359"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="362" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="368" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="363" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(vuint32m1_t v)">
                    <parameter left="vuint32m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator vuint32m1_t" fullname="cv::v_uint32x4::operator vuint32m1_t" href="cv-v-uint32x4.html#operator-vuint32m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="376" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vuint32m1_t() const"/>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="381" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="360" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="386" type="unsigned[4]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="451">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="453"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="456" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="462" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="457" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(vuint64m1_t v)">
                    <parameter left="vuint64m1_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator vuint64m1_t" fullname="cv::v_uint64x2::operator vuint64m1_t" href="cv-v-uint64x2.html#operator-vuint64m1_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="470" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator vuint64m1_t() const"/>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="475" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="454" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="480" type="uint64[2]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="vfloat32mf2_t" fullname="cv::vfloat32mf2_t" href="cv-vfloat32mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="91">
                <function threadsafety="unspecified" name="vfloat32mf2_t" fullname="cv::vfloat32mf2_t::vfloat32mf2_t" href="cv-vfloat32mf2-t.html#vfloat32mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="94" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vfloat32mf2_t()"/>
                <function threadsafety="unspecified" name="vfloat32mf2_t" fullname="cv::vfloat32mf2_t::vfloat32mf2_t" href="cv-vfloat32mf2-t.html#vfloat32mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="95" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vfloat32mf2_t(const float *ptr)">
                    <parameter left="const float *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vfloat64mf2_t" fullname="cv::vfloat64mf2_t" href="cv-vfloat64mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="119">
                <function threadsafety="unspecified" name="vfloat64mf2_t" fullname="cv::vfloat64mf2_t::vfloat64mf2_t" href="cv-vfloat64mf2-t.html#vfloat64mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="122" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vfloat64mf2_t()"/>
                <function threadsafety="unspecified" name="vfloat64mf2_t" fullname="cv::vfloat64mf2_t::vfloat64mf2_t" href="cv-vfloat64mf2-t.html#vfloat64mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="123" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vfloat64mf2_t(const double *ptr)">
                    <parameter left="const double *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vint16mf2_t" fullname="cv::vint16mf2_t" href="cv-vint16mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="59">
                <function threadsafety="unspecified" name="vint16mf2_t" fullname="cv::vint16mf2_t::vint16mf2_t" href="cv-vint16mf2-t.html#vint16mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint16mf2_t()"/>
                <function threadsafety="unspecified" name="vint16mf2_t" fullname="cv::vint16mf2_t::vint16mf2_t" href="cv-vint16mf2-t.html#vint16mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="63" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint16mf2_t(const short *ptr)">
                    <parameter left="const short *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vint32mf2_t" fullname="cv::vint32mf2_t" href="cv-vint32mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="81">
                <function threadsafety="unspecified" name="vint32mf2_t" fullname="cv::vint32mf2_t::vint32mf2_t" href="cv-vint32mf2-t.html#vint32mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="84" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint32mf2_t()"/>
                <function threadsafety="unspecified" name="vint32mf2_t" fullname="cv::vint32mf2_t::vint32mf2_t" href="cv-vint32mf2-t.html#vint32mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="85" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint32mf2_t(const int *ptr)">
                    <parameter left="const int *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vint64mf2_t" fullname="cv::vint64mf2_t" href="cv-vint64mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="110">
                <function threadsafety="unspecified" name="vint64mf2_t" fullname="cv::vint64mf2_t::vint64mf2_t" href="cv-vint64mf2-t.html#vint64mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="113" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint64mf2_t()"/>
                <function threadsafety="unspecified" name="vint64mf2_t" fullname="cv::vint64mf2_t::vint64mf2_t" href="cv-vint64mf2-t.html#vint64mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="114" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint64mf2_t(const int64 *ptr)">
                    <parameter left="const int64 *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vint8mf2_t" fullname="cv::vint8mf2_t" href="cv-vint8mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="35">
                <function threadsafety="unspecified" name="vint8mf2_t" fullname="cv::vint8mf2_t::vint8mf2_t" href="cv-vint8mf2-t.html#vint8mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="38" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint8mf2_t()"/>
                <function threadsafety="unspecified" name="vint8mf2_t" fullname="cv::vint8mf2_t::vint8mf2_t" href="cv-vint8mf2-t.html#vint8mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="39" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint8mf2_t(const schar *ptr)">
                    <parameter left="const schar *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vint8mf4_t" fullname="cv::vint8mf4_t" href="cv-vint8mf4-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="140">
                <function threadsafety="unspecified" name="vint8mf4_t" fullname="cv::vint8mf4_t::vint8mf4_t" href="cv-vint8mf4-t.html#vint8mf4_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="143" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint8mf4_t()"/>
                <function threadsafety="unspecified" name="vint8mf4_t" fullname="cv::vint8mf4_t::vint8mf4_t" href="cv-vint8mf4-t.html#vint8mf4_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="144" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vint8mf4_t(const schar *ptr)">
                    <parameter left="const schar *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vuint16mf2_t" fullname="cv::vuint16mf2_t" href="cv-vuint16mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="47">
                <function threadsafety="unspecified" name="vuint16mf2_t" fullname="cv::vuint16mf2_t::vuint16mf2_t" href="cv-vuint16mf2-t.html#vuint16mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint16mf2_t()"/>
                <function threadsafety="unspecified" name="vuint16mf2_t" fullname="cv::vuint16mf2_t::vuint16mf2_t" href="cv-vuint16mf2-t.html#vuint16mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint16mf2_t(const ushort *ptr)">
                    <parameter left="const ushort *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vuint32mf2_t" fullname="cv::vuint32mf2_t" href="cv-vuint32mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="71">
                <function threadsafety="unspecified" name="vuint32mf2_t" fullname="cv::vuint32mf2_t::vuint32mf2_t" href="cv-vuint32mf2-t.html#vuint32mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint32mf2_t()"/>
                <function threadsafety="unspecified" name="vuint32mf2_t" fullname="cv::vuint32mf2_t::vuint32mf2_t" href="cv-vuint32mf2-t.html#vuint32mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint32mf2_t(const unsigned *ptr)">
                    <parameter left="const unsigned *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vuint64mf2_t" fullname="cv::vuint64mf2_t" href="cv-vuint64mf2-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="101">
                <function threadsafety="unspecified" name="vuint64mf2_t" fullname="cv::vuint64mf2_t::vuint64mf2_t" href="cv-vuint64mf2-t.html#vuint64mf2_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="104" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint64mf2_t()"/>
                <function threadsafety="unspecified" name="vuint64mf2_t" fullname="cv::vuint64mf2_t::vuint64mf2_t" href="cv-vuint64mf2-t.html#vuint64mf2_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="105" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint64mf2_t(const uint64 *ptr)">
                    <parameter left="const uint64 *" right="" name="ptr" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="vuint8mf4_t" fullname="cv::vuint8mf4_t" href="cv-vuint8mf4-t.html" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="128">
                <function threadsafety="unspecified" name="vuint8mf4_t" fullname="cv::vuint8mf4_t::vuint8mf4_t" href="cv-vuint8mf4-t.html#vuint8mf4_t" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="131" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint8mf4_t()"/>
                <function threadsafety="unspecified" name="vuint8mf4_t" fullname="cv::vuint8mf4_t::vuint8mf4_t" href="cv-vuint8mf4-t.html#vuint8mf4_t-1" status="active" access="public" location="intrin_rvv.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_rvv.hpp" lineno="132" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="vuint8mf4_t(const uchar *ptr)">
                    <parameter left="const uchar *" right="" name="ptr" default=""/>
                </function>
            </class>
            <namespace threadsafety="unspecified" name="hal_sse_internal" fullname="cv::hal_sse_internal" href="cv-hal-sse-internal.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="314">
                <function threadsafety="unspecified" name="v_sse_reinterpret_as" fullname="cv::hal_sse_internal::v_sse_reinterpret_as" href="cv-hal-sse-internal.html#v_sse_reinterpret_as" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="317" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="to_sse_type" signature="to_sse_type v_sse_reinterpret_as(const from_sse_type &amp;val)">
                    <parameter left="const from_sse_type &amp;" right="" name="val" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="214">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="216"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_float32x4::vector_type" href="cv-v-float32x4.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="217"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="221" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="222" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(__m128 v)">
                    <parameter left="__m128" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="223" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="228" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="218" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="233" type="__m128" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="292">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="294"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_float64x2::vector_type" href="cv-v-float64x2.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="295"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="299" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="300" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(__m128d v)">
                    <parameter left="__m128d" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="301" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="306" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="296" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="311" type="__m128d" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="147">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="149"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int16x8::vector_type" href="cv-v-int16x8.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="150"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="154" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="155" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="156" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="162" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="151" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="167" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="192">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="194"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int32x4::vector_type" href="cv-v-int32x4.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="195"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="199" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="201" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="206" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="196" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="211" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="264">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="266"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int64x2::vector_type" href="cv-v-int64x2.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="267"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="271" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="272" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="273" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="278" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="268" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="289" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="98">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="100"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int8x16::vector_type" href="cv-v-int8x16.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="101"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="105" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="106" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="107" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="116" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="102" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="121" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="124">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="126"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint16x8::vector_type" href="cv-v-uint16x8.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="127"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="131" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="132" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="133" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="139" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="128" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="144" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="170">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="172"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint32x4::vector_type" href="cv-v-uint32x4.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="173"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="177" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="178" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="179" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="184" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="174" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="189" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="236">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="238"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint64x2::vector_type" href="cv-v-uint64x2.html#vector_type-typedef" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="239"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="243" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="244" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(__m128i v)">
                    <parameter left="__m128i" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="245" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="250" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="240" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="261" type="__m128i" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="155">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="157"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_float32x4::zero" href="cv-v-float32x4.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="170" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_float32x4" signature="v_float32x4 zero()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="163" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="161" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(const vec_float4 &amp;v)">
                    <parameter left="const vec_float4 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="167" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="165" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(vec_bint4 v)">
                    <parameter left="vec_bint4" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="172" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="158" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="159" type="vec_float4" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="218">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="220"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_float64x2::zero" href="cv-v-float64x2.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="233" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_float64x2" signature="v_float64x2 zero()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="226" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="224" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(const vec_double2 &amp;v)">
                    <parameter left="const vec_double2 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="230" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="228" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(vec_bdword2 v)">
                    <parameter left="vec_bdword2" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="235" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="221" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="222" type="vec_double2" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="91">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="93"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_int16x8::zero" href="cv-v-int16x8.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="107" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_int16x8" signature="v_int16x8 zero()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="99" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="97" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(const vec_short8 &amp;v)">
                    <parameter left="const vec_short8 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="103" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="101" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(vec_bshort8 v)">
                    <parameter left="vec_bshort8" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="109" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="94" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="95" type="vec_short8" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="134">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="136"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_int32x4::zero" href="cv-v-int32x4.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="149" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_int32x4" signature="v_int32x4 zero()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="142" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="140" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(const vec_int4 &amp;v)">
                    <parameter left="const vec_int4 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="146" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="144" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(vec_bint4 v)">
                    <parameter left="vec_bint4" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="151" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="137" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="138" type="vec_int4" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="197">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="199"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_int64x2::zero" href="cv-v-int64x2.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="212" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_int64x2" signature="v_int64x2 zero()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="205" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="203" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(const vec_dword2 &amp;v)">
                    <parameter left="const vec_dword2 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="209" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="207" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(vec_bdword2 v)">
                    <parameter left="vec_bdword2" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="200" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="201" type="vec_dword2" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="46">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="48"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_int8x16::zero" href="cv-v-int8x16.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_int8x16" signature="v_int8x16 zero()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="54" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(const vec_char16 &amp;v)">
                    <parameter left="const vec_char16 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="56" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(vec_bchar16 v)">
                    <parameter left="vec_bchar16" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="65" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="49" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="50" type="vec_char16" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="69">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="71"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_uint16x8::zero" href="cv-v-uint16x8.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="85" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_uint16x8" signature="v_uint16x8 zero()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="77" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(const vec_ushort8 &amp;v)">
                    <parameter left="const vec_ushort8 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="81" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="79" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(vec_bshort8 v)">
                    <parameter left="vec_bshort8" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="87" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="72" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="73" type="vec_ushort8" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="113">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="115"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_uint32x4::zero" href="cv-v-uint32x4.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="128" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_uint32x4" signature="v_uint32x4 zero()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="121" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="119" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(const vec_uint4 &amp;v)">
                    <parameter left="const vec_uint4 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="125" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="123" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(vec_bint4 v)">
                    <parameter left="vec_bint4" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint" signature="uint get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="116" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="117" type="vec_uint4" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="176">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="178"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::v_uint64x2::zero" href="cv-v-uint64x2.html#zero" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="191" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="v_uint64x2" signature="v_uint64x2 zero()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="184" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="182" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(const vec_udword2 &amp;v)">
                    <parameter left="const vec_udword2 &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-3" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="188" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="186" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(vec_bdword2 v)">
                    <parameter left="vec_bdword2" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="193" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="179" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_vsx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_vsx.hpp" lineno="180" type="vec_udword2" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4" href="cv-v-float32x4.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="172">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float32x4::lane_type" href="cv-v-float32x4.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="174"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_float32x4::vector_type" href="cv-v-float32x4.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="175"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="178" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4()"/>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="180" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(float v0, float v1, float v2, float v3)">
                    <parameter left="float" right="" name="v0" default=""/>
                    <parameter left="float" right="" name="v1" default=""/>
                    <parameter left="float" right="" name="v2" default=""/>
                    <parameter left="float" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float32x4" fullname="cv::v_float32x4::v_float32x4" href="cv-v-float32x4.html#v_float32x4-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="179" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float32x4(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float32x4::get0" href="cv-v-float32x4.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="186" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float32x4::nlanes" href="cv-v-float32x4.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="176" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float32x4::val" href="cv-v-float32x4.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="191" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2" href="cv-v-float64x2.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="238">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_float64x2::lane_type" href="cv-v-float64x2.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="240"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_float64x2::vector_type" href="cv-v-float64x2.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="241"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="244" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2()"/>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="246" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(double v0, double v1)">
                    <parameter left="double" right="" name="v0" default=""/>
                    <parameter left="double" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_float64x2" fullname="cv::v_float64x2::v_float64x2" href="cv-v-float64x2.html#v_float64x2-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="245" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_float64x2(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_float64x2::get0" href="cv-v-float64x2.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="252" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_float64x2::nlanes" href="cv-v-float64x2.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="242" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_float64x2::val" href="cv-v-float64x2.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="257" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8" href="cv-v-int16x8.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="106">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int16x8::lane_type" href="cv-v-int16x8.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="108"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int16x8::vector_type" href="cv-v-int16x8.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="109"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="112" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8()"/>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="114" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)">
                    <parameter left="short" right="" name="v0" default=""/>
                    <parameter left="short" right="" name="v1" default=""/>
                    <parameter left="short" right="" name="v2" default=""/>
                    <parameter left="short" right="" name="v3" default=""/>
                    <parameter left="short" right="" name="v4" default=""/>
                    <parameter left="short" right="" name="v5" default=""/>
                    <parameter left="short" right="" name="v6" default=""/>
                    <parameter left="short" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int16x8" fullname="cv::v_int16x8::v_int16x8" href="cv-v-int16x8.html#v_int16x8-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="113" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int16x8(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int16x8::get0" href="cv-v-int16x8.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="120" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int16x8::nlanes" href="cv-v-int16x8.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="110" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int16x8::val" href="cv-v-int16x8.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="125" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4" href="cv-v-int32x4.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="150">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int32x4::lane_type" href="cv-v-int32x4.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="152"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int32x4::vector_type" href="cv-v-int32x4.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="153"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="156" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4()"/>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="158" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(int v0, int v1, int v2, int v3)">
                    <parameter left="int" right="" name="v0" default=""/>
                    <parameter left="int" right="" name="v1" default=""/>
                    <parameter left="int" right="" name="v2" default=""/>
                    <parameter left="int" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int32x4" fullname="cv::v_int32x4::v_int32x4" href="cv-v-int32x4.html#v_int32x4-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="157" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int32x4(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int32x4::get0" href="cv-v-int32x4.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="164" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int32x4::nlanes" href="cv-v-int32x4.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="154" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int32x4::val" href="cv-v-int32x4.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="169" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2" href="cv-v-int64x2.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="216">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int64x2::lane_type" href="cv-v-int64x2.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="218"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int64x2::vector_type" href="cv-v-int64x2.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="219"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="222" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2()"/>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="224" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(int64 v0, int64 v1)">
                    <parameter left="int64" right="" name="v0" default=""/>
                    <parameter left="int64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int64x2" fullname="cv::v_int64x2::v_int64x2" href="cv-v-int64x2.html#v_int64x2-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="223" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int64x2(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int64x2::get0" href="cv-v-int64x2.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="230" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int64x2::nlanes" href="cv-v-int64x2.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="220" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int64x2::val" href="cv-v-int64x2.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="235" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16" href="cv-v-int8x16.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="61">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_int8x16::lane_type" href="cv-v-int8x16.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="63"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_int8x16::vector_type" href="cv-v-int8x16.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="64"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="67" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16()"/>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="69" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7, schar v8, schar v9, schar v10, schar v11, schar v12, schar v13, schar v14, schar v15)">
                    <parameter left="schar" right="" name="v0" default=""/>
                    <parameter left="schar" right="" name="v1" default=""/>
                    <parameter left="schar" right="" name="v2" default=""/>
                    <parameter left="schar" right="" name="v3" default=""/>
                    <parameter left="schar" right="" name="v4" default=""/>
                    <parameter left="schar" right="" name="v5" default=""/>
                    <parameter left="schar" right="" name="v6" default=""/>
                    <parameter left="schar" right="" name="v7" default=""/>
                    <parameter left="schar" right="" name="v8" default=""/>
                    <parameter left="schar" right="" name="v9" default=""/>
                    <parameter left="schar" right="" name="v10" default=""/>
                    <parameter left="schar" right="" name="v11" default=""/>
                    <parameter left="schar" right="" name="v12" default=""/>
                    <parameter left="schar" right="" name="v13" default=""/>
                    <parameter left="schar" right="" name="v14" default=""/>
                    <parameter left="schar" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_int8x16" fullname="cv::v_int8x16::v_int8x16" href="cv-v-int8x16.html#v_int8x16-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="68" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_int8x16(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_int8x16::get0" href="cv-v-int8x16.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_int8x16::nlanes" href="cv-v-int8x16.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="65" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_int8x16::val" href="cv-v-int8x16.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="81" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8" href="cv-v-uint16x8.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="84">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint16x8::lane_type" href="cv-v-uint16x8.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="86"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint16x8::vector_type" href="cv-v-uint16x8.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="87"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="90" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8()"/>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="92" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)">
                    <parameter left="ushort" right="" name="v0" default=""/>
                    <parameter left="ushort" right="" name="v1" default=""/>
                    <parameter left="ushort" right="" name="v2" default=""/>
                    <parameter left="ushort" right="" name="v3" default=""/>
                    <parameter left="ushort" right="" name="v4" default=""/>
                    <parameter left="ushort" right="" name="v5" default=""/>
                    <parameter left="ushort" right="" name="v6" default=""/>
                    <parameter left="ushort" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint16x8" fullname="cv::v_uint16x8::v_uint16x8" href="cv-v-uint16x8.html#v_uint16x8-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="91" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint16x8(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint16x8::get0" href="cv-v-uint16x8.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="98" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint16x8::nlanes" href="cv-v-uint16x8.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="88" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint16x8::val" href="cv-v-uint16x8.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="103" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4" href="cv-v-uint32x4.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="128">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint32x4::lane_type" href="cv-v-uint32x4.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="130"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint32x4::vector_type" href="cv-v-uint32x4.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="131"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="134" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4()"/>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="136" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)">
                    <parameter left="unsigned" right="" name="v0" default=""/>
                    <parameter left="unsigned" right="" name="v1" default=""/>
                    <parameter left="unsigned" right="" name="v2" default=""/>
                    <parameter left="unsigned" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint32x4" fullname="cv::v_uint32x4::v_uint32x4" href="cv-v-uint32x4.html#v_uint32x4-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="135" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint32x4(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint32x4::get0" href="cv-v-uint32x4.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="142" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint32x4::nlanes" href="cv-v-uint32x4.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="132" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint32x4::val" href="cv-v-uint32x4.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="147" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2" href="cv-v-uint64x2.html" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="194">
                <typedef threadsafety="unspecified" name="lane_type" fullname="cv::v_uint64x2::lane_type" href="cv-v-uint64x2.html#lane_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="196"/>
                <typedef threadsafety="unspecified" name="vector_type" fullname="cv::v_uint64x2::vector_type" href="cv-v-uint64x2.html#vector_type-typedef" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="197"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2()"/>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-2" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(uint64 v0, uint64 v1)">
                    <parameter left="uint64" right="" name="v0" default=""/>
                    <parameter left="uint64" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="v_uint64x2" fullname="cv::v_uint64x2::v_uint64x2" href="cv-v-uint64x2.html#v_uint64x2-1" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="201" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="v_uint64x2(v128_t v)">
                    <parameter left="v128_t" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="get0" fullname="cv::v_uint64x2::get0" href="cv-v-uint64x2.html#get0" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="208" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 get0() const"/>
                <variable threadsafety="unspecified" name="nlanes" fullname="cv::v_uint64x2::nlanes" href="cv-v-uint64x2.html#nlanes-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="198" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::v_uint64x2::val" href="cv-v-uint64x2.html#val-var" status="active" access="public" location="intrin_wasm.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_wasm.hpp" lineno="213" type="v128_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Mat" fullname="cv::Mat" href="cv-mat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="797">
                <function threadsafety="unspecified" name="adjustROI" fullname="cv::Mat::adjustROI" href="cv-mat.html#adjustROI" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1618" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; adjustROI(int dtop, int dbottom, int dleft, int dright)">
                    <parameter left="int" right="" name="dtop" default=""/>
                    <parameter left="int" right="" name="dbottom" default=""/>
                    <parameter left="int" right="" name="dleft" default=""/>
                    <parameter left="int" right="" name="dright" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat::operator=" href="cv-mat.html#operator-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2077" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(Mat &amp;&amp;m)">
                    <parameter left="Mat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat::operator=" href="cv-mat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1060" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat::operator=" href="cv-mat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1069" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(const MatExpr &amp;expr)">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat::operator=" href="cv-mat.html#operator-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1247" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(const Scalar &amp;s)">
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="setTo" fullname="cv::Mat::setTo" href="cv-mat.html#setTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1256" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; setTo(InputArray value, InputArray mask)">
                    <parameter left="InputArray" right="" name="value" default=""/>
                    <parameter left="InputArray" right="" name="mask" default="noArray()"/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::Mat::diag" href="cv-mat.html#diag-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1187" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat diag(const Mat &amp;d)">
                    <parameter left="const Mat &amp;" right="" name="d" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="806" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat()"/>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-28" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2076" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(Mat &amp;&amp;m)">
                    <parameter left="Mat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="822" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="844" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(Size size, int type, const Scalar &amp;s)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="922" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(Size size, int type, void *data, size_t step)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="data" default=""/>
                    <parameter left="size_t" right="" name="step" default="AUTO_STEP"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="890" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="963" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Mat &amp;m, const Range &amp;rowRange, const Range &amp;colRange)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default="Range::all()"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-16" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="983" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Mat &amp;m, const Range *ranges)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="973" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Mat &amp;m, const Rect &amp;roi)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-17" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="993" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Mat &amp;m, const std::vector&lt;Range&gt; &amp;ranges)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-26" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1044" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const MatCommaInitializer_&lt;_Tp&gt; &amp;commaInitializer)">
                    <parameter left="const MatCommaInitializer_&lt;_Tp&gt; &amp;" right="" name="commaInitializer" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-23" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1032" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Matx&lt;_Tp, m, n&gt; &amp;mtx, bool copyData)">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="mtx" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-25" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1040" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Point3_&lt;_Tp&gt; &amp;pt, bool copyData)">
                    <parameter left="const Point3_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-24" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1036" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Point_&lt;_Tp&gt; &amp;pt, bool copyData)">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-22" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1028" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const Vec&lt;_Tp, n&gt; &amp;vec, bool copyData)">
                    <parameter left="const Vec&lt;_Tp, n&gt; &amp;" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-27" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1047" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const cuda::GpuMat &amp;m)">
                    <parameter left="const cuda::GpuMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-21" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1024" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::array&lt;_Tp, _Nm&gt; &amp;arr, bool copyData)">
                    <parameter left="const std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                    <parameter left="bool" right="" name="copyData" default="false"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-19" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1016" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::initializer_list&lt;_Tp&gt; list)">
                    <parameter left="const std::initializer_list&lt;_Tp&gt;" right="" name="list" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-20" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1020" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::initializer_list&lt;int&gt; sizes, const std::initializer_list&lt;_Tp&gt; list)">
                    <parameter left="const std::initializer_list&lt;int&gt;" right="" name="sizes" default=""/>
                    <parameter left="const std::initializer_list&lt;_Tp&gt;" right="" name="list" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-18" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1011" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::vector&lt;_Tp&gt; &amp;vec, bool copyData)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="copyData" default="false"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="859" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::vector&lt;int&gt; &amp;sizes, int type)">
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="880" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::vector&lt;int&gt; &amp;sizes, int type, const Scalar &amp;s)">
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="951" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::vector&lt;int&gt; &amp;sizes, int type, void *data, const size_t *steps)">
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="data" default=""/>
                    <parameter left="const size_t *" right="" name="steps" default="0"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="852" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int ndims, const int *sizes, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="870" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int ndims, const int *sizes, int type, const Scalar &amp;s)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="937" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int ndims, const int *sizes, int type, void *data, const size_t *steps)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="data" default=""/>
                    <parameter left="const size_t *" right="" name="steps" default="0"/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="814" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="833" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int rows, int cols, int type, const Scalar &amp;s)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat" fullname="cv::Mat::Mat" href="cv-mat.html#Mat-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="906" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int rows, int cols, int type, void *data, size_t step)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="data" default=""/>
                    <parameter left="size_t" right="" name="step" default="AUTO_STEP"/>
                </function>
                <function threadsafety="unspecified" name="getDefaultAllocator" fullname="cv::Mat::getDefaultAllocator" href="cv-mat.html#getDefaultAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2105" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatAllocator *" signature="MatAllocator * getDefaultAllocator()"/>
                <function threadsafety="unspecified" name="getStdAllocator" fullname="cv::Mat::getStdAllocator" href="cv-mat.html#getStdAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2104" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatAllocator *" signature="MatAllocator * getStdAllocator()"/>
                <function threadsafety="unspecified" name="eye" fullname="cv::Mat::eye" href="cv-mat.html#eye-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1424" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr eye(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="eye" fullname="cv::Mat::eye" href="cv-mat.html#eye" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1418" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr eye(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat::ones" href="cv-mat.html#ones-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1395" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat::ones" href="cv-mat.html#ones-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1402" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(int ndims, const int *sz, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sz" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat::ones" href="cv-mat.html#ones" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1389" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat::zeros" href="cv-mat.html#zeros-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1364" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat::zeros" href="cv-mat.html#zeros-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1371" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(int ndims, const int *sz, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sz" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat::zeros" href="cv-mat.html#zeros" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1358" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::Mat::begin" href="cv-mat.html#begin" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2007" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_&lt;_Tp&gt;" signature="MatIterator_&lt;_Tp&gt; begin()"/>
                <function threadsafety="unspecified" name="end" fullname="cv::Mat::end" href="cv-mat.html#end" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2015" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_&lt;_Tp&gt;" signature="MatIterator_&lt;_Tp&gt; end()"/>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1964" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(Point pt)">
                    <parameter left="Point" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1956" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(const Vec&lt;int, n&gt; &amp;idx)">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1949" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(const int *idx)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1917" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(int i0)">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1938" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(int i0, int i1, int i2)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1926" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; at(int row, int col)">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-18" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1883" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(const Vec&lt;int, n&gt; &amp;idx)">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-16" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1879" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(const int *idx)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1861" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(int i0)">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1875" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(int i0, int i1, int i2)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1868" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * ptr(int row, int col)">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1856" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(const Vec&lt;int, n&gt; &amp;idx)">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1852" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(const int *idx)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1831" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int i0)">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1847" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int i0, int i1, int i2)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1839" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int row, int col)">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="addref" fullname="cv::Mat::addref" href="cv-mat.html#addref" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1489" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addref()"/>
                <function threadsafety="unspecified" name="copySize" fullname="cv::Mat::copySize" href="cv-mat.html#copySize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1509" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copySize(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat::create" href="cv-mat.html#create-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1465" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat::create" href="cv-mat.html#create-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1478" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(const std::vector&lt;int&gt; &amp;sizes, int type)">
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat::create" href="cv-mat.html#create-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1472" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int ndims, const int *sizes, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat::create" href="cv-mat.html#create" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1459" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="deallocate" fullname="cv::Mat::deallocate" href="cv-mat.html#deallocate" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1507" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deallocate()"/>
                <function threadsafety="unspecified" name="forEach" fullname="cv::Mat::forEach" href="cv-mat.html#forEach" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2072" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach(const Functor &amp;operation)">
                    <parameter left="const Functor &amp;" right="" name="operation" default=""/>
                </function>
                <function threadsafety="unspecified" name="forEach_impl" fullname="cv::Mat::forEach_impl" href="cv-mat.html#forEach_impl" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2118" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach_impl(const Functor &amp;operation)">
                    <parameter left="const Functor &amp;" right="" name="operation" default=""/>
                </function>
                <function threadsafety="unspecified" name="pop_back" fullname="cv::Mat::pop_back" href="cv-mat.html#pop_back" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1576" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void pop_back(size_t nelems)">
                    <parameter left="size_t" right="" name="nelems" default="1"/>
                </function>
                <function threadsafety="unspecified" name="push_back" fullname="cv::Mat::push_back" href="cv-mat.html#push_back-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1568" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void push_back(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="push_back" fullname="cv::Mat::push_back" href="cv-mat.html#push_back-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1558" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void push_back(const Mat_&lt;_Tp&gt; &amp;elem)">
                    <parameter left="const Mat_&lt;_Tp&gt; &amp;" right="" name="elem" default=""/>
                </function>
                <function threadsafety="unspecified" name="push_back" fullname="cv::Mat::push_back" href="cv-mat.html#push_back" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1553" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void push_back(const _Tp &amp;elem)">
                    <parameter left="const _Tp &amp;" right="" name="elem" default=""/>
                </function>
                <function threadsafety="unspecified" name="push_back" fullname="cv::Mat::push_back" href="cv-mat.html#push_back-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1563" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void push_back(const std::vector&lt;_Tp&gt; &amp;elem)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="elem" default=""/>
                </function>
                <function threadsafety="unspecified" name="push_back_" fullname="cv::Mat::push_back_" href="cv-mat.html#push_back_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1544" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void push_back_(const void *elem)">
                    <parameter left="const void *" right="" name="elem" default=""/>
                </function>
                <function threadsafety="unspecified" name="release" fullname="cv::Mat::release" href="cv-mat.html#release" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1504" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="reserve" fullname="cv::Mat::reserve" href="cv-mat.html#reserve" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1518" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reserve(size_t sz)">
                    <parameter left="size_t" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="reserveBuffer" fullname="cv::Mat::reserveBuffer" href="cv-mat.html#reserveBuffer" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1526" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reserveBuffer(size_t sz)">
                    <parameter left="size_t" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="resize" fullname="cv::Mat::resize" href="cv-mat.html#resize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1535" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resize(size_t sz)">
                    <parameter left="size_t" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="resize" fullname="cv::Mat::resize" href="cv-mat.html#resize-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1541" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resize(size_t sz, const Scalar &amp;s)">
                    <parameter left="size_t" right="" name="sz" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="setDefaultAllocator" fullname="cv::Mat::setDefaultAllocator" href="cv-mat.html#setDefaultAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2106" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDefaultAllocator(MatAllocator *allocator)">
                    <parameter left="MatAllocator *" right="" name="allocator" default=""/>
                </function>
                <function threadsafety="unspecified" name="updateContinuityFlag" fullname="cv::Mat::updateContinuityFlag" href="cv-mat.html#updateContinuityFlag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateContinuityFlag()"/>
                <function threadsafety="unspecified" name="~Mat" fullname="cv::Mat::~Mat" href="cv-mat.html#dtor.Mat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1050" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Mat()"/>
                <function threadsafety="unspecified" name="col" fullname="cv::Mat::col" href="cv-mat.html#col" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1116" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat col(int x) const">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::Mat::colRange" href="cv-mat.html#colRange-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1144" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat colRange(const Range &amp;r) const">
                    <parameter left="const Range &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::Mat::colRange" href="cv-mat.html#colRange" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1139" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat colRange(int startcol, int endcol) const">
                    <parameter left="int" right="" name="startcol" default=""/>
                    <parameter left="int" right="" name="endcol" default=""/>
                </function>
                <function threadsafety="unspecified" name="cross" fullname="cv::Mat::cross" href="cv-mat.html#cross" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1332" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat cross(InputArray m) const">
                    <parameter left="InputArray" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::Mat::diag" href="cv-mat.html#diag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1180" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat diag(int d) const">
                    <parameter left="int" right="" name="d" default="0"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat::operator()" href="cv-mat.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1631" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat operator()(Range rowRange, Range colRange) const">
                    <parameter left="Range" right="" name="rowRange" default=""/>
                    <parameter left="Range" right="" name="colRange" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat::operator()" href="cv-mat.html#operator-28-29-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1641" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat operator()(const Range *ranges) const">
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat::operator()" href="cv-mat.html#operator-28-29-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1636" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat operator()(const Rect &amp;roi) const">
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat::operator()" href="cv-mat.html#operator-28-29-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1646" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat operator()(const std::vector&lt;Range&gt; &amp;ranges) const">
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::Mat::reshape" href="cv-mat.html#reshape-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1288" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat reshape(int cn, const std::vector&lt;int&gt; &amp;newshape) const">
                    <parameter left="int" right="" name="cn" default=""/>
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="newshape" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::Mat::reshape" href="cv-mat.html#reshape-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1285" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat reshape(int cn, int newndims, const int *newsz) const">
                    <parameter left="int" right="" name="cn" default=""/>
                    <parameter left="int" right="" name="newndims" default=""/>
                    <parameter left="const int *" right="" name="newsz" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::Mat::reshape" href="cv-mat.html#reshape" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1282" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat reshape(int cn, int rows) const">
                    <parameter left="int" right="" name="cn" default=""/>
                    <parameter left="int" right="" name="rows" default="0"/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::Mat::row" href="cv-mat.html#row" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1107" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat row(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::Mat::rowRange" href="cv-mat.html#rowRange-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat rowRange(const Range &amp;r) const">
                    <parameter left="const Range &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::Mat::rowRange" href="cv-mat.html#rowRange" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1125" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat rowRange(int startrow, int endrow) const">
                    <parameter left="int" right="" name="startrow" default=""/>
                    <parameter left="int" right="" name="endrow" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::Mat::begin" href="cv-mat.html#begin-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2008" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_&lt;_Tp&gt;" signature="MatConstIterator_&lt;_Tp&gt; begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::Mat::end" href="cv-mat.html#end-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2016" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_&lt;_Tp&gt;" signature="MatConstIterator_&lt;_Tp&gt; end() const"/>
                <function threadsafety="unspecified" name="inv" fullname="cv::Mat::inv" href="cv-mat.html#inv" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1309" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr inv(int method) const">
                    <parameter left="int" right="" name="method" default="DECOMP_LU"/>
                </function>
                <function threadsafety="unspecified" name="mul" fullname="cv::Mat::mul" href="cv-mat.html#mul" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1323" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr mul(InputArray m, double scale) const">
                    <parameter left="InputArray" right="" name="m" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="t" fullname="cv::Mat::t" href="cv-mat.html#t" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1300" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr t() const"/>
                <function threadsafety="unspecified" name="getUMat" fullname="cv::Mat::getUMat" href="cv-mat.html#getUMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1072" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat getUMat(AccessFlag accessFlags, UMatUsageFlags usageFlags) const">
                    <parameter left="AccessFlag" right="" name="accessFlags" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="empty" fullname="cv::Mat::empty" href="cv-mat.html#empty" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1787" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="isContinuous" fullname="cv::Mat::isContinuous" href="cv-mat.html#isContinuous" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1728" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isContinuous() const"/>
                <function threadsafety="unspecified" name="isSubmatrix" fullname="cv::Mat::isSubmatrix" href="cv-mat.html#isSubmatrix" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1731" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSubmatrix() const"/>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1969" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(Point pt) const">
                    <parameter left="Point" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1958" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(const Vec&lt;int, n&gt; &amp;idx) const">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1953" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(const int *idx) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1921" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(int i0) const">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1944" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(int i0, int i1, int i2) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="at" fullname="cv::Mat::at" href="cv-mat.html#at-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1931" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; at(int row, int col) const">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-19" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1885" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(const Vec&lt;int, n&gt; &amp;idx) const">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-17" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1881" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(const int *idx) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1863" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(int i0) const">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1877" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(int i0, int i1, int i2) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1873" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * ptr(int row, int col) const">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1858" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(const Vec&lt;int, n&gt; &amp;idx) const">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1854" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(const int *idx) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1833" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int i0) const">
                    <parameter left="int" right="" name="i0" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1849" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int i0, int i1, int i2) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::Mat::ptr" href="cv-mat.html#ptr-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1844" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int row, int col) const">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="dot" fullname="cv::Mat::dot" href="cv-mat.html#dot" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1342" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double dot(InputArray m) const">
                    <parameter left="InputArray" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="channels" fullname="cv::Mat::channels" href="cv-mat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1773" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="checkVector" fullname="cv::Mat::checkVector" href="cv-mat.html#checkVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1823" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int checkVector(int elemChannels, int depth, bool requireContinuous) const">
                    <parameter left="int" right="" name="elemChannels" default=""/>
                    <parameter left="int" right="" name="depth" default="-1"/>
                    <parameter left="bool" right="" name="requireContinuous" default="true"/>
                </function>
                <function threadsafety="unspecified" name="depth" fullname="cv::Mat::depth" href="cv-mat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1767" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::Mat::type" href="cv-mat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1752" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="operator Matx&lt;_Tp, m, n&gt;" fullname="cv::Mat::operator Matx&lt;_Tp, m, n&gt;" href="cv-mat.html#operator-Matx-lt_Tp-2c-m-2c-n-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1650" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Matx&lt;_Tp, m, n&gt;() const"/>
                <function threadsafety="unspecified" name="operator Vec&lt;_Tp, n&gt;" fullname="cv::Mat::operator Vec&lt;_Tp, n&gt;" href="cv-mat.html#operator-Vec-lt_Tp-2c-n-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1649" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;_Tp, n&gt;() const"/>
                <function threadsafety="unspecified" name="operator std::array&lt;_Tp, _Nm&gt;" fullname="cv::Mat::operator std::array&lt;_Tp, _Nm&gt;" href="cv-mat.html#operator-std::array-lt_Tp-2c-_Nm-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1652" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator std::array&lt;_Tp, _Nm&gt;() const"/>
                <function threadsafety="unspecified" name="operator std::vector&lt;_Tp&gt;" fullname="cv::Mat::operator std::vector&lt;_Tp&gt;" href="cv-mat.html#operator-std::vector-lt_Tp-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1648" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator std::vector&lt;_Tp&gt;() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::Mat::elemSize" href="cv-mat.html#elemSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1738" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::Mat::elemSize1" href="cv-mat.html#elemSize1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1745" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="step1" fullname="cv::Mat::step1" href="cv-mat.html#step1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1780" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step1(int i) const">
                    <parameter left="int" right="" name="i" default="0"/>
                </function>
                <function threadsafety="unspecified" name="total" fullname="cv::Mat::total" href="cv-mat.html#total" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1794" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t total() const"/>
                <function threadsafety="unspecified" name="total" fullname="cv::Mat::total" href="cv-mat.html#total-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1800" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t total(int startDim, int endDim) const">
                    <parameter left="int" right="" name="startDim" default=""/>
                    <parameter left="int" right="" name="endDim" default="INT_MAX"/>
                </function>
                <function threadsafety="unspecified" name="assignTo" fullname="cv::Mat::assignTo" href="cv-mat.html#assignTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1242" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assignTo(Mat &amp;m, int type) const">
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="type" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::Mat::convertTo" href="cv-mat.html#convertTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1234" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(OutputArray m, int rtype, double alpha, double beta) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                    <parameter left="double" right="" name="alpha" default="1"/>
                    <parameter left="double" right="" name="beta" default="0"/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::Mat::copyTo" href="cv-mat.html#copyTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1211" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray m) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::Mat::copyTo" href="cv-mat.html#copyTo-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1219" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray m, InputArray mask) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                    <parameter left="InputArray" right="" name="mask" default=""/>
                </function>
                <function threadsafety="unspecified" name="forEach" fullname="cv::Mat::forEach" href="cv-mat.html#forEach-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2074" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach(const Functor &amp;operation) const">
                    <parameter left="const Functor &amp;" right="" name="operation" default=""/>
                </function>
                <function threadsafety="unspecified" name="locateROI" fullname="cv::Mat::locateROI" href="cv-mat.html#locateROI" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="1589" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void locateROI(Size &amp;wholeSize, Point &amp;ofs) const">
                    <parameter left="Size &amp;" right="" name="wholeSize" default=""/>
                    <parameter left="Point &amp;" right="" name="ofs" default=""/>
                </function>
                <variable threadsafety="unspecified" name="AUTO_STEP" fullname="cv::Mat::AUTO_STEP" href="cv-mat.html#AUTO_STEP-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2079" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CONTINUOUS_FLAG" fullname="cv::Mat::CONTINUOUS_FLAG" href="cv-mat.html#CONTINUOUS_FLAG-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2079" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="DEPTH_MASK" fullname="cv::Mat::DEPTH_MASK" href="cv-mat.html#DEPTH_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2080" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAGIC_MASK" fullname="cv::Mat::MAGIC_MASK" href="cv-mat.html#MAGIC_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2080" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAGIC_VAL" fullname="cv::Mat::MAGIC_VAL" href="cv-mat.html#MAGIC_VAL-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2079" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="SUBMATRIX_FLAG" fullname="cv::Mat::SUBMATRIX_FLAG" href="cv-mat.html#SUBMATRIX_FLAG-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2079" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="TYPE_MASK" fullname="cv::Mat::TYPE_MASK" href="cv-mat.html#TYPE_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2080" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="allocator" fullname="cv::Mat::allocator" href="cv-mat.html#allocator-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2102" type="MatAllocator *" static="false"/>
                <variable threadsafety="unspecified" name="data" fullname="cv::Mat::data" href="cv-mat.html#data-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2094" type="uchar *" static="false"/>
                <variable threadsafety="unspecified" name="dataend" fullname="cv::Mat::dataend" href="cv-mat.html#dataend-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2098" type="const uchar *" static="false"/>
                <variable threadsafety="unspecified" name="datalimit" fullname="cv::Mat::datalimit" href="cv-mat.html#datalimit-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2099" type="const uchar *" static="false"/>
                <variable threadsafety="unspecified" name="datastart" fullname="cv::Mat::datastart" href="cv-mat.html#datastart-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2097" type="const uchar *" static="false"/>
                <variable threadsafety="unspecified" name="dims" fullname="cv::Mat::dims" href="cv-mat.html#dims-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2090" type="int" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::Mat::size" href="cv-mat.html#size-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2114" type="MatSize" static="false"/>
                <variable threadsafety="unspecified" name="step" fullname="cv::Mat::step" href="cv-mat.html#step-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2115" type="MatStep" static="false"/>
                <variable threadsafety="unspecified" name="u" fullname="cv::Mat::u" href="cv-mat.html#u-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2112" type="UMatData *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="MatAllocator" fullname="cv::MatAllocator" href="cv-matallocator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="465">
                <function threadsafety="unspecified" name="MatAllocator" fullname="cv::MatAllocator::MatAllocator" href="cv-matallocator.html#MatAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="468" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatAllocator()"/>
                <function threadsafety="unspecified" name="~MatAllocator" fullname="cv::MatAllocator::~MatAllocator" href="cv-matallocator.html#dtor.MatAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="469" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~MatAllocator()"/>
                <function threadsafety="unspecified" name="getBufferPoolController" fullname="cv::MatAllocator::getBufferPoolController" href="cv-matallocator.html#getBufferPoolController" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="492" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="BufferPoolController *" signature="BufferPoolController * getBufferPoolController(const char *id) const">
                    <parameter left="const char *" right="" name="id" default="NULL"/>
                </function>
                <function threadsafety="unspecified" name="allocate" fullname="cv::MatAllocator::allocate" href="cv-matallocator.html#allocate" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="475" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMatData *" signature="UMatData * allocate(int dims, const int *sizes, int type, void *data, size_t *step, AccessFlag flags, UMatUsageFlags usageFlags) const = 0">
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="data" default=""/>
                    <parameter left="size_t *" right="" name="step" default=""/>
                    <parameter left="AccessFlag" right="" name="flags" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default=""/>
                </function>
                <function threadsafety="unspecified" name="allocate" fullname="cv::MatAllocator::allocate" href="cv-matallocator.html#allocate-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="477" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool allocate(UMatData *data, AccessFlag accessflags, UMatUsageFlags usageFlags) const = 0">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                    <parameter left="AccessFlag" right="" name="accessflags" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default=""/>
                </function>
                <function threadsafety="unspecified" name="copy" fullname="cv::MatAllocator::copy" href="cv-matallocator.html#copy" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="487" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copy(UMatData *srcdata, UMatData *dstdata, int dims, const size_t[] sz, const size_t[] srcofs, const size_t[] srcstep, const size_t[] dstofs, const size_t[] dststep, bool sync) const">
                    <parameter left="UMatData *" right="" name="srcdata" default=""/>
                    <parameter left="UMatData *" right="" name="dstdata" default=""/>
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const size_t[]" right="" name="sz" default=""/>
                    <parameter left="const size_t[]" right="" name="srcofs" default=""/>
                    <parameter left="const size_t[]" right="" name="srcstep" default=""/>
                    <parameter left="const size_t[]" right="" name="dstofs" default=""/>
                    <parameter left="const size_t[]" right="" name="dststep" default=""/>
                    <parameter left="bool" right="" name="sync" default=""/>
                </function>
                <function threadsafety="unspecified" name="deallocate" fullname="cv::MatAllocator::deallocate" href="cv-matallocator.html#deallocate" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="478" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deallocate(UMatData *data) const = 0">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                </function>
                <function threadsafety="unspecified" name="download" fullname="cv::MatAllocator::download" href="cv-matallocator.html#download" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="481" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void download(UMatData *data, void *dst, int dims, const size_t[] sz, const size_t[] srcofs, const size_t[] srcstep, const size_t[] dststep) const">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                    <parameter left="void *" right="" name="dst" default=""/>
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const size_t[]" right="" name="sz" default=""/>
                    <parameter left="const size_t[]" right="" name="srcofs" default=""/>
                    <parameter left="const size_t[]" right="" name="srcstep" default=""/>
                    <parameter left="const size_t[]" right="" name="dststep" default=""/>
                </function>
                <function threadsafety="unspecified" name="map" fullname="cv::MatAllocator::map" href="cv-matallocator.html#map" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="479" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void map(UMatData *data, AccessFlag accessflags) const">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                    <parameter left="AccessFlag" right="" name="accessflags" default=""/>
                </function>
                <function threadsafety="unspecified" name="unmap" fullname="cv::MatAllocator::unmap" href="cv-matallocator.html#unmap" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="480" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unmap(UMatData *data) const">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                </function>
                <function threadsafety="unspecified" name="upload" fullname="cv::MatAllocator::upload" href="cv-matallocator.html#upload" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="484" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void upload(UMatData *data, const void *src, int dims, const size_t[] sz, const size_t[] dstofs, const size_t[] dststep, const size_t[] srcstep) const">
                    <parameter left="UMatData *" right="" name="data" default=""/>
                    <parameter left="const void *" right="" name="src" default=""/>
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const size_t[]" right="" name="sz" default=""/>
                    <parameter left="const size_t[]" right="" name="dstofs" default=""/>
                    <parameter left="const size_t[]" right="" name="dststep" default=""/>
                    <parameter left="const size_t[]" right="" name="srcstep" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MatCommaInitializer_" fullname="cv::MatCommaInitializer_" href="cv-matcommainitializer.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="510">
                <function threadsafety="unspecified" name="MatCommaInitializer_" fullname="cv::MatCommaInitializer_::MatCommaInitializer_" href="cv-matcommainitializer.html#MatCommaInitializer_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="514" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatCommaInitializer_(Mat_&lt;_Tp&gt; *_m)">
                    <parameter left="Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator," fullname="cv::MatCommaInitializer_::operator," href="cv-matcommainitializer.html#operator-2c" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="516" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatCommaInitializer_&lt;_Tp&gt; &amp;" signature="MatCommaInitializer_&lt;_Tp&gt; &amp; operator,(T2 v)">
                    <parameter left="T2" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator Mat_&lt;_Tp&gt;" fullname="cv::MatCommaInitializer_::operator Mat_&lt;_Tp&gt;" href="cv-matcommainitializer.html#operator-Mat_-lt_Tp-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="518" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Mat_&lt;_Tp&gt;() const"/>
                <variable threadsafety="unspecified" name="it" fullname="cv::MatCommaInitializer_::it" href="cv-matcommainitializer.html#it-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="520" type="MatIterator_&lt;_Tp&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator" href="cv-matconstiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3011">
                <typedef threadsafety="unspecified" name="difference_type" fullname="cv::MatConstIterator::difference_type" href="cv-matconstiterator.html#difference_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3015"/>
                <typedef threadsafety="unspecified" name="iterator_category" fullname="cv::MatConstIterator::iterator_category" href="cv-matconstiterator.html#iterator_category-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3019"/>
                <typedef threadsafety="unspecified" name="pointer" fullname="cv::MatConstIterator::pointer" href="cv-matconstiterator.html#pointer-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3016"/>
                <typedef threadsafety="unspecified" name="reference" fullname="cv::MatConstIterator::reference" href="cv-matconstiterator.html#reference-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3017"/>
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::MatConstIterator::value_type" href="cv-matconstiterator.html#value_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3014"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatConstIterator::operator++" href="cv-matconstiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3050" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator &amp;" signature="MatConstIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::MatConstIterator::operator+=" href="cv-matconstiterator.html#operator-2b-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3042" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator &amp;" signature="MatConstIterator &amp; operator+=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatConstIterator::operator--" href="cv-matconstiterator.html#operator--" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3046" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator &amp;" signature="MatConstIterator &amp; operator--()"/>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::MatConstIterator::operator-=" href="cv-matconstiterator.html#operator--eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3044" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator &amp;" signature="MatConstIterator &amp; operator-=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::MatConstIterator::operator=" href="cv-matconstiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3035" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator &amp;" signature="MatConstIterator &amp; operator=(const MatConstIterator &amp;it)">
                    <parameter left="const MatConstIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatConstIterator::operator++" href="cv-matconstiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3052" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator" signature="MatConstIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatConstIterator::operator--" href="cv-matconstiterator.html#operator---1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3048" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator" signature="MatConstIterator operator--(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3022" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator()"/>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3024" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator(const Mat *_m)">
                    <parameter left="const Mat *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3028" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator(const Mat *_m, Point _pt)">
                    <parameter left="const Mat *" right="" name="_m" default=""/>
                    <parameter left="Point" right="" name="_pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3030" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator(const Mat *_m, const int *_idx)">
                    <parameter left="const Mat *" right="" name="_m" default=""/>
                    <parameter left="const int *" right="" name="_idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3026" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator(const Mat *_m, int _row, int _col)">
                    <parameter left="const Mat *" right="" name="_m" default=""/>
                    <parameter left="int" right="" name="_row" default=""/>
                    <parameter left="int" right="" name="_col" default="0"/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator" fullname="cv::MatConstIterator::MatConstIterator" href="cv-matconstiterator.html#MatConstIterator-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3032" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator(const MatConstIterator &amp;it)">
                    <parameter left="const MatConstIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="seek" fullname="cv::MatConstIterator::seek" href="cv-matconstiterator.html#seek-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3060" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void seek(const int *_idx, bool relative)">
                    <parameter left="const int *" right="" name="_idx" default=""/>
                    <parameter left="bool" right="" name="relative" default="false"/>
                </function>
                <function threadsafety="unspecified" name="seek" fullname="cv::MatConstIterator::seek" href="cv-matconstiterator.html#seek" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3059" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void seek(ptrdiff_t ofs, bool relative)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                    <parameter left="bool" right="" name="relative" default="false"/>
                </function>
                <function threadsafety="unspecified" name="pos" fullname="cv::MatConstIterator::pos" href="cv-matconstiterator.html#pos" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3054" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point pos() const"/>
                <function threadsafety="unspecified" name="operator*" fullname="cv::MatConstIterator::operator*" href="cv-matconstiterator.html#operator-2a" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3037" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * operator*() const"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::MatConstIterator::operator[]" href="cv-matconstiterator.html#operator-5b-5d" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3039" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * operator[](ptrdiff_t i) const">
                    <parameter left="ptrdiff_t" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="lpos" fullname="cv::MatConstIterator::lpos" href="cv-matconstiterator.html#lpos" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3058" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ptrdiff_t" signature="ptrdiff_t lpos() const"/>
                <function threadsafety="unspecified" name="pos" fullname="cv::MatConstIterator::pos" href="cv-matconstiterator.html#pos-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3056" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void pos(int *_idx) const">
                    <parameter left="int *" right="" name="_idx" default=""/>
                </function>
                <variable threadsafety="unspecified" name="elemSize" fullname="cv::MatConstIterator::elemSize" href="cv-matconstiterator.html#elemSize-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3063" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="m" fullname="cv::MatConstIterator::m" href="cv-matconstiterator.html#m-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3062" type="const Mat *" static="false"/>
                <variable threadsafety="unspecified" name="ptr" fullname="cv::MatConstIterator::ptr" href="cv-matconstiterator.html#ptr-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3064" type="const uchar *" static="false"/>
                <variable threadsafety="unspecified" name="sliceEnd" fullname="cv::MatConstIterator::sliceEnd" href="cv-matconstiterator.html#sliceEnd-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3066" type="const uchar *" static="false"/>
                <variable threadsafety="unspecified" name="sliceStart" fullname="cv::MatConstIterator::sliceStart" href="cv-matconstiterator.html#sliceStart-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3065" type="const uchar *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_" href="cv-matconstiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3076" bases="cv::MatConstIterator">
                <typedef threadsafety="unspecified" name="difference_type" fullname="cv::MatConstIterator_::difference_type" href="cv-matconstiterator.html#difference_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3080"/>
                <typedef threadsafety="unspecified" name="iterator_category" fullname="cv::MatConstIterator_::iterator_category" href="cv-matconstiterator.html#iterator_category-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3084"/>
                <typedef threadsafety="unspecified" name="pointer" fullname="cv::MatConstIterator_::pointer" href="cv-matconstiterator.html#pointer-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3081"/>
                <typedef threadsafety="unspecified" name="reference" fullname="cv::MatConstIterator_::reference" href="cv-matconstiterator.html#reference-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3082"/>
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::MatConstIterator_::value_type" href="cv-matconstiterator.html#value_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3079"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatConstIterator_::operator++" href="cv-matconstiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3115" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_ &amp;" signature="MatConstIterator_ &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::MatConstIterator_::operator+=" href="cv-matconstiterator.html#operator-2b-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_ &amp;" signature="MatConstIterator_ &amp; operator+=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatConstIterator_::operator--" href="cv-matconstiterator.html#operator--" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_ &amp;" signature="MatConstIterator_ &amp; operator--()"/>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::MatConstIterator_::operator-=" href="cv-matconstiterator.html#operator--eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_ &amp;" signature="MatConstIterator_ &amp; operator-=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::MatConstIterator_::operator=" href="cv-matconstiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3100" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_ &amp;" signature="MatConstIterator_ &amp; operator=(const MatConstIterator_ &amp;it)">
                    <parameter left="const MatConstIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatConstIterator_::operator++" href="cv-matconstiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_" signature="MatConstIterator_ operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatConstIterator_::operator--" href="cv-matconstiterator.html#operator---1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatConstIterator_" signature="MatConstIterator_ operator--(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3087" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_()"/>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3097" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_(const MatConstIterator_ &amp;it)">
                    <parameter left="const MatConstIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3089" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_(const Mat_&lt;_Tp&gt; *_m)">
                    <parameter left="const Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3093" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_(const Mat_&lt;_Tp&gt; *_m, Point _pt)">
                    <parameter left="const Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="Point" right="" name="_pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3095" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_(const Mat_&lt;_Tp&gt; *_m, const int *_idx)">
                    <parameter left="const Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="const int *" right="" name="_idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatConstIterator_" fullname="cv::MatConstIterator_::MatConstIterator_" href="cv-matconstiterator.html#MatConstIterator_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3091" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatConstIterator_(const Mat_&lt;_Tp&gt; *_m, int _row, int _col)">
                    <parameter left="const Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="int" right="" name="_row" default=""/>
                    <parameter left="int" right="" name="_col" default="0"/>
                </function>
                <function threadsafety="unspecified" name="pos" fullname="cv::MatConstIterator_::pos" href="cv-matconstiterator.html#pos" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3119" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point pos() const"/>
                <function threadsafety="unspecified" name="operator*" fullname="cv::MatConstIterator_::operator*" href="cv-matconstiterator.html#operator-2a" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3102" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator*() const"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::MatConstIterator_::operator[]" href="cv-matconstiterator.html#operator-5b-5d" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3104" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator[](ptrdiff_t i) const">
                    <parameter left="ptrdiff_t" right="" name="i" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MatExpr" fullname="cv::MatExpr" href="cv-matexpr.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3513">
                <function threadsafety="unspecified" name="MatExpr" fullname="cv::MatExpr::MatExpr" href="cv-matexpr.html#MatExpr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3516" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatExpr()"/>
                <function threadsafety="unspecified" name="MatExpr" fullname="cv::MatExpr::MatExpr" href="cv-matexpr.html#MatExpr-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3517" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatExpr(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatExpr" fullname="cv::MatExpr::MatExpr" href="cv-matexpr.html#MatExpr-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3519" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatExpr(const MatOp *_op, int _flags, const Mat &amp;_a, const Mat &amp;_b, const Mat &amp;_c, double _alpha, double _beta, const Scalar &amp;_s)">
                    <parameter left="const MatOp *" right="" name="_op" default=""/>
                    <parameter left="int" right="" name="_flags" default=""/>
                    <parameter left="const Mat &amp;" right="" name="_a" default="Mat()"/>
                    <parameter left="const Mat &amp;" right="" name="_b" default="Mat()"/>
                    <parameter left="const Mat &amp;" right="" name="_c" default="Mat()"/>
                    <parameter left="double" right="" name="_alpha" default="1"/>
                    <parameter left="double" right="" name="_beta" default="1"/>
                    <parameter left="const Scalar &amp;" right="" name="_s" default="Scalar()"/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::MatExpr::swap" href="cv-matexpr.html#swap" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3542" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(MatExpr &amp;b)">
                    <parameter left="MatExpr &amp;" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="cross" fullname="cv::MatExpr::cross" href="cv-matexpr.html#cross" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3539" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat cross(const Mat &amp;m) const">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="col" fullname="cv::MatExpr::col" href="cv-matexpr.html#col" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3529" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr col(int x) const">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::MatExpr::diag" href="cv-matexpr.html#diag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3530" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr diag(int d) const">
                    <parameter left="int" right="" name="d" default="0"/>
                </function>
                <function threadsafety="unspecified" name="inv" fullname="cv::MatExpr::inv" href="cv-matexpr.html#inv" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3535" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr inv(int method) const">
                    <parameter left="int" right="" name="method" default="DECOMP_LU"/>
                </function>
                <function threadsafety="unspecified" name="mul" fullname="cv::MatExpr::mul" href="cv-matexpr.html#mul-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3537" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr mul(const Mat &amp;m, double scale) const">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="mul" fullname="cv::MatExpr::mul" href="cv-matexpr.html#mul" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3536" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr mul(const MatExpr &amp;e, double scale) const">
                    <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::MatExpr::operator()" href="cv-matexpr.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3531" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator()(const Range &amp;rowRange, const Range &amp;colRange) const">
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::MatExpr::operator()" href="cv-matexpr.html#operator-28-29-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3532" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator()(const Rect &amp;roi) const">
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::MatExpr::row" href="cv-matexpr.html#row" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3528" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr row(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="t" fullname="cv::MatExpr::t" href="cv-matexpr.html#t" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3534" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr t() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::MatExpr::size" href="cv-matexpr.html#size" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3525" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size() const"/>
                <function threadsafety="unspecified" name="dot" fullname="cv::MatExpr::dot" href="cv-matexpr.html#dot" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3540" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double dot(const Mat &amp;m) const">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="type" fullname="cv::MatExpr::type" href="cv-matexpr.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3526" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="operator Mat" fullname="cv::MatExpr::operator Mat" href="cv-matexpr.html#operator-Mat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3522" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Mat() const"/>
                <function threadsafety="unspecified" name="operator Mat_&lt;_Tp&gt;" fullname="cv::MatExpr::operator Mat_&lt;_Tp&gt;" href="cv-matexpr.html#operator-Mat_-lt_Tp-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3523" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Mat_&lt;_Tp&gt;() const"/>
                <variable threadsafety="unspecified" name="flags" fullname="cv::MatExpr::flags" href="cv-matexpr.html#flags-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3545" type="int" static="false"/>
                <variable threadsafety="unspecified" name="op" fullname="cv::MatExpr::op" href="cv-matexpr.html#op-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3544" type="const MatOp *" static="false"/>
                <variable threadsafety="unspecified" name="s" fullname="cv::MatExpr::s" href="cv-matexpr.html#s-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3549" type="Scalar" static="false"/>
            </class>
            <class threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_" href="cv-matiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3129" bases="cv::MatConstIterator_">
                <typedef threadsafety="unspecified" name="iterator_category" fullname="cv::MatIterator_::iterator_category" href="cv-matiterator.html#iterator_category-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3135"/>
                <typedef threadsafety="unspecified" name="pointer" fullname="cv::MatIterator_::pointer" href="cv-matiterator.html#pointer-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3132"/>
                <typedef threadsafety="unspecified" name="reference" fullname="cv::MatIterator_::reference" href="cv-matiterator.html#reference-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3133"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatIterator_::operator++" href="cv-matiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_ &amp;" signature="MatIterator_ &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::MatIterator_::operator+=" href="cv-matiterator.html#operator-2b-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_ &amp;" signature="MatIterator_ &amp; operator+=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatIterator_::operator--" href="cv-matiterator.html#operator--" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3162" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_ &amp;" signature="MatIterator_ &amp; operator--()"/>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::MatIterator_::operator-=" href="cv-matiterator.html#operator--eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3160" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_ &amp;" signature="MatIterator_ &amp; operator-=(ptrdiff_t ofs)">
                    <parameter left="ptrdiff_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::MatIterator_::operator=" href="cv-matiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3150" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_ &amp;" signature="MatIterator_ &amp; operator=(const MatIterator_&lt;_Tp&gt; &amp;it)">
                    <parameter left="const MatIterator_&lt;_Tp&gt; &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::MatIterator_::operator++" href="cv-matiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_" signature="MatIterator_ operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::MatIterator_::operator--" href="cv-matiterator.html#operator---1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatIterator_" signature="MatIterator_ operator--(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3138" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_()"/>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3140" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_(Mat_&lt;_Tp&gt; *_m)">
                    <parameter left="Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3144" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_(Mat_&lt;_Tp&gt; *_m, Point _pt)">
                    <parameter left="Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="Point" right="" name="_pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3146" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_(Mat_&lt;_Tp&gt; *_m, const int *_idx)">
                    <parameter left="Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="const int *" right="" name="_idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3142" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_(Mat_&lt;_Tp&gt; *_m, int _row, int _col)">
                    <parameter left="Mat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                    <parameter left="int" right="" name="_row" default=""/>
                    <parameter left="int" right="" name="_col" default="0"/>
                </function>
                <function threadsafety="unspecified" name="MatIterator_" fullname="cv::MatIterator_::MatIterator_" href="cv-matiterator.html#MatIterator_-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3148" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatIterator_(const MatIterator_ &amp;it)">
                    <parameter left="const MatIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::MatIterator_::operator*" href="cv-matiterator.html#operator-2a" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3153" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator*() const"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::MatIterator_::operator[]" href="cv-matiterator.html#operator-5b-5d" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3155" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator[](ptrdiff_t i) const">
                    <parameter left="ptrdiff_t" right="" name="i" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MatOp" fullname="cv::MatOp" href="cv-matop.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3426">
                <function threadsafety="unspecified" name="MatOp" fullname="cv::MatOp::MatOp" href="cv-matop.html#MatOp" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3429" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatOp()"/>
                <function threadsafety="unspecified" name="~MatOp" fullname="cv::MatOp::~MatOp" href="cv-matop.html#dtor.MatOp" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3430" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~MatOp()"/>
                <function threadsafety="unspecified" name="size" fullname="cv::MatOp::size" href="cv-matop.html#size" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3463" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size(const MatExpr &amp;expr) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                </function>
                <function threadsafety="unspecified" name="elementWise" fullname="cv::MatOp::elementWise" href="cv-matop.html#elementWise" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3432" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool elementWise(const MatExpr &amp;expr) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                </function>
                <function threadsafety="unspecified" name="type" fullname="cv::MatOp::type" href="cv-matop.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3464" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type(const MatExpr &amp;expr) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                </function>
                <function threadsafety="unspecified" name="abs" fullname="cv::MatOp::abs" href="cv-matop.html#abs" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3457" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void abs(const MatExpr &amp;expr, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="add" fullname="cv::MatOp::add" href="cv-matop.html#add" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3445" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void add(const MatExpr &amp;expr1, const MatExpr &amp;expr2, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr2" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="add" fullname="cv::MatOp::add" href="cv-matop.html#add-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3446" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void add(const MatExpr &amp;expr1, const Scalar &amp;s, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="assign" fullname="cv::MatOp::assign" href="cv-matop.html#assign" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3433" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assign(const MatExpr &amp;expr, Mat &amp;m, int type) const = 0">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="type" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="augAssignAdd" fullname="cv::MatOp::augAssignAdd" href="cv-matop.html#augAssignAdd" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3437" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignAdd(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignAnd" fullname="cv::MatOp::augAssignAnd" href="cv-matop.html#augAssignAnd" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3441" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignAnd(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignDivide" fullname="cv::MatOp::augAssignDivide" href="cv-matop.html#augAssignDivide" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3440" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignDivide(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignMultiply" fullname="cv::MatOp::augAssignMultiply" href="cv-matop.html#augAssignMultiply" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3439" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignMultiply(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignOr" fullname="cv::MatOp::augAssignOr" href="cv-matop.html#augAssignOr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3442" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignOr(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignSubtract" fullname="cv::MatOp::augAssignSubtract" href="cv-matop.html#augAssignSubtract" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3438" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignSubtract(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="augAssignXor" fullname="cv::MatOp::augAssignXor" href="cv-matop.html#augAssignXor" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3443" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void augAssignXor(const MatExpr &amp;expr, Mat &amp;m) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::MatOp::diag" href="cv-matop.html#diag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3436" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void diag(const MatExpr &amp;expr, int d, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="int" right="" name="d" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="divide" fullname="cv::MatOp::divide" href="cv-matop.html#divide" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3454" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void divide(const MatExpr &amp;expr1, const MatExpr &amp;expr2, MatExpr &amp;res, double scale) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr2" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="divide" fullname="cv::MatOp::divide" href="cv-matop.html#divide-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3455" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void divide(double s, const MatExpr &amp;expr, MatExpr &amp;res) const">
                    <parameter left="double" right="" name="s" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="invert" fullname="cv::MatOp::invert" href="cv-matop.html#invert" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3461" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void invert(const MatExpr &amp;expr, int method, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="int" right="" name="method" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="matmul" fullname="cv::MatOp::matmul" href="cv-matop.html#matmul" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3460" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void matmul(const MatExpr &amp;expr1, const MatExpr &amp;expr2, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr2" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="multiply" fullname="cv::MatOp::multiply" href="cv-matop.html#multiply" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3451" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void multiply(const MatExpr &amp;expr1, const MatExpr &amp;expr2, MatExpr &amp;res, double scale) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr2" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="multiply" fullname="cv::MatOp::multiply" href="cv-matop.html#multiply-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3452" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void multiply(const MatExpr &amp;expr1, double s, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="double" right="" name="s" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="roi" fullname="cv::MatOp::roi" href="cv-matop.html#roi" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3434" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void roi(const MatExpr &amp;expr, const Range &amp;rowRange, const Range &amp;colRange, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="subtract" fullname="cv::MatOp::subtract" href="cv-matop.html#subtract" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3448" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void subtract(const MatExpr &amp;expr1, const MatExpr &amp;expr2, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr1" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr2" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="subtract" fullname="cv::MatOp::subtract" href="cv-matop.html#subtract-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3449" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void subtract(const Scalar &amp;s, const MatExpr &amp;expr, MatExpr &amp;res) const">
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
                <function threadsafety="unspecified" name="transpose" fullname="cv::MatOp::transpose" href="cv-matop.html#transpose" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3459" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void transpose(const MatExpr &amp;expr, MatExpr &amp;res) const">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                    <parameter left="MatExpr &amp;" right="" name="res" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MatStep" fullname="cv::MatStep" href="cv-matstep.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="587">
                <function threadsafety="unspecified" name="operator=" fullname="cv::MatStep::operator=" href="cv-matstep.html#operator-eq-1" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="599" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatStep &amp;" signature="MatStep &amp; operator=(const MatStep &amp;)">
                    <parameter left="const MatStep &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::MatStep::operator=" href="cv-matstep.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="594" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatStep &amp;" signature="MatStep &amp; operator=(size_t s)">
                    <parameter left="size_t" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="MatStep" fullname="cv::MatStep::MatStep" href="cv-matstep.html#MatStep" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="589" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatStep()"/>
                <function threadsafety="unspecified" name="MatStep" fullname="cv::MatStep::MatStep" href="cv-matstep.html#MatStep-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="590" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatStep(size_t s)">
                    <parameter left="size_t" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::MatStep::operator[]" href="cv-matstep.html#operator-5b-5d-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="592" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t &amp;" signature="size_t &amp; operator[](int i)">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::MatStep::operator[]" href="cv-matstep.html#operator-5b-5d" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="591" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const size_t &amp;" signature="const size_t &amp; operator[](int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator size_t" fullname="cv::MatStep::operator size_t" href="cv-matstep.html#operator-size_t" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="593" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator size_t() const"/>
                <variable threadsafety="unspecified" name="buf" fullname="cv::MatStep::buf" href="cv-matstep.html#buf-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="597" type="size_t[2]" static="false"/>
                <variable threadsafety="unspecified" name="p" fullname="cv::MatStep::p" href="cv-matstep.html#p-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="596" type="size_t *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Mat_" fullname="cv::Mat_" href="cv-mat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2183" bases="cv::Mat">
                <typedef threadsafety="unspecified" name="channel_type" fullname="cv::Mat_::channel_type" href="cv-mat.html#channel_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2187"/>
                <typedef threadsafety="unspecified" name="const_iterator" fullname="cv::Mat_::const_iterator" href="cv-mat.html#const_iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2189"/>
                <typedef threadsafety="unspecified" name="iterator" fullname="cv::Mat_::iterator" href="cv-mat.html#iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2188"/>
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Mat_::value_type" href="cv-mat.html#value_type-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2186"/>
                <function threadsafety="unspecified" name="eye" fullname="cv::Mat_::eye" href="cv-mat.html#eye-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2290" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr eye(Size size)">
                    <parameter left="Size" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="eye" fullname="cv::Mat_::eye" href="cv-mat.html#eye" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2289" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr eye(int rows, int cols)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat_::ones" href="cv-mat.html#ones-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2287" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(Size size)">
                    <parameter left="Size" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat_::ones" href="cv-mat.html#ones-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2288" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(int _ndims, const int *_sizes)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::Mat_::ones" href="cv-mat.html#ones" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2286" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr ones(int rows, int cols)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat_::zeros" href="cv-mat.html#zeros-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2284" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(Size size)">
                    <parameter left="Size" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat_::zeros" href="cv-mat.html#zeros-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2285" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(int _ndims, const int *_sizes)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Mat_::zeros" href="cv-mat.html#zeros" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2283" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr zeros(int rows, int cols)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                </function>
                <function threadsafety="unspecified" name="adjustROI" fullname="cv::Mat_::adjustROI" href="cv-mat.html#adjustROI" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2293" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; adjustROI(int dtop, int dbottom, int dleft, int dright)">
                    <parameter left="int" right="" name="dtop" default=""/>
                    <parameter left="int" right="" name="dbottom" default=""/>
                    <parameter left="int" right="" name="dleft" default=""/>
                    <parameter left="int" right="" name="dright" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2344" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(Mat &amp;&amp;m)">
                    <parameter left="Mat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2341" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(Mat_ &amp;&amp;m)">
                    <parameter left="Mat_ &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2236" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2241" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(const MatExpr &amp;e)">
                    <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2237" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(const Mat_ &amp;m)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Mat_::operator=" href="cv-mat.html#operator-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2239" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_ &amp;" signature="Mat_ &amp; operator=(const _Tp &amp;s)">
                    <parameter left="const _Tp &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2192" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_()"/>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-26" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2343" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(Mat &amp;&amp;m)">
                    <parameter left="Mat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-27" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2346" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(MatExpr &amp;&amp;e)">
                    <parameter left="MatExpr &amp;&amp;" right="" name="e" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-25" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2340" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(Mat_ &amp;&amp;m)">
                    <parameter left="Mat_ &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2198" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(Size _size)">
                    <parameter left="Size" right="" name="_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(Size _size, const _Tp &amp;value)">
                    <parameter left="Size" right="" name="_size" default=""/>
                    <parameter left="const _Tp &amp;" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2206" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-21" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2229" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const MatCommaInitializer_&lt;_Tp&gt; &amp;commaInitializer)">
                    <parameter left="const MatCommaInitializer_&lt;_Tp&gt; &amp;" right="" name="commaInitializer" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2222" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const MatExpr &amp;e)">
                    <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2208" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat_ &amp;m)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2214" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat_ &amp;m, const Range &amp;rowRange, const Range &amp;colRange)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default="Range::all()"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2218" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat_ &amp;m, const Range *ranges)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2216" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat_ &amp;m, const Rect &amp;roi)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2220" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Mat_ &amp;m, const std::vector&lt;Range&gt; &amp;ranges)">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-18" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2226" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Matx&lt;DataType&lt;_Tp&gt;::channel_type, m, n&gt; &amp;mtx, bool copyData)">
                    <parameter left="const Matx&lt;DataType&lt;_Tp&gt;::channel_type, m, n&gt; &amp;" right="" name="mtx" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-20" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2228" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Point3_&lt;DataType&lt;_Tp&gt;::channel_type&gt; &amp;pt, bool copyData)">
                    <parameter left="const Point3_&lt;DataType&lt;_Tp&gt;::channel_type&gt; &amp;" right="" name="pt" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-19" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2227" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Point_&lt;DataType&lt;_Tp&gt;::channel_type&gt; &amp;pt, bool copyData)">
                    <parameter left="const Point_&lt;DataType&lt;_Tp&gt;::channel_type&gt; &amp;" right="" name="pt" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-17" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2225" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const Vec&lt;DataType&lt;_Tp&gt;::channel_type, n&gt; &amp;vec, bool copyData)">
                    <parameter left="const Vec&lt;DataType&lt;_Tp&gt;::channel_type, n&gt; &amp;" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="copyData" default="true"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-24" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2234" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const std::array&lt;_Tp, _Nm&gt; &amp;arr, bool copyData)">
                    <parameter left="const std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                    <parameter left="bool" right="" name="copyData" default="false"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-23" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2232" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const std::initializer_list&lt;int&gt; sizes, const std::initializer_list&lt;_Tp&gt; values)">
                    <parameter left="const std::initializer_list&lt;int&gt;" right="" name="sizes" default=""/>
                    <parameter left="const std::initializer_list&lt;_Tp&gt;" right="" name="values" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-16" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2224" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(const std::vector&lt;_Tp&gt; &amp;vec, bool copyData)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="copyData" default="false"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _ndims, const int *_sizes)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2212" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _ndims, const int *_sizes, _Tp *_data, const size_t *_steps)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                    <parameter left="_Tp *" right="" name="_data" default=""/>
                    <parameter left="const size_t *" right="" name="_steps" default="0"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2204" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _ndims, const int *_sizes, const _Tp &amp;value)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                    <parameter left="const _Tp &amp;" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2194" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _rows, int _cols)">
                    <parameter left="int" right="" name="_rows" default=""/>
                    <parameter left="int" right="" name="_cols" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2210" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _rows, int _cols, _Tp *_data, size_t _step)">
                    <parameter left="int" right="" name="_rows" default=""/>
                    <parameter left="int" right="" name="_cols" default=""/>
                    <parameter left="_Tp *" right="" name="_data" default=""/>
                    <parameter left="size_t" right="" name="_step" default="AUTO_STEP"/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2196" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(int _rows, int _cols, const _Tp &amp;value)">
                    <parameter left="int" right="" name="_rows" default=""/>
                    <parameter left="int" right="" name="_cols" default=""/>
                    <parameter left="const _Tp &amp;" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="Mat_" fullname="cv::Mat_::Mat_" href="cv-mat.html#Mat_-22" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2231" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat_(std::initializer_list&lt;_Tp&gt; values)">
                    <parameter left="std::initializer_list&lt;_Tp&gt;" right="" name="values" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2326" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(Point pt)">
                    <parameter left="Point" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2309" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(const Vec&lt;int, n&gt; &amp;idx)">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2304" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(const int *idx)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2314" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int idx0)">
                    <parameter left="int" right="" name="idx0" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2322" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int idx0, int idx1, int idx2)">
                    <parameter left="int" right="" name="idx0" default=""/>
                    <parameter left="int" right="" name="idx1" default=""/>
                    <parameter left="int" right="" name="idx2" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2318" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int row, int col)">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::Mat_::operator[]" href="cv-mat.html#operator-5b-5d" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2300" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * operator[](int y)">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::Mat_::begin" href="cv-mat.html#begin" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2244" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="iterator" signature="iterator begin()"/>
                <function threadsafety="unspecified" name="end" fullname="cv::Mat_::end" href="cv-mat.html#end" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2245" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="iterator" signature="iterator end()"/>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat_::create" href="cv-mat.html#create-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2257" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size _size)">
                    <parameter left="Size" right="" name="_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat_::create" href="cv-mat.html#create-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2259" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int _ndims, const int *_sizes)">
                    <parameter left="int" right="" name="_ndims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::Mat_::create" href="cv-mat.html#create" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2255" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int _rows, int _cols)">
                    <parameter left="int" right="" name="_rows" default=""/>
                    <parameter left="int" right="" name="_cols" default=""/>
                </function>
                <function threadsafety="unspecified" name="forEach" fullname="cv::Mat_::forEach" href="cv-mat.html#forEach" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2251" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach(const Functor &amp;operation)">
                    <parameter left="const Functor &amp;" right="" name="operation" default=""/>
                </function>
                <function threadsafety="unspecified" name="release" fullname="cv::Mat_::release" href="cv-mat.html#release" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2261" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="col" fullname="cv::Mat_::col" href="cv-mat.html#col" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2268" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ col(int x) const">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="cross" fullname="cv::Mat_::cross" href="cv-mat.html#cross" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2263" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ cross(const Mat_ &amp;m) const">
                    <parameter left="const Mat_ &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::Mat_::diag" href="cv-mat.html#diag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2269" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ diag(int d) const">
                    <parameter left="int" right="" name="d" default="0"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2294" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ operator()(const Range &amp;rowRange, const Range &amp;colRange) const">
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2296" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ operator()(const Range *ranges) const">
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2295" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ operator()(const Rect &amp;roi) const">
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2297" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ operator()(const std::vector&lt;Range&gt; &amp;ranges) const">
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::Mat_::row" href="cv-mat.html#row" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2267" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat_" signature="Mat_ row(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2327" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(Point pt) const">
                    <parameter left="Point" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2311" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(const Vec&lt;int, n&gt; &amp;idx) const">
                    <parameter left="const Vec&lt;int, n&gt; &amp;" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2306" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(const int *idx) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int idx0) const">
                    <parameter left="int" right="" name="idx0" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2324" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int idx0, int idx1, int idx2) const">
                    <parameter left="int" right="" name="idx0" default=""/>
                    <parameter left="int" right="" name="idx1" default=""/>
                    <parameter left="int" right="" name="idx2" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Mat_::operator()" href="cv-mat.html#operator-28-29-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2320" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int row, int col) const">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::Mat_::operator[]" href="cv-mat.html#operator-5b-5d-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2301" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * operator[](int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::Mat_::begin" href="cv-mat.html#begin-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2246" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const_iterator" signature="const_iterator begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::Mat_::end" href="cv-mat.html#end-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2247" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const_iterator" signature="const_iterator end() const"/>
                <function threadsafety="unspecified" name="channels" fullname="cv::Mat_::channels" href="cv-mat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2277" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="depth" fullname="cv::Mat_::depth" href="cv-mat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2276" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::Mat_::type" href="cv-mat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2275" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="operator Mat_&lt;T2&gt;" fullname="cv::Mat_::operator Mat_&lt;T2&gt;" href="cv-mat.html#operator-Mat_-ltT2-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2265" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Mat_&lt;T2&gt;() const"/>
                <function threadsafety="unspecified" name="operator Matx&lt;DataType&lt;_Tp&gt;::channel_type, m, n&gt;" fullname="cv::Mat_::operator Matx&lt;DataType&lt;_Tp&gt;::channel_type, m, n&gt;" href="cv-mat.html#operator-Matx-ltDataType-lt_Tp-gt::channel_type-2c-m-2c-n-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2338" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Matx&lt;DataType&lt;_Tp&gt;::channel_type, m, n&gt;() const"/>
                <function threadsafety="unspecified" name="operator Vec&lt;DataType&lt;_Tp&gt;::channel_type, n&gt;" fullname="cv::Mat_::operator Vec&lt;DataType&lt;_Tp&gt;::channel_type, n&gt;" href="cv-mat.html#operator-Vec-ltDataType-lt_Tp-gt::channel_type-2c-n-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2336" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;DataType&lt;_Tp&gt;::channel_type, n&gt;() const"/>
                <function threadsafety="unspecified" name="operator std::array&lt;_Tp, _Nm&gt;" fullname="cv::Mat_::operator std::array&lt;_Tp, _Nm&gt;" href="cv-mat.html#operator-std::array-lt_Tp-2c-_Nm-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2333" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator std::array&lt;_Tp, _Nm&gt;() const"/>
                <function threadsafety="unspecified" name="operator std::vector&lt;_Tp&gt;" fullname="cv::Mat_::operator std::vector&lt;_Tp&gt;" href="cv-mat.html#operator-std::vector-lt_Tp-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2330" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator std::vector&lt;_Tp&gt;() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::Mat_::elemSize" href="cv-mat.html#elemSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2273" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::Mat_::elemSize1" href="cv-mat.html#elemSize1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2274" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="step1" fullname="cv::Mat_::step1" href="cv-mat.html#step1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2278" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step1(int i) const">
                    <parameter left="int" right="" name="i" default="0"/>
                </function>
                <function threadsafety="unspecified" name="stepT" fullname="cv::Mat_::stepT" href="cv-mat.html#stepT" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2280" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t stepT(int i) const">
                    <parameter left="int" right="" name="i" default="0"/>
                </function>
                <function threadsafety="unspecified" name="forEach" fullname="cv::Mat_::forEach" href="cv-mat.html#forEach-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2252" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach(const Functor &amp;operation) const">
                    <parameter left="const Functor &amp;" right="" name="operation" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="NAryMatIterator" fullname="cv::NAryMatIterator" href="cv-narymatiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3388">
                <function threadsafety="unspecified" name="operator++" fullname="cv::NAryMatIterator::operator++" href="cv-narymatiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3401" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NAryMatIterator &amp;" signature="NAryMatIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::NAryMatIterator::operator++" href="cv-narymatiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3403" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NAryMatIterator" signature="NAryMatIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="NAryMatIterator" fullname="cv::NAryMatIterator::NAryMatIterator" href="cv-narymatiterator.html#NAryMatIterator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3392" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NAryMatIterator()"/>
                <function threadsafety="unspecified" name="NAryMatIterator" fullname="cv::NAryMatIterator::NAryMatIterator" href="cv-narymatiterator.html#NAryMatIterator-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3396" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NAryMatIterator(const Mat **arrays, Mat *planes, int narrays)">
                    <parameter left="const Mat **" right="" name="arrays" default=""/>
                    <parameter left="Mat *" right="" name="planes" default=""/>
                    <parameter left="int" right="" name="narrays" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="NAryMatIterator" fullname="cv::NAryMatIterator::NAryMatIterator" href="cv-narymatiterator.html#NAryMatIterator-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3394" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NAryMatIterator(const Mat **arrays, uchar **ptrs, int narrays)">
                    <parameter left="const Mat **" right="" name="arrays" default=""/>
                    <parameter left="uchar **" right="" name="ptrs" default=""/>
                    <parameter left="int" right="" name="narrays" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cv::NAryMatIterator::init" href="cv-narymatiterator.html#init" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3398" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(const Mat **arrays, Mat *planes, uchar **ptrs, int narrays)">
                    <parameter left="const Mat **" right="" name="arrays" default=""/>
                    <parameter left="Mat *" right="" name="planes" default=""/>
                    <parameter left="uchar **" right="" name="ptrs" default=""/>
                    <parameter left="int" right="" name="narrays" default="-1"/>
                </function>
                <variable threadsafety="unspecified" name="arrays" fullname="cv::NAryMatIterator::arrays" href="cv-narymatiterator.html#arrays-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3406" type="const Mat **" static="false"/>
                <variable threadsafety="unspecified" name="idx" fullname="cv::NAryMatIterator::idx" href="cv-narymatiterator.html#idx-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3419" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="iterdepth" fullname="cv::NAryMatIterator::iterdepth" href="cv-narymatiterator.html#iterdepth-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3418" type="int" static="false"/>
                <variable threadsafety="unspecified" name="narrays" fullname="cv::NAryMatIterator::narrays" href="cv-narymatiterator.html#narrays-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3412" type="int" static="false"/>
                <variable threadsafety="unspecified" name="nplanes" fullname="cv::NAryMatIterator::nplanes" href="cv-narymatiterator.html#nplanes-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3414" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="planes" fullname="cv::NAryMatIterator::planes" href="cv-narymatiterator.html#planes-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3408" type="Mat *" static="false"/>
                <variable threadsafety="unspecified" name="ptrs" fullname="cv::NAryMatIterator::ptrs" href="cv-narymatiterator.html#ptrs-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3410" type="uchar **" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::NAryMatIterator::size" href="cv-narymatiterator.html#size-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3416" type="size_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="SparseMat" fullname="cv::SparseMat" href="cv-sparsemat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2662">
                <class threadsafety="unspecified" name="Hdr" fullname="cv::SparseMat::Hdr" href="cv-sparsemat-hdr.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2671">
                    <function threadsafety="unspecified" name="Hdr" fullname="cv::SparseMat::Hdr::Hdr" href="cv-sparsemat-hdr.html#Hdr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2673" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Hdr(int _dims, const int *_sizes, int _type)">
                        <parameter left="int" right="" name="_dims" default=""/>
                        <parameter left="const int *" right="" name="_sizes" default=""/>
                        <parameter left="int" right="" name="_type" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clear" fullname="cv::SparseMat::Hdr::clear" href="cv-sparsemat-hdr.html#clear" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2674" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
                    <variable threadsafety="unspecified" name="dims" fullname="cv::SparseMat::Hdr::dims" href="cv-sparsemat-hdr.html#dims-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2676" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="freeList" fullname="cv::SparseMat::Hdr::freeList" href="cv-sparsemat-hdr.html#freeList-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2680" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="hashtab" fullname="cv::SparseMat::Hdr::hashtab" href="cv-sparsemat-hdr.html#hashtab-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2682" type="std::vector&lt;size_t&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="nodeCount" fullname="cv::SparseMat::Hdr::nodeCount" href="cv-sparsemat-hdr.html#nodeCount-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2679" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="nodeSize" fullname="cv::SparseMat::Hdr::nodeSize" href="cv-sparsemat-hdr.html#nodeSize-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2678" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="pool" fullname="cv::SparseMat::Hdr::pool" href="cv-sparsemat-hdr.html#pool-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2681" type="std::vector&lt;uchar&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="refcount" fullname="cv::SparseMat::Hdr::refcount" href="cv-sparsemat-hdr.html#refcount-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2675" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="size" fullname="cv::SparseMat::Hdr::size" href="cv-sparsemat-hdr.html#size-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2683" type="int[MAX_DIM]" static="false"/>
                    <variable threadsafety="unspecified" name="valueOffset" fullname="cv::SparseMat::Hdr::valueOffset" href="cv-sparsemat-hdr.html#valueOffset-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2677" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Node" fullname="cv::SparseMat::Node" href="cv-sparsemat-node.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2687">
                    <variable threadsafety="unspecified" name="hashval" fullname="cv::SparseMat::Node::hashval" href="cv-sparsemat-node.html#hashval-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2690" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="idx" fullname="cv::SparseMat::Node::idx" href="cv-sparsemat-node.html#idx-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2694" type="int[MAX_DIM]" static="false"/>
                    <variable threadsafety="unspecified" name="next" fullname="cv::SparseMat::Node::next" href="cv-sparsemat-node.html#next-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2692" type="size_t" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="const_iterator" fullname="cv::SparseMat::const_iterator" href="cv-sparsemat.html#const_iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2666"/>
                <typedef threadsafety="unspecified" name="iterator" fullname="cv::SparseMat::iterator" href="cv-sparsemat.html#iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2665"/>
                <function threadsafety="unspecified" name="node" fullname="cv::SparseMat::node" href="cv-sparsemat.html#node" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2914" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Node *" signature="Node * node(size_t nidx)">
                    <parameter left="size_t" right="" name="nidx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMat::operator=" href="cv-sparsemat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2726" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat &amp;" signature="SparseMat &amp; operator=(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMat::operator=" href="cv-sparsemat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2724" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat &amp;" signature="SparseMat &amp; operator=(const SparseMat &amp;m)">
                    <parameter left="const SparseMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat" fullname="cv::SparseMat::SparseMat" href="cv-sparsemat.html#SparseMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2699" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat()"/>
                <function threadsafety="unspecified" name="SparseMat" fullname="cv::SparseMat::SparseMat" href="cv-sparsemat.html#SparseMat-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2718" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat" fullname="cv::SparseMat::SparseMat" href="cv-sparsemat.html#SparseMat-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2712" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat(const SparseMat &amp;m)">
                    <parameter left="const SparseMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat" fullname="cv::SparseMat::SparseMat" href="cv-sparsemat.html#SparseMat-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2706" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat(int dims, const int *_sizes, int _type)">
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                    <parameter left="int" right="" name="_type" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::SparseMat::begin" href="cv-sparsemat.html#begin" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2890" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_&lt;_Tp&gt;" signature="SparseMatIterator_&lt;_Tp&gt; begin()"/>
                <function threadsafety="unspecified" name="end" fullname="cv::SparseMat::end" href="cv-sparsemat.html#end-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2904" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_&lt;_Tp&gt;" signature="SparseMatIterator_&lt;_Tp&gt; end()"/>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat::ref" href="cv-sparsemat.html#ref-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2834" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(const int *idx, size_t *hashval)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat::ref" href="cv-sparsemat.html#ref-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2832" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(int i0, int i1, int i2, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat::ref" href="cv-sparsemat.html#ref" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2830" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(int i0, int i1, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMat::value" href="cv-sparsemat.html#value-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2909" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; value(Node *n)">
                    <parameter left="Node *" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="newNode" fullname="cv::SparseMat::newNode" href="cv-sparsemat.html#newNode" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2917" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * newNode(const int *idx, size_t hashval)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t" right="" name="hashval" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::SparseMat::ptr" href="cv-sparsemat.html#ptr-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2816" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(const int *idx, bool createMissing, size_t *hashval)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="bool" right="" name="createMissing" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::SparseMat::ptr" href="cv-sparsemat.html#ptr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2812" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int i0, int i1, bool createMissing, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="bool" right="" name="createMissing" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::SparseMat::ptr" href="cv-sparsemat.html#ptr-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2814" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int i0, int i1, int i2, bool createMissing, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="bool" right="" name="createMissing" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="addref" fullname="cv::SparseMat::addref" href="cv-sparsemat.html#addref" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2762" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addref()"/>
                <function threadsafety="unspecified" name="clear" fullname="cv::SparseMat::clear" href="cv-sparsemat.html#clear" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2760" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
                <function threadsafety="unspecified" name="erase" fullname="cv::SparseMat::erase" href="cv-sparsemat.html#erase-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2881" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void erase(const int *idx, size_t *hashval)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="erase" fullname="cv::SparseMat::erase" href="cv-sparsemat.html#erase-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2879" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void erase(int i0, int i1, int i2, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="erase" fullname="cv::SparseMat::erase" href="cv-sparsemat.html#erase" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2877" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void erase(int i0, int i1, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="release" fullname="cv::SparseMat::release" href="cv-sparsemat.html#release" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2764" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="removeNode" fullname="cv::SparseMat::removeNode" href="cv-sparsemat.html#removeNode" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2918" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeNode(size_t hidx, size_t nidx, size_t previdx)">
                    <parameter left="size_t" right="" name="hidx" default=""/>
                    <parameter left="size_t" right="" name="nidx" default=""/>
                    <parameter left="size_t" right="" name="previdx" default=""/>
                </function>
                <function threadsafety="unspecified" name="resizeHashTab" fullname="cv::SparseMat::resizeHashTab" href="cv-sparsemat.html#resizeHashTab" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2919" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resizeHashTab(size_t newsize)">
                    <parameter left="size_t" right="" name="newsize" default=""/>
                </function>
                <function threadsafety="unspecified" name="~SparseMat" fullname="cv::SparseMat::~SparseMat" href="cv-sparsemat.html#dtor.SparseMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2721" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~SparseMat()"/>
                <function threadsafety="unspecified" name="begin" fullname="cv::SparseMat::begin" href="cv-sparsemat.html#begin-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2892" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator" signature="SparseMatConstIterator begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::SparseMat::end" href="cv-sparsemat.html#end" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2902" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator" signature="SparseMatConstIterator end() const"/>
                <function threadsafety="unspecified" name="begin" fullname="cv::SparseMat::begin" href="cv-sparsemat.html#begin-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2894" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_&lt;_Tp&gt;" signature="SparseMatConstIterator_&lt;_Tp&gt; begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::SparseMat::end" href="cv-sparsemat.html#end-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2906" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_&lt;_Tp&gt;" signature="SparseMatConstIterator_&lt;_Tp&gt; end() const"/>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMat::value" href="cv-sparsemat.html#value-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2855" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp value(const int *idx, size_t *hashval) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMat::value" href="cv-sparsemat.html#value-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2853" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp value(int i0, int i1, int i2, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMat::value" href="cv-sparsemat.html#value" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2851" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp value(int i0, int i1, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="node" fullname="cv::SparseMat::node" href="cv-sparsemat.html#node-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2915" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Node *" signature="const Node * node(size_t nidx) const">
                    <parameter left="size_t" right="" name="nidx" default=""/>
                </function>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMat::value" href="cv-sparsemat.html#value-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2911" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; value(const Node *n) const">
                    <parameter left="const Node *" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="find" fullname="cv::SparseMat::find" href="cv-sparsemat.html#find-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2873" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * find(const int *idx, size_t *hashval) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="find" fullname="cv::SparseMat::find" href="cv-sparsemat.html#find-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2871" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * find(int i0, int i1, int i2, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="find" fullname="cv::SparseMat::find" href="cv-sparsemat.html#find" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2869" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * find(int i0, int i1, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="cv::SparseMat::size" href="cv-sparsemat.html#size" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2781" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const int *" signature="const int * size() const"/>
                <function threadsafety="unspecified" name="channels" fullname="cv::SparseMat::channels" href="cv-sparsemat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2778" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="depth" fullname="cv::SparseMat::depth" href="cv-sparsemat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2776" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="dims" fullname="cv::SparseMat::dims" href="cv-sparsemat.html#dims" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2785" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int dims() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::SparseMat::size" href="cv-sparsemat.html#size-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2783" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="type" fullname="cv::SparseMat::type" href="cv-sparsemat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2774" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::SparseMat::elemSize" href="cv-sparsemat.html#elemSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2769" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::SparseMat::elemSize1" href="cv-sparsemat.html#elemSize1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2771" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="hash" fullname="cv::SparseMat::hash" href="cv-sparsemat.html#hash-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2796" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t hash(const int *idx) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="hash" fullname="cv::SparseMat::hash" href="cv-sparsemat.html#hash" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2790" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t hash(int i0) const">
                    <parameter left="int" right="" name="i0" default=""/>
                </function>
                <function threadsafety="unspecified" name="hash" fullname="cv::SparseMat::hash" href="cv-sparsemat.html#hash-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2792" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t hash(int i0, int i1) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                </function>
                <function threadsafety="unspecified" name="hash" fullname="cv::SparseMat::hash" href="cv-sparsemat.html#hash-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2794" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t hash(int i0, int i1, int i2) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                </function>
                <function threadsafety="unspecified" name="nzcount" fullname="cv::SparseMat::nzcount" href="cv-sparsemat.html#nzcount" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2787" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t nzcount() const"/>
                <function threadsafety="unspecified" name="assignTo" fullname="cv::SparseMat::assignTo" href="cv-sparsemat.html#assignTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2750" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assignTo(SparseMat &amp;m, int type) const">
                    <parameter left="SparseMat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="type" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::SparseMat::convertTo" href="cv-sparsemat.html#convertTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2736" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(SparseMat &amp;m, int rtype, double alpha) const">
                    <parameter left="SparseMat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                    <parameter left="double" right="" name="alpha" default="1"/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::SparseMat::copyTo" href="cv-sparsemat.html#copyTo-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2734" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(Mat &amp;m) const">
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::SparseMat::copyTo" href="cv-sparsemat.html#copyTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2732" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(SparseMat &amp;m) const">
                    <parameter left="SparseMat &amp;" right="" name="m" default=""/>
                </function>
                <variable threadsafety="unspecified" name="HASH_BIT" fullname="cv::SparseMat::HASH_BIT" href="cv-sparsemat.html#HASH_BIT-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2668" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="HASH_SCALE" fullname="cv::SparseMat::HASH_SCALE" href="cv-sparsemat.html#HASH_SCALE-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2668" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAGIC_VAL" fullname="cv::SparseMat::MAGIC_VAL" href="cv-sparsemat.html#MAGIC_VAL-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2668" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAX_DIM" fullname="cv::SparseMat::MAX_DIM" href="cv-sparsemat.html#MAX_DIM-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2668" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="flags" fullname="cv::SparseMat::flags" href="cv-sparsemat.html#flags-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2921" type="int" static="false"/>
                <variable threadsafety="unspecified" name="hdr" fullname="cv::SparseMat::hdr" href="cv-sparsemat.html#hdr-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2922" type="Hdr *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="SparseMatConstIterator" fullname="cv::SparseMatConstIterator" href="cv-sparsematconstiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3187">
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatConstIterator::operator++" href="cv-sparsematconstiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3210" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator &amp;" signature="SparseMatConstIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator--" fullname="cv::SparseMatConstIterator::operator--" href="cv-sparsematconstiterator.html#operator--" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3206" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator &amp;" signature="SparseMatConstIterator &amp; operator--()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMatConstIterator::operator=" href="cv-sparsematconstiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3198" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator &amp;" signature="SparseMatConstIterator &amp; operator=(const SparseMatConstIterator &amp;it)">
                    <parameter left="const SparseMatConstIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatConstIterator::operator++" href="cv-sparsematconstiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator" signature="SparseMatConstIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator--" fullname="cv::SparseMatConstIterator::operator--" href="cv-sparsematconstiterator.html#operator---1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3208" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator" signature="SparseMatConstIterator operator--(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatConstIterator" fullname="cv::SparseMatConstIterator::SparseMatConstIterator" href="cv-sparsematconstiterator.html#SparseMatConstIterator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3191" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator()"/>
                <function threadsafety="unspecified" name="SparseMatConstIterator" fullname="cv::SparseMatConstIterator::SparseMatConstIterator" href="cv-sparsematconstiterator.html#SparseMatConstIterator-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3193" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator(const SparseMat *_m)">
                    <parameter left="const SparseMat *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatConstIterator" fullname="cv::SparseMatConstIterator::SparseMatConstIterator" href="cv-sparsematconstiterator.html#SparseMatConstIterator-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3195" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator(const SparseMatConstIterator &amp;it)">
                    <parameter left="const SparseMatConstIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="seekEnd" fullname="cv::SparseMatConstIterator::seekEnd" href="cv-sparsematconstiterator.html#seekEnd" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3215" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void seekEnd()"/>
                <function threadsafety="unspecified" name="node" fullname="cv::SparseMatConstIterator::node" href="cv-sparsematconstiterator.html#node" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3203" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const SparseMat::Node *" signature="const SparseMat::Node * node() const"/>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMatConstIterator::value" href="cv-sparsematconstiterator.html#value" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3201" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; value() const"/>
                <variable threadsafety="unspecified" name="hashidx" fullname="cv::SparseMatConstIterator::hashidx" href="cv-sparsematconstiterator.html#hashidx-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3218" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="m" fullname="cv::SparseMatConstIterator::m" href="cv-sparsematconstiterator.html#m-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3217" type="const SparseMat *" static="false"/>
                <variable threadsafety="unspecified" name="ptr" fullname="cv::SparseMatConstIterator::ptr" href="cv-sparsematconstiterator.html#ptr-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3219" type="uchar *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="SparseMatConstIterator_" fullname="cv::SparseMatConstIterator_" href="cv-sparsematconstiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3265" bases="cv::SparseMatConstIterator">
                <typedef threadsafety="unspecified" name="iterator_category" fullname="cv::SparseMatConstIterator_::iterator_category" href="cv-sparsematconstiterator.html#iterator_category-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3269"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatConstIterator_::operator++" href="cv-sparsematconstiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3285" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_ &amp;" signature="SparseMatConstIterator_ &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMatConstIterator_::operator=" href="cv-sparsematconstiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3280" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_ &amp;" signature="SparseMatConstIterator_ &amp; operator=(const SparseMatConstIterator_ &amp;it)">
                    <parameter left="const SparseMatConstIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatConstIterator_::operator++" href="cv-sparsematconstiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3287" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_" signature="SparseMatConstIterator_ operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatConstIterator_" fullname="cv::SparseMatConstIterator_::SparseMatConstIterator_" href="cv-sparsematconstiterator.html#SparseMatConstIterator_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3272" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator_()"/>
                <function threadsafety="unspecified" name="SparseMatConstIterator_" fullname="cv::SparseMatConstIterator_::SparseMatConstIterator_" href="cv-sparsematconstiterator.html#SparseMatConstIterator_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3275" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator_(const SparseMat *_m)">
                    <parameter left="const SparseMat *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatConstIterator_" fullname="cv::SparseMatConstIterator_::SparseMatConstIterator_" href="cv-sparsematconstiterator.html#SparseMatConstIterator_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3277" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator_(const SparseMatConstIterator_ &amp;it)">
                    <parameter left="const SparseMatConstIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatConstIterator_" fullname="cv::SparseMatConstIterator_::SparseMatConstIterator_" href="cv-sparsematconstiterator.html#SparseMatConstIterator_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3274" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatConstIterator_(const SparseMat_&lt;_Tp&gt; *_m)">
                    <parameter left="const SparseMat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::SparseMatConstIterator_::operator*" href="cv-sparsematconstiterator.html#operator-2a" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3282" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator*() const"/>
            </class>
            <class threadsafety="unspecified" name="SparseMatIterator" fullname="cv::SparseMatIterator" href="cv-sparsematiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3231" bases="cv::SparseMatConstIterator">
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatIterator::operator++" href="cv-sparsematiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3251" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator &amp;" signature="SparseMatIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMatIterator::operator=" href="cv-sparsematiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3244" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator &amp;" signature="SparseMatIterator &amp; operator=(const SparseMatIterator &amp;it)">
                    <parameter left="const SparseMatIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatIterator::operator++" href="cv-sparsematiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3253" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator" signature="SparseMatIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator" fullname="cv::SparseMatIterator::SparseMatIterator" href="cv-sparsematiterator.html#SparseMatIterator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3235" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator()"/>
                <function threadsafety="unspecified" name="SparseMatIterator" fullname="cv::SparseMatIterator::SparseMatIterator" href="cv-sparsematiterator.html#SparseMatIterator-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3237" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator(SparseMat *_m)">
                    <parameter left="SparseMat *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator" fullname="cv::SparseMatIterator::SparseMatIterator" href="cv-sparsematiterator.html#SparseMatIterator-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3239" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator(SparseMat *_m, const int *idx)">
                    <parameter left="SparseMat *" right="" name="_m" default=""/>
                    <parameter left="const int *" right="" name="idx" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator" fullname="cv::SparseMatIterator::SparseMatIterator" href="cv-sparsematiterator.html#SparseMatIterator-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3241" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator(const SparseMatIterator &amp;it)">
                    <parameter left="const SparseMatIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="node" fullname="cv::SparseMatIterator::node" href="cv-sparsematiterator.html#node" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3248" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat::Node *" signature="SparseMat::Node * node() const"/>
                <function threadsafety="unspecified" name="value" fullname="cv::SparseMatIterator::value" href="cv-sparsematiterator.html#value" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3246" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; value() const"/>
            </class>
            <class threadsafety="unspecified" name="SparseMatIterator_" fullname="cv::SparseMatIterator_" href="cv-sparsematiterator.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3299" bases="cv::SparseMatConstIterator_">
                <typedef threadsafety="unspecified" name="iterator_category" fullname="cv::SparseMatIterator_::iterator_category" href="cv-sparsematiterator.html#iterator_category-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3303"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatIterator_::operator++" href="cv-sparsematiterator.html#operator-2b-2b" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3319" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_ &amp;" signature="SparseMatIterator_ &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMatIterator_::operator=" href="cv-sparsematiterator.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3314" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_ &amp;" signature="SparseMatIterator_ &amp; operator=(const SparseMatIterator_ &amp;it)">
                    <parameter left="const SparseMatIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::SparseMatIterator_::operator++" href="cv-sparsematiterator.html#operator-2b-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3321" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_" signature="SparseMatIterator_ operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator_" fullname="cv::SparseMatIterator_::SparseMatIterator_" href="cv-sparsematiterator.html#SparseMatIterator_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3306" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator_()"/>
                <function threadsafety="unspecified" name="SparseMatIterator_" fullname="cv::SparseMatIterator_::SparseMatIterator_" href="cv-sparsematiterator.html#SparseMatIterator_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3309" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator_(SparseMat *_m)">
                    <parameter left="SparseMat *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator_" fullname="cv::SparseMatIterator_::SparseMatIterator_" href="cv-sparsematiterator.html#SparseMatIterator_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3308" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator_(SparseMat_&lt;_Tp&gt; *_m)">
                    <parameter left="SparseMat_&lt;_Tp&gt; *" right="" name="_m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMatIterator_" fullname="cv::SparseMatIterator_::SparseMatIterator_" href="cv-sparsematiterator.html#SparseMatIterator_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3311" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMatIterator_(const SparseMatIterator_ &amp;it)">
                    <parameter left="const SparseMatIterator_ &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::SparseMatIterator_::operator*" href="cv-sparsematiterator.html#operator-2a" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator*() const"/>
            </class>
            <class threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_" href="cv-sparsemat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2940" bases="cv::SparseMat">
                <typedef threadsafety="unspecified" name="const_iterator" fullname="cv::SparseMat_::const_iterator" href="cv-sparsemat.html#const_iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2944"/>
                <typedef threadsafety="unspecified" name="iterator" fullname="cv::SparseMat_::iterator" href="cv-sparsemat.html#iterator-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2943"/>
                <function threadsafety="unspecified" name="begin" fullname="cv::SparseMat_::begin" href="cv-sparsemat.html#begin" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2998" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_&lt;_Tp&gt;" signature="SparseMatIterator_&lt;_Tp&gt; begin()"/>
                <function threadsafety="unspecified" name="end" fullname="cv::SparseMat_::end" href="cv-sparsemat.html#end" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3002" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatIterator_&lt;_Tp&gt;" signature="SparseMatIterator_&lt;_Tp&gt; end()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMat_::operator=" href="cv-sparsemat.html#operator-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2963" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat_ &amp;" signature="SparseMat_ &amp; operator=(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMat_::operator=" href="cv-sparsemat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2959" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat_ &amp;" signature="SparseMat_ &amp; operator=(const SparseMat &amp;m)">
                    <parameter left="const SparseMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::SparseMat_::operator=" href="cv-sparsemat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2961" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMat_ &amp;" signature="SparseMat_ &amp; operator=(const SparseMat_ &amp;m)">
                    <parameter left="const SparseMat_ &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_::SparseMat_" href="cv-sparsemat.html#SparseMat_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2947" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat_()"/>
                <function threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_::SparseMat_" href="cv-sparsemat.html#SparseMat_-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2955" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat_(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_::SparseMat_" href="cv-sparsemat.html#SparseMat_-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2951" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat_(const SparseMat &amp;m)">
                    <parameter left="const SparseMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_::SparseMat_" href="cv-sparsemat.html#SparseMat_-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2953" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat_(const SparseMat_ &amp;m)">
                    <parameter left="const SparseMat_ &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="SparseMat_" fullname="cv::SparseMat_::SparseMat_" href="cv-sparsemat.html#SparseMat_-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2949" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SparseMat_(int dims, const int *_sizes)">
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat_::ref" href="cv-sparsemat.html#ref-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2986" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(const int *idx, size_t *hashval)">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat_::ref" href="cv-sparsemat.html#ref-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2984" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(int i0, int i1, int i2, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat_::ref" href="cv-sparsemat.html#ref-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2982" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(int i0, int i1, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="ref" fullname="cv::SparseMat_::ref" href="cv-sparsemat.html#ref" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2980" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; ref(int i0, size_t *hashval)">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::SparseMat_::create" href="cv-sparsemat.html#create" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2968" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int dims, const int *_sizes)">
                    <parameter left="int" right="" name="dims" default=""/>
                    <parameter left="const int *" right="" name="_sizes" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::SparseMat_::begin" href="cv-sparsemat.html#begin-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3000" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_&lt;_Tp&gt;" signature="SparseMatConstIterator_&lt;_Tp&gt; begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::SparseMat_::end" href="cv-sparsemat.html#end-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3004" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SparseMatConstIterator_&lt;_Tp&gt;" signature="SparseMatConstIterator_&lt;_Tp&gt; end() const"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SparseMat_::operator()" href="cv-sparsemat.html#operator-28-29-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2995" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp operator()(const int *idx, size_t *hashval) const">
                    <parameter left="const int *" right="" name="idx" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SparseMat_::operator()" href="cv-sparsemat.html#operator-28-29-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2993" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp operator()(int i0, int i1, int i2, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="int" right="" name="i2" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SparseMat_::operator()" href="cv-sparsemat.html#operator-28-29-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2991" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp operator()(int i0, int i1, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="int" right="" name="i1" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SparseMat_::operator()" href="cv-sparsemat.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2989" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp operator()(int i0, size_t *hashval) const">
                    <parameter left="int" right="" name="i0" default=""/>
                    <parameter left="size_t *" right="" name="hashval" default="0"/>
                </function>
                <function threadsafety="unspecified" name="channels" fullname="cv::SparseMat_::channels" href="cv-sparsemat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2977" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="depth" fullname="cv::SparseMat_::depth" href="cv-sparsemat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2975" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::SparseMat_::type" href="cv-sparsemat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2973" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
            </class>
            <class threadsafety="unspecified" name="UMat" fullname="cv::UMat" href="cv-umat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2380">
                <function threadsafety="unspecified" name="getStdAllocator" fullname="cv::UMat::getStdAllocator" href="cv-umat.html#getStdAllocator" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2563" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatAllocator *" signature="MatAllocator * getStdAllocator()"/>
                <function threadsafety="unspecified" name="adjustROI" fullname="cv::UMat::adjustROI" href="cv-umat.html#adjustROI" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2497" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat &amp;" signature="UMat &amp; adjustROI(int dtop, int dbottom, int dleft, int dright)">
                    <parameter left="int" right="" name="dtop" default=""/>
                    <parameter left="int" right="" name="dbottom" default=""/>
                    <parameter left="int" right="" name="dleft" default=""/>
                    <parameter left="int" right="" name="dright" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::UMat::operator=" href="cv-umat.html#operator-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2535" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat &amp;" signature="UMat &amp; operator=(UMat &amp;&amp;m)">
                    <parameter left="UMat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::UMat::operator=" href="cv-umat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2448" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat &amp;" signature="UMat &amp; operator=(const Scalar &amp;s)">
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::UMat::operator=" href="cv-umat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2413" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat &amp;" signature="UMat &amp; operator=(const UMat &amp;m)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="setTo" fullname="cv::UMat::setTo" href="cv-umat.html#setTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2450" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat &amp;" signature="UMat &amp; setTo(InputArray value, InputArray mask)">
                    <parameter left="InputArray" right="" name="value" default=""/>
                    <parameter left="InputArray" right="" name="mask" default="noArray()"/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::UMat::diag" href="cv-umat.html#diag-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2433" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat diag(const UMat &amp;d)">
                    <parameter left="const UMat &amp;" right="" name="d" default=""/>
                </function>
                <function threadsafety="unspecified" name="eye" fullname="cv::UMat::eye" href="cv-umat.html#eye-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2474" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat eye(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="eye" fullname="cv::UMat::eye" href="cv-umat.html#eye" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2473" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat eye(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::UMat::ones" href="cv-umat.html#ones-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2471" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat ones(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::UMat::ones" href="cv-umat.html#ones-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2472" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat ones(int ndims, const int *sz, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sz" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="ones" fullname="cv::UMat::ones" href="cv-umat.html#ones" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2470" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat ones(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::UMat::zeros" href="cv-umat.html#zeros-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2468" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat zeros(Size size, int type)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::UMat::zeros" href="cv-umat.html#zeros-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2469" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat zeros(int ndims, const int *sz, int type)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sz" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::UMat::zeros" href="cv-umat.html#zeros" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2467" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat zeros(int rows, int cols, int type)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2388" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(Size size, int type, UMatUsageFlags usageFlags)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2391" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(Size size, int type, const Scalar &amp;s, UMatUsageFlags usageFlags)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2534" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(UMat &amp;&amp;m)">
                    <parameter left="UMat &amp;&amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2384" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(UMatUsageFlags usageFlags)">
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2398" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const UMat &amp;m)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2401" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const UMat &amp;m, const Range &amp;rowRange, const Range &amp;colRange)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    <parameter left="const Range &amp;" right="" name="rowRange" default=""/>
                    <parameter left="const Range &amp;" right="" name="colRange" default="Range::all()"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2403" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const UMat &amp;m, const Range *ranges)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2402" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const UMat &amp;m, const Rect &amp;roi)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2404" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const UMat &amp;m, const std::vector&lt;Range&gt; &amp;ranges)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2408" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(const std::vector&lt;_Tp&gt; &amp;vec, bool copyData)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="copyData" default="false"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2394" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(int ndims, const int *sizes, int type, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2395" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(int ndims, const int *sizes, int type, const Scalar &amp;s, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2387" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(int rows, int cols, int type, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="UMat" fullname="cv::UMat::UMat" href="cv-umat.html#UMat-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2390" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMat(int rows, int cols, int type, const Scalar &amp;s, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="addref" fullname="cv::UMat::addref" href="cv-umat.html#addref" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2484" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addref()"/>
                <function threadsafety="unspecified" name="copySize" fullname="cv::UMat::copySize" href="cv-umat.html#copySize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2492" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copySize(const UMat &amp;m)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::UMat::create" href="cv-umat.html#create-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2479" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size size, int type, UMatUsageFlags usageFlags)">
                    <parameter left="Size" right="" name="size" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::UMat::create" href="cv-umat.html#create-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2481" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(const std::vector&lt;int&gt; &amp;sizes, int type, UMatUsageFlags usageFlags)">
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::UMat::create" href="cv-umat.html#create-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2480" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int ndims, const int *sizes, int type, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="ndims" default=""/>
                    <parameter left="const int *" right="" name="sizes" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::UMat::create" href="cv-umat.html#create" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2478" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int rows, int cols, int type, UMatUsageFlags usageFlags)">
                    <parameter left="int" right="" name="rows" default=""/>
                    <parameter left="int" right="" name="cols" default=""/>
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="UMatUsageFlags" right="" name="usageFlags" default="USAGE_DEFAULT"/>
                </function>
                <function threadsafety="unspecified" name="deallocate" fullname="cv::UMat::deallocate" href="cv-umat.html#deallocate" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2490" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deallocate()"/>
                <function threadsafety="unspecified" name="release" fullname="cv::UMat::release" href="cv-umat.html#release" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2487" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="updateContinuityFlag" fullname="cv::UMat::updateContinuityFlag" href="cv-umat.html#updateContinuityFlag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2566" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateContinuityFlag()"/>
                <function threadsafety="unspecified" name="~UMat" fullname="cv::UMat::~UMat" href="cv-umat.html#dtor.UMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2411" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~UMat()"/>
                <function threadsafety="unspecified" name="getMat" fullname="cv::UMat::getMat" href="cv-umat.html#getMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2415" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat getMat(AccessFlag flags) const">
                    <parameter left="AccessFlag" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="col" fullname="cv::UMat::col" href="cv-umat.html#col" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2420" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat col(int x) const">
                    <parameter left="int" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::UMat::colRange" href="cv-umat.html#colRange-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2426" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat colRange(const Range &amp;r) const">
                    <parameter left="const Range &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="colRange" fullname="cv::UMat::colRange" href="cv-umat.html#colRange" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2425" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat colRange(int startcol, int endcol) const">
                    <parameter left="int" right="" name="startcol" default=""/>
                    <parameter left="int" right="" name="endcol" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::UMat::diag" href="cv-umat.html#diag" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2431" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat diag(int d) const">
                    <parameter left="int" right="" name="d" default="0"/>
                </function>
                <function threadsafety="unspecified" name="inv" fullname="cv::UMat::inv" href="cv-umat.html#inv" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2459" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat inv(int method) const">
                    <parameter left="int" right="" name="method" default="DECOMP_LU"/>
                </function>
                <function threadsafety="unspecified" name="mul" fullname="cv::UMat::mul" href="cv-umat.html#mul" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2461" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat mul(InputArray m, double scale) const">
                    <parameter left="InputArray" right="" name="m" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::UMat::operator()" href="cv-umat.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2500" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat operator()(Range rowRange, Range colRange) const">
                    <parameter left="Range" right="" name="rowRange" default=""/>
                    <parameter left="Range" right="" name="colRange" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::UMat::operator()" href="cv-umat.html#operator-28-29-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2502" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat operator()(const Range *ranges) const">
                    <parameter left="const Range *" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::UMat::operator()" href="cv-umat.html#operator-28-29-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2501" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat operator()(const Rect &amp;roi) const">
                    <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::UMat::operator()" href="cv-umat.html#operator-28-29-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2503" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat operator()(const std::vector&lt;Range&gt; &amp;ranges) const">
                    <parameter left="const std::vector&lt;Range&gt; &amp;" right="" name="ranges" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::UMat::reshape" href="cv-umat.html#reshape-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2454" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat reshape(int cn, int newndims, const int *newsz) const">
                    <parameter left="int" right="" name="cn" default=""/>
                    <parameter left="int" right="" name="newndims" default=""/>
                    <parameter left="const int *" right="" name="newsz" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::UMat::reshape" href="cv-umat.html#reshape" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2453" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat reshape(int cn, int rows) const">
                    <parameter left="int" right="" name="cn" default=""/>
                    <parameter left="int" right="" name="rows" default="0"/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::UMat::row" href="cv-umat.html#row" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2418" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat row(int y) const">
                    <parameter left="int" right="" name="y" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::UMat::rowRange" href="cv-umat.html#rowRange-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2423" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat rowRange(const Range &amp;r) const">
                    <parameter left="const Range &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="rowRange" fullname="cv::UMat::rowRange" href="cv-umat.html#rowRange" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2422" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat rowRange(int startrow, int endrow) const">
                    <parameter left="int" right="" name="startrow" default=""/>
                    <parameter left="int" right="" name="endrow" default=""/>
                </function>
                <function threadsafety="unspecified" name="t" fullname="cv::UMat::t" href="cv-umat.html#t" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2457" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat t() const"/>
                <function threadsafety="unspecified" name="empty" fullname="cv::UMat::empty" href="cv-umat.html#empty" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2527" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="isContinuous" fullname="cv::UMat::isContinuous" href="cv-umat.html#isContinuous" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2508" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isContinuous() const"/>
                <function threadsafety="unspecified" name="isSubmatrix" fullname="cv::UMat::isSubmatrix" href="cv-umat.html#isSubmatrix" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2511" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSubmatrix() const"/>
                <function threadsafety="unspecified" name="dot" fullname="cv::UMat::dot" href="cv-umat.html#dot" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2464" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double dot(InputArray m) const">
                    <parameter left="InputArray" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="channels" fullname="cv::UMat::channels" href="cv-umat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2523" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                <function threadsafety="unspecified" name="checkVector" fullname="cv::UMat::checkVector" href="cv-umat.html#checkVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2532" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int checkVector(int elemChannels, int depth, bool requireContinuous) const">
                    <parameter left="int" right="" name="elemChannels" default=""/>
                    <parameter left="int" right="" name="depth" default="-1"/>
                    <parameter left="bool" right="" name="requireContinuous" default="true"/>
                </function>
                <function threadsafety="unspecified" name="depth" fullname="cv::UMat::depth" href="cv-umat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2521" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                <function threadsafety="unspecified" name="type" fullname="cv::UMat::type" href="cv-umat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2519" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                <function threadsafety="unspecified" name="elemSize" fullname="cv::UMat::elemSize" href="cv-umat.html#elemSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2515" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                <function threadsafety="unspecified" name="elemSize1" fullname="cv::UMat::elemSize1" href="cv-umat.html#elemSize1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2517" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize1() const"/>
                <function threadsafety="unspecified" name="step1" fullname="cv::UMat::step1" href="cv-umat.html#step1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2525" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step1(int i) const">
                    <parameter left="int" right="" name="i" default="0"/>
                </function>
                <function threadsafety="unspecified" name="total" fullname="cv::UMat::total" href="cv-umat.html#total" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2529" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t total() const"/>
                <function threadsafety="unspecified" name="assignTo" fullname="cv::UMat::assignTo" href="cv-umat.html#assignTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2445" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assignTo(UMat &amp;m, int type) const">
                    <parameter left="UMat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="type" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="convertTo" fullname="cv::UMat::convertTo" href="cv-umat.html#convertTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2443" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void convertTo(OutputArray m, int rtype, double alpha, double beta) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                    <parameter left="int" right="" name="rtype" default=""/>
                    <parameter left="double" right="" name="alpha" default="1"/>
                    <parameter left="double" right="" name="beta" default="0"/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::UMat::copyTo" href="cv-umat.html#copyTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2439" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray m) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::UMat::copyTo" href="cv-umat.html#copyTo-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2441" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(OutputArray m, InputArray mask) const">
                    <parameter left="OutputArray" right="" name="m" default=""/>
                    <parameter left="InputArray" right="" name="mask" default=""/>
                </function>
                <function threadsafety="unspecified" name="locateROI" fullname="cv::UMat::locateROI" href="cv-umat.html#locateROI" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2495" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void locateROI(Size &amp;wholeSize, Point &amp;ofs) const">
                    <parameter left="Size &amp;" right="" name="wholeSize" default=""/>
                    <parameter left="Point &amp;" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="ndoffset" fullname="cv::UMat::ndoffset" href="cv-umat.html#ndoffset" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2542" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ndoffset(size_t *ofs) const">
                    <parameter left="size_t *" right="" name="ofs" default=""/>
                </function>
                <variable threadsafety="unspecified" name="AUTO_STEP" fullname="cv::UMat::AUTO_STEP" href="cv-umat.html#AUTO_STEP-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2544" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="CONTINUOUS_FLAG" fullname="cv::UMat::CONTINUOUS_FLAG" href="cv-umat.html#CONTINUOUS_FLAG-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2544" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="DEPTH_MASK" fullname="cv::UMat::DEPTH_MASK" href="cv-umat.html#DEPTH_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2545" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAGIC_MASK" fullname="cv::UMat::MAGIC_MASK" href="cv-umat.html#MAGIC_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2545" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAGIC_VAL" fullname="cv::UMat::MAGIC_VAL" href="cv-umat.html#MAGIC_VAL-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2544" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="SUBMATRIX_FLAG" fullname="cv::UMat::SUBMATRIX_FLAG" href="cv-umat.html#SUBMATRIX_FLAG-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2544" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="TYPE_MASK" fullname="cv::UMat::TYPE_MASK" href="cv-umat.html#TYPE_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2545" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="allocator" fullname="cv::UMat::allocator" href="cv-umat.html#allocator-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2560" type="MatAllocator *" static="false"/>
                <variable threadsafety="unspecified" name="dims" fullname="cv::UMat::dims" href="cv-umat.html#dims-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2555" type="int" static="false"/>
                <variable threadsafety="unspecified" name="offset" fullname="cv::UMat::offset" href="cv-umat.html#offset-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2572" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::UMat::size" href="cv-umat.html#size-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2574" type="MatSize" static="false"/>
                <variable threadsafety="unspecified" name="step" fullname="cv::UMat::step" href="cv-umat.html#step-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2575" type="MatStep" static="false"/>
                <variable threadsafety="unspecified" name="u" fullname="cv::UMat::u" href="cv-umat.html#u-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2569" type="UMatData *" static="false"/>
                <variable threadsafety="unspecified" name="usageFlags" fullname="cv::UMat::usageFlags" href="cv-umat.html#usageFlags-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2561" type="UMatUsageFlags" static="false"/>
            </class>
            <class threadsafety="unspecified" name="UMatData" fullname="cv::UMatData" href="cv-umatdata.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="530">
                <enum threadsafety="unspecified" name="MemoryFlag" fullname="cv::UMatData::MemoryFlag" href="cv-umatdata.html#MemoryFlag-enum" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="532">
                    <value name="COPY_ON_MAP" value="1"/>
                    <value name="HOST_COPY_OBSOLETE" value="2"/>
                    <value name="DEVICE_COPY_OBSOLETE" value="4"/>
                    <value name="TEMP_UMAT" value="8"/>
                    <value name="TEMP_COPIED_UMAT" value="24"/>
                    <value name="USER_ALLOCATED" value="32"/>
                    <value name="DEVICE_MEM_MAPPED" value="64"/>
                    <value name="ASYNC_CLEANUP" value="128"/>
                </enum>
                <function threadsafety="unspecified" name="UMatData" fullname="cv::UMatData::UMatData" href="cv-umatdata.html#UMatData" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="537" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UMatData(const MatAllocator *allocator)">
                    <parameter left="const MatAllocator *" right="" name="allocator" default=""/>
                </function>
                <function threadsafety="unspecified" name="lock" fullname="cv::UMatData::lock" href="cv-umatdata.html#lock" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="541" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void lock()"/>
                <function threadsafety="unspecified" name="markDeviceCopyObsolete" fullname="cv::UMatData::markDeviceCopyObsolete" href="cv-umatdata.html#markDeviceCopyObsolete" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="551" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void markDeviceCopyObsolete(bool flag)">
                    <parameter left="bool" right="" name="flag" default=""/>
                </function>
                <function threadsafety="unspecified" name="markDeviceMemMapped" fullname="cv::UMatData::markDeviceMemMapped" href="cv-umatdata.html#markDeviceMemMapped" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="552" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void markDeviceMemMapped(bool flag)">
                    <parameter left="bool" right="" name="flag" default=""/>
                </function>
                <function threadsafety="unspecified" name="markHostCopyObsolete" fullname="cv::UMatData::markHostCopyObsolete" href="cv-umatdata.html#markHostCopyObsolete" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="550" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void markHostCopyObsolete(bool flag)">
                    <parameter left="bool" right="" name="flag" default=""/>
                </function>
                <function threadsafety="unspecified" name="unlock" fullname="cv::UMatData::unlock" href="cv-umatdata.html#unlock" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="542" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unlock()"/>
                <function threadsafety="unspecified" name="~UMatData" fullname="cv::UMatData::~UMatData" href="cv-umatdata.html#dtor.UMatData" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="538" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~UMatData()"/>
                <function threadsafety="unspecified" name="copyOnMap" fullname="cv::UMatData::copyOnMap" href="cv-umatdata.html#copyOnMap" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="547" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool copyOnMap() const"/>
                <function threadsafety="unspecified" name="deviceCopyObsolete" fullname="cv::UMatData::deviceCopyObsolete" href="cv-umatdata.html#deviceCopyObsolete" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="545" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool deviceCopyObsolete() const"/>
                <function threadsafety="unspecified" name="deviceMemMapped" fullname="cv::UMatData::deviceMemMapped" href="cv-umatdata.html#deviceMemMapped" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="546" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool deviceMemMapped() const"/>
                <function threadsafety="unspecified" name="hostCopyObsolete" fullname="cv::UMatData::hostCopyObsolete" href="cv-umatdata.html#hostCopyObsolete" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="544" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool hostCopyObsolete() const"/>
                <function threadsafety="unspecified" name="tempCopiedUMat" fullname="cv::UMatData::tempCopiedUMat" href="cv-umatdata.html#tempCopiedUMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="549" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool tempCopiedUMat() const"/>
                <function threadsafety="unspecified" name="tempUMat" fullname="cv::UMatData::tempUMat" href="cv-umatdata.html#tempUMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="548" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool tempUMat() const"/>
                <variable threadsafety="unspecified" name="allocatorContext" fullname="cv::UMatData::allocatorContext" href="cv-umatdata.html#allocatorContext-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="568" type="std::shared_ptr&lt;void&gt;" static="false"/>
                <variable threadsafety="unspecified" name="allocatorFlags_" fullname="cv::UMatData::allocatorFlags_" href="cv-umatdata.html#allocatorFlags_-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="565" type="int" static="false"/>
                <variable threadsafety="unspecified" name="currAllocator" fullname="cv::UMatData::currAllocator" href="cv-umatdata.html#currAllocator-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="555" type="const MatAllocator *" static="false"/>
                <variable threadsafety="unspecified" name="data" fullname="cv::UMatData::data" href="cv-umatdata.html#data-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="558" type="uchar *" static="false"/>
                <variable threadsafety="unspecified" name="flags" fullname="cv::UMatData::flags" href="cv-umatdata.html#flags-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="562" type="UMatData::MemoryFlag" static="false"/>
                <variable threadsafety="unspecified" name="handle" fullname="cv::UMatData::handle" href="cv-umatdata.html#handle-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="563" type="void *" static="false"/>
                <variable threadsafety="unspecified" name="mapcount" fullname="cv::UMatData::mapcount" href="cv-umatdata.html#mapcount-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="566" type="int" static="false"/>
                <variable threadsafety="unspecified" name="origdata" fullname="cv::UMatData::origdata" href="cv-umatdata.html#origdata-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="559" type="uchar *" static="false"/>
                <variable threadsafety="unspecified" name="originalUMatData" fullname="cv::UMatData::originalUMatData" href="cv-umatdata.html#originalUMatData-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="567" type="UMatData *" static="false"/>
                <variable threadsafety="unspecified" name="prevAllocator" fullname="cv::UMatData::prevAllocator" href="cv-umatdata.html#prevAllocator-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="554" type="const MatAllocator *" static="false"/>
                <variable threadsafety="unspecified" name="refcount" fullname="cv::UMatData::refcount" href="cv-umatdata.html#refcount-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="557" type="int" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::UMatData::size" href="cv-umatdata.html#size-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="560" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="urefcount" fullname="cv::UMatData::urefcount" href="cv-umatdata.html#urefcount-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="556" type="int" static="false"/>
                <variable threadsafety="unspecified" name="userdata" fullname="cv::UMatData::userdata" href="cv-umatdata.html#userdata-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="564" type="void *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray" href="cv-inputarray.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="158">
                <enum threadsafety="unspecified" name="KindFlag" fullname="cv::_InputArray::KindFlag" href="cv-inputarray.html#KindFlag-enum" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="161">
                    <value name="KIND_SHIFT" value="16"/>
                    <value name="FIXED_TYPE" value="0x8000&lt;&lt;KIND_SHIFT"/>
                    <value name="FIXED_SIZE" value="0x4000&lt;&lt;KIND_SHIFT"/>
                    <value name="KIND_MASK" value="31&lt;&lt;KIND_SHIFT"/>
                    <value name="NONE" value="0&lt;&lt;KIND_SHIFT"/>
                    <value name="MAT" value="1&lt;&lt;KIND_SHIFT"/>
                    <value name="MATX" value="2&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_VECTOR" value="3&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_VECTOR_VECTOR" value="4&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_VECTOR_MAT" value="5&lt;&lt;KIND_SHIFT"/>
                    <value name="EXPR" value="6&lt;&lt;KIND_SHIFT"/>
                    <value name="OPENGL_BUFFER" value="7&lt;&lt;KIND_SHIFT"/>
                    <value name="CUDA_HOST_MEM" value="8&lt;&lt;KIND_SHIFT"/>
                    <value name="CUDA_GPU_MAT" value="9&lt;&lt;KIND_SHIFT"/>
                    <value name="UMAT" value="10&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_VECTOR_UMAT" value="11&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_BOOL_VECTOR" value="12&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_VECTOR_CUDA_GPU_MAT" value="13&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_ARRAY" value="14&lt;&lt;KIND_SHIFT"/>
                    <value name="STD_ARRAY_MAT" value="15&lt;&lt;KIND_SHIFT"/>
                </enum>
                <function threadsafety="unspecified" name="rawIn" fullname="cv::_InputArray::rawIn" href="cv-inputarray.html#rawIn-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="211" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_InputArray" signature="_InputArray rawIn(const std::array&lt;_Tp, _Nm&gt; &amp;arr)">
                    <parameter left="const std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="rawIn" fullname="cv::_InputArray::rawIn" href="cv-inputarray.html#rawIn" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="210" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_InputArray" signature="_InputArray rawIn(const std::vector&lt;_Tp&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="185" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray()"/>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="187" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="188" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const MatExpr &amp;expr)">
                    <parameter left="const MatExpr &amp;" right="" name="expr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="190" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const Mat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="const Mat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="197" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const Matx&lt;_Tp, m, n&gt; &amp;matx)">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="matx" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-19" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="204" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const UMat &amp;um)">
                    <parameter left="const UMat &amp;" right="" name="um" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="196" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const _Tp *vec, int n)">
                    <parameter left="const _Tp *" right="" name="vec" default=""/>
                    <parameter left="int" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="199" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const cuda::GpuMat &amp;d_mat)">
                    <parameter left="const cuda::GpuMat &amp;" right="" name="d_mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-17" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const cuda::HostMem &amp;cuda_mem)">
                    <parameter left="const cuda::HostMem &amp;" right="" name="cuda_mem" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-18" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="203" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const cudev::GpuMat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="const cudev::GpuMat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="198" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const double &amp;val)">
                    <parameter left="const double &amp;" right="" name="val" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-16" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="201" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const ogl::Buffer &amp;buf)">
                    <parameter left="const ogl::Buffer &amp;" right="" name="buf" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-22" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="208" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::array&lt;Mat, _Nm&gt; &amp;arr)">
                    <parameter left="const std::array&lt;Mat, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-21" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="207" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::array&lt;_Tp, _Nm&gt; &amp;arr)">
                    <parameter left="const std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="189" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;Mat&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;Mat&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="195" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="const std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-20" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="205" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;UMat&gt; &amp;umv)">
                    <parameter left="const std::vector&lt;UMat&gt; &amp;" right="" name="umv" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="191" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;_Tp&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="192" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;bool&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;bool&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="200" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;cuda::GpuMat&gt; &amp;d_mat_array)">
                    <parameter left="const std::vector&lt;cuda::GpuMat&gt; &amp;" right="" name="d_mat_array" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="193" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="194" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="_InputArray(const std::vector&lt;std::vector&lt;bool&gt; &gt; &amp;) = delete">
                    <parameter left="const std::vector&lt;std::vector&lt;bool&gt; &gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputArray" fullname="cv::_InputArray::_InputArray" href="cv-inputarray.html#underscore.InputArray-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="186" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputArray(int _flags, void *_obj)">
                    <parameter left="int" right="" name="_flags" default=""/>
                    <parameter left="void *" right="" name="_obj" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cv::_InputArray::init" href="cv-inputarray.html#init" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="259" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int _flags, const void *_obj)">
                    <parameter left="int" right="" name="_flags" default=""/>
                    <parameter left="const void *" right="" name="_obj" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cv::_InputArray::init" href="cv-inputarray.html#init-1" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="260" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int _flags, const void *_obj, Size _sz)">
                    <parameter left="int" right="" name="_flags" default=""/>
                    <parameter left="const void *" right="" name="_obj" default=""/>
                    <parameter left="Size" right="" name="_sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="~_InputArray" fullname="cv::_InputArray::~_InputArray" href="cv-inputarray.html#dtor._InputArray" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="252" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~_InputArray()"/>
                <function threadsafety="unspecified" name="getMat" fullname="cv::_InputArray::getMat" href="cv-inputarray.html#getMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="213" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat getMat(int idx) const">
                    <parameter left="int" right="" name="idx" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getMat_" fullname="cv::_InputArray::getMat_" href="cv-inputarray.html#getMat_" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat getMat_(int idx) const">
                    <parameter left="int" right="" name="idx" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getSz" fullname="cv::_InputArray::getSz" href="cv-inputarray.html#getSz" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="224" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size getSz() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::_InputArray::size" href="cv-inputarray.html#size" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="230" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size size(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getUMat" fullname="cv::_InputArray::getUMat" href="cv-inputarray.html#getUMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="215" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="UMat" signature="UMat getUMat(int idx) const">
                    <parameter left="int" right="" name="idx" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="kind" fullname="cv::_InputArray::kind" href="cv-inputarray.html#kind" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="226" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_InputArray::KindFlag" signature="_InputArray::KindFlag kind() const"/>
                <function threadsafety="unspecified" name="empty" fullname="cv::_InputArray::empty" href="cv-inputarray.html#empty" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="239" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="isContinuous" fullname="cv::_InputArray::isContinuous" href="cv-inputarray.html#isContinuous" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="237" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isContinuous(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="isGpuMat" fullname="cv::_InputArray::isGpuMat" href="cv-inputarray.html#isGpuMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="250" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isGpuMat() const"/>
                <function threadsafety="unspecified" name="isGpuMatVector" fullname="cv::_InputArray::isGpuMatVector" href="cv-inputarray.html#isGpuMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="251" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isGpuMatVector() const"/>
                <function threadsafety="unspecified" name="isMat" fullname="cv::_InputArray::isMat" href="cv-inputarray.html#isMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="244" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMat() const"/>
                <function threadsafety="unspecified" name="isMatVector" fullname="cv::_InputArray::isMatVector" href="cv-inputarray.html#isMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="246" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMatVector() const"/>
                <function threadsafety="unspecified" name="isMatx" fullname="cv::_InputArray::isMatx" href="cv-inputarray.html#isMatx" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="248" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMatx() const"/>
                <function threadsafety="unspecified" name="isSubmatrix" fullname="cv::_InputArray::isSubmatrix" href="cv-inputarray.html#isSubmatrix" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="238" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSubmatrix(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="isUMat" fullname="cv::_InputArray::isUMat" href="cv-inputarray.html#isUMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="245" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUMat() const"/>
                <function threadsafety="unspecified" name="isUMatVector" fullname="cv::_InputArray::isUMatVector" href="cv-inputarray.html#isUMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="247" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isUMatVector() const"/>
                <function threadsafety="unspecified" name="isVector" fullname="cv::_InputArray::isVector" href="cv-inputarray.html#isVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="249" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isVector() const"/>
                <function threadsafety="unspecified" name="sameSize" fullname="cv::_InputArray::sameSize" href="cv-inputarray.html#sameSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="232" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool sameSize(const _InputArray &amp;arr) const">
                    <parameter left="const _InputArray &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="getGpuMat" fullname="cv::_InputArray::getGpuMat" href="cv-inputarray.html#getGpuMat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="219" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cuda::GpuMat" signature="cuda::GpuMat getGpuMat() const"/>
                <function threadsafety="unspecified" name="channels" fullname="cv::_InputArray::channels" href="cv-inputarray.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="236" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="cols" fullname="cv::_InputArray::cols" href="cv-inputarray.html#cols" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="228" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="depth" fullname="cv::_InputArray::depth" href="cv-inputarray.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="235" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="dims" fullname="cv::_InputArray::dims" href="cv-inputarray.html#dims" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="227" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int dims(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getFlags" fullname="cv::_InputArray::getFlags" href="cv-inputarray.html#getFlags" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="222" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getFlags() const"/>
                <function threadsafety="unspecified" name="rows" fullname="cv::_InputArray::rows" href="cv-inputarray.html#rows" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="229" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="sizend" fullname="cv::_InputArray::sizend" href="cv-inputarray.html#sizend" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="231" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int sizend(int *sz, int i) const">
                    <parameter left="int *" right="" name="sz" default=""/>
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="type" fullname="cv::_InputArray::type" href="cv-inputarray.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="234" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getOGlBuffer" fullname="cv::_InputArray::getOGlBuffer" href="cv-inputarray.html#getOGlBuffer" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="220" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ogl::Buffer" signature="ogl::Buffer getOGlBuffer() const"/>
                <function threadsafety="unspecified" name="offset" fullname="cv::_InputArray::offset" href="cv-inputarray.html#offset" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="242" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t offset(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="step" fullname="cv::_InputArray::step" href="cv-inputarray.html#step" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="243" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="total" fullname="cv::_InputArray::total" href="cv-inputarray.html#total" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="233" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t total(int i) const">
                    <parameter left="int" right="" name="i" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="getObj" fullname="cv::_InputArray::getObj" href="cv-inputarray.html#getObj" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="223" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * getObj() const"/>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::_InputArray::copyTo" href="cv-inputarray.html#copyTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="240" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(const _OutputArray &amp;arr) const">
                    <parameter left="const _OutputArray &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::_InputArray::copyTo" href="cv-inputarray.html#copyTo-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="241" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(const _OutputArray &amp;arr, const _InputArray &amp;mask) const">
                    <parameter left="const _OutputArray &amp;" right="" name="arr" default=""/>
                    <parameter left="const _InputArray &amp;" right="" name="mask" default=""/>
                </function>
                <function threadsafety="unspecified" name="getGpuMatVector" fullname="cv::_InputArray::getGpuMatVector" href="cv-inputarray.html#getGpuMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="218" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getGpuMatVector(std::vector&lt;cuda::GpuMat&gt; &amp;gpumv) const">
                    <parameter left="std::vector&lt;cuda::GpuMat&gt; &amp;" right="" name="gpumv" default=""/>
                </function>
                <function threadsafety="unspecified" name="getMatVector" fullname="cv::_InputArray::getMatVector" href="cv-inputarray.html#getMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getMatVector(std::vector&lt;Mat&gt; &amp;mv) const">
                    <parameter left="std::vector&lt;Mat&gt; &amp;" right="" name="mv" default=""/>
                </function>
                <function threadsafety="unspecified" name="getUMatVector" fullname="cv::_InputArray::getUMatVector" href="cv-inputarray.html#getUMatVector" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="217" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getUMatVector(std::vector&lt;UMat&gt; &amp;umv) const">
                    <parameter left="std::vector&lt;UMat&gt; &amp;" right="" name="umv" default=""/>
                </function>
                <variable threadsafety="unspecified" name="flags" fullname="cv::_InputArray::flags" href="cv-inputarray.html#flags-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="255" type="int" static="false"/>
                <variable threadsafety="unspecified" name="obj" fullname="cv::_InputArray::obj" href="cv-inputarray.html#obj-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="256" type="void *" static="false"/>
                <variable threadsafety="unspecified" name="sz" fullname="cv::_InputArray::sz" href="cv-inputarray.html#sz-var" status="active" access="protected" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="257" type="Size" static="false"/>
            </class>
            <class threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray" href="cv-inputoutputarray.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="381">
                <function threadsafety="unspecified" name="rawInOut" fullname="cv::_InputOutputArray::rawInOut" href="cv-inputoutputarray.html#rawInOut-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="424" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_InputOutputArray" signature="_InputOutputArray rawInOut(std::array&lt;_Tp, _Nm&gt; &amp;arr)">
                    <parameter left="std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="rawInOut" fullname="cv::_InputOutputArray::rawInOut" href="cv-inputoutputarray.html#rawInOut" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="423" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_InputOutputArray" signature="_InputOutputArray rawInOut(std::vector&lt;_Tp&gt; &amp;vec)">
                    <parameter left="std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="384" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray()"/>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="386" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(Mat &amp;m)">
                    <parameter left="Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="396" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(Mat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="Mat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-14" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="398" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(Matx&lt;_Tp, m, n&gt; &amp;matx)">
                    <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="matx" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-15" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="399" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(UMat &amp;m)">
                    <parameter left="UMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-13" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="397" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(_Tp *vec, int n)">
                    <parameter left="_Tp *" right="" name="vec" default=""/>
                    <parameter left="int" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-17" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="402" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const Mat &amp;m)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-27" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="412" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const Mat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="const Mat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="414" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const Matx&lt;_Tp, m, n&gt; &amp;matx)">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="matx" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-30" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="415" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const UMat &amp;m)">
                    <parameter left="const UMat &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-28" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="413" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const _Tp *vec, int n)">
                    <parameter left="const _Tp *" right="" name="vec" default=""/>
                    <parameter left="int" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-19" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="404" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const cuda::GpuMat &amp;d_mat)">
                    <parameter left="const cuda::GpuMat &amp;" right="" name="d_mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-22" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="407" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const cuda::HostMem &amp;cuda_mem)">
                    <parameter left="const cuda::HostMem &amp;" right="" name="cuda_mem" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-23" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="408" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const cudev::GpuMat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="const cudev::GpuMat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-21" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="406" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const ogl::Buffer &amp;buf)">
                    <parameter left="const ogl::Buffer &amp;" right="" name="buf" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-35" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="421" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::array&lt;Mat, _Nm&gt; &amp;arr)">
                    <parameter left="const std::array&lt;Mat, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-33" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="419" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::array&lt;_Tp, _Nm&gt; &amp;arr)">
                    <parameter left="const std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-18" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="403" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;Mat&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;Mat&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-26" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="411" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="const std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-31" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="416" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;UMat&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;UMat&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-24" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="409" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;_Tp&gt; &amp;vec)">
                    <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-20" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="405" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;cuda::GpuMat&gt; &amp;d_mat)">
                    <parameter left="const std::vector&lt;cuda::GpuMat&gt; &amp;" right="" name="d_mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-25" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="410" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="388" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(cuda::GpuMat &amp;d_mat)">
                    <parameter left="cuda::GpuMat &amp;" right="" name="d_mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="390" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(cuda::HostMem &amp;cuda_mem)">
                    <parameter left="cuda::HostMem &amp;" right="" name="cuda_mem" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="391" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(cudev::GpuMat_&lt;_Tp&gt; &amp;m)">
                    <parameter left="cudev::GpuMat_&lt;_Tp&gt; &amp;" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="385" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(int _flags, void *_obj)">
                    <parameter left="int" right="" name="_flags" default=""/>
                    <parameter left="void *" right="" name="_obj" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="389" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(ogl::Buffer &amp;buf)">
                    <parameter left="ogl::Buffer &amp;" right="" name="buf" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-34" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="420" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::array&lt;Mat, _Nm&gt; &amp;arr)">
                    <parameter left="std::array&lt;Mat, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-32" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="418" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::array&lt;_Tp, _Nm&gt; &amp;arr)">
                    <parameter left="std::array&lt;_Tp, _Nm&gt; &amp;" right="" name="arr" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="387" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;Mat&gt; &amp;vec)">
                    <parameter left="std::vector&lt;Mat&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="395" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="std::vector&lt;Mat_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-16" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="400" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;UMat&gt; &amp;vec)">
                    <parameter left="std::vector&lt;UMat&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="392" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;_Tp&gt; &amp;vec)">
                    <parameter left="std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="393" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;bool&gt; &amp;vec) = delete">
                    <parameter left="std::vector&lt;bool&gt; &amp;" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="_InputOutputArray" fullname="cv::_InputOutputArray::_InputOutputArray" href="cv-inputoutputarray.html#underscore.InputOutputArray-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="394" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="_InputOutputArray(std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;vec)">
                    <parameter left="std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                </function>
            </class>
            <enum threadsafety="unspecified" name="AccessFlag" fullname="cv::AccessFlag" href="cv.html#AccessFlag-enum" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="64">
                <value name="ACCESS_READ" value="1&lt;&lt;24"/>
                <value name="ACCESS_WRITE" value="1&lt;&lt;25"/>
                <value name="ACCESS_RW" value="3&lt;&lt;24"/>
                <value name="ACCESS_MASK" value="ACCESS_RW"/>
                <value name="ACCESS_FAST" value="1&lt;&lt;26"/>
            </enum>
            <enum threadsafety="unspecified" name="UMatUsageFlags" fullname="cv::UMatUsageFlags" href="cv.html#UMatUsageFlags-enum" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="449">
                <value name="USAGE_DEFAULT" value="0"/>
                <value name="USAGE_ALLOCATE_HOST_MEMORY" value="1&lt;&lt;0"/>
                <value name="USAGE_ALLOCATE_DEVICE_MEMORY" value="1&lt;&lt;1"/>
                <value name="USAGE_ALLOCATE_SHARED_MEMORY" value="1&lt;&lt;2"/>
                <value name="__UMAT_USAGE_FLAGS_32BIT" value="0x7fffffff"/>
            </enum>
            <typedef threadsafety="unspecified" name="InputArrayOfArrays" fullname="cv::InputArrayOfArrays" href="cv.html#InputArrayOfArrays-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="438"/>
            <typedef threadsafety="unspecified" name="InputOutputArray" fullname="cv::InputOutputArray" href="cv.html#InputOutputArray-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="441"/>
            <typedef threadsafety="unspecified" name="InputOutputArrayOfArrays" fullname="cv::InputOutputArrayOfArrays" href="cv.html#InputOutputArrayOfArrays-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="442"/>
            <typedef threadsafety="unspecified" name="Mat1b" fullname="cv::Mat1b" href="cv.html#Mat1b-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2349"/>
            <typedef threadsafety="unspecified" name="Mat1d" fullname="cv::Mat1d" href="cv.html#Mat1d-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2374"/>
            <typedef threadsafety="unspecified" name="Mat1f" fullname="cv::Mat1f" href="cv.html#Mat1f-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2369"/>
            <typedef threadsafety="unspecified" name="Mat1i" fullname="cv::Mat1i" href="cv.html#Mat1i-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2364"/>
            <typedef threadsafety="unspecified" name="Mat1s" fullname="cv::Mat1s" href="cv.html#Mat1s-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2354"/>
            <typedef threadsafety="unspecified" name="Mat1w" fullname="cv::Mat1w" href="cv.html#Mat1w-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2359"/>
            <typedef threadsafety="unspecified" name="Mat2b" fullname="cv::Mat2b" href="cv.html#Mat2b-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2350"/>
            <typedef threadsafety="unspecified" name="Mat2d" fullname="cv::Mat2d" href="cv.html#Mat2d-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2375"/>
            <typedef threadsafety="unspecified" name="Mat2f" fullname="cv::Mat2f" href="cv.html#Mat2f-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2370"/>
            <typedef threadsafety="unspecified" name="Mat2i" fullname="cv::Mat2i" href="cv.html#Mat2i-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2365"/>
            <typedef threadsafety="unspecified" name="Mat2s" fullname="cv::Mat2s" href="cv.html#Mat2s-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2355"/>
            <typedef threadsafety="unspecified" name="Mat2w" fullname="cv::Mat2w" href="cv.html#Mat2w-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2360"/>
            <typedef threadsafety="unspecified" name="Mat3b" fullname="cv::Mat3b" href="cv.html#Mat3b-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2351"/>
            <typedef threadsafety="unspecified" name="Mat3d" fullname="cv::Mat3d" href="cv.html#Mat3d-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2376"/>
            <typedef threadsafety="unspecified" name="Mat3f" fullname="cv::Mat3f" href="cv.html#Mat3f-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2371"/>
            <typedef threadsafety="unspecified" name="Mat3i" fullname="cv::Mat3i" href="cv.html#Mat3i-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2366"/>
            <typedef threadsafety="unspecified" name="Mat3s" fullname="cv::Mat3s" href="cv.html#Mat3s-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2356"/>
            <typedef threadsafety="unspecified" name="Mat3w" fullname="cv::Mat3w" href="cv.html#Mat3w-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2361"/>
            <typedef threadsafety="unspecified" name="Mat4b" fullname="cv::Mat4b" href="cv.html#Mat4b-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2352"/>
            <typedef threadsafety="unspecified" name="Mat4d" fullname="cv::Mat4d" href="cv.html#Mat4d-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2377"/>
            <typedef threadsafety="unspecified" name="Mat4f" fullname="cv::Mat4f" href="cv.html#Mat4f-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2372"/>
            <typedef threadsafety="unspecified" name="Mat4i" fullname="cv::Mat4i" href="cv.html#Mat4i-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2367"/>
            <typedef threadsafety="unspecified" name="Mat4s" fullname="cv::Mat4s" href="cv.html#Mat4s-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2357"/>
            <typedef threadsafety="unspecified" name="Mat4w" fullname="cv::Mat4w" href="cv.html#Mat4w-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="2362"/>
            <typedef threadsafety="unspecified" name="OutputArray" fullname="cv::OutputArray" href="cv.html#OutputArray-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="439"/>
            <typedef threadsafety="unspecified" name="OutputArrayOfArrays" fullname="cv::OutputArrayOfArrays" href="cv.html#OutputArrayOfArrays-typedef" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="440"/>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3635" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator!=(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3636" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator!=(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3637" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator!=(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3659" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&amp;(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3660" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&amp;(const Mat &amp;a, const Scalar &amp;s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3661" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&amp;(const Scalar &amp;s, const Mat &amp;a)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3585" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3586" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3589" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const Mat &amp;m, const MatExpr &amp;e)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3588" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const MatExpr &amp;e, const Mat &amp;m)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3590" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const MatExpr &amp;e, double s)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3592" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(const MatExpr &amp;e1, const MatExpr &amp;e2)">
                <parameter left="const MatExpr &amp;" right="" name="e1" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3587" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3591" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator*(double s, const MatExpr &amp;e)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3556" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3557" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const Mat &amp;a, const Scalar &amp;s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3560" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const Mat &amp;m, const MatExpr &amp;e)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3559" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const MatExpr &amp;e, const Mat &amp;m)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3561" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const MatExpr &amp;e, const Scalar &amp;s)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3563" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const MatExpr &amp;e1, const MatExpr &amp;e2)">
                <parameter left="const MatExpr &amp;" right="" name="e1" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3558" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const Scalar &amp;s, const Mat &amp;a)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3562" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator+(const Scalar &amp;s, const MatExpr &amp;e)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3569" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3570" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Mat &amp;a, const Scalar &amp;s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--11" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3582" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Mat &amp;m)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3573" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Mat &amp;m, const MatExpr &amp;e)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--12" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3583" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const MatExpr &amp;e)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3572" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const MatExpr &amp;e, const Mat &amp;m)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3574" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const MatExpr &amp;e, const Scalar &amp;s)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3576" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const MatExpr &amp;e1, const MatExpr &amp;e2)">
                <parameter left="const MatExpr &amp;" right="" name="e1" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3571" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Scalar &amp;s, const Mat &amp;a)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3575" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator-(const Scalar &amp;s, const MatExpr &amp;e)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3598" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3599" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3602" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const Mat &amp;m, const MatExpr &amp;e)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3601" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const MatExpr &amp;e, const Mat &amp;m)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3603" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const MatExpr &amp;e, double s)">
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-8" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3605" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(const MatExpr &amp;e1, const MatExpr &amp;e2)">
                <parameter left="const MatExpr &amp;" right="" name="e1" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3600" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-7" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3604" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator/(double s, const MatExpr &amp;e)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const MatExpr &amp;" right="" name="e" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3611" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3612" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3613" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3619" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;=(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3620" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;=(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3621" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&lt;=(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3627" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator==(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3628" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator==(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3629" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator==(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3651" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3652" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3653" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3643" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;=(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3644" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;=(const Mat &amp;a, double s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3645" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator&gt;=(double s, const Mat &amp;a)">
                <parameter left="double" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3675" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator^(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3676" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator^(const Mat &amp;a, const Scalar &amp;s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3677" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator^(const Scalar &amp;s, const Mat &amp;a)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3667" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator|(const Mat &amp;a, const Mat &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3668" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator|(const Mat &amp;a, const Scalar &amp;s)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3669" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator|(const Scalar &amp;s, const Mat &amp;a)">
                <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator~" fullname="cv::operator~" href="cv.html#operator-7e-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3683" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator~(const Mat &amp;m)">
                <parameter left="const Mat &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="max" fullname="cv::max" href="cv.html#max" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3696" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr max(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="max" fullname="cv::max" href="cv.html#max-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3698" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr max(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="min" fullname="cv::min" href="cv.html#min" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3688" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr min(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="min" fullname="cv::min" href="cv.html#min-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3690" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr min(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3638" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator!=(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3640" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator!=(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3662" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&amp;(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3664" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&amp;(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3593" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator*(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3595" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator*(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3564" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator+(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3566" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator+(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3577" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator-(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3579" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator-(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-9" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3606" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator/(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-10" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3608" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator/(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3614" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&lt;(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3616" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&lt;(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3622" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&lt;=(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3624" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&lt;=(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3630" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator==(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3632" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator==(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3654" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&gt;(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3656" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&gt;(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3646" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&gt;=(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3648" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator&gt;=(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3678" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator^(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3680" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator^(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3670" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator|(const Mat &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Mat &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="3672" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatExpr" signature="MatExpr operator|(const Matx&lt;_Tp, m, n&gt; &amp;a, const Mat &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Mat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="rawIn" fullname="cv::rawIn" href="cv.html#rawIn" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="429" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_InputArray" signature="_InputArray rawIn(_Tp &amp;v)">
                <parameter left="_Tp &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="rawInOut" fullname="cv::rawInOut" href="cv.html#rawInOut" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="433" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_InputOutputArray" signature="_InputOutputArray rawInOut(_Tp &amp;v)">
                <parameter left="_Tp &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="rawOut" fullname="cv::rawOut" href="cv.html#rawOut" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/mat.hpp" lineno="431" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_OutputArray" signature="_OutputArray rawOut(_Tp &amp;v)">
                <parameter left="_Tp &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_reinterpret_as_f32" fullname="cv::v_reinterpret_as_f32" href="cv.html#v_reinterpret_as_f32-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="361" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float32x4" signature="v_float32x4 v_reinterpret_as_f32(const v_int64x2 &amp;a)">
                <parameter left="const v_int64x2 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_reinterpret_as_f32" fullname="cv::v_reinterpret_as_f32" href="cv.html#v_reinterpret_as_f32" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="359" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float32x4" signature="v_float32x4 v_reinterpret_as_f32(const v_uint64x2 &amp;a)">
                <parameter left="const v_uint64x2 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_dotprod_expand_fast" fullname="cv::v_dotprod_expand_fast" href="cv.html#v_dotprod_expand_fast" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="1015" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float64x2" signature="v_float64x2 v_dotprod_expand_fast(const v_int32x4 &amp;a, const v_int32x4 &amp;b)">
                <parameter left="const v_int32x4 &amp;" right="" name="a" default=""/>
                <parameter left="const v_int32x4 &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_dotprod_expand_fast" fullname="cv::v_dotprod_expand_fast" href="cv.html#v_dotprod_expand_fast-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="1017" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float64x2" signature="v_float64x2 v_dotprod_expand_fast(const v_int32x4 &amp;a, const v_int32x4 &amp;b, const v_float64x2 &amp;c)">
                <parameter left="const v_int32x4 &amp;" right="" name="a" default=""/>
                <parameter left="const v_int32x4 &amp;" right="" name="b" default=""/>
                <parameter left="const v_float64x2 &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_reinterpret_as_f64" fullname="cv::v_reinterpret_as_f64" href="cv.html#v_reinterpret_as_f64-1" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="365" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float64x2" signature="v_float64x2 v_reinterpret_as_f64(const v_int64x2 &amp;a)">
                <parameter left="const v_int64x2 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_reinterpret_as_f64" fullname="cv::v_reinterpret_as_f64" href="cv.html#v_reinterpret_as_f64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="363" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_float64x2" signature="v_float64x2 v_reinterpret_as_f64(const v_uint64x2 &amp;a)">
                <parameter left="const v_uint64x2 &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_reinterpret_as_s64" fullname="cv::v_reinterpret_as_s64" href="cv.html#v_reinterpret_as_s64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="357" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_int64x2" signature="v_int64x2 v_reinterpret_as_s64(const _Tpvec &amp;a)">
                <parameter left="const _Tpvec &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_setall_s64" fullname="cv::v_setall_s64" href="cv.html#v_setall_s64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="353" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_int64x2" signature="v_int64x2 v_setall_s64(int64 val)">
                <parameter left="int64" right="" name="val" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_setzero_s64" fullname="cv::v_setzero_s64" href="cv.html#v_setzero_s64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="351" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_int64x2" signature="v_int64x2 v_setzero_s64()"/>
            <function threadsafety="unspecified" name="v_reinterpret_as_u64" fullname="cv::v_reinterpret_as_u64" href="cv.html#v_reinterpret_as_u64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="355" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_uint64x2" signature="v_uint64x2 v_reinterpret_as_u64(const _Tpvec &amp;a)">
                <parameter left="const _Tpvec &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="v_setall_u64" fullname="cv::v_setall_u64" href="cv.html#v_setall_u64" status="active" access="public" location="intrin_sse.hpp" filepath="/usr/local/include/opencv4/opencv2/core/hal/intrin_sse.hpp" lineno="352" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="v_uint64x2" signature="v_uint64x2 v_setall_u64(uint64 val)">
                <parameter left="uint64" right="" name="val" default=""/>
            </function>
            <namespace threadsafety="unspecified" name="internal" fullname="cv::internal" href="cv-internal.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="485">
                <class threadsafety="unspecified" name="Matx_DetOp" fullname="cv::internal::Matx_DetOp" href="cv-internal-matx-detop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="488">
                    <function threadsafety="unspecified" name="operator()" fullname="cv::internal::Matx_DetOp::operator()" href="cv-internal-matx-detop.html#operator-28-29" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="490" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double operator()(const Matx&lt;_Tp, m, m&gt; &amp;a) const">
                        <parameter left="const Matx&lt;_Tp, m, m&gt; &amp;" right="" name="a" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Matx_FastInvOp" fullname="cv::internal::Matx_FastInvOp" href="cv-internal-matx-fastinvop.html" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="74">
                    <function threadsafety="unspecified" name="operator()" fullname="cv::internal::Matx_FastInvOp::operator()" href="cv-internal-matx-fastinvop.html#operator-28-29" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const Matx&lt;_Tp, m, n&gt; &amp;a, Matx&lt;_Tp, n, m&gt; &amp;b, int method) const">
                        <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                        <parameter left="Matx&lt;_Tp, n, m&gt; &amp;" right="" name="b" default=""/>
                        <parameter left="int" right="" name="method" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Matx_FastSolveOp" fullname="cv::internal::Matx_FastSolveOp" href="cv-internal-matx-fastsolveop.html" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="146">
                    <function threadsafety="unspecified" name="operator()" fullname="cv::internal::Matx_FastSolveOp::operator()" href="cv-internal-matx-fastsolveop.html#operator-28-29" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="148" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const Matx&lt;_Tp, m, l&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx&lt;_Tp, l, n&gt; &amp;x, int method) const">
                        <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="a" default=""/>
                        <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                        <parameter left="Matx&lt;_Tp, l, n&gt; &amp;" right="" name="x" default=""/>
                        <parameter left="int" right="" name="method" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="VecReaderProxy" fullname="cv::internal::VecReaderProxy" href="cv-internal-vecreaderproxy.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="847">
                    <function threadsafety="unspecified" name="VecReaderProxy" fullname="cv::internal::VecReaderProxy::VecReaderProxy" href="cv-internal-vecreaderproxy.html#VecReaderProxy" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="850" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VecReaderProxy(FileNodeIterator *_it)">
                        <parameter left="FileNodeIterator *" right="" name="_it" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator()" fullname="cv::internal::VecReaderProxy::operator()" href="cv-internal-vecreaderproxy.html#operator-28-29" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="851" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(std::vector&lt;_Tp&gt; &amp;vec, size_t count) const">
                        <parameter left="std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                        <parameter left="size_t" right="" name="count" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="VecWriterProxy" fullname="cv::internal::VecWriterProxy" href="cv-internal-vecwriterproxy.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="819">
                    <function threadsafety="unspecified" name="VecWriterProxy" fullname="cv::internal::VecWriterProxy::VecWriterProxy" href="cv-internal-vecwriterproxy.html#VecWriterProxy" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="822" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VecWriterProxy(FileStorage *_fs)">
                        <parameter left="FileStorage *" right="" name="_fs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator()" fullname="cv::internal::VecWriterProxy::operator()" href="cv-internal-vecwriterproxy.html#operator-28-29" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="823" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(const std::vector&lt;_Tp&gt; &amp;vec) const">
                        <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="WriteStructContext" fullname="cv::internal::WriteStructContext" href="cv-internal-writestructcontext.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="810">
                    <function threadsafety="unspecified" name="WriteStructContext" fullname="cv::internal::WriteStructContext::WriteStructContext" href="cv-internal-writestructcontext.html#WriteStructContext" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="813" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="WriteStructContext(FileStorage &amp;_fs, const String &amp;name, int flags, const String &amp;typeName)">
                        <parameter left="FileStorage &amp;" right="" name="_fs" default=""/>
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="int" right="" name="flags" default=""/>
                        <parameter left="const String &amp;" right="" name="typeName" default="String()"/>
                    </function>
                    <function threadsafety="unspecified" name="~WriteStructContext" fullname="cv::internal::WriteStructContext::~WriteStructContext" href="cv-internal-writestructcontext.html#dtor.WriteStructContext" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="814" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~WriteStructContext()"/>
                </class>
                <function threadsafety="unspecified" name="down_cast" fullname="cv::internal::down_cast" href="cv-internal.html#down_cast" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T down_cast(Source operand)">
                    <parameter left="Source" right="" name="operand" default=""/>
                </function>
            </namespace>
            <namespace threadsafety="unspecified" name="traits" fullname="cv::traits" href="cv-traits.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="280">
                <namespace threadsafety="unspecified" name="internal" fullname="cv::traits::internal" href="cv-traits-internal.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="359"/>
                <class threadsafety="unspecified" name="SafeFmt" fullname="cv::traits::SafeFmt" href="cv-traits-safefmt.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="402"/>
                <class threadsafety="unspecified" name="SafeType" fullname="cv::traits::SafeType" href="cv-traits-safetype.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="390"/>
                <class threadsafety="unspecified" name="Type" fullname="cv::traits::Type" href="cv-traits-type.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="385">
                    <variable threadsafety="unspecified" name="value" fullname="cv::traits::Type::value" href="cv-traits-type.html#value-var" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="386" type="const int" static="true"/>
                </class>
            </namespace>
            <class threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv-matx.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="99">
                <typedef threadsafety="unspecified" name="diag_type" fullname="cv::Matx::diag_type" href="cv-matx.html#diag_type-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="115"/>
                <typedef threadsafety="unspecified" name="mat_type" fullname="cv::Matx::mat_type" href="cv-matx.html#mat_type-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="114"/>
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Matx::value_type" href="cv-matx.html#value_type-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="113"/>
                <function threadsafety="unspecified" name="all" fullname="cv::Matx::all" href="cv-matx.html#all" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="145" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx all(_Tp alpha)">
                    <parameter left="_Tp" right="" name="alpha" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::Matx::diag" href="cv-matx.html#diag" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="149" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx diag(const diag_type &amp;d)">
                    <parameter left="const diag_type &amp;" right="" name="d" default=""/>
                </function>
                <function threadsafety="unspecified" name="eye" fullname="cv::Matx::eye" href="cv-matx.html#eye" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="148" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx eye()"/>
                <function threadsafety="unspecified" name="ones" fullname="cv::Matx::ones" href="cv-matx.html#ones" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="147" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx ones()"/>
                <function threadsafety="unspecified" name="randn" fullname="cv::Matx::randn" href="cv-matx.html#randn" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="160" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx randn(_Tp a, _Tp b)">
                    <parameter left="_Tp" right="" name="a" default=""/>
                    <parameter left="_Tp" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="randu" fullname="cv::Matx::randu" href="cv-matx.html#randu" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="155" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx randu(_Tp a, _Tp b)">
                    <parameter left="_Tp" right="" name="a" default=""/>
                    <parameter left="_Tp" right="" name="b" default=""/>
                </function>
                <function threadsafety="unspecified" name="zeros" fullname="cv::Matx::zeros" href="cv-matx.html#zeros" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="146" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx" signature="Matx zeros()"/>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="118" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx()"/>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="120" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="121" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="122" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="123" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="124" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-6" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="125" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-7" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="126" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-8" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="127" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-9" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="128" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-10" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="129" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="130" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                    <parameter left="_Tp" right="" name="v10" default=""/>
                    <parameter left="_Tp" right="" name="v11" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="133" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                    <parameter left="_Tp" right="" name="v10" default=""/>
                    <parameter left="_Tp" right="" name="v11" default=""/>
                    <parameter left="_Tp" right="" name="v12" default=""/>
                    <parameter left="_Tp" right="" name="v13" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13, _Tp v14, _Tp v15)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                    <parameter left="_Tp" right="" name="v10" default=""/>
                    <parameter left="_Tp" right="" name="v11" default=""/>
                    <parameter left="_Tp" right="" name="v12" default=""/>
                    <parameter left="_Tp" right="" name="v13" default=""/>
                    <parameter left="_Tp" right="" name="v14" default=""/>
                    <parameter left="_Tp" right="" name="v15" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-21" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="215" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, l&gt; &amp;a, const Matx&lt;_Tp, l, n&gt; &amp;b, Matx_MatMulOp )">
                    <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, l, n&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_MatMulOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-18" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="212" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, _T2 alpha, Matx_ScaleOp )">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="_T2" right="" name="alpha" default=""/>
                    <parameter left="Matx_ScaleOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="210" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_AddOp )">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_AddOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-20" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="214" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_DivOp )">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_DivOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-19" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="213" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_MulOp )">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_MulOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="211" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_SubOp )">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_SubOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-22" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="216" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, n, m&gt; &amp;a, Matx_TOp )">
                    <parameter left="const Matx&lt;_Tp, n, m&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="Matx_TOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="141" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const _Tp *vals)">
                    <parameter left="const _Tp *" right="" name="vals" default=""/>
                </function>
                <function threadsafety="unspecified" name="Matx" fullname="cv::Matx::Matx" href="cv-matx.html#Matx-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="143" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(std::initializer_list&lt;_Tp&gt; )">
                    <parameter left="std::initializer_list&lt;_Tp&gt;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Matx::operator()" href="cv-matx.html#operator-28-29-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="208" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int i)">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Matx::operator()" href="cv-matx.html#operator-28-29-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="204" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int row, int col)">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="row" fullname="cv::Matx::row" href="cv-matx.html#row" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="178" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, 1, n&gt;" signature="Matx&lt;_Tp, 1, n&gt; row(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="col" fullname="cv::Matx::col" href="cv-matx.html#col" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="181" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, 1&gt;" signature="Matx&lt;_Tp, m, 1&gt; col(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="div" fullname="cv::Matx::div" href="cv-matx.html#div" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="200" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; div(const Matx&lt;_Tp, m, n&gt; &amp;a) const">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="mul" fullname="cv::Matx::mul" href="cv-matx.html#mul" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="197" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; mul(const Matx&lt;_Tp, m, n&gt; &amp;a) const">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="get_minor" fullname="cv::Matx::get_minor" href="cv-matx.html#get_minor" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="175" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m1, n1&gt;" signature="Matx&lt;_Tp, m1, n1&gt; get_minor(int base_row, int base_col) const">
                    <parameter left="int" right="" name="base_row" default=""/>
                    <parameter left="int" right="" name="base_col" default=""/>
                </function>
                <function threadsafety="unspecified" name="reshape" fullname="cv::Matx::reshape" href="cv-matx.html#reshape" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="172" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m1, n1&gt;" signature="Matx&lt;_Tp, m1, n1&gt; reshape() const"/>
                <function threadsafety="unspecified" name="solve" fullname="cv::Matx::solve" href="cv-matx.html#solve" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="193" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, l&gt;" signature="Matx&lt;_Tp, n, l&gt; solve(const Matx&lt;_Tp, m, l&gt; &amp;rhs, int flags) const">
                    <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="rhs" default=""/>
                    <parameter left="int" right="" name="flags" default="DECOMP_LU"/>
                </function>
                <function threadsafety="unspecified" name="inv" fullname="cv::Matx::inv" href="cv-matx.html#inv" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="190" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, m&gt;" signature="Matx&lt;_Tp, n, m&gt; inv(int method, bool *p_is_ok) const">
                    <parameter left="int" right="" name="method" default="DECOMP_LU"/>
                    <parameter left="bool *" right="" name="p_is_ok" default="NULL"/>
                </function>
                <function threadsafety="unspecified" name="t" fullname="cv::Matx::t" href="cv-matx.html#t" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="187" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, m&gt;" signature="Matx&lt;_Tp, n, m&gt; t() const"/>
                <function threadsafety="unspecified" name="solve" fullname="cv::Matx::solve" href="cv-matx.html#solve-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="194" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, n&gt;" signature="Vec&lt;_Tp, n&gt; solve(const Vec&lt;_Tp, m&gt; &amp;rhs, int method) const">
                    <parameter left="const Vec&lt;_Tp, m&gt; &amp;" right="" name="rhs" default=""/>
                    <parameter left="int" right="" name="method" default=""/>
                </function>
                <function threadsafety="unspecified" name="dot" fullname="cv::Matx::dot" href="cv-matx.html#dot" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="163" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp dot(const Matx&lt;_Tp, m, n&gt; &amp;v) const">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Matx::operator()" href="cv-matx.html#operator-28-29-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="207" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Matx::operator()" href="cv-matx.html#operator-28-29" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="203" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int row, int col) const">
                    <parameter left="int" right="" name="row" default=""/>
                    <parameter left="int" right="" name="col" default=""/>
                </function>
                <function threadsafety="unspecified" name="diag" fullname="cv::Matx::diag" href="cv-matx.html#diag-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="184" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="diag_type" signature="diag_type diag() const"/>
                <function threadsafety="unspecified" name="ddot" fullname="cv::Matx::ddot" href="cv-matx.html#ddot" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="166" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double ddot(const Matx&lt;_Tp, m, n&gt; &amp;v) const">
                    <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator Matx&lt;T2, m, n&gt;" fullname="cv::Matx::operator Matx&lt;T2, m, n&gt;" href="cv-matx.html#operator-Matx-ltT2-2c-m-2c-n-gt" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="169" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Matx&lt;T2, m, n&gt;() const"/>
                <variable threadsafety="unspecified" name="channels" fullname="cv::Matx::channels" href="cv-matx.html#channels-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="105" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="cols" fullname="cv::Matx::cols" href="cv-matx.html#cols-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="104" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="rows" fullname="cv::Matx::rows" href="cv-matx.html#rows-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="103" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="shortdim" fullname="cv::Matx::shortdim" href="cv-matx.html#shortdim-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="111" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="val" fullname="cv::Matx::val" href="cv-matx.html#val-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="218" type="_Tp[m * n]" static="false"/>
            </class>
            <class threadsafety="unspecified" name="MatxCommaInitializer" fullname="cv::MatxCommaInitializer" href="cv-matxcommainitializer.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="290">
                <function threadsafety="unspecified" name="MatxCommaInitializer" fullname="cv::MatxCommaInitializer::MatxCommaInitializer" href="cv-matxcommainitializer.html#MatxCommaInitializer" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="293" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatxCommaInitializer(Matx&lt;_Tp, m, n&gt; *_mtx)">
                    <parameter left="Matx&lt;_Tp, m, n&gt; *" right="" name="_mtx" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator," fullname="cv::MatxCommaInitializer::operator," href="cv-matxcommainitializer.html#operator-2c" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="294" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatxCommaInitializer&lt;_Tp, m, n&gt; &amp;" signature="MatxCommaInitializer&lt;_Tp, m, n&gt; &amp; operator,(T2 val)">
                    <parameter left="T2" right="" name="val" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::MatxCommaInitializer::operator*" href="cv-matxcommainitializer.html#operator-2a" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="295" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*() const"/>
                <variable threadsafety="unspecified" name="dst" fullname="cv::MatxCommaInitializer::dst" href="cv-matxcommainitializer.html#dst-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="297" type="Matx&lt;_Tp, m, n&gt; *" static="false"/>
                <variable threadsafety="unspecified" name="idx" fullname="cv::MatxCommaInitializer::idx" href="cv-matxcommainitializer.html#idx-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="298" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Matx_AddOp" fullname="cv::Matx_AddOp" href="cv-matx-addop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="68">
                <function threadsafety="unspecified" name="Matx_AddOp" fullname="cv::Matx_AddOp::Matx_AddOp" href="cv-matx-addop.html#Matx_AddOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="68" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_AddOp()"/>
                <function threadsafety="unspecified" name="Matx_AddOp" fullname="cv::Matx_AddOp::Matx_AddOp" href="cv-matx-addop.html#Matx_AddOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="68" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_AddOp(const Matx_AddOp &amp;)">
                    <parameter left="const Matx_AddOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_DivOp" fullname="cv::Matx_DivOp" href="cv-matx-divop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="72">
                <function threadsafety="unspecified" name="Matx_DivOp" fullname="cv::Matx_DivOp::Matx_DivOp" href="cv-matx-divop.html#Matx_DivOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="72" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_DivOp()"/>
                <function threadsafety="unspecified" name="Matx_DivOp" fullname="cv::Matx_DivOp::Matx_DivOp" href="cv-matx-divop.html#Matx_DivOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="72" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_DivOp(const Matx_DivOp &amp;)">
                    <parameter left="const Matx_DivOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_MatMulOp" fullname="cv::Matx_MatMulOp" href="cv-matx-matmulop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="73">
                <function threadsafety="unspecified" name="Matx_MatMulOp" fullname="cv::Matx_MatMulOp::Matx_MatMulOp" href="cv-matx-matmulop.html#Matx_MatMulOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="73" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_MatMulOp()"/>
                <function threadsafety="unspecified" name="Matx_MatMulOp" fullname="cv::Matx_MatMulOp::Matx_MatMulOp" href="cv-matx-matmulop.html#Matx_MatMulOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="73" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_MatMulOp(const Matx_MatMulOp &amp;)">
                    <parameter left="const Matx_MatMulOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_MulOp" fullname="cv::Matx_MulOp" href="cv-matx-mulop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="71">
                <function threadsafety="unspecified" name="Matx_MulOp" fullname="cv::Matx_MulOp::Matx_MulOp" href="cv-matx-mulop.html#Matx_MulOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="71" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_MulOp()"/>
                <function threadsafety="unspecified" name="Matx_MulOp" fullname="cv::Matx_MulOp::Matx_MulOp" href="cv-matx-mulop.html#Matx_MulOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="71" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_MulOp(const Matx_MulOp &amp;)">
                    <parameter left="const Matx_MulOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_ScaleOp" fullname="cv::Matx_ScaleOp" href="cv-matx-scaleop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="70">
                <function threadsafety="unspecified" name="Matx_ScaleOp" fullname="cv::Matx_ScaleOp::Matx_ScaleOp" href="cv-matx-scaleop.html#Matx_ScaleOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="70" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_ScaleOp()"/>
                <function threadsafety="unspecified" name="Matx_ScaleOp" fullname="cv::Matx_ScaleOp::Matx_ScaleOp" href="cv-matx-scaleop.html#Matx_ScaleOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="70" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_ScaleOp(const Matx_ScaleOp &amp;)">
                    <parameter left="const Matx_ScaleOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_SubOp" fullname="cv::Matx_SubOp" href="cv-matx-subop.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="69">
                <function threadsafety="unspecified" name="Matx_SubOp" fullname="cv::Matx_SubOp::Matx_SubOp" href="cv-matx-subop.html#Matx_SubOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="69" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_SubOp()"/>
                <function threadsafety="unspecified" name="Matx_SubOp" fullname="cv::Matx_SubOp::Matx_SubOp" href="cv-matx-subop.html#Matx_SubOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="69" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_SubOp(const Matx_SubOp &amp;)">
                    <parameter left="const Matx_SubOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Matx_TOp" fullname="cv::Matx_TOp" href="cv-matx-top.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="74">
                <function threadsafety="unspecified" name="Matx_TOp" fullname="cv::Matx_TOp::Matx_TOp" href="cv-matx-top.html#Matx_TOp" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_TOp()"/>
                <function threadsafety="unspecified" name="Matx_TOp" fullname="cv::Matx_TOp::Matx_TOp" href="cv-matx-top.html#Matx_TOp-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="74" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx_TOp(const Matx_TOp &amp;)">
                    <parameter left="const Matx_TOp &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv-vec.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="341" bases="cv::Matx">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Vec::value_type" href="cv-vec.html#value_type-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="344"/>
                <function threadsafety="unspecified" name="all" fullname="cv::Vec::all" href="cv-vec.html#all" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="374" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec" signature="Vec all(_Tp alpha)">
                    <parameter left="_Tp" right="" name="alpha" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="355" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec()"/>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="357" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="358" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="359" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="360" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="361" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-6" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="362" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-7" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="363" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-8" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="364" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-9" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="365" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-10" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="366" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="367" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default=""/>
                    <parameter left="_Tp" right="" name="v3" default=""/>
                    <parameter left="_Tp" right="" name="v4" default=""/>
                    <parameter left="_Tp" right="" name="v5" default=""/>
                    <parameter left="_Tp" right="" name="v6" default=""/>
                    <parameter left="_Tp" right="" name="v7" default=""/>
                    <parameter left="_Tp" right="" name="v8" default=""/>
                    <parameter left="_Tp" right="" name="v9" default=""/>
                    <parameter left="_Tp" right="" name="v10" default=""/>
                    <parameter left="_Tp" right="" name="v11" default=""/>
                    <parameter left="_Tp" right="" name="v12" default=""/>
                    <parameter left="_Tp" right="" name="v13" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="403" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, _T2 alpha, Matx_ScaleOp )">
                    <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="_T2" right="" name="alpha" default=""/>
                    <parameter left="Matx_ScaleOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="401" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, const Matx&lt;_Tp, cn, 1&gt; &amp;b, Matx_AddOp )">
                    <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_AddOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="402" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, const Matx&lt;_Tp, cn, 1&gt; &amp;b, Matx_SubOp )">
                    <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="b" default=""/>
                    <parameter left="Matx_SubOp" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="372" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Vec&lt;_Tp, cn&gt; &amp;v)">
                    <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="368" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const _Tp *values)">
                    <parameter left="const _Tp *" right="" name="values" default=""/>
                </function>
                <function threadsafety="unspecified" name="Vec" fullname="cv::Vec::Vec" href="cv-vec.html#Vec-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="370" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(std::initializer_list&lt;_Tp&gt; )">
                    <parameter left="std::initializer_list&lt;_Tp&gt;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Vec::operator()" href="cv-vec.html#operator-28-29-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="395" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int i)">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::Vec::operator[]" href="cv-vec.html#operator-5b-5d" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="393" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator[](int i)">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="conj" fullname="cv::Vec::conj" href="cv-vec.html#conj" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="380" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec" signature="Vec conj() const"/>
                <function threadsafety="unspecified" name="mul" fullname="cv::Vec::mul" href="cv-vec.html#mul" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="377" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec" signature="Vec mul(const Vec&lt;_Tp, cn&gt; &amp;v) const">
                    <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::Vec::operator()" href="cv-vec.html#operator-28-29" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="394" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator Vec&lt;T2, cn&gt;" fullname="cv::Vec::operator Vec&lt;T2, cn&gt;" href="cv-vec.html#operator-Vec-ltT2-2c-cn-gt" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="389" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;T2, cn&gt;() const"/>
                <variable threadsafety="unspecified" name="_dummy_enum_finalizer" fullname="cv::Vec::_dummy_enum_finalizer" href="cv-vec.html#_dummy_enum_finalizer-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="352" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="channels" fullname="cv::Vec::channels" href="cv-vec.html#channels-var" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="346" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="VecCommaInitializer" fullname="cv::VecCommaInitializer" href="cv-veccommainitializer.html" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="470" bases="cv::MatxCommaInitializer">
                <function threadsafety="unspecified" name="VecCommaInitializer" fullname="cv::VecCommaInitializer::VecCommaInitializer" href="cv-veccommainitializer.html#VecCommaInitializer" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="473" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VecCommaInitializer(Vec&lt;_Tp, m&gt; *_vec)">
                    <parameter left="Vec&lt;_Tp, m&gt; *" right="" name="_vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator," fullname="cv::VecCommaInitializer::operator," href="cv-veccommainitializer.html#operator-2c" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="474" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="VecCommaInitializer&lt;_Tp, m&gt; &amp;" signature="VecCommaInitializer&lt;_Tp, m&gt; &amp; operator,(T2 val)">
                    <parameter left="T2" right="" name="val" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::VecCommaInitializer::operator*" href="cv-veccommainitializer.html#operator-2a" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="475" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, m&gt;" signature="Vec&lt;_Tp, m&gt; operator*() const"/>
            </class>
            <typedef threadsafety="unspecified" name="Matx12d" fullname="cv::Matx12d" href="cv.html#Matx12d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="222"/>
            <typedef threadsafety="unspecified" name="Matx12f" fullname="cv::Matx12f" href="cv.html#Matx12f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="221"/>
            <typedef threadsafety="unspecified" name="Matx13d" fullname="cv::Matx13d" href="cv.html#Matx13d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="224"/>
            <typedef threadsafety="unspecified" name="Matx13f" fullname="cv::Matx13f" href="cv.html#Matx13f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="223"/>
            <typedef threadsafety="unspecified" name="Matx14d" fullname="cv::Matx14d" href="cv.html#Matx14d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="226"/>
            <typedef threadsafety="unspecified" name="Matx14f" fullname="cv::Matx14f" href="cv.html#Matx14f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="225"/>
            <typedef threadsafety="unspecified" name="Matx16d" fullname="cv::Matx16d" href="cv.html#Matx16d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="228"/>
            <typedef threadsafety="unspecified" name="Matx16f" fullname="cv::Matx16f" href="cv.html#Matx16f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="227"/>
            <typedef threadsafety="unspecified" name="Matx21d" fullname="cv::Matx21d" href="cv.html#Matx21d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="231"/>
            <typedef threadsafety="unspecified" name="Matx21f" fullname="cv::Matx21f" href="cv.html#Matx21f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="230"/>
            <typedef threadsafety="unspecified" name="Matx22d" fullname="cv::Matx22d" href="cv.html#Matx22d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="240"/>
            <typedef threadsafety="unspecified" name="Matx22f" fullname="cv::Matx22f" href="cv.html#Matx22f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="239"/>
            <typedef threadsafety="unspecified" name="Matx23d" fullname="cv::Matx23d" href="cv.html#Matx23d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="242"/>
            <typedef threadsafety="unspecified" name="Matx23f" fullname="cv::Matx23f" href="cv.html#Matx23f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="241"/>
            <typedef threadsafety="unspecified" name="Matx31d" fullname="cv::Matx31d" href="cv.html#Matx31d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="233"/>
            <typedef threadsafety="unspecified" name="Matx31f" fullname="cv::Matx31f" href="cv.html#Matx31f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="232"/>
            <typedef threadsafety="unspecified" name="Matx32d" fullname="cv::Matx32d" href="cv.html#Matx32d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="244"/>
            <typedef threadsafety="unspecified" name="Matx32f" fullname="cv::Matx32f" href="cv.html#Matx32f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="243"/>
            <typedef threadsafety="unspecified" name="Matx33d" fullname="cv::Matx33d" href="cv.html#Matx33d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="247"/>
            <typedef threadsafety="unspecified" name="Matx33f" fullname="cv::Matx33f" href="cv.html#Matx33f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="246"/>
            <typedef threadsafety="unspecified" name="Matx34d" fullname="cv::Matx34d" href="cv.html#Matx34d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="250"/>
            <typedef threadsafety="unspecified" name="Matx34f" fullname="cv::Matx34f" href="cv.html#Matx34f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="249"/>
            <typedef threadsafety="unspecified" name="Matx41d" fullname="cv::Matx41d" href="cv.html#Matx41d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="235"/>
            <typedef threadsafety="unspecified" name="Matx41f" fullname="cv::Matx41f" href="cv.html#Matx41f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="234"/>
            <typedef threadsafety="unspecified" name="Matx43d" fullname="cv::Matx43d" href="cv.html#Matx43d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="252"/>
            <typedef threadsafety="unspecified" name="Matx43f" fullname="cv::Matx43f" href="cv.html#Matx43f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="251"/>
            <typedef threadsafety="unspecified" name="Matx44d" fullname="cv::Matx44d" href="cv.html#Matx44d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="255"/>
            <typedef threadsafety="unspecified" name="Matx44f" fullname="cv::Matx44f" href="cv.html#Matx44f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="254"/>
            <typedef threadsafety="unspecified" name="Matx61d" fullname="cv::Matx61d" href="cv.html#Matx61d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="237"/>
            <typedef threadsafety="unspecified" name="Matx61f" fullname="cv::Matx61f" href="cv.html#Matx61f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="236"/>
            <typedef threadsafety="unspecified" name="Matx66d" fullname="cv::Matx66d" href="cv.html#Matx66d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="257"/>
            <typedef threadsafety="unspecified" name="Matx66f" fullname="cv::Matx66f" href="cv.html#Matx66f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="256"/>
            <typedef threadsafety="unspecified" name="Vec2b" fullname="cv::Vec2b" href="cv.html#Vec2b-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="409"/>
            <typedef threadsafety="unspecified" name="Vec2d" fullname="cv::Vec2d" href="cv.html#Vec2d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="432"/>
            <typedef threadsafety="unspecified" name="Vec2f" fullname="cv::Vec2f" href="cv.html#Vec2f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="427"/>
            <typedef threadsafety="unspecified" name="Vec2i" fullname="cv::Vec2i" href="cv.html#Vec2i-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="421"/>
            <typedef threadsafety="unspecified" name="Vec2s" fullname="cv::Vec2s" href="cv.html#Vec2s-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="413"/>
            <typedef threadsafety="unspecified" name="Vec2w" fullname="cv::Vec2w" href="cv.html#Vec2w-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="417"/>
            <typedef threadsafety="unspecified" name="Vec3b" fullname="cv::Vec3b" href="cv.html#Vec3b-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="410"/>
            <typedef threadsafety="unspecified" name="Vec3d" fullname="cv::Vec3d" href="cv.html#Vec3d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="433"/>
            <typedef threadsafety="unspecified" name="Vec3f" fullname="cv::Vec3f" href="cv.html#Vec3f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="428"/>
            <typedef threadsafety="unspecified" name="Vec3i" fullname="cv::Vec3i" href="cv.html#Vec3i-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="422"/>
            <typedef threadsafety="unspecified" name="Vec3s" fullname="cv::Vec3s" href="cv.html#Vec3s-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="414"/>
            <typedef threadsafety="unspecified" name="Vec3w" fullname="cv::Vec3w" href="cv.html#Vec3w-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="418"/>
            <typedef threadsafety="unspecified" name="Vec4b" fullname="cv::Vec4b" href="cv.html#Vec4b-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="411"/>
            <typedef threadsafety="unspecified" name="Vec4d" fullname="cv::Vec4d" href="cv.html#Vec4d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="434"/>
            <typedef threadsafety="unspecified" name="Vec4f" fullname="cv::Vec4f" href="cv.html#Vec4f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="429"/>
            <typedef threadsafety="unspecified" name="Vec4i" fullname="cv::Vec4i" href="cv.html#Vec4i-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="423"/>
            <typedef threadsafety="unspecified" name="Vec4s" fullname="cv::Vec4s" href="cv.html#Vec4s-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="415"/>
            <typedef threadsafety="unspecified" name="Vec4w" fullname="cv::Vec4w" href="cv.html#Vec4w-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="419"/>
            <typedef threadsafety="unspecified" name="Vec6d" fullname="cv::Vec6d" href="cv.html#Vec6d-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="435"/>
            <typedef threadsafety="unspecified" name="Vec6f" fullname="cv::Vec6f" href="cv.html#Vec6f-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="430"/>
            <typedef threadsafety="unspecified" name="Vec6i" fullname="cv::Vec6i" href="cv.html#Vec6i-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="424"/>
            <typedef threadsafety="unspecified" name="Vec8i" fullname="cv::Vec8i" href="cv.html#Vec8i-typedef" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="425"/>
            <namespace threadsafety="unspecified" name="ocl" fullname="cv::ocl" href="cv-ocl.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="47">
                <class threadsafety="unspecified" name="Context" fullname="cv::ocl::Context" href="cv-ocl-context.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="245">
                    <function threadsafety="unspecified" name="getDefault" fullname="cv::ocl::Context::getDefault" href="cv-ocl-context.html#getDefault" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="270" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Context &amp;" signature="Context &amp; getDefault(bool initialize)">
                        <parameter left="bool" right="" name="initialize" default="true"/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Context::operator=" href="cv-ocl-context.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="252" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Context &amp;" signature="Context &amp; operator=(const Context &amp;c)">
                        <parameter left="const Context &amp;" right="" name="c" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Context::create" href="cv-ocl-context.html#create-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="285" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Context" signature="Context create(const std::string &amp;configuration)">
                        <parameter left="const std::string &amp;" right="" name="configuration" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="fromDevice" fullname="cv::ocl::Context::fromDevice" href="cv-ocl-context.html#fromDevice" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="284" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Context" signature="Context fromDevice(const ocl::Device &amp;device)">
                        <parameter left="const ocl::Device &amp;" right="" name="device" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="fromHandle" fullname="cv::ocl::Context::fromHandle" href="cv-ocl-context.html#fromHandle" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="283" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Context" signature="Context fromHandle(void *context)">
                        <parameter left="void *" right="" name="context" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Context" fullname="cv::ocl::Context::Context" href="cv-ocl-context.html#Context" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Context()"/>
                    <function threadsafety="unspecified" name="Context" fullname="cv::ocl::Context::Context" href="cv-ocl-context.html#Context-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="251" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Context(const Context &amp;c)">
                        <parameter left="const Context &amp;" right="" name="c" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Context" fullname="cv::ocl::Context::Context" href="cv-ocl-context.html#Context-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="249" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Context(int dtype)">
                        <parameter left="int" right="" name="dtype" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getProg" fullname="cv::ocl::Context::getProg" href="cv-ocl-context.html#getProg" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="261" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Program" signature="Program getProg(const ProgramSource &amp;prog, const String &amp;buildopt, String &amp;errmsg)">
                        <parameter left="const ProgramSource &amp;" right="" name="prog" default=""/>
                        <parameter left="const String &amp;" right="" name="buildopt" default=""/>
                        <parameter left="String &amp;" right="" name="errmsg" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Context::create" href="cv-ocl-context.html#create" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="255" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create()"/>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Context::create" href="cv-ocl-context.html#create-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="257" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create(int dtype)">
                        <parameter left="int" right="" name="dtype" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::ocl::Context::release" href="cv-ocl-context.html#release" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="287" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="setUseSVM" fullname="cv::ocl::Context::setUseSVM" href="cv-ocl-context.html#setUseSVM" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="278" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setUseSVM(bool enabled)">
                        <parameter left="bool" right="" name="enabled" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="unloadProg" fullname="cv::ocl::Context::unloadProg" href="cv-ocl-context.html#unloadProg" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="263" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unloadProg(Program &amp;prog)">
                        <parameter left="Program &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Context" fullname="cv::ocl::Context::~Context" href="cv-ocl-context.html#dtor.Context" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="250" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Context()"/>
                    <function threadsafety="unspecified" name="device" fullname="cv::ocl::Context::device" href="cv-ocl-context.html#device" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="260" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Device &amp;" signature="Device &amp; device(size_t idx) const">
                        <parameter left="size_t" right="" name="idx" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::Context::getImpl" href="cv-ocl-context.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="290" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Context::empty" href="cv-ocl-context.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="291" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="useSVM" fullname="cv::ocl::Context::useSVM" href="cv-ocl-context.html#useSVM" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="277" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool useSVM() const"/>
                    <function threadsafety="unspecified" name="ndevices" fullname="cv::ocl::Context::ndevices" href="cv-ocl-context.html#ndevices" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="259" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t ndevices() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Context::ptr" href="cv-ocl-context.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="274" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Context::p" href="cv-ocl-context.html#p-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="294" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Device" fullname="cv::ocl::Device" href="cv-ocl-device.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="70">
                    <function threadsafety="unspecified" name="Device" fullname="cv::ocl::Device::Device" href="cv-ocl-device.html#Device" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="73" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Device()"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Device::operator=" href="cv-ocl-device.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="76" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Device &amp;" signature="Device &amp; operator=(const Device &amp;d)">
                        <parameter left="const Device &amp;" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="fromHandle" fullname="cv::ocl::Device::fromHandle" href="cv-ocl-device.html#fromHandle" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="235" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Device" signature="Device fromHandle(void *d)">
                        <parameter left="void *" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Device" fullname="cv::ocl::Device::Device" href="cv-ocl-device.html#Device-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="75" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Device(const Device &amp;d)">
                        <parameter left="const Device &amp;" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Device" fullname="cv::ocl::Device::Device" href="cv-ocl-device.html#Device-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Device(void *d)">
                        <parameter left="void *" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Device::set" href="cv-ocl-device.html#set" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(void *d)">
                        <parameter left="void *" right="" name="d" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::Device::getImpl" href="cv-ocl-device.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="238" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Device::empty" href="cv-ocl-device.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="239" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="imageBaseAddressAlignment" fullname="cv::ocl::Device::imageBaseAddressAlignment" href="cv-ocl-device.html#imageBaseAddressAlignment" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="162" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint" signature="uint imageBaseAddressAlignment() const"/>
                    <function threadsafety="unspecified" name="imagePitchAlignment" fullname="cv::ocl::Device::imagePitchAlignment" href="cv-ocl-device.html#imagePitchAlignment" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="161" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint" signature="uint imagePitchAlignment() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Device::ptr" href="cv-ocl-device.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="102" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <function threadsafety="unspecified" name="maxWorkItemSizes" fullname="cv::ocl::Device::maxWorkItemSizes" href="cv-ocl-device.html#maxWorkItemSizes" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="207" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void maxWorkItemSizes(size_t *) const">
                        <parameter left="size_t *" right="" name="" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="EXEC_KERNEL" fullname="cv::ocl::Device::EXEC_KERNEL" href="cv-ocl-device.html#EXEC_KERNEL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="131" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="EXEC_NATIVE_KERNEL" fullname="cv::ocl::Device::EXEC_NATIVE_KERNEL" href="cv-ocl-device.html#EXEC_NATIVE_KERNEL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="133" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_CORRECTLY_ROUNDED_DIVIDE_SQRT" fullname="cv::ocl::Device::FP_CORRECTLY_ROUNDED_DIVIDE_SQRT" href="cv-ocl-device.html#FP_CORRECTLY_ROUNDED_DIVIDE_SQRT-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="121" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_DENORM" fullname="cv::ocl::Device::FP_DENORM" href="cv-ocl-device.html#FP_DENORM-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="113" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_FMA" fullname="cv::ocl::Device::FP_FMA" href="cv-ocl-device.html#FP_FMA-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="118" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_INF_NAN" fullname="cv::ocl::Device::FP_INF_NAN" href="cv-ocl-device.html#FP_INF_NAN-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="114" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_ROUND_TO_INF" fullname="cv::ocl::Device::FP_ROUND_TO_INF" href="cv-ocl-device.html#FP_ROUND_TO_INF-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="117" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_ROUND_TO_NEAREST" fullname="cv::ocl::Device::FP_ROUND_TO_NEAREST" href="cv-ocl-device.html#FP_ROUND_TO_NEAREST-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="115" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_ROUND_TO_ZERO" fullname="cv::ocl::Device::FP_ROUND_TO_ZERO" href="cv-ocl-device.html#FP_ROUND_TO_ZERO-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="116" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="FP_SOFT_FLOAT" fullname="cv::ocl::Device::FP_SOFT_FLOAT" href="cv-ocl-device.html#FP_SOFT_FLOAT-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="119" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="LOCAL_IS_GLOBAL" fullname="cv::ocl::Device::LOCAL_IS_GLOBAL" href="cv-ocl-device.html#LOCAL_IS_GLOBAL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="154" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="LOCAL_IS_LOCAL" fullname="cv::ocl::Device::LOCAL_IS_LOCAL" href="cv-ocl-device.html#LOCAL_IS_LOCAL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="152" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="NO_CACHE" fullname="cv::ocl::Device::NO_CACHE" href="cv-ocl-device.html#NO_CACHE-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="140" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="NO_LOCAL_MEM" fullname="cv::ocl::Device::NO_LOCAL_MEM" href="cv-ocl-device.html#NO_LOCAL_MEM-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="151" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="READ_ONLY_CACHE" fullname="cv::ocl::Device::READ_ONLY_CACHE" href="cv-ocl-device.html#READ_ONLY_CACHE-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="141" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="READ_WRITE_CACHE" fullname="cv::ocl::Device::READ_WRITE_CACHE" href="cv-ocl-device.html#READ_WRITE_CACHE-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="143" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_ACCELERATOR" fullname="cv::ocl::Device::TYPE_ACCELERATOR" href="cv-ocl-device.html#TYPE_ACCELERATOR-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="86" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_ALL" fullname="cv::ocl::Device::TYPE_ALL" href="cv-ocl-device.html#TYPE_ALL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="90" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_CPU" fullname="cv::ocl::Device::TYPE_CPU" href="cv-ocl-device.html#TYPE_CPU-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="84" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_DEFAULT" fullname="cv::ocl::Device::TYPE_DEFAULT" href="cv-ocl-device.html#TYPE_DEFAULT-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="83" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_DGPU" fullname="cv::ocl::Device::TYPE_DGPU" href="cv-ocl-device.html#TYPE_DGPU-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="87" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_GPU" fullname="cv::ocl::Device::TYPE_GPU" href="cv-ocl-device.html#TYPE_GPU-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="85" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="TYPE_IGPU" fullname="cv::ocl::Device::TYPE_IGPU" href="cv-ocl-device.html#TYPE_IGPU-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="88" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="UNKNOWN_VENDOR" fullname="cv::ocl::Device::UNKNOWN_VENDOR" href="cv-ocl-device.html#UNKNOWN_VENDOR-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="179" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="VENDOR_AMD" fullname="cv::ocl::Device::VENDOR_AMD" href="cv-ocl-device.html#VENDOR_AMD-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="180" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="VENDOR_INTEL" fullname="cv::ocl::Device::VENDOR_INTEL" href="cv-ocl-device.html#VENDOR_INTEL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="181" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="VENDOR_NVIDIA" fullname="cv::ocl::Device::VENDOR_NVIDIA" href="cv-ocl-device.html#VENDOR_NVIDIA-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="183" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Device::p" href="cv-ocl-device.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="241" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Image2D" fullname="cv::ocl::Image2D" href="cv-ocl-image2d.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="683">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Image2D::operator=" href="cv-ocl-image2d.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="698" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Image2D &amp;" signature="Image2D &amp; operator=(const Image2D &amp;i)">
                        <parameter left="const Image2D &amp;" right="" name="i" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Image2D" fullname="cv::ocl::Image2D::Image2D" href="cv-ocl-image2d.html#Image2D" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="686" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Image2D()"/>
                    <function threadsafety="unspecified" name="Image2D" fullname="cv::ocl::Image2D::Image2D" href="cv-ocl-image2d.html#Image2D-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="695" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Image2D(const Image2D &amp;i)">
                        <parameter left="const Image2D &amp;" right="" name="i" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Image2D" fullname="cv::ocl::Image2D::Image2D" href="cv-ocl-image2d.html#Image2D-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="694" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Image2D(const UMat &amp;src, bool norm, bool alias)">
                        <parameter left="const UMat &amp;" right="" name="src" default=""/>
                        <parameter left="bool" right="" name="norm" default="false"/>
                        <parameter left="bool" right="" name="alias" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="canCreateAlias" fullname="cv::ocl::Image2D::canCreateAlias" href="cv-ocl-image2d.html#canCreateAlias" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="703" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool canCreateAlias(const UMat &amp;u)">
                        <parameter left="const UMat &amp;" right="" name="u" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isFormatSupported" fullname="cv::ocl::Image2D::isFormatSupported" href="cv-ocl-image2d.html#isFormatSupported" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="707" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isFormatSupported(int depth, int cn, bool norm)">
                        <parameter left="int" right="" name="depth" default=""/>
                        <parameter left="int" right="" name="cn" default=""/>
                        <parameter left="bool" right="" name="norm" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Image2D" fullname="cv::ocl::Image2D::~Image2D" href="cv-ocl-image2d.html#dtor.Image2D" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="696" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Image2D()"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Image2D::ptr" href="cv-ocl-image2d.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="709" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Image2D::p" href="cv-ocl-image2d.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="712" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Kernel" fullname="cv::ocl::Kernel" href="cv-ocl-kernel.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="421">
                    <function threadsafety="unspecified" name="args" fullname="cv::ocl::Kernel::args" href="cv-ocl-kernel.html#args" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="462" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Kernel &amp;" signature="Kernel &amp; args(const _Tps &amp;... kernel_args)">
                        <parameter left="const _Tps &amp;..." right="" name="kernel_args" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Kernel::operator=" href="cv-ocl-kernel.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="430" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Kernel &amp;" signature="Kernel &amp; operator=(const Kernel &amp;k)">
                        <parameter left="const Kernel &amp;" right="" name="k" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Kernel" fullname="cv::ocl::Kernel::Kernel" href="cv-ocl-kernel.html#Kernel" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="424" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Kernel()"/>
                    <function threadsafety="unspecified" name="Kernel" fullname="cv::ocl::Kernel::Kernel" href="cv-ocl-kernel.html#Kernel-3" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="429" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Kernel(const Kernel &amp;k)">
                        <parameter left="const Kernel &amp;" right="" name="k" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Kernel" fullname="cv::ocl::Kernel::Kernel" href="cv-ocl-kernel.html#Kernel-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="425" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Kernel(const char *kname, const Program &amp;prog)">
                        <parameter left="const char *" right="" name="kname" default=""/>
                        <parameter left="const Program &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Kernel" fullname="cv::ocl::Kernel::Kernel" href="cv-ocl-kernel.html#Kernel-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="426" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Kernel(const char *kname, const ProgramSource &amp;prog, const String &amp;buildopts, String *errmsg)">
                        <parameter left="const char *" right="" name="kname" default=""/>
                        <parameter left="const ProgramSource &amp;" right="" name="prog" default=""/>
                        <parameter left="const String &amp;" right="" name="buildopts" default="String()"/>
                        <parameter left="String *" right="" name="errmsg" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Kernel::create" href="cv-ocl-kernel.html#create" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="433" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create(const char *kname, const Program &amp;prog)">
                        <parameter left="const char *" right="" name="kname" default=""/>
                        <parameter left="const Program &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Kernel::create" href="cv-ocl-kernel.html#create-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create(const char *kname, const ProgramSource &amp;prog, const String &amp;buildopts, String *errmsg)">
                        <parameter left="const char *" right="" name="kname" default=""/>
                        <parameter left="const ProgramSource &amp;" right="" name="prog" default=""/>
                        <parameter left="const String &amp;" right="" name="buildopts" default=""/>
                        <parameter left="String *" right="" name="errmsg" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="run" fullname="cv::ocl::Kernel::run" href="cv-ocl-kernel.html#run" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="476" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool run(int dims, size_t[] globalsize, size_t[] localsize, bool sync, const Queue &amp;q)">
                        <parameter left="int" right="" name="dims" default=""/>
                        <parameter left="size_t[]" right="" name="globalsize" default=""/>
                        <parameter left="size_t[]" right="" name="localsize" default=""/>
                        <parameter left="bool" right="" name="sync" default=""/>
                        <parameter left="const Queue &amp;" right="" name="q" default="Queue()"/>
                    </function>
                    <function threadsafety="unspecified" name="runTask" fullname="cv::ocl::Kernel::runTask" href="cv-ocl-kernel.html#runTask" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="478" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool runTask(bool sync, const Queue &amp;q)">
                        <parameter left="bool" right="" name="sync" default=""/>
                        <parameter left="const Queue &amp;" right="" name="q" default="Queue()"/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Kernel::set" href="cv-ocl-kernel.html#set-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="438" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set(int i, const Image2D &amp;image2D)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const Image2D &amp;" right="" name="image2D" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Kernel::set" href="cv-ocl-kernel.html#set-3" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="440" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set(int i, const KernelArg &amp;arg)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const KernelArg &amp;" right="" name="arg" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Kernel::set" href="cv-ocl-kernel.html#set-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="439" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set(int i, const UMat &amp;m)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Kernel::set" href="cv-ocl-kernel.html#set-4" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="441" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set(int i, const _Tp &amp;value)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const _Tp &amp;" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::ocl::Kernel::set" href="cv-ocl-kernel.html#set" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="437" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set(int i, const void *value, size_t sz)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const void *" right="" name="value" default=""/>
                        <parameter left="size_t" right="" name="sz" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set_args_" fullname="cv::ocl::Kernel::set_args_" href="cv-ocl-kernel.html#set_args_" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="446" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set_args_(int i, const _Tp0 &amp;a0)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const _Tp0 &amp;" right="" name="a0" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set_args_" fullname="cv::ocl::Kernel::set_args_" href="cv-ocl-kernel.html#set_args_-1" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="448" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int set_args_(int i, const _Tp0 &amp;a0, const _Tps &amp;... rest_args)">
                        <parameter left="int" right="" name="i" default=""/>
                        <parameter left="const _Tp0 &amp;" right="" name="a0" default=""/>
                        <parameter left="const _Tps &amp;..." right="" name="rest_args" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="runProfiling" fullname="cv::ocl::Kernel::runProfiling" href="cv-ocl-kernel.html#runProfiling" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="484" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 runProfiling(int dims, size_t[] globalsize, size_t[] localsize, const Queue &amp;q)">
                        <parameter left="int" right="" name="dims" default=""/>
                        <parameter left="size_t[]" right="" name="globalsize" default=""/>
                        <parameter left="size_t[]" right="" name="localsize" default=""/>
                        <parameter left="const Queue &amp;" right="" name="q" default="Queue()"/>
                    </function>
                    <function threadsafety="unspecified" name="~Kernel" fullname="cv::ocl::Kernel::~Kernel" href="cv-ocl-kernel.html#dtor.Kernel" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="428" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Kernel()"/>
                    <function threadsafety="unspecified" name="compileWorkGroupSize" fullname="cv::ocl::Kernel::compileWorkGroupSize" href="cv-ocl-kernel.html#compileWorkGroupSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="488" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool compileWorkGroupSize(size_t[] wsz) const">
                        <parameter left="size_t[]" right="" name="wsz" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Kernel::empty" href="cv-ocl-kernel.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="432" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="localMemSize" fullname="cv::ocl::Kernel::localMemSize" href="cv-ocl-kernel.html#localMemSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="489" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t localMemSize() const"/>
                    <function threadsafety="unspecified" name="preferedWorkGroupSizeMultiple" fullname="cv::ocl::Kernel::preferedWorkGroupSizeMultiple" href="cv-ocl-kernel.html#preferedWorkGroupSizeMultiple" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="487" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t preferedWorkGroupSizeMultiple() const"/>
                    <function threadsafety="unspecified" name="workGroupSize" fullname="cv::ocl::Kernel::workGroupSize" href="cv-ocl-kernel.html#workGroupSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="486" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t workGroupSize() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Kernel::ptr" href="cv-ocl-kernel.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="491" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Kernel::p" href="cv-ocl-kernel.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="495" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="KernelArg" fullname="cv::ocl::KernelArg" href="cv-ocl-kernelarg.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="382">
                    <function threadsafety="unspecified" name="Constant" fullname="cv::ocl::KernelArg::Constant" href="cv-ocl-kernelarg.html#Constant" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="409" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg Constant(const Mat &amp;m)">
                        <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Constant" fullname="cv::ocl::KernelArg::Constant" href="cv-ocl-kernelarg.html#Constant-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="410" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg Constant(const _Tp *arr, size_t n)">
                        <parameter left="const _Tp *" right="" name="arr" default=""/>
                        <parameter left="size_t" right="" name="n" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Local" fullname="cv::ocl::KernelArg::Local" href="cv-ocl-kernelarg.html#Local" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="389" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg Local(size_t localMemSize)">
                        <parameter left="size_t" right="" name="localMemSize" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PtrReadOnly" fullname="cv::ocl::KernelArg::PtrReadOnly" href="cv-ocl-kernelarg.html#PtrReadOnly" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="393" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg PtrReadOnly(const UMat &amp;m)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PtrReadWrite" fullname="cv::ocl::KernelArg::PtrReadWrite" href="cv-ocl-kernelarg.html#PtrReadWrite" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="395" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg PtrReadWrite(const UMat &amp;m)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PtrWriteOnly" fullname="cv::ocl::KernelArg::PtrWriteOnly" href="cv-ocl-kernelarg.html#PtrWriteOnly" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="391" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg PtrWriteOnly(const UMat &amp;m)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ReadOnly" fullname="cv::ocl::KernelArg::ReadOnly" href="cv-ocl-kernelarg.html#ReadOnly" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="401" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg ReadOnly(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="ReadOnlyNoSize" fullname="cv::ocl::KernelArg::ReadOnlyNoSize" href="cv-ocl-kernelarg.html#ReadOnlyNoSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="405" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg ReadOnlyNoSize(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="ReadWrite" fullname="cv::ocl::KernelArg::ReadWrite" href="cv-ocl-kernelarg.html#ReadWrite" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="397" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg ReadWrite(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="ReadWriteNoSize" fullname="cv::ocl::KernelArg::ReadWriteNoSize" href="cv-ocl-kernelarg.html#ReadWriteNoSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="399" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg ReadWriteNoSize(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="WriteOnly" fullname="cv::ocl::KernelArg::WriteOnly" href="cv-ocl-kernelarg.html#WriteOnly" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="403" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg WriteOnly(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="WriteOnlyNoSize" fullname="cv::ocl::KernelArg::WriteOnlyNoSize" href="cv-ocl-kernelarg.html#WriteOnlyNoSize" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="407" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="KernelArg" signature="KernelArg WriteOnlyNoSize(const UMat &amp;m, int wscale, int iwscale)">
                        <parameter left="const UMat &amp;" right="" name="m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                    </function>
                    <function threadsafety="unspecified" name="KernelArg" fullname="cv::ocl::KernelArg::KernelArg" href="cv-ocl-kernelarg.html#KernelArg-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="387" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KernelArg()"/>
                    <function threadsafety="unspecified" name="KernelArg" fullname="cv::ocl::KernelArg::KernelArg" href="cv-ocl-kernelarg.html#KernelArg" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="386" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KernelArg(int _flags, UMat *_m, int wscale, int iwscale, const void *_obj, size_t _sz)">
                        <parameter left="int" right="" name="_flags" default=""/>
                        <parameter left="UMat *" right="" name="_m" default=""/>
                        <parameter left="int" right="" name="wscale" default="1"/>
                        <parameter left="int" right="" name="iwscale" default="1"/>
                        <parameter left="const void *" right="" name="_obj" default="0"/>
                        <parameter left="size_t" right="" name="_sz" default="0"/>
                    </function>
                    <variable threadsafety="unspecified" name="CONSTANT" fullname="cv::ocl::KernelArg::CONSTANT" href="cv-ocl-kernelarg.html#CONSTANT-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="LOCAL" fullname="cv::ocl::KernelArg::LOCAL" href="cv-ocl-kernelarg.html#LOCAL-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="NO_SIZE" fullname="cv::ocl::KernelArg::NO_SIZE" href="cv-ocl-kernelarg.html#NO_SIZE-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="PTR_ONLY" fullname="cv::ocl::KernelArg::PTR_ONLY" href="cv-ocl-kernelarg.html#PTR_ONLY-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="READ_ONLY" fullname="cv::ocl::KernelArg::READ_ONLY" href="cv-ocl-kernelarg.html#READ_ONLY-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="READ_WRITE" fullname="cv::ocl::KernelArg::READ_WRITE" href="cv-ocl-kernelarg.html#READ_WRITE-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="WRITE_ONLY" fullname="cv::ocl::KernelArg::WRITE_ONLY" href="cv-ocl-kernelarg.html#WRITE_ONLY-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="385" type="const int" static="true"/>
                    <variable threadsafety="unspecified" name="flags" fullname="cv::ocl::KernelArg::flags" href="cv-ocl-kernelarg.html#flags-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="413" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="m" fullname="cv::ocl::KernelArg::m" href="cv-ocl-kernelarg.html#m-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="414" type="UMat *" static="false"/>
                    <variable threadsafety="unspecified" name="obj" fullname="cv::ocl::KernelArg::obj" href="cv-ocl-kernelarg.html#obj-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="415" type="const void *" static="false"/>
                    <variable threadsafety="unspecified" name="sz" fullname="cv::ocl::KernelArg::sz" href="cv-ocl-kernelarg.html#sz-var" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="416" type="size_t" static="false"/>
                </class>
                <class threadsafety="unspecified" name="OpenCLExecutionContext" fullname="cv::ocl::OpenCLExecutionContext" href="cv-ocl-openclexecutioncontext.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="737">
                    <function threadsafety="unspecified" name="getCurrent" fullname="cv::ocl::OpenCLExecutionContext::getCurrent" href="cv-ocl-openclexecutioncontext.html#getCurrent" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="767" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext &amp;" signature="OpenCLExecutionContext &amp; getCurrent()"/>
                    <function threadsafety="unspecified" name="getCurrentRef" fullname="cv::ocl::OpenCLExecutionContext::getCurrentRef" href="cv-ocl-openclexecutioncontext.html#getCurrentRef" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="770" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext &amp;" signature="OpenCLExecutionContext &amp; getCurrentRef()"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::OpenCLExecutionContext::operator=" href="cv-ocl-openclexecutioncontext.html#operator-eq-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="747" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="OpenCLExecutionContext &amp;" signature="OpenCLExecutionContext &amp; operator=(OpenCLExecutionContext &amp;&amp;) = default">
                        <parameter left="OpenCLExecutionContext &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::OpenCLExecutionContext::operator=" href="cv-ocl-openclexecutioncontext.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="746" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="OpenCLExecutionContext &amp;" signature="OpenCLExecutionContext &amp; operator=(const OpenCLExecutionContext &amp;) = default">
                        <parameter left="const OpenCLExecutionContext &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::OpenCLExecutionContext::create" href="cv-ocl-openclexecutioncontext.html#create-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="810" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext" signature="OpenCLExecutionContext create(const Context &amp;context, const Device &amp;device)">
                        <parameter left="const Context &amp;" right="" name="context" default=""/>
                        <parameter left="const Device &amp;" right="" name="device" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::OpenCLExecutionContext::create" href="cv-ocl-openclexecutioncontext.html#create-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="808" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext" signature="OpenCLExecutionContext create(const Context &amp;context, const Device &amp;device, const ocl::Queue &amp;queue)">
                        <parameter left="const Context &amp;" right="" name="context" default=""/>
                        <parameter left="const Device &amp;" right="" name="device" default=""/>
                        <parameter left="const ocl::Queue &amp;" right="" name="queue" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::OpenCLExecutionContext::create" href="cv-ocl-openclexecutioncontext.html#create" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="800" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext" signature="OpenCLExecutionContext create(const std::string &amp;platformName, void *platformID, void *context, void *deviceID)">
                        <parameter left="const std::string &amp;" right="" name="platformName" default=""/>
                        <parameter left="void *" right="" name="platformID" default=""/>
                        <parameter left="void *" right="" name="context" default=""/>
                        <parameter left="void *" right="" name="deviceID" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="OpenCLExecutionContext" fullname="cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext" href="cv-ocl-openclexecutioncontext.html#OpenCLExecutionContext" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="740" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="OpenCLExecutionContext() = default"/>
                    <function threadsafety="unspecified" name="OpenCLExecutionContext" fullname="cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext" href="cv-ocl-openclexecutioncontext.html#OpenCLExecutionContext-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="744" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="OpenCLExecutionContext(OpenCLExecutionContext &amp;&amp;) = default">
                        <parameter left="OpenCLExecutionContext &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="OpenCLExecutionContext" fullname="cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext" href="cv-ocl-openclexecutioncontext.html#OpenCLExecutionContext-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="743" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="OpenCLExecutionContext(const OpenCLExecutionContext &amp;) = default">
                        <parameter left="const OpenCLExecutionContext &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="release" fullname="cv::ocl::OpenCLExecutionContext::release" href="cv-ocl-openclexecutioncontext.html#release" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="814" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                    <function threadsafety="unspecified" name="setUseOpenCL" fullname="cv::ocl::OpenCLExecutionContext::setUseOpenCL" href="cv-ocl-openclexecutioncontext.html#setUseOpenCL" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="759" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setUseOpenCL(bool flag)">
                        <parameter left="bool" right="" name="flag" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~OpenCLExecutionContext" fullname="cv::ocl::OpenCLExecutionContext::~OpenCLExecutionContext" href="cv-ocl-openclexecutioncontext.html#dtor.OpenCLExecutionContext" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="741" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~OpenCLExecutionContext() = default"/>
                    <function threadsafety="unspecified" name="getContext" fullname="cv::ocl::OpenCLExecutionContext::getContext" href="cv-ocl-openclexecutioncontext.html#getContext" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="750" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Context &amp;" signature="Context &amp; getContext() const"/>
                    <function threadsafety="unspecified" name="getDevice" fullname="cv::ocl::OpenCLExecutionContext::getDevice" href="cv-ocl-openclexecutioncontext.html#getDevice" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="752" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Device &amp;" signature="Device &amp; getDevice() const"/>
                    <function threadsafety="unspecified" name="cloneWithNewQueue" fullname="cv::ocl::OpenCLExecutionContext::cloneWithNewQueue" href="cv-ocl-openclexecutioncontext.html#cloneWithNewQueue-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="786" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext" signature="OpenCLExecutionContext cloneWithNewQueue() const"/>
                    <function threadsafety="unspecified" name="cloneWithNewQueue" fullname="cv::ocl::OpenCLExecutionContext::cloneWithNewQueue" href="cv-ocl-openclexecutioncontext.html#cloneWithNewQueue" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="784" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="OpenCLExecutionContext" signature="OpenCLExecutionContext cloneWithNewQueue(const ocl::Queue &amp;q) const">
                        <parameter left="const ocl::Queue &amp;" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getQueue" fullname="cv::ocl::OpenCLExecutionContext::getQueue" href="cv-ocl-openclexecutioncontext.html#getQueue" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="756" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Queue &amp;" signature="Queue &amp; getQueue() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::OpenCLExecutionContext::empty" href="cv-ocl-openclexecutioncontext.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="813" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="useOpenCL" fullname="cv::ocl::OpenCLExecutionContext::useOpenCL" href="cv-ocl-openclexecutioncontext.html#useOpenCL" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="758" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool useOpenCL() const"/>
                    <function threadsafety="unspecified" name="bind" fullname="cv::ocl::OpenCLExecutionContext::bind" href="cv-ocl-openclexecutioncontext.html#bind" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="778" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void bind() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::OpenCLExecutionContext::p" href="cv-ocl-openclexecutioncontext.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="816" type="std::shared_ptr&lt;Impl&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="OpenCLExecutionContextScope" fullname="cv::ocl::OpenCLExecutionContextScope" href="cv-ocl-openclexecutioncontextscope.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="819">
                    <function threadsafety="unspecified" name="OpenCLExecutionContextScope" fullname="cv::ocl::OpenCLExecutionContextScope::OpenCLExecutionContextScope" href="cv-ocl-openclexecutioncontextscope.html#OpenCLExecutionContextScope" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="823" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="OpenCLExecutionContextScope(const OpenCLExecutionContext &amp;ctx)">
                        <parameter left="const OpenCLExecutionContext &amp;" right="" name="ctx" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~OpenCLExecutionContextScope" fullname="cv::ocl::OpenCLExecutionContextScope::~OpenCLExecutionContextScope" href="cv-ocl-openclexecutioncontextscope.html#dtor.OpenCLExecutionContextScope" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="830" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~OpenCLExecutionContextScope()"/>
                </class>
                <class threadsafety="unspecified" name="Platform" fullname="cv::ocl::Platform" href="cv-ocl-platform.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="298">
                    <function threadsafety="unspecified" name="getDefault" fullname="cv::ocl::Platform::getDefault" href="cv-ocl-platform.html#getDefault" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="309" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Platform &amp;" signature="Platform &amp; getDefault()"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Platform::operator=" href="cv-ocl-platform.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="304" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Platform &amp;" signature="Platform &amp; operator=(const Platform &amp;p)">
                        <parameter left="const Platform &amp;" right="" name="p" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Platform" fullname="cv::ocl::Platform::Platform" href="cv-ocl-platform.html#Platform" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="301" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Platform()"/>
                    <function threadsafety="unspecified" name="Platform" fullname="cv::ocl::Platform::Platform" href="cv-ocl-platform.html#Platform-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="303" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Platform(const Platform &amp;p)">
                        <parameter left="const Platform &amp;" right="" name="p" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Platform" fullname="cv::ocl::Platform::~Platform" href="cv-ocl-platform.html#dtor.Platform" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="302" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Platform()"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::Platform::getImpl" href="cv-ocl-platform.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="312" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Platform::empty" href="cv-ocl-platform.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="313" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Platform::ptr" href="cv-ocl-platform.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="306" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Platform::p" href="cv-ocl-platform.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="315" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="PlatformInfo" fullname="cv::ocl::PlatformInfo" href="cv-ocl-platforminfo.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="614">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::PlatformInfo::operator=" href="cv-ocl-platforminfo.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="625" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PlatformInfo &amp;" signature="PlatformInfo &amp; operator=(const PlatformInfo &amp;i)">
                        <parameter left="const PlatformInfo &amp;" right="" name="i" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PlatformInfo" fullname="cv::ocl::PlatformInfo::PlatformInfo" href="cv-ocl-platforminfo.html#PlatformInfo" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="617" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlatformInfo()"/>
                    <function threadsafety="unspecified" name="PlatformInfo" fullname="cv::ocl::PlatformInfo::PlatformInfo" href="cv-ocl-platforminfo.html#PlatformInfo-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="624" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlatformInfo(const PlatformInfo &amp;i)">
                        <parameter left="const PlatformInfo &amp;" right="" name="i" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="PlatformInfo" fullname="cv::ocl::PlatformInfo::PlatformInfo" href="cv-ocl-platforminfo.html#PlatformInfo-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="621" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PlatformInfo(void *id)">
                        <parameter left="void *" right="" name="id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~PlatformInfo" fullname="cv::ocl::PlatformInfo::~PlatformInfo" href="cv-ocl-platforminfo.html#dtor.PlatformInfo" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="622" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~PlatformInfo()"/>
                    <function threadsafety="unspecified" name="name" fullname="cv::ocl::PlatformInfo::name" href="cv-ocl-platforminfo.html#name" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="627" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String name() const"/>
                    <function threadsafety="unspecified" name="vendor" fullname="cv::ocl::PlatformInfo::vendor" href="cv-ocl-platforminfo.html#vendor" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="628" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String vendor() const"/>
                    <function threadsafety="unspecified" name="version" fullname="cv::ocl::PlatformInfo::version" href="cv-ocl-platforminfo.html#version" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="631" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String version() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::PlatformInfo::empty" href="cv-ocl-platforminfo.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="639" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="deviceNumber" fullname="cv::ocl::PlatformInfo::deviceNumber" href="cv-ocl-platforminfo.html#deviceNumber" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="635" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int deviceNumber() const"/>
                    <function threadsafety="unspecified" name="versionMajor" fullname="cv::ocl::PlatformInfo::versionMajor" href="cv-ocl-platforminfo.html#versionMajor" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="632" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int versionMajor() const"/>
                    <function threadsafety="unspecified" name="versionMinor" fullname="cv::ocl::PlatformInfo::versionMinor" href="cv-ocl-platforminfo.html#versionMinor" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="633" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int versionMinor() const"/>
                    <function threadsafety="unspecified" name="getDevice" fullname="cv::ocl::PlatformInfo::getDevice" href="cv-ocl-platforminfo.html#getDevice" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="636" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getDevice(Device &amp;device, int d) const">
                        <parameter left="Device &amp;" right="" name="device" default=""/>
                        <parameter left="int" right="" name="d" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::PlatformInfo::p" href="cv-ocl-platforminfo.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="641" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Program" fullname="cv::ocl::Program" href="cv-ocl-program.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="498">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Program::operator=" href="cv-ocl-program.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="506" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Program &amp;" signature="Program &amp; operator=(const Program &amp;prog)">
                        <parameter left="const Program &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Program" fullname="cv::ocl::Program::Program" href="cv-ocl-program.html#Program" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="501" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Program()"/>
                    <function threadsafety="unspecified" name="Program" fullname="cv::ocl::Program::Program" href="cv-ocl-program.html#Program-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="504" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Program(const Program &amp;prog)">
                        <parameter left="const Program &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Program" fullname="cv::ocl::Program::Program" href="cv-ocl-program.html#Program-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="502" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Program(const ProgramSource &amp;src, const String &amp;buildflags, String &amp;errmsg)">
                        <parameter left="const ProgramSource &amp;" right="" name="src" default=""/>
                        <parameter left="const String &amp;" right="" name="buildflags" default=""/>
                        <parameter left="String &amp;" right="" name="errmsg" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Program::create" href="cv-ocl-program.html#create" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="509" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create(const ProgramSource &amp;src, const String &amp;buildflags, String &amp;errmsg)">
                        <parameter left="const ProgramSource &amp;" right="" name="src" default=""/>
                        <parameter left="const String &amp;" right="" name="buildflags" default=""/>
                        <parameter left="String &amp;" right="" name="errmsg" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Program" fullname="cv::ocl::Program::~Program" href="cv-ocl-program.html#dtor.Program" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="507" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Program()"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::Program::getImpl" href="cv-ocl-program.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="526" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Program::empty" href="cv-ocl-program.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="527" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Program::ptr" href="cv-ocl-program.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="512" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <function threadsafety="unspecified" name="getBinary" fullname="cv::ocl::Program::getBinary" href="cv-ocl-program.html#getBinary" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="523" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getBinary(std::vector&lt;char&gt; &amp;binary) const">
                        <parameter left="std::vector&lt;char&gt; &amp;" right="" name="binary" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Program::p" href="cv-ocl-program.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="529" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource" href="cv-ocl-programsource.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="542">
                    <typedef threadsafety="unspecified" name="hash_t" fullname="cv::ocl::ProgramSource::hash_t" href="cv-ocl-programsource.html#hash_t-typedef" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="545"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::ProgramSource::operator=" href="cv-ocl-programsource.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="553" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ProgramSource &amp;" signature="ProgramSource &amp; operator=(const ProgramSource &amp;prog)">
                        <parameter left="const ProgramSource &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="fromBinary" fullname="cv::ocl::ProgramSource::fromBinary" href="cv-ocl-programsource.html#fromBinary" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="573" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="ProgramSource" signature="ProgramSource fromBinary(const String &amp;module, const String &amp;name, const unsigned char *binary, const size_t size, const cv::String &amp;buildOptions)">
                        <parameter left="const String &amp;" right="" name="module" default=""/>
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="const unsigned char *" right="" name="binary" default=""/>
                        <parameter left="const size_t" right="" name="size" default=""/>
                        <parameter left="const cv::String &amp;" right="" name="buildOptions" default="cv::String()"/>
                    </function>
                    <function threadsafety="unspecified" name="fromSPIR" fullname="cv::ocl::ProgramSource::fromSPIR" href="cv-ocl-programsource.html#fromSPIR" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="598" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="ProgramSource" signature="ProgramSource fromSPIR(const String &amp;module, const String &amp;name, const unsigned char *binary, const size_t size, const cv::String &amp;buildOptions)">
                        <parameter left="const String &amp;" right="" name="module" default=""/>
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="const unsigned char *" right="" name="binary" default=""/>
                        <parameter left="const size_t" right="" name="size" default=""/>
                        <parameter left="const cv::String &amp;" right="" name="buildOptions" default="cv::String()"/>
                    </function>
                    <function threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource::ProgramSource" href="cv-ocl-programsource.html#ProgramSource" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="547" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgramSource()"/>
                    <function threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource::ProgramSource" href="cv-ocl-programsource.html#ProgramSource-4" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="552" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgramSource(const ProgramSource &amp;prog)">
                        <parameter left="const ProgramSource &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource::ProgramSource" href="cv-ocl-programsource.html#ProgramSource-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="548" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgramSource(const String &amp;module, const String &amp;name, const String &amp;codeStr, const String &amp;codeHash)">
                        <parameter left="const String &amp;" right="" name="module" default=""/>
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="const String &amp;" right="" name="codeStr" default=""/>
                        <parameter left="const String &amp;" right="" name="codeHash" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource::ProgramSource" href="cv-ocl-programsource.html#ProgramSource-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="549" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgramSource(const String &amp;prog)">
                        <parameter left="const String &amp;" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ProgramSource" fullname="cv::ocl::ProgramSource::ProgramSource" href="cv-ocl-programsource.html#ProgramSource-3" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="550" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ProgramSource(const char *prog)">
                        <parameter left="const char *" right="" name="prog" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~ProgramSource" fullname="cv::ocl::ProgramSource::~ProgramSource" href="cv-ocl-programsource.html#dtor.ProgramSource" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="551" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ProgramSource()"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::ProgramSource::getImpl" href="cv-ocl-programsource.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="608" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::ProgramSource::empty" href="cv-ocl-programsource.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="609" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="source" fullname="cv::ocl::ProgramSource::source" href="cv-ocl-programsource.html#source" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="555" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const String &amp;" signature="const String &amp; source() const"/>
                    <function threadsafety="unspecified" name="hash" fullname="cv::ocl::ProgramSource::hash" href="cv-ocl-programsource.html#hash" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="556" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="hash_t" signature="hash_t hash() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::ProgramSource::p" href="cv-ocl-programsource.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="611" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Queue" fullname="cv::ocl::Queue" href="cv-ocl-queue.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="357">
                    <function threadsafety="unspecified" name="getDefault" fullname="cv::ocl::Queue::getDefault" href="cv-ocl-queue.html#getDefault" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="369" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Queue &amp;" signature="Queue &amp; getDefault()"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Queue::operator=" href="cv-ocl-queue.html#operator-eq" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="364" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Queue &amp;" signature="Queue &amp; operator=(const Queue &amp;q)">
                        <parameter left="const Queue &amp;" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Queue" fullname="cv::ocl::Queue::Queue" href="cv-ocl-queue.html#Queue" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="360" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Queue()"/>
                    <function threadsafety="unspecified" name="Queue" fullname="cv::ocl::Queue::Queue" href="cv-ocl-queue.html#Queue-1" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="361" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Queue(const Context &amp;c, const Device &amp;d)">
                        <parameter left="const Context &amp;" right="" name="c" default=""/>
                        <parameter left="const Device &amp;" right="" name="d" default="Device()"/>
                    </function>
                    <function threadsafety="unspecified" name="Queue" fullname="cv::ocl::Queue::Queue" href="cv-ocl-queue.html#Queue-2" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="363" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Queue(const Queue &amp;q)">
                        <parameter left="const Queue &amp;" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="create" fullname="cv::ocl::Queue::create" href="cv-ocl-queue.html#create" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="366" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool create(const Context &amp;c, const Device &amp;d)">
                        <parameter left="const Context &amp;" right="" name="c" default="Context()"/>
                        <parameter left="const Device &amp;" right="" name="d" default="Device()"/>
                    </function>
                    <function threadsafety="unspecified" name="finish" fullname="cv::ocl::Queue::finish" href="cv-ocl-queue.html#finish" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="367" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void finish()"/>
                    <function threadsafety="unspecified" name="~Queue" fullname="cv::ocl::Queue::~Queue" href="cv-ocl-queue.html#dtor.Queue" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="362" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Queue()"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::ocl::Queue::getImpl" href="cv-ocl-queue.html#getImpl" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="375" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="empty" fullname="cv::ocl::Queue::empty" href="cv-ocl-queue.html#empty" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="376" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                    <function threadsafety="unspecified" name="getProfilingQueue" fullname="cv::ocl::Queue::getProfilingQueue" href="cv-ocl-queue.html#getProfilingQueue" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="372" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Queue &amp;" signature="const Queue &amp; getProfilingQueue() const"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::ocl::Queue::ptr" href="cv-ocl-queue.html#ptr" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="368" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * ptr() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Queue::p" href="cv-ocl-queue.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="378" type="Impl *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Timer" fullname="cv::ocl::Timer" href="cv-ocl-timer.html" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="715">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::ocl::Timer::operator=" href="cv-ocl-timer.html#operator-eq" status="active" access="private" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="731" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Timer &amp;" signature="Timer &amp; operator=(const Timer &amp;)">
                        <parameter left="const Timer &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Timer" fullname="cv::ocl::Timer::Timer" href="cv-ocl-timer.html#Timer" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="718" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Timer(const Queue &amp;q)">
                        <parameter left="const Queue &amp;" right="" name="q" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Timer" fullname="cv::ocl::Timer::Timer" href="cv-ocl-timer.html#Timer-1" status="active" access="private" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="730" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Timer(const Timer &amp;)">
                        <parameter left="const Timer &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="start" fullname="cv::ocl::Timer::start" href="cv-ocl-timer.html#start" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="720" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void start()"/>
                    <function threadsafety="unspecified" name="stop" fullname="cv::ocl::Timer::stop" href="cv-ocl-timer.html#stop" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="721" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stop()"/>
                    <function threadsafety="unspecified" name="~Timer" fullname="cv::ocl::Timer::~Timer" href="cv-ocl-timer.html#dtor.Timer" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="719" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Timer()"/>
                    <function threadsafety="unspecified" name="durationNS" fullname="cv::ocl::Timer::durationNS" href="cv-ocl-timer.html#durationNS" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="723" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 durationNS() const"/>
                    <variable threadsafety="unspecified" name="p" fullname="cv::ocl::Timer::p" href="cv-ocl-timer.html#p-var" status="active" access="protected" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="727" type="Impl * const" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="OclVectorStrategy" fullname="cv::ocl::OclVectorStrategy" href="cv-ocl.html#OclVectorStrategy-enum" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="653">
                    <value name="OCL_VECTOR_OWN" value="0"/>
                    <value name="OCL_VECTOR_MAX" value="1"/>
                    <value name="OCL_VECTOR_DEFAULT" value="OCL_VECTOR_OWN"/>
                </enum>
                <function threadsafety="unspecified" name="initializeContextFromHandle" fullname="cv::ocl::initializeContextFromHandle" href="cv-ocl.html#initializeContextFromHandle" status="active" access="public" location="ocl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl.hpp" lineno="355" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void initializeContextFromHandle(Context &amp;ctx, void *platform, void *context, void *device)">
                    <parameter left="Context &amp;" right="" name="ctx" default=""/>
                    <parameter left="void *" right="" name="platform" default=""/>
                    <parameter left="void *" right="" name="context" default=""/>
                    <parameter left="void *" right="" name="device" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="internal" fullname="cv::ocl::internal" href="cv-ocl-internal.html" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="52">
                    <class threadsafety="unspecified" name="ProgramEntry" fullname="cv::ocl::internal::ProgramEntry" href="cv-ocl-internal-programentry.html" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="54">
                        <function threadsafety="unspecified" name="operator ProgramSource &amp;" fullname="cv::ocl::internal::ProgramEntry::operator ProgramSource &amp;" href="cv-ocl-internal-programentry.html#operator-ProgramSource--and" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="62" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator ProgramSource &amp;() const"/>
                        <variable threadsafety="unspecified" name="module" fullname="cv::ocl::internal::ProgramEntry::module" href="cv-ocl-internal-programentry.html#module-var" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="56" type="const char *" static="false"/>
                        <variable threadsafety="unspecified" name="name" fullname="cv::ocl::internal::ProgramEntry::name" href="cv-ocl-internal-programentry.html#name-var" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="57" type="const char *" static="false"/>
                        <variable threadsafety="unspecified" name="pProgramSource" fullname="cv::ocl::internal::ProgramEntry::pProgramSource" href="cv-ocl-internal-programentry.html#pProgramSource-var" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="60" type="ProgramSource *" static="false"/>
                        <variable threadsafety="unspecified" name="programCode" fullname="cv::ocl::internal::ProgramEntry::programCode" href="cv-ocl-internal-programentry.html#programCode-var" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="58" type="const char *" static="false"/>
                        <variable threadsafety="unspecified" name="programHash" fullname="cv::ocl::internal::ProgramEntry::programHash" href="cv-ocl-internal-programentry.html#programHash-var" status="active" access="public" location="ocl_genbase.hpp" filepath="/usr/local/include/opencv4/opencv2/core/ocl_genbase.hpp" lineno="59" type="const char *" static="false"/>
                    </class>
                </namespace>
                <function threadsafety="unspecified" name="isOpenCLActivated" fullname="cv::ocl::isOpenCLActivated" href="cv-ocl.html#isOpenCLActivated" status="active" access="public" location="ocl_defs.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opencl/ocl_defs.hpp" lineno="19" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isOpenCLActivated()"/>
            </namespace>
            <class threadsafety="unspecified" name="ConjGradSolver" fullname="cv::ConjGradSolver" href="cv-conjgradsolver.html" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="236" bases="cv::MinProblemSolver">
                <function threadsafety="unspecified" name="create" fullname="cv::ConjGradSolver::create" href="cv-conjgradsolver.html#create" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="252" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ConjGradSolver&gt;" signature="Ptr&lt;ConjGradSolver&gt; create(const Ptr&lt;MinProblemSolver::Function&gt; &amp;f, TermCriteria termcrit)">
                    <parameter left="const Ptr&lt;MinProblemSolver::Function&gt; &amp;" right="" name="f" default="Ptr&lt;ConjGradSolver::Function&gt; ()"/>
                    <parameter left="TermCriteria" right="" name="termcrit" default="TermCriteria( TermCriteria::MAX_ITER + TermCriteria::EPS, 5000, 0.000001 )"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="DownhillSolver" fullname="cv::DownhillSolver" href="cv-downhillsolver.html" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="155" bases="cv::MinProblemSolver">
                <function threadsafety="unspecified" name="create" fullname="cv::DownhillSolver::create" href="cv-downhillsolver.html#create" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="198" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DownhillSolver&gt;" signature="Ptr&lt;DownhillSolver&gt; create(const Ptr&lt;MinProblemSolver::Function&gt; &amp;f, InputArray initStep, TermCriteria termcrit)">
                    <parameter left="const Ptr&lt;MinProblemSolver::Function&gt; &amp;" right="" name="f" default="Ptr&lt;MinProblemSolver::Function&gt; ()"/>
                    <parameter left="InputArray" right="" name="initStep" default="Mat_&lt;double&gt; ( 1, 1, 0.0 )"/>
                    <parameter left="TermCriteria" right="" name="termcrit" default="TermCriteria( TermCriteria::MAX_ITER + TermCriteria::EPS, 5000, 0.000001 )"/>
                </function>
                <function threadsafety="unspecified" name="setInitStep" fullname="cv::DownhillSolver::setInitStep" href="cv-downhillsolver.html#setInitStep" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="180" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setInitStep(InputArray step) = 0">
                    <parameter left="InputArray" right="" name="step" default=""/>
                </function>
                <function threadsafety="unspecified" name="getInitStep" fullname="cv::DownhillSolver::getInitStep" href="cv-downhillsolver.html#getInitStep" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="164" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getInitStep(OutputArray step) const = 0">
                    <parameter left="OutputArray" right="" name="step" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MinProblemSolver" fullname="cv::MinProblemSolver" href="cv-minproblemsolver.html" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="58" bases="cv::Algorithm">
                <class threadsafety="unspecified" name="Function" fullname="cv::MinProblemSolver::Function" href="cv-minproblemsolver-function.html" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="63">
                    <function threadsafety="unspecified" name="getGradient" fullname="cv::MinProblemSolver::Function::getGradient" href="cv-minproblemsolver-function.html#getGradient" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="70" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getGradient(const double *x, double *grad)">
                        <parameter left="const double *" right="" name="x" default=""/>
                        <parameter left="double *" right="" name="grad" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Function" fullname="cv::MinProblemSolver::Function::~Function" href="cv-minproblemsolver-function.html#dtor.Function" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="66" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Function()"/>
                    <function threadsafety="unspecified" name="calc" fullname="cv::MinProblemSolver::Function::calc" href="cv-minproblemsolver-function.html#calc" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="69" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double calc(const double *x) const = 0">
                        <parameter left="const double *" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getGradientEps" fullname="cv::MinProblemSolver::Function::getGradientEps" href="cv-minproblemsolver-function.html#getGradientEps" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="68" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getGradientEps() const"/>
                    <function threadsafety="unspecified" name="getDims" fullname="cv::MinProblemSolver::Function::getDims" href="cv-minproblemsolver-function.html#getDims" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="67" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getDims() const = 0"/>
                </class>
                <function threadsafety="unspecified" name="minimize" fullname="cv::MinProblemSolver::minimize" href="cv-minproblemsolver.html#minimize" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="122" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double minimize(InputOutputArray x) = 0">
                    <parameter left="InputOutputArray" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFunction" fullname="cv::MinProblemSolver::setFunction" href="cv-minproblemsolver.html#setFunction" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="89" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFunction(const Ptr&lt;Function&gt; &amp;f) = 0">
                    <parameter left="const Ptr&lt;Function&gt; &amp;" right="" name="f" default=""/>
                </function>
                <function threadsafety="unspecified" name="setTermCriteria" fullname="cv::MinProblemSolver::setTermCriteria" href="cv-minproblemsolver.html#setTermCriteria" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="108" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setTermCriteria(const TermCriteria &amp;termcrit) = 0">
                    <parameter left="const TermCriteria &amp;" right="" name="termcrit" default=""/>
                </function>
                <function threadsafety="unspecified" name="getFunction" fullname="cv::MinProblemSolver::getFunction" href="cv-minproblemsolver.html#getFunction" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="81" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Function&gt;" signature="Ptr&lt;Function&gt; getFunction() const = 0"/>
                <function threadsafety="unspecified" name="getTermCriteria" fullname="cv::MinProblemSolver::getTermCriteria" href="cv-minproblemsolver.html#getTermCriteria" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="95" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TermCriteria" signature="TermCriteria getTermCriteria() const = 0"/>
            </class>
            <enum threadsafety="unspecified" name="SolveLPResult" fullname="cv::SolveLPResult" href="cv.html#SolveLPResult-enum" status="active" access="public" location="optim.hpp" filepath="/usr/local/include/opencv4/opencv2/core/optim.hpp" lineno="257">
                <value name="SOLVELP_UNBOUNDED" value="-2"/>
                <value name="SOLVELP_UNFEASIBLE" value="-1"/>
                <value name="SOLVELP_SINGLE" value="0"/>
                <value name="SOLVELP_MULTI" value="1"/>
            </enum>
            <namespace threadsafety="unspecified" name="parallel" fullname="cv::parallel" href="cv-parallel.html" status="active" access="public" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="16">
                <namespace threadsafety="unspecified" name="openmp" fullname="cv::parallel::openmp" href="cv-parallel-openmp.html" status="active" access="public" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="16">
                    <class threadsafety="unspecified" name="ParallelForBackend" fullname="cv::parallel::openmp::ParallelForBackend" href="cv-parallel-openmp-parallelforbackend.html" status="active" access="public" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="23">
                        <function threadsafety="unspecified" name="ParallelForBackend" fullname="cv::parallel::openmp::ParallelForBackend::ParallelForBackend" href="cv-parallel-openmp-parallelforbackend.html#ParallelForBackend" status="active" access="public" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="29" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ParallelForBackend()"/>
                        <function threadsafety="unspecified" name="~ParallelForBackend" fullname="cv::parallel::openmp::ParallelForBackend::~ParallelForBackend" href="cv-parallel-openmp-parallelforbackend.html#dtor.ParallelForBackend" status="active" access="public" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="35" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ParallelForBackend()"/>
                        <variable threadsafety="unspecified" name="numThreads" fullname="cv::parallel::openmp::ParallelForBackend::numThreads" href="cv-parallel-openmp-parallelforbackend.html#numThreads-var" status="active" access="protected" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="26" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="numThreadsMax" fullname="cv::parallel::openmp::ParallelForBackend::numThreadsMax" href="cv-parallel-openmp-parallelforbackend.html#numThreadsMax-var" status="active" access="protected" location="parallel_for.openmp.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.openmp.hpp" lineno="27" type="int" static="false"/>
                    </class>
                </namespace>
                <namespace threadsafety="unspecified" name="tbb" fullname="cv::parallel::tbb" href="cv-parallel-tbb.html" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="23">
                    <class threadsafety="unspecified" name="ParallelForBackend" fullname="cv::parallel::tbb::ParallelForBackend" href="cv-parallel-tbb-parallelforbackend.html" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="46">
                        <class threadsafety="unspecified" name="CallbackProxy" fullname="cv::parallel::tbb::ParallelForBackend::CallbackProxy" href="cv-parallel-tbb-parallelforbackend-callbackproxy.html" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="65">
                            <function threadsafety="unspecified" name="CallbackProxy" fullname="cv::parallel::tbb::ParallelForBackend::CallbackProxy::CallbackProxy" href="cv-parallel-tbb-parallelforbackend-callbackproxy.html#CallbackProxy" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="71" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CallbackProxy(int tasks_, FN_parallel_for_body_cb_t &amp;callback_, void *callback_data_)">
                                <parameter left="int" right="" name="tasks_" default=""/>
                                <parameter left="FN_parallel_for_body_cb_t &amp;" right="" name="callback_" default=""/>
                                <parameter left="void *" right="" name="callback_data_" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="operator()" fullname="cv::parallel::tbb::ParallelForBackend::CallbackProxy::operator()" href="cv-parallel-tbb-parallelforbackend-callbackproxy.html#operator-28-29-1" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="82" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()() const"/>
                            <function threadsafety="unspecified" name="operator()" fullname="cv::parallel::tbb::ParallelForBackend::CallbackProxy::operator()" href="cv-parallel-tbb-parallelforbackend-callbackproxy.html#operator-28-29" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="77" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(const tbb::blocked_range&lt;int&gt; &amp;range) const">
                                <parameter left="const tbb::blocked_range&lt;int&gt; &amp;" right="" name="range" default=""/>
                            </function>
                        </class>
                        <function threadsafety="unspecified" name="ParallelForBackend" fullname="cv::parallel::tbb::ParallelForBackend::ParallelForBackend" href="cv-parallel-tbb-parallelforbackend.html#ParallelForBackend" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ParallelForBackend()"/>
                        <function threadsafety="unspecified" name="~ParallelForBackend" fullname="cv::parallel::tbb::ParallelForBackend::~ParallelForBackend" href="cv-parallel-tbb-parallelforbackend.html#dtor.ParallelForBackend" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="63" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ParallelForBackend()"/>
                        <variable threadsafety="unspecified" name="numThreads" fullname="cv::parallel::tbb::ParallelForBackend::numThreads" href="cv-parallel-tbb-parallelforbackend.html#numThreads-var" status="active" access="protected" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="49" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="numThreadsMax" fullname="cv::parallel::tbb::ParallelForBackend::numThreadsMax" href="cv-parallel-tbb-parallelforbackend.html#numThreadsMax-var" status="active" access="protected" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="50" type="int" static="false"/>
                    </class>
                    <function threadsafety="unspecified" name="getArena" fullname="cv::parallel::tbb::getArena" href="cv-parallel-tbb.html#getArena" status="active" access="public" location="parallel_for.tbb.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/backend/parallel_for.tbb.hpp" lineno="28" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="tbb::task_arena &amp;" signature="tbb::task_arena &amp; getArena()"/>
                </namespace>
                <class threadsafety="unspecified" name="ParallelForAPI" fullname="cv::parallel::ParallelForAPI" href="cv-parallel-parallelforapi.html" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="45">
                    <function threadsafety="unspecified" name="setNumThreads" fullname="cv::parallel::ParallelForAPI::setNumThreads" href="cv-parallel-parallelforapi.html#setNumThreads" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="58" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int setNumThreads(int nThreads) = 0">
                        <parameter left="int" right="" name="nThreads" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="parallel_for" fullname="cv::parallel::ParallelForAPI::parallel_for" href="cv-parallel-parallelforapi.html#parallel_for" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="52" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parallel_for(int tasks, FN_parallel_for_body_cb_t body_callback, void *callback_data) = 0">
                        <parameter left="int" right="" name="tasks" default=""/>
                        <parameter left="FN_parallel_for_body_cb_t" right="" name="body_callback" default=""/>
                        <parameter left="void *" right="" name="callback_data" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~ParallelForAPI" fullname="cv::parallel::ParallelForAPI::~ParallelForAPI" href="cv-parallel-parallelforapi.html#dtor.ParallelForAPI" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="48" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ParallelForAPI()"/>
                    <function threadsafety="unspecified" name="getName" fullname="cv::parallel::ParallelForAPI::getName" href="cv-parallel-parallelforapi.html#getName" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="60" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * getName() const = 0"/>
                    <function threadsafety="unspecified" name="getNumThreads" fullname="cv::parallel::ParallelForAPI::getNumThreads" href="cv-parallel-parallelforapi.html#getNumThreads" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="56" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getNumThreads() const = 0"/>
                    <function threadsafety="unspecified" name="getThreadNum" fullname="cv::parallel::ParallelForAPI::getThreadNum" href="cv-parallel-parallelforapi.html#getThreadNum" status="active" access="public" location="parallel_backend.hpp" filepath="/usr/local/include/opencv4/opencv2/core/parallel/parallel_backend.hpp" lineno="54" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getThreadNum() const = 0"/>
                </class>
            </namespace>
            <class threadsafety="unspecified" name="FileNode" fullname="cv::FileNode" href="cv-filenode.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="481">
                <function threadsafety="unspecified" name="FileNode" fullname="cv::FileNode::FileNode" href="cv-filenode.html#FileNode" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="508" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP FileNode()"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::FileNode::operator=" href="cv-filenode.html#operator-eq" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="524" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNode &amp;" signature="FileNode &amp; operator=(const FileNode &amp;node)">
                    <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                </function>
                <function threadsafety="unspecified" name="FileNode" fullname="cv::FileNode::FileNode" href="cv-filenode.html#FileNode-3" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="620" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNode(FileStorage::Impl *fs, size_t blockIdx, size_t ofs)">
                    <parameter left="FileStorage::Impl *" right="" name="fs" default=""/>
                    <parameter left="size_t" right="" name="blockIdx" default=""/>
                    <parameter left="size_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="FileNode" fullname="cv::FileNode::FileNode" href="cv-filenode.html#FileNode-2" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="522" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNode(const FileNode &amp;node)">
                    <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                </function>
                <function threadsafety="unspecified" name="FileNode" fullname="cv::FileNode::FileNode" href="cv-filenode.html#FileNode-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="517" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNode(const FileStorage *fs, size_t blockIdx, size_t ofs)">
                    <parameter left="const FileStorage *" right="" name="fs" default=""/>
                    <parameter left="size_t" right="" name="blockIdx" default=""/>
                    <parameter left="size_t" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="isCollection" fullname="cv::FileNode::isCollection" href="cv-filenode.html#isCollection" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="585" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isCollection(int flags)">
                    <parameter left="int" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="isEmptyCollection" fullname="cv::FileNode::isEmptyCollection" href="cv-filenode.html#isEmptyCollection" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="586" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isEmptyCollection(int flags)">
                    <parameter left="int" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="isFlow" fullname="cv::FileNode::isFlow" href="cv-filenode.html#isFlow" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="587" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isFlow(int flags)">
                    <parameter left="int" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="isMap" fullname="cv::FileNode::isMap" href="cv-filenode.html#isMap" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="583" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMap(int flags)">
                    <parameter left="int" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="isSeq" fullname="cv::FileNode::isSeq" href="cv-filenode.html#isSeq" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="584" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSeq(int flags)">
                    <parameter left="int" right="" name="flags" default=""/>
                </function>
                <function threadsafety="unspecified" name="ptr" fullname="cv::FileNode::ptr" href="cv-filenode.html#ptr" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="589" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr()"/>
                <function threadsafety="unspecified" name="setValue" fullname="cv::FileNode::setValue" href="cv-filenode.html#setValue" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="610" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setValue(int type, const void *value, int len)">
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="const void *" right="" name="value" default=""/>
                    <parameter left="int" right="" name="len" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::FileNode::operator[]" href="cv-filenode.html#operator-5b-5d" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="530" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNode" signature="FileNode operator[](const String &amp;nodename) const">
                    <parameter left="const String &amp;" right="" name="nodename" default=""/>
                </function>
                <function threadsafety="unspecified" name="begin" fullname="cv::FileNode::begin" href="cv-filenode.html#begin" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="593" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator" signature="FileNodeIterator begin() const"/>
                <function threadsafety="unspecified" name="end" fullname="cv::FileNode::end" href="cv-filenode.html#end" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="595" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator" signature="FileNodeIterator end() const"/>
                <function threadsafety="unspecified" name="ptr" fullname="cv::FileNode::ptr" href="cv-filenode.html#ptr-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="590" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr() const"/>
                <function threadsafety="unspecified" name="operator double" fullname="cv::FileNode::operator double" href="cv-filenode.html#operator-double" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="579" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator double() const"/>
                <function threadsafety="unspecified" name="operator float" fullname="cv::FileNode::operator float" href="cv-filenode.html#operator-float" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="577" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator float() const"/>
                <function threadsafety="unspecified" name="operator int" fullname="cv::FileNode::operator int" href="cv-filenode.html#operator-int" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="575" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator int() const"/>
                <function threadsafety="unspecified" name="operator std::string" fullname="cv::FileNode::operator std::string" href="cv-filenode.html#operator-std::string" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="581" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator std::string() const"/>
                <function threadsafety="unspecified" name="readRaw" fullname="cv::FileNode::readRaw" href="cv-filenode.html#readRaw" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="605" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void readRaw(const String &amp;fmt, void *vec, size_t len) const">
                    <parameter left="const String &amp;" right="" name="fmt" default=""/>
                    <parameter left="void *" right="" name="vec" default=""/>
                    <parameter left="size_t" right="" name="len" default=""/>
                </function>
                <variable threadsafety="unspecified" name="EMPTY" fullname="cv::FileNode::EMPTY" href="cv-filenode.html#EMPTY-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="500" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="FLOAT" fullname="cv::FileNode::FLOAT" href="cv-filenode.html#FLOAT-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="490" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="FLOW" fullname="cv::FileNode::FLOW" href="cv-filenode.html#FLOW-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="497" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="INT" fullname="cv::FileNode::INT" href="cv-filenode.html#INT-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="488" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="MAP" fullname="cv::FileNode::MAP" href="cv-filenode.html#MAP-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="494" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NAMED" fullname="cv::FileNode::NAMED" href="cv-filenode.html#NAMED-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="502" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NONE" fullname="cv::FileNode::NONE" href="cv-filenode.html#NONE-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="487" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="REAL" fullname="cv::FileNode::REAL" href="cv-filenode.html#REAL-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="489" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="SEQ" fullname="cv::FileNode::SEQ" href="cv-filenode.html#SEQ-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="493" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="STR" fullname="cv::FileNode::STR" href="cv-filenode.html#STR-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="491" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="STRING" fullname="cv::FileNode::STRING" href="cv-filenode.html#STRING-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="492" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="TYPE_MASK" fullname="cv::FileNode::TYPE_MASK" href="cv-filenode.html#TYPE_MASK-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="495" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="UNIFORM" fullname="cv::FileNode::UNIFORM" href="cv-filenode.html#UNIFORM-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="498" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="blockIdx" fullname="cv::FileNode::blockIdx" href="cv-filenode.html#blockIdx-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="623" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="fs" fullname="cv::FileNode::fs" href="cv-filenode.html#fs-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="622" type="FileStorage::Impl *" static="false"/>
                <variable threadsafety="unspecified" name="ofs" fullname="cv::FileNode::ofs" href="cv-filenode.html#ofs-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="624" type="size_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="FileNodeIterator" fullname="cv::FileNodeIterator" href="cv-filenodeiterator.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="633">
                <function threadsafety="unspecified" name="operator++" fullname="cv::FileNodeIterator::operator++" href="cv-filenodeiterator.html#operator-2b-2b" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="664" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator &amp;" signature="FileNodeIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::FileNodeIterator::operator+=" href="cv-filenodeiterator.html#operator-2b-eq" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="668" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator &amp;" signature="FileNodeIterator &amp; operator+=(int ofs)">
                    <parameter left="int" right="" name="ofs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::FileNodeIterator::operator=" href="cv-filenodeiterator.html#operator-eq" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="658" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator &amp;" signature="FileNodeIterator &amp; operator=(const FileNodeIterator &amp;it)">
                    <parameter left="const FileNodeIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cv::FileNodeIterator::operator++" href="cv-filenodeiterator.html#operator-2b-2b-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="666" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNodeIterator" signature="FileNodeIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="FileNodeIterator" fullname="cv::FileNodeIterator::FileNodeIterator" href="cv-filenodeiterator.html#FileNodeIterator" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="641" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNodeIterator()"/>
                <function threadsafety="unspecified" name="FileNodeIterator" fullname="cv::FileNodeIterator::FileNodeIterator" href="cv-filenodeiterator.html#FileNodeIterator-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="651" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNodeIterator(const FileNode &amp;node, bool seekEnd)">
                    <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                    <parameter left="bool" right="" name="seekEnd" default=""/>
                </function>
                <function threadsafety="unspecified" name="FileNodeIterator" fullname="cv::FileNodeIterator::FileNodeIterator" href="cv-filenodeiterator.html#FileNodeIterator-2" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="656" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FileNodeIterator(const FileNodeIterator &amp;it)">
                    <parameter left="const FileNodeIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::FileNodeIterator::operator*" href="cv-filenodeiterator.html#operator-2a" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="661" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNode" signature="FileNode operator*() const"/>
                <function threadsafety="unspecified" name="equalTo" fullname="cv::FileNodeIterator::equalTo" href="cv-filenodeiterator.html#equalTo" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="684" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool equalTo(const FileNodeIterator &amp;it) const">
                    <parameter left="const FileNodeIterator &amp;" right="" name="it" default=""/>
                </function>
                <function threadsafety="unspecified" name="remaining" fullname="cv::FileNodeIterator::remaining" href="cv-filenodeiterator.html#remaining" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="682" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t remaining() const"/>
                <variable threadsafety="unspecified" name="blockIdx" fullname="cv::FileNodeIterator::blockIdx" href="cv-filenodeiterator.html#blockIdx-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="688" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="blockSize" fullname="cv::FileNodeIterator::blockSize" href="cv-filenodeiterator.html#blockSize-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="690" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="fs" fullname="cv::FileNodeIterator::fs" href="cv-filenodeiterator.html#fs-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="687" type="FileStorage::Impl *" static="false"/>
                <variable threadsafety="unspecified" name="idx" fullname="cv::FileNodeIterator::idx" href="cv-filenodeiterator.html#idx-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="692" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="nodeNElems" fullname="cv::FileNodeIterator::nodeNElems" href="cv-filenodeiterator.html#nodeNElems-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="691" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="ofs" fullname="cv::FileNodeIterator::ofs" href="cv-filenodeiterator.html#ofs-var" status="active" access="protected" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="689" type="size_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="FileStorage" fullname="cv::FileStorage" href="cv-filestorage.html" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="303">
                <enum threadsafety="unspecified" name="Mode" fullname="cv::FileStorage::Mode" href="cv-filestorage.html#Mode-enum" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="307">
                    <value name="READ" value="0"/>
                    <value name="WRITE" value="1"/>
                    <value name="APPEND" value="2"/>
                    <value name="MEMORY" value="4"/>
                    <value name="FORMAT_MASK" value="( 7&lt;&lt;3 )"/>
                    <value name="FORMAT_AUTO" value="0"/>
                    <value name="FORMAT_XML" value="( 1&lt;&lt;3 )"/>
                    <value name="FORMAT_YAML" value="( 2&lt;&lt;3 )"/>
                    <value name="FORMAT_JSON" value="( 3&lt;&lt;3 )"/>
                    <value name="BASE64" value="64"/>
                    <value name="WRITE_BASE64" value="BASE64 | WRITE"/>
                </enum>
                <enum threadsafety="unspecified" name="State" fullname="cv::FileStorage::State" href="cv-filestorage.html#State-enum" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="323">
                    <value name="UNDEFINED" value="0"/>
                    <value name="VALUE_EXPECTED" value="1"/>
                    <value name="NAME_EXPECTED" value="2"/>
                    <value name="INSIDE_MAP" value="4"/>
                </enum>
                <function threadsafety="unspecified" name="FileStorage" fullname="cv::FileStorage::FileStorage" href="cv-filestorage.html#FileStorage" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="336" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP FileStorage()"/>
                <function threadsafety="unspecified" name="FileStorage" fullname="cv::FileStorage::FileStorage" href="cv-filestorage.html#FileStorage-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="341" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP FileStorage(const String &amp;filename, int flags, const String &amp;encoding)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="flags" default=""/>
                    <parameter left="const String &amp;" right="" name="encoding" default="String()"/>
                </function>
                <function threadsafety="unspecified" name="getDefaultObjectName" fullname="cv::FileStorage::getDefaultObjectName" href="cv-filestorage.html#getDefaultObjectName" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="455" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String getDefaultObjectName(const String &amp;filename)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <function threadsafety="unspecified" name="writeRaw" fullname="cv::FileStorage::writeRaw" href="cv-filestorage.html#writeRaw" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="427" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void writeRaw(const String &amp;fmt, const void *vec, size_t len)">
                    <parameter left="const String &amp;" right="" name="fmt" default=""/>
                    <parameter left="const void *" right="" name="vec" default=""/>
                    <parameter left="size_t" right="" name="len" default=""/>
                </function>
                <function threadsafety="unspecified" name="~FileStorage" fullname="cv::FileStorage::~FileStorage" href="cv-filestorage.html#dtor.FileStorage" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="344" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~FileStorage()"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::FileStorage::operator[]" href="cv-filestorage.html#operator-5b-5d" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="399" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="FileNode" signature="FileNode operator[](const String &amp;nodename) const">
                    <parameter left="const String &amp;" right="" name="nodename" default=""/>
                </function>
                <variable threadsafety="unspecified" name="elname" fullname="cv::FileStorage::elname" href="cv-filestorage.html#elname-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="463" type="std::string" static="false"/>
                <variable threadsafety="unspecified" name="p" fullname="cv::FileStorage::p" href="cv-filestorage.html#p-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="466" type="Ptr&lt;Impl&gt;" static="false"/>
                <variable threadsafety="unspecified" name="state" fullname="cv::FileStorage::state" href="cv-filestorage.html#state-var" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="462" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Quat" fullname="cv::Quat" href="cv-quat.html" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="210">
                <function threadsafety="unspecified" name="Quat" fullname="cv::Quat::Quat" href="cv-quat.html#Quat" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="218" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat()"/>
                <function threadsafety="unspecified" name="Quat" fullname="cv::Quat::Quat" href="cv-quat.html#Quat-2" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="228" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat(_Tp w, _Tp x, _Tp y, _Tp z)">
                    <parameter left="_Tp" right="" name="w" default=""/>
                    <parameter left="_Tp" right="" name="x" default=""/>
                    <parameter left="_Tp" right="" name="y" default=""/>
                    <parameter left="_Tp" right="" name="z" default=""/>
                </function>
                <function threadsafety="unspecified" name="Quat" fullname="cv::Quat::Quat" href="cv-quat.html#Quat-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="223" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat(const Vec&lt;_Tp, 4&gt; &amp;coeff)">
                    <parameter left="const Vec&lt;_Tp, 4&gt; &amp;" right="" name="coeff" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*=" fullname="cv::Quat::operator*=" href="cv-quat.html#operator-2a-eq" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1287" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator*=(const Quat&lt;_Tp&gt; &amp;)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*=" fullname="cv::Quat::operator*=" href="cv-quat.html#operator-2a-eq-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1312" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator*=(const _Tp s)">
                    <parameter left="const _Tp" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::Quat::operator+=" href="cv-quat.html#operator-2b-eq" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1234" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator+=(const Quat&lt;_Tp&gt; &amp;)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::Quat::operator-=" href="cv-quat.html#operator--eq" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1262" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator-=(const Quat&lt;_Tp&gt; &amp;)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/=" fullname="cv::Quat::operator/=" href="cv-quat.html#operator-2f-eq-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1431" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator/=(const Quat&lt;_Tp&gt; &amp;)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/=" fullname="cv::Quat::operator/=" href="cv-quat.html#operator-2f-eq" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1408" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt; &amp;" signature="Quat&lt;_Tp&gt; &amp; operator/=(const _Tp s)">
                    <parameter left="const _Tp" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromAngleAxis" fullname="cv::Quat::createFromAngleAxis" href="cv-quat.html#createFromAngleAxis" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="236" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromAngleAxis(const _Tp angle, const Vec&lt;_Tp, 3&gt; &amp;axis)">
                    <parameter left="const _Tp" right="" name="angle" default=""/>
                    <parameter left="const Vec&lt;_Tp, 3&gt; &amp;" right="" name="axis" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromEulerAngles" fullname="cv::Quat::createFromEulerAngles" href="cv-quat.html#createFromEulerAngles" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="278" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromEulerAngles(const Vec&lt;_Tp, 3&gt; &amp;angles, QuatEnum::EulerAnglesType eulerAnglesType)">
                    <parameter left="const Vec&lt;_Tp, 3&gt; &amp;" right="" name="angles" default=""/>
                    <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromRotMat" fullname="cv::Quat::createFromRotMat" href="cv-quat.html#createFromRotMat" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="241" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromRotMat(InputArray R)">
                    <parameter left="InputArray" right="" name="R" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromRvec" fullname="cv::Quat::createFromRvec" href="cv-quat.html#createFromRvec" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="261" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromRvec(InputArray rvec)">
                    <parameter left="InputArray" right="" name="rvec" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromXRot" fullname="cv::Quat::createFromXRot" href="cv-quat.html#createFromXRot" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="290" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromXRot(const _Tp theta)">
                    <parameter left="const _Tp" right="" name="theta" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromYRot" fullname="cv::Quat::createFromYRot" href="cv-quat.html#createFromYRot" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="284" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromYRot(const _Tp theta)">
                    <parameter left="const _Tp" right="" name="theta" default=""/>
                </function>
                <function threadsafety="unspecified" name="createFromZRot" fullname="cv::Quat::createFromZRot" href="cv-quat.html#createFromZRot" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="296" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; createFromZRot(const _Tp theta)">
                    <parameter left="const _Tp" right="" name="theta" default=""/>
                </function>
                <function threadsafety="unspecified" name="interPoint" fullname="cv::Quat::interPoint" href="cv-quat.html#interPoint" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1156" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; interPoint(const Quat&lt;_Tp&gt; &amp;q0, const Quat&lt;_Tp&gt; &amp;q1, const Quat&lt;_Tp&gt; &amp;q2, QuatAssumeType assumeUnit)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q1" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q2" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="lerp" fullname="cv::Quat::lerp" href="cv-quat.html#lerp" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1086" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; lerp(const Quat&lt;_Tp&gt; &amp;q0, const Quat &amp;q1, const _Tp t)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat &amp;" right="" name="q1" default=""/>
                    <parameter left="const _Tp" right="" name="t" default=""/>
                </function>
                <function threadsafety="unspecified" name="nlerp" fullname="cv::Quat::nlerp" href="cv-quat.html#nlerp" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1100" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; nlerp(const Quat&lt;_Tp&gt; &amp;q0, const Quat &amp;q1, const _Tp t, QuatAssumeType assumeUnit)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat &amp;" right="" name="q1" default=""/>
                    <parameter left="const _Tp" right="" name="t" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="slerp" fullname="cv::Quat::slerp" href="cv-quat.html#slerp" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1118" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; slerp(const Quat&lt;_Tp&gt; &amp;q0, const Quat &amp;q1, const _Tp t, QuatAssumeType assumeUnit, bool directChange)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat &amp;" right="" name="q1" default=""/>
                    <parameter left="const _Tp" right="" name="t" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                    <parameter left="bool" right="" name="directChange" default="true"/>
                </function>
                <function threadsafety="unspecified" name="spline" fullname="cv::Quat::spline" href="cv-quat.html#spline" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1186" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; spline(const Quat&lt;_Tp&gt; &amp;q0, const Quat&lt;_Tp&gt; &amp;q1, const Quat&lt;_Tp&gt; &amp;q2, const Quat&lt;_Tp&gt; &amp;q3, const _Tp t, QuatAssumeType assumeUnit)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q1" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q2" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q3" default=""/>
                    <parameter left="const _Tp" right="" name="t" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="squad" fullname="cv::Quat::squad" href="cv-quat.html#squad" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1140" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; squad(const Quat&lt;_Tp&gt; &amp;q0, const Quat&lt;_Tp&gt; &amp;s0, const Quat&lt;_Tp&gt; &amp;s1, const Quat&lt;_Tp&gt; &amp;q1, const _Tp t, QuatAssumeType assumeUnit, bool directChange)">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q0" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="s0" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="s1" default=""/>
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q1" default=""/>
                    <parameter left="const _Tp" right="" name="t" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                    <parameter left="bool" right="" name="directChange" default="true"/>
                </function>
                <function threadsafety="unspecified" name="toEulerAngles" fullname="cv::Quat::toEulerAngles" href="cv-quat.html#toEulerAngles" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1616" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 3&gt;" signature="Vec&lt;_Tp, 3&gt; toEulerAngles(QuatEnum::EulerAnglesType eulerAnglesType)">
                    <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::Quat::operator[]" href="cv-quat.html#operator-5b-5d" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1433" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator[](std::size_t n)">
                    <parameter left="std::size_t" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="toRotMat3x3" fullname="cv::Quat::toRotMat3x3" href="cv-quat.html#toRotMat3x3" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="956" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, 3, 3&gt;" signature="Matx&lt;_Tp, 3, 3&gt; toRotMat3x3(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="toRotMat4x4" fullname="cv::Quat::toRotMat4x4" href="cv-quat.html#toRotMat4x4" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="976" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, 4, 4&gt;" signature="Matx&lt;_Tp, 4, 4&gt; toRotMat4x4(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="acos" fullname="cv::Quat::acos" href="cv-quat.html#acos" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="800" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; acos() const"/>
                <function threadsafety="unspecified" name="acosh" fullname="cv::Quat::acosh" href="cv-quat.html#acosh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="880" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; acosh() const"/>
                <function threadsafety="unspecified" name="asin" fullname="cv::Quat::asin" href="cv-quat.html#asin" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="772" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; asin() const"/>
                <function threadsafety="unspecified" name="asinh" fullname="cv::Quat::asinh" href="cv-quat.html#asinh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="854" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; asinh() const"/>
                <function threadsafety="unspecified" name="atan" fullname="cv::Quat::atan" href="cv-quat.html#atan" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="828" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; atan() const"/>
                <function threadsafety="unspecified" name="atanh" fullname="cv::Quat::atanh" href="cv-quat.html#atanh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="906" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; atanh() const"/>
                <function threadsafety="unspecified" name="conjugate" fullname="cv::Quat::conjugate" href="cv-quat.html#conjugate" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="318" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; conjugate() const"/>
                <function threadsafety="unspecified" name="cos" fullname="cv::Quat::cos" href="cv-quat.html#cos" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="718" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; cos() const"/>
                <function threadsafety="unspecified" name="cosh" fullname="cv::Quat::cosh" href="cv-quat.html#cosh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="634" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; cosh() const"/>
                <function threadsafety="unspecified" name="crossProduct" fullname="cv::Quat::crossProduct" href="cv-quat.html#crossProduct" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="529" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; crossProduct(const Quat&lt;_Tp&gt; &amp;q) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q" default=""/>
                </function>
                <function threadsafety="unspecified" name="exp" fullname="cv::Quat::exp" href="cv-quat.html#exp" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="347" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; exp() const"/>
                <function threadsafety="unspecified" name="inv" fullname="cv::Quat::inv" href="cv-quat.html#inv" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="578" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; inv(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="log" fullname="cv::Quat::log" href="cv-quat.html#log" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="381" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; log(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="normalize" fullname="cv::Quat::normalize" href="cv-quat.html#normalize" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="542" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; normalize() const"/>
                <function threadsafety="unspecified" name="operator*" fullname="cv::Quat::operator*" href="cv-quat.html#operator-2a" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1336" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator*(const Quat&lt;_Tp&gt; &amp;) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+" fullname="cv::Quat::operator+" href="cv-quat.html#operator-2b" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1219" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator+(const Quat&lt;_Tp&gt; &amp;) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-" fullname="cv::Quat::operator-" href="cv-quat.html#operator-" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1200" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator-() const"/>
                <function threadsafety="unspecified" name="operator-" fullname="cv::Quat::operator-" href="cv-quat.html#operator--1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1247" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator-(const Quat&lt;_Tp&gt; &amp;) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/" fullname="cv::Quat::operator/" href="cv-quat.html#operator-2f-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1383" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator/(const Quat&lt;_Tp&gt; &amp;) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/" fullname="cv::Quat::operator/" href="cv-quat.html#operator-2f" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1361" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; operator/(const _Tp s) const">
                    <parameter left="const _Tp" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="power" fullname="cv::Quat::power" href="cv-quat.html#power-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="498" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; power(const Quat&lt;_Tp&gt; &amp;q, QuatAssumeType assumeUnit) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="q" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="power" fullname="cv::Quat::power" href="cv-quat.html#power" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="424" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; power(const _Tp x, QuatAssumeType assumeUnit) const">
                    <parameter left="const _Tp" right="" name="x" default=""/>
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="sin" fullname="cv::Quat::sin" href="cv-quat.html#sin" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="690" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; sin() const"/>
                <function threadsafety="unspecified" name="sinh" fullname="cv::Quat::sinh" href="cv-quat.html#sinh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="606" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; sinh() const"/>
                <function threadsafety="unspecified" name="sqrt" fullname="cv::Quat::sqrt" href="cv-quat.html#sqrt" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="458" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; sqrt(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="tan" fullname="cv::Quat::tan" href="cv-quat.html#tan" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="744" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; tan() const"/>
                <function threadsafety="unspecified" name="tanh" fullname="cv::Quat::tanh" href="cv-quat.html#tanh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="662" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;_Tp&gt;" signature="Quat&lt;_Tp&gt; tanh() const"/>
                <function threadsafety="unspecified" name="getAxis" fullname="cv::Quat::getAxis" href="cv-quat.html#getAxis" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1051" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 3&gt;" signature="Vec&lt;_Tp, 3&gt; getAxis(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="toRotVec" fullname="cv::Quat::toRotVec" href="cv-quat.html#toRotVec" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1006" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 3&gt;" signature="Vec&lt;_Tp, 3&gt; toRotVec(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="toVec" fullname="cv::Quat::toVec" href="cv-quat.html#toVec" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="987" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 4&gt;" signature="Vec&lt;_Tp, 4&gt; toVec() const"/>
                <function threadsafety="unspecified" name="at" fullname="cv::Quat::at" href="cv-quat.html#at" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="312" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp at(size_t index) const">
                    <parameter left="size_t" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="dot" fullname="cv::Quat::dot" href="cv-quat.html#dot" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1072" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp dot(Quat&lt;_Tp&gt; q) const">
                    <parameter left="Quat&lt;_Tp&gt;" right="" name="q" default=""/>
                </function>
                <function threadsafety="unspecified" name="getAngle" fullname="cv::Quat::getAngle" href="cv-quat.html#getAngle" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1024" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp getAngle(QuatAssumeType assumeUnit) const">
                    <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
                </function>
                <function threadsafety="unspecified" name="norm" fullname="cv::Quat::norm" href="cv-quat.html#norm" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="535" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp norm() const"/>
                <function threadsafety="unspecified" name="isNormal" fullname="cv::Quat::isNormal" href="cv-quat.html#isNormal" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="915" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isNormal(_Tp eps) const">
                    <parameter left="_Tp" right="" name="eps" default="CV_QUAT_EPS"/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::Quat::operator==" href="cv-quat.html#operator-eq-eq" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1206" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Quat&lt;_Tp&gt; &amp;) const">
                    <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::Quat::operator[]" href="cv-quat.html#operator-5b-5d-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1435" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator[](std::size_t n) const">
                    <parameter left="std::size_t" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="assertNormal" fullname="cv::Quat::assertNormal" href="cv-quat.html#assertNormal" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="922" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assertNormal(_Tp eps) const">
                    <parameter left="_Tp" right="" name="eps" default="CV_QUAT_EPS"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="QuatEnum" fullname="cv::QuatEnum" href="cv-quatenum.html" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="55">
                <enum threadsafety="unspecified" name="EulerAnglesType" fullname="cv::QuatEnum::EulerAnglesType" href="cv-quatenum.html#EulerAnglesType-enum" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="98">
                    <value name="INT_XYZ" value="0"/>
                    <value name="INT_XZY" value="1"/>
                    <value name="INT_YXZ" value="2"/>
                    <value name="INT_YZX" value="3"/>
                    <value name="INT_ZXY" value="4"/>
                    <value name="INT_ZYX" value="5"/>
                    <value name="INT_XYX" value="6"/>
                    <value name="INT_XZX" value="7"/>
                    <value name="INT_YXY" value="8"/>
                    <value name="INT_YZY" value="9"/>
                    <value name="INT_ZXZ" value="10"/>
                    <value name="INT_ZYZ" value="11"/>
                    <value name="EXT_XYZ" value="12"/>
                    <value name="EXT_XZY" value="13"/>
                    <value name="EXT_YXZ" value="14"/>
                    <value name="EXT_YZX" value="15"/>
                    <value name="EXT_ZXY" value="16"/>
                    <value name="EXT_ZYX" value="17"/>
                    <value name="EXT_XYX" value="18"/>
                    <value name="EXT_XZX" value="19"/>
                    <value name="EXT_YXY" value="20"/>
                    <value name="EXT_YZY" value="21"/>
                    <value name="EXT_ZXZ" value="22"/>
                    <value name="EXT_ZYZ" value="23"/>
                    <value name="EULER_ANGLES_MAX_VALUE" value="24"/>
                </enum>
            </class>
            <enum threadsafety="unspecified" name="QuatAssumeType" fullname="cv::QuatAssumeType" href="cv.html#QuatAssumeType-enum" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="38">
                <value name="QUAT_ASSUME_NOT_UNIT" value="0"/>
                <value name="QUAT_ASSUME_UNIT" value="1"/>
            </enum>
            <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer" href="cv.html#AutoBuffer" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="952" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer()"/>
            <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer" href="cv.html#AutoBuffer-2" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="967" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer(const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;abuf)">
                <parameter left="const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" right="" name="abuf" default=""/>
            </function>
            <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer" href="cv.html#AutoBuffer-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="959" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer(size_t _size)">
                <parameter left="size_t" right="" name="_size" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="cv::operator=" href="cv.html#operator-eq" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="977" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" signature="AutoBuffer&lt;_Tp, fixed_size&gt; &amp; operator=(const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;abuf)">
                <parameter left="const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" right="" name="abuf" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-6" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1332" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_EXPORTS" signature="CV_EXPORTS operator!=(const FileNodeIterator &amp;it1, const FileNodeIterator &amp;it2)">
                <parameter left="const FileNodeIterator &amp;" right="" name="it1" default=""/>
                <parameter left="const FileNodeIterator &amp;" right="" name="it2" default=""/>
            </function>
            <function threadsafety="unspecified" name="Complex" fullname="cv::Complex" href="cv.html#Complex" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="991" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Complex()"/>
            <function threadsafety="unspecified" name="Complex" fullname="cv::Complex" href="cv.html#Complex-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="995" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Complex(_Tp _re, _Tp _im)">
                <parameter left="_Tp" right="" name="_re" default=""/>
                <parameter left="_Tp" right="" name="_im" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-9" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1108" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator*=(Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1096" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator+=(Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1030" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator+=(Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="cv::operator-=" href="cv.html#operator--eq-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1102" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator-=(Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="cv::operator-=" href="cv.html#operator--eq-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1043" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator-=(Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-7" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1128" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt; &amp;" signature="Complex&lt;_Tp&gt; &amp; operator/=(Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-35" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1068" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator*(_Tp b, const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="_Tp" right="" name="b" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-34" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1062" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator*(const Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-33" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1056" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator*(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-18" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1084" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator+(_Tp b, const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="_Tp" right="" name="b" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-17" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1074" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator+(const Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-16" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1024" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator+(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--25" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1090" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator-(_Tp b, const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="_Tp" right="" name="b" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--23" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1050" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator-(const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--24" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1080" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator-(const Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--22" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1037" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator-(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-20" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1142" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator/(_Tp b, const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="_Tp" right="" name="b" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-19" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1135" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator/(const Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-18" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1120" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator/(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-8" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1148" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; operator/=(const Complex&lt;_Tp&gt; &amp;a, _Tp b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator!=(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-9" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator!=(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-10" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator!=(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&amp;(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&amp;(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="cv::operator&amp;" href="cv.html#operator-and-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&amp;(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-38" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator*(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-36" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator*(const cv::GMat &amp;lhs, float rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="float" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-39" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator*(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-37" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="27" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator*(float lhs, const cv::GMat &amp;rhs)">
                <parameter left="float" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-19" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="16" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator+(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-20" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="18" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator+(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-21" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator+(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--26" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="21" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator-(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--27" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="23" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator-(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--28" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator-(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-23" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="33" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator/(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-21" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator/(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-22" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="32" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator/(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="50" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-5" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;=(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;=(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::operator&lt;=" href="cv.html#operator-lt-eq-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&lt;=(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator==(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-9" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator==(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-10" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="66" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator==(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-5" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;" fullname="cv::operator&gt;" href="cv.html#operator-gt-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-5" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;=(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;=(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::operator&gt;=" href="cv.html#operator-gt-eq-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator&gt;=(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator^(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator^(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator^" fullname="cv::operator^" href="cv.html#operator-5e-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator^(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-6" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator|(const cv::GMat &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-8" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator|(const cv::GMat &amp;lhs, const cv::GScalar &amp;rhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GScalar &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="cv::operator|" href="cv.html#operator-7c-7" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator|(const cv::GScalar &amp;lhs, const cv::GMat &amp;rhs)">
                <parameter left="const cv::GScalar &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GMat &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator~" fullname="cv::operator~" href="cv.html#operator-7e-2" status="active" access="public" location="operators.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/operators.hpp" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_EXPORTS" signature="GAPI_EXPORTS operator~(const cv::GMat &amp;lhs)">
                <parameter left="const cv::GMat &amp;" right="" name="lhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="descr_of" fullname="cv::descr_of" href="cv.html#descr_of" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GArrayDesc" signature="GArrayDesc descr_of(const std::vector&lt;U&gt; &amp;)">
                <parameter left="const std::vector&lt;U&gt; &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="empty_array_desc" fullname="cv::empty_array_desc" href="cv.html#empty_array_desc" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="45" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GArrayDesc" signature="GArrayDesc empty_array_desc()"/>
            <function threadsafety="unspecified" name="compile_args" fullname="cv::compile_args" href="cv.html#compile_args" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="202" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GCompileArgs" signature="GCompileArgs compile_args(Ts &amp;&amp;... args)">
                <parameter left="Ts &amp;&amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="empty_gframe_desc" fullname="cv::empty_gframe_desc" href="cv.html#empty_gframe_desc" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="62" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GFrameDesc" signature="GFrameDesc empty_gframe_desc()"/>
            <function threadsafety="unspecified" name="empty_gmat_desc" fullname="cv::empty_gmat_desc" href="cv.html#empty_gmat_desc" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="204" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc empty_gmat_desc()"/>
            <function threadsafety="unspecified" name="descr_of" fullname="cv::descr_of" href="cv.html#descr_of-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOpaqueDesc" signature="GOpaqueDesc descr_of(const U &amp;)">
                <parameter left="const U &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="empty_gopaque_desc" fullname="cv::empty_gopaque_desc" href="cv.html#empty_gopaque_desc" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="43" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GOpaqueDesc" signature="GOpaqueDesc empty_gopaque_desc()"/>
            <function threadsafety="unspecified" name="gout" fullname="cv::gout" href="cv.html#gout-1" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOptRunArgsP" signature="GOptRunArgsP gout(optional&lt;T&gt; &amp;arg, optional&lt;Ts&gt; &amp;... args)">
                <parameter left="optional&lt;T&gt; &amp;" right="" name="arg" default=""/>
                <parameter left="optional&lt;Ts&gt; &amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="GIn" fullname="cv::GIn" href="cv.html#GIn" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GProtoInputArgs" signature="GProtoInputArgs GIn(Ts &amp;&amp;... ts)">
                <parameter left="Ts &amp;&amp;..." right="" name="ts" default=""/>
            </function>
            <function threadsafety="unspecified" name="GOut" fullname="cv::GOut" href="cv.html#GOut" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GProtoOutputArgs" signature="GProtoOutputArgs GOut(Ts &amp;&amp;... ts)">
                <parameter left="Ts &amp;&amp;..." right="" name="ts" default=""/>
            </function>
            <function threadsafety="unspecified" name="GOut" fullname="cv::GOut" href="cv.html#GOut-1" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GProtoOutputArgs" signature="GProtoOutputArgs GOut(const std::tuple&lt;Ts...&gt; &amp;ts)">
                <parameter left="const std::tuple&lt;Ts...&gt; &amp;" right="" name="ts" default=""/>
            </function>
            <function threadsafety="unspecified" name="GOut" fullname="cv::GOut" href="cv.html#GOut-2" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GProtoOutputArgs" signature="GProtoOutputArgs GOut(std::tuple&lt;Ts...&gt; &amp;&amp;ts)">
                <parameter left="std::tuple&lt;Ts...&gt; &amp;&amp;" right="" name="ts" default=""/>
            </function>
            <function threadsafety="unspecified" name="value_of" fullname="cv::value_of" href="cv.html#value_of" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArg" signature="GRunArg value_of(const GOrigin &amp;origin)">
                <parameter left="const GOrigin &amp;" right="" name="origin" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-5" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="177" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArgs &amp;" signature="GRunArgs &amp; operator+=(GRunArgs &amp;lhs, const GRunArgs &amp;rhs)">
                <parameter left="GRunArgs &amp;" right="" name="lhs" default=""/>
                <parameter left="const GRunArgs &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="gin" fullname="cv::gin" href="cv.html#gin" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="242" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArgs" signature="GRunArgs gin(const Ts &amp;... args)">
                <parameter left="const Ts &amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-6" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="229" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArgsP &amp;" signature="GRunArgsP &amp; operator+=(GRunArgsP &amp;lhs, const GRunArgsP &amp;rhs)">
                <parameter left="GRunArgsP &amp;" right="" name="lhs" default=""/>
                <parameter left="const GRunArgsP &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="gout" fullname="cv::gout" href="cv.html#gout" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="247" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArgsP" signature="GRunArgsP gout(Ts &amp;... args)">
                <parameter left="Ts &amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="empty_scalar_desc" fullname="cv::empty_scalar_desc" href="cv.html#empty_scalar_desc" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="67" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GScalarDesc" signature="GScalarDesc empty_scalar_desc()"/>
            <function threadsafety="unspecified" name="operator++" fullname="cv::operator++" href="cv.html#operator-2b-2b" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4842" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LineIterator &amp;" signature="LineIterator &amp; operator++()"/>
            <function threadsafety="unspecified" name="operator++" fullname="cv::operator++" href="cv.html#operator-2b-2b-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4859" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LineIterator" signature="LineIterator operator++(int )">
                <parameter left="int" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="getRotationMatrix2D" fullname="cv::getRotationMatrix2D" href="cv.html#getRotationMatrix2D" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="2443" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat getRotationMatrix2D(Point2f center, double angle, double scale)">
                <parameter left="Point2f" right="" name="center" default=""/>
                <parameter left="double" right="" name="angle" default=""/>
                <parameter left="double" right="" name="scale" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="550" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0)">
                <parameter left="_Tp" right="" name="v0" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="557" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="565" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="573" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="581" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="589" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-6" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="598" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-7" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="607" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-8" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="616" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-9" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="626" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-10" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="637" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
                <parameter left="_Tp" right="" name="v10" default=""/>
                <parameter left="_Tp" right="" name="v11" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="647" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
                <parameter left="_Tp" right="" name="v10" default=""/>
                <parameter left="_Tp" right="" name="v11" default=""/>
                <parameter left="_Tp" right="" name="v12" default=""/>
                <parameter left="_Tp" right="" name="v13" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="659" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13, _Tp v14, _Tp v15)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
                <parameter left="_Tp" right="" name="v10" default=""/>
                <parameter left="_Tp" right="" name="v11" default=""/>
                <parameter left="_Tp" right="" name="v12" default=""/>
                <parameter left="_Tp" right="" name="v13" default=""/>
                <parameter left="_Tp" right="" name="v14" default=""/>
                <parameter left="_Tp" right="" name="v15" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-20" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="859" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, l&gt; &amp;a, const Matx&lt;_Tp, l, n&gt; &amp;b, Matx_MatMulOp )">
                <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, l, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_MatMulOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="838" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, _T2 alpha, Matx_ScaleOp )">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_T2" right="" name="alpha" default=""/>
                <parameter left="Matx_ScaleOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="824" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_AddOp )">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_AddOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-19" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="852" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_DivOp )">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_DivOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-18" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="845" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_MulOp )">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_MulOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="831" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b, Matx_SubOp )">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_SubOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-21" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="872" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const Matx&lt;_Tp, n, m&gt; &amp;a, Matx_TOp )">
                <parameter left="const Matx&lt;_Tp, n, m&gt; &amp;" right="" name="a" default=""/>
                <parameter left="Matx_TOp" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="670" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(const _Tp *values)">
                <parameter left="const _Tp *" right="" name="values" default=""/>
            </function>
            <function threadsafety="unspecified" name="Matx" fullname="cv::Matx" href="cv.html#Matx-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="676" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matx(std::initializer_list&lt;_Tp&gt; list)">
                <parameter left="std::initializer_list&lt;_Tp&gt;" right="" name="list" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1237" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt; &amp;" signature="Matx&lt;_Tp, m, n&gt; &amp; operator*=(Matx&lt;_Tp, m, n&gt; &amp;a, double alpha)">
                <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1229" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt; &amp;" signature="Matx&lt;_Tp, m, n&gt; &amp; operator*=(Matx&lt;_Tp, m, n&gt; &amp;a, float alpha)">
                <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1221" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt; &amp;" signature="Matx&lt;_Tp, m, n&gt; &amp; operator*=(Matx&lt;_Tp, m, n&gt; &amp;a, int alpha)">
                <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1289" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt; &amp;" signature="Matx&lt;_Tp, m, n&gt; &amp; operator/=(Matx&lt;_Tp, m, n&gt; &amp;a, double alpha)">
                <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1281" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt; &amp;" signature="Matx&lt;_Tp, m, n&gt; &amp; operator/=(Matx&lt;_Tp, m, n&gt; &amp;a, float alpha)">
                <parameter left="Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="all" fullname="cv::all" href="cv.html#all" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="687" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; all(_Tp alpha)">
                <parameter left="_Tp" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="diag" fullname="cv::diag" href="cv.html#diag" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="732" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; diag(const Matx&lt;_Tp, m, n&gt;::diag_type &amp;d)">
                <parameter left="const Matx&lt;_Tp, m, n&gt;::diag_type &amp;" right="" name="d" default=""/>
            </function>
            <function threadsafety="unspecified" name="eye" fullname="cv::eye" href="cv.html#eye" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="707" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; eye()"/>
            <function threadsafety="unspecified" name="ones" fullname="cv::ones" href="cv.html#ones" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="701" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; ones()"/>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-19" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1315" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(const Matx&lt;_Tp, m, l&gt; &amp;a, const Matx&lt;_Tp, l, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, l, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1257" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(const Matx&lt;_Tp, m, n&gt; &amp;a, double alpha)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1251" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(const Matx&lt;_Tp, m, n&gt; &amp;a, float alpha)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1245" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(const Matx&lt;_Tp, m, n&gt; &amp;a, int alpha)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-18" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1275" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(double alpha, const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="double" right="" name="alpha" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1269" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(float alpha, const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="float" right="" name="alpha" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1263" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*(int alpha, const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="int" right="" name="alpha" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1209" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator+(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1309" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator-(const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1215" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator-(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1303" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator/(const Matx&lt;_Tp, m, n&gt; &amp;a, double alpha)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1297" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator/(const Matx&lt;_Tp, m, n&gt; &amp;a, float alpha)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="randn" fullname="cv::randn" href="cv.html#randn" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="225" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; randn(_Tp a, _Tp b)">
                <parameter left="_Tp" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="randu" fullname="cv::randu" href="cv.html#randu" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="217" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; randu(_Tp a, _Tp b)">
                <parameter left="_Tp" right="" name="a" default=""/>
                <parameter left="_Tp" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="zeros" fullname="cv::zeros" href="cv.html#zeros" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="695" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; zeros()"/>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1193" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp1, m, n&gt; &amp;" signature="Matx&lt;_Tp1, m, n&gt; &amp; operator+=(Matx&lt;_Tp1, m, n&gt; &amp;a, const Matx&lt;_Tp2, m, n&gt; &amp;b)">
                <parameter left="Matx&lt;_Tp1, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp2, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="cv::operator-=" href="cv.html#operator--eq" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1201" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp1, m, n&gt; &amp;" signature="Matx&lt;_Tp1, m, n&gt; &amp; operator-=(Matx&lt;_Tp1, m, n&gt; &amp;a, const Matx&lt;_Tp2, m, n&gt; &amp;b)">
                <parameter left="Matx&lt;_Tp1, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp2, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="MatxCommaInitializer" fullname="cv::MatxCommaInitializer" href="cv.html#MatxCommaInitializer" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="953" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatxCommaInitializer(Matx&lt;_Tp, m, n&gt; *_mtx)">
                <parameter left="Matx&lt;_Tp, m, n&gt; *" right="" name="_mtx" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator," fullname="cv::operator," href="cv.html#operator-2c" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="958" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatxCommaInitializer&lt;_Tp, m, n&gt; &amp;" signature="MatxCommaInitializer&lt;_Tp, m, n&gt; &amp; operator,(_T2 value)">
                <parameter left="_T2" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="946" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatxCommaInitializer&lt;_Tp, m, n&gt;" signature="MatxCommaInitializer&lt;_Tp, m, n&gt; operator&lt;&lt;(const Matx&lt;_Tp, m, n&gt; &amp;mtx, _T2 val)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="mtx" default=""/>
                <parameter left="_T2" right="" name="val" default=""/>
            </function>
            <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_" href="cv.html#Point3_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1426" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_()"/>
            <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_" href="cv.html#Point3_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1430" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(_Tp _x, _Tp _y, _Tp _z)">
                <parameter left="_Tp" right="" name="_x" default=""/>
                <parameter left="_Tp" right="" name="_y" default=""/>
                <parameter left="_Tp" right="" name="_z" default=""/>
            </function>
            <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_" href="cv.html#Point3_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(const Point3_ &amp;pt)">
                <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="Point_" fullname="cv::Point_" href="cv.html#Point_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1159" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_()"/>
            <function threadsafety="unspecified" name="Point_" fullname="cv::Point_" href="cv.html#Point_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1163" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(_Tp _x, _Tp _y)">
                <parameter left="_Tp" right="" name="_x" default=""/>
                <parameter left="_Tp" right="" name="_y" default=""/>
            </function>
            <function threadsafety="unspecified" name="Point_" fullname="cv::Point_" href="cv.html#Point_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(const Point_ &amp;pt)">
                <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="format" fullname="cv::format" href="cv.html#format" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="434" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Formatted&gt;" signature="Ptr&lt;Formatted&gt; format(InputArray mtx, Formatter::FormatType fmt)">
                <parameter left="InputArray" right="" name="mtx" default=""/>
                <parameter left="Formatter::FormatType" right="" name="fmt" default=""/>
            </function>
            <function threadsafety="unspecified" name="Quat" fullname="cv::Quat" href="cv.html#Quat" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="40" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat()"/>
            <function threadsafety="unspecified" name="Quat" fullname="cv::Quat" href="cv.html#Quat-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat(const T qw, const T qx, const T qy, const T qz)">
                <parameter left="const T" right="" name="qw" default=""/>
                <parameter left="const T" right="" name="qx" default=""/>
                <parameter left="const T" right="" name="qy" default=""/>
                <parameter left="const T" right="" name="qz" default=""/>
            </function>
            <function threadsafety="unspecified" name="Quat" fullname="cv::Quat" href="cv.html#Quat-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Quat(const Vec&lt;T, 4&gt; &amp;coeff)">
                <parameter left="const Vec&lt;T, 4&gt; &amp;" right="" name="coeff" default=""/>
            </function>
            <function threadsafety="unspecified" name="sqrt" fullname="cv::sqrt" href="cv.html#sqrt" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1677" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;S&gt;" signature="Quat&lt;S&gt; sqrt(const Quat&lt;S&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;S&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-7" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="223" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator*=(const Quat&lt;T&gt; &amp;q1)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-8" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="248" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator*=(const T q1)">
                <parameter left="const T" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="182" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator+=(const Quat&lt;T&gt; &amp;q1)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="cv::operator-=" href="cv.html#operator--eq-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="192" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator-=(const Quat&lt;T&gt; &amp;q1)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-5" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="238" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator/=(const Quat&lt;T&gt; &amp;q1)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-6" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="258" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt; &amp;" signature="Quat&lt;T&gt; &amp; operator/=(const T a)">
                <parameter left="const T" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="acos" fullname="cv::acos" href="cv.html#acos" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1656" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acos(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="acos" fullname="cv::acos" href="cv.html#acos-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="629" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acos(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="acosh" fullname="cv::acosh" href="cv.html#acosh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1647" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acosh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="acosh" fullname="cv::acosh" href="cv.html#acosh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="587" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acosh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="asin" fullname="cv::asin" href="cv.html#asin" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1653" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asin(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="asin" fullname="cv::asin" href="cv.html#asin-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="614" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asin(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="asinh" fullname="cv::asinh" href="cv.html#asinh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1644" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asinh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="asinh" fullname="cv::asinh" href="cv.html#asinh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="575" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asinh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="atan" fullname="cv::atan" href="cv.html#atan" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1659" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atan(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="atan" fullname="cv::atan" href="cv.html#atan-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="644" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atan(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="atanh" fullname="cv::atanh" href="cv.html#atanh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1650" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atanh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="atanh" fullname="cv::atanh" href="cv.html#atanh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="599" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atanh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="cos" fullname="cv::cos" href="cv.html#cos" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1638" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cos(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="cos" fullname="cv::cos" href="cv.html#cos-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="548" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cos(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="cosh" fullname="cv::cosh" href="cv.html#cosh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1629" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cosh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="cosh" fullname="cv::cosh" href="cv.html#cosh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="503" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cosh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromAngleAxis" fullname="cv::createFromAngleAxis" href="cv.html#createFromAngleAxis" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromAngleAxis(const T angle, const Vec&lt;T, 3&gt; &amp;axis)">
                <parameter left="const T" right="" name="angle" default=""/>
                <parameter left="const Vec&lt;T, 3&gt; &amp;" right="" name="axis" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromEulerAngles" fullname="cv::createFromEulerAngles" href="cv.html#createFromEulerAngles" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="912" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromEulerAngles(const Vec&lt;T, 3&gt; &amp;angles, QuatEnum::EulerAnglesType eulerAnglesType)">
                <parameter left="const Vec&lt;T, 3&gt; &amp;" right="" name="angles" default=""/>
                <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromRotMat" fullname="cv::createFromRotMat" href="cv.html#createFromRotMat" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="68" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromRotMat(InputArray _R)">
                <parameter left="InputArray" right="" name="_R" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromRvec" fullname="cv::createFromRvec" href="cv.html#createFromRvec" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromRvec(InputArray _rvec)">
                <parameter left="InputArray" right="" name="_rvec" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromXRot" fullname="cv::createFromXRot" href="cv.html#createFromXRot" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="901" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromXRot(const T theta)">
                <parameter left="const T" right="" name="theta" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromYRot" fullname="cv::createFromYRot" href="cv.html#createFromYRot" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="895" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromYRot(const T theta)">
                <parameter left="const T" right="" name="theta" default=""/>
            </function>
            <function threadsafety="unspecified" name="createFromZRot" fullname="cv::createFromZRot" href="cv.html#createFromZRot" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="906" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; createFromZRot(const T theta)">
                <parameter left="const T" right="" name="theta" default=""/>
            </function>
            <function threadsafety="unspecified" name="crossProduct" fullname="cv::crossProduct" href="cv.html#crossProduct" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1674" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; crossProduct(const Quat&lt;T&gt; &amp;p, const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="p" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="crossProduct" fullname="cv::crossProduct" href="cv.html#crossProduct-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="440" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; crossProduct(const Quat&lt;T&gt; &amp;p, const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="p" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="exp" fullname="cv::exp" href="cv.html#exp" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1665" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; exp(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="exp" fullname="cv::exp" href="cv.html#exp-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="341" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; exp(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="interPoint" fullname="cv::interPoint" href="cv.html#interPoint" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="830" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; interPoint(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const Quat&lt;T&gt; &amp;q2, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q2" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="inv" fullname="cv::inv" href="cv.html#inv-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1623" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; inv(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
            </function>
            <function threadsafety="unspecified" name="inv" fullname="cv::inv" href="cv.html#inv-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="464" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; inv(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="lerp" fullname="cv::lerp" href="cv.html#lerp" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="740" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; lerp(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const T t)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const T" right="" name="t" default=""/>
            </function>
            <function threadsafety="unspecified" name="log" fullname="cv::log" href="cv.html#log" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1668" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; log(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
            </function>
            <function threadsafety="unspecified" name="log" fullname="cv::log" href="cv.html#log-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="356" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; log(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="nlerp" fullname="cv::nlerp" href="cv.html#nlerp" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="774" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; nlerp(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const T t, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const T" right="" name="t" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-29" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1683" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator*(const Quat&lt;T&gt; &amp;, const T )">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="" default=""/>
                <parameter left="const T" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-31" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="211" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator*(const Quat&lt;T&gt; &amp;q1, const T a)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const T" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-28" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1680" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator*(const T , const Quat&lt;T&gt; &amp;)">
                <parameter left="const T" right="" name="" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-32" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="217" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator*(const T a, const Quat&lt;T&gt; &amp;q1)">
                <parameter left="const T" right="" name="a" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-15" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator+(const Quat&lt;T&gt; &amp;q, const T a)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="const T" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-14" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="152" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator+(const T a, const Quat&lt;T&gt; &amp;q)">
                <parameter left="const T" right="" name="a" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--20" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator-(const Quat&lt;T&gt; &amp;q, const T a)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="const T" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--19" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator-(const T a, const Quat&lt;T&gt; &amp;q)">
                <parameter left="const T" right="" name="a" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power-4" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="420" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const Quat&lt;T&gt; &amp;p, const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="p" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1662" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const Quat&lt;T&gt; &amp;q, const Quat&lt;T&gt; &amp;p, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="p" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power-1" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1671" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const Quat&lt;T&gt; &amp;q, const T x, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="const T" right="" name="x" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default="QUAT_ASSUME_NOT_UNIT"/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="381" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const Quat&lt;T&gt; &amp;q1, const T alpha, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const T" right="" name="alpha" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="sin" fullname="cv::sin" href="cv.html#sin" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1635" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sin(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="sin" fullname="cv::sin" href="cv.html#sin-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="532" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sin(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="sinh" fullname="cv::sinh" href="cv.html#sinh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1626" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sinh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="sinh" fullname="cv::sinh" href="cv.html#sinh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="486" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sinh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="slerp" fullname="cv::slerp" href="cv.html#slerp" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="746" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; slerp(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const T t, QuatAssumeType assumeUnit, bool directChange)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const T" right="" name="t" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
                <parameter left="bool" right="" name="directChange" default=""/>
            </function>
            <function threadsafety="unspecified" name="spline" fullname="cv::spline" href="cv.html#spline" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="844" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; spline(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const Quat&lt;T&gt; &amp;q2, const Quat&lt;T&gt; &amp;q3, const T t, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q2" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q3" default=""/>
                <parameter left="const T" right="" name="t" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="sqrt" fullname="cv::sqrt" href="cv.html#sqrt-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="407" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sqrt(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="squad" fullname="cv::squad" href="cv.html#squad" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="810" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; squad(const Quat&lt;T&gt; &amp;q0, const Quat&lt;T&gt; &amp;q1, const Quat&lt;T&gt; &amp;q2, const Quat&lt;T&gt; &amp;q3, const T t, QuatAssumeType assumeUnit, bool directChange)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q0" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q2" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q3" default=""/>
                <parameter left="const T" right="" name="t" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
                <parameter left="bool" right="" name="directChange" default=""/>
            </function>
            <function threadsafety="unspecified" name="tan" fullname="cv::tan" href="cv.html#tan" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1641" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tan(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="tan" fullname="cv::tan" href="cv.html#tan-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="563" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tan(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="tanh" fullname="cv::tanh" href="cv.html#tanh" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1632" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tanh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="tanh" fullname="cv::tanh" href="cv.html#tanh-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="519" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tanh(const Quat&lt;T&gt; &amp;q)">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="make_rmat" fullname="cv::make_rmat" href="cv.html#make_rmat" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="148" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="RMat" signature="RMat make_rmat(Ts &amp;&amp;... args)">
                <parameter left="Ts &amp;&amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="morphologyDefaultBorderValue" fullname="cv::morphologyDefaultBorderValue" href="cv.html#morphologyDefaultBorderValue" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1399" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Scalar" signature="Scalar morphologyDefaultBorderValue()"/>
            <function threadsafety="unspecified" name="operator[]" fullname="cv::operator[]" href="cv.html#operator-5b-5d-3" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="299" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; operator[](std::size_t n)">
                <parameter left="std::size_t" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="977" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec()"/>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="980" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0)">
                <parameter left="_Tp" right="" name="v0" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="984" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="988" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="992" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="996" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-6" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1000" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-7" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1004" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-8" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1008" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-9" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1012" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-10" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1016" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1020" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)">
                <parameter left="_Tp" right="" name="v0" default=""/>
                <parameter left="_Tp" right="" name="v1" default=""/>
                <parameter left="_Tp" right="" name="v2" default=""/>
                <parameter left="_Tp" right="" name="v3" default=""/>
                <parameter left="_Tp" right="" name="v4" default=""/>
                <parameter left="_Tp" right="" name="v5" default=""/>
                <parameter left="_Tp" right="" name="v6" default=""/>
                <parameter left="_Tp" right="" name="v7" default=""/>
                <parameter left="_Tp" right="" name="v8" default=""/>
                <parameter left="_Tp" right="" name="v9" default=""/>
                <parameter left="_Tp" right="" name="v10" default=""/>
                <parameter left="_Tp" right="" name="v11" default=""/>
                <parameter left="_Tp" right="" name="v12" default=""/>
                <parameter left="_Tp" right="" name="v13" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1044" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, _T2 alpha, Matx_ScaleOp op)">
                <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                <parameter left="_T2" right="" name="alpha" default=""/>
                <parameter left="Matx_ScaleOp" right="" name="op" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1036" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, const Matx&lt;_Tp, cn, 1&gt; &amp;b, Matx_AddOp op)">
                <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_AddOp" right="" name="op" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1040" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Matx&lt;_Tp, cn, 1&gt; &amp;a, const Matx&lt;_Tp, cn, 1&gt; &amp;b, Matx_SubOp op)">
                <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, cn, 1&gt; &amp;" right="" name="b" default=""/>
                <parameter left="Matx_SubOp" right="" name="op" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1032" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const Vec&lt;_Tp, cn&gt; &amp;m)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1024" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(const _Tp *values)">
                <parameter left="const _Tp *" right="" name="values" default=""/>
            </function>
            <function threadsafety="unspecified" name="Vec" fullname="cv::Vec" href="cv.html#Vec-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1028" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vec(std::initializer_list&lt;_Tp&gt; list)">
                <parameter left="std::initializer_list&lt;_Tp&gt;" right="" name="list" default=""/>
            </function>
            <function threadsafety="unspecified" name="toEulerAngles" fullname="cv::toEulerAngles" href="cv.html#toEulerAngles" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="954" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;T, 3&gt;" signature="Vec&lt;T, 3&gt; toEulerAngles(QuatEnum::EulerAnglesType eulerAnglesType)">
                <parameter left="QuatEnum::EulerAnglesType" right="" name="eulerAnglesType" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-6" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1498" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 4&gt; &amp;" signature="Vec&lt;_Tp, 4&gt; &amp; operator*=(Vec&lt;_Tp, 4&gt; &amp;v1, const Vec&lt;_Tp, 4&gt; &amp;v2)">
                <parameter left="Vec&lt;_Tp, 4&gt; &amp;" right="" name="v1" default=""/>
                <parameter left="const Vec&lt;_Tp, 4&gt; &amp;" right="" name="v2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-27" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1490" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, 4&gt;" signature="Vec&lt;_Tp, 4&gt; operator*(const Vec&lt;_Tp, 4&gt; &amp;v1, const Vec&lt;_Tp, 4&gt; &amp;v2)">
                <parameter left="const Vec&lt;_Tp, 4&gt; &amp;" right="" name="v1" default=""/>
                <parameter left="const Vec&lt;_Tp, 4&gt; &amp;" right="" name="v2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1393" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator*=(Vec&lt;_Tp, cn&gt; &amp;a, double alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1385" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator*=(Vec&lt;_Tp, cn&gt; &amp;a, float alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*=" fullname="cv::operator*=" href="cv.html#operator-2a-eq-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1377" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator*=(Vec&lt;_Tp, cn&gt; &amp;a, int alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1419" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator/=(Vec&lt;_Tp, cn&gt; &amp;a, double alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1410" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator/=(Vec&lt;_Tp, cn&gt; &amp;a, float alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/=" fullname="cv::operator/=" href="cv.html#operator-2f-eq-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1401" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt; &amp;" signature="Vec&lt;_Tp, cn&gt; &amp; operator/=(Vec&lt;_Tp, cn&gt; &amp;a, int alpha)">
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="all" fullname="cv::all" href="cv.html#all-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1048" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; all(_Tp alpha)">
                <parameter left="_Tp" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="normalize" fullname="cv::normalize" href="cv.html#normalize-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; normalize(const Vec&lt;_Tp, cn&gt; &amp;v)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="normalize" fullname="cv::normalize" href="cv.html#normalize" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="478" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; normalize(const Vec&lt;_Tp, cn&gt; &amp;v)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-25" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1452" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(const Vec&lt;_Tp, cn&gt; &amp;a, double alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-23" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1440" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(const Vec&lt;_Tp, cn&gt; &amp;a, float alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-21" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1428" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(const Vec&lt;_Tp, cn&gt; &amp;a, int alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-26" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1458" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(double alpha, const Vec&lt;_Tp, cn&gt; &amp;a)">
                <parameter left="double" right="" name="alpha" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-24" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1446" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(float alpha, const Vec&lt;_Tp, cn&gt; &amp;a)">
                <parameter left="float" right="" name="alpha" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-22" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1434" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*(int alpha, const Vec&lt;_Tp, cn&gt; &amp;a)">
                <parameter left="int" right="" name="alpha" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1365" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator+(const Vec&lt;_Tp, cn&gt; &amp;a, const Vec&lt;_Tp, cn&gt; &amp;b)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--16" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1482" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator-(const Vec&lt;_Tp, cn&gt; &amp;a)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1371" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator-(const Vec&lt;_Tp, cn&gt; &amp;a, const Vec&lt;_Tp, cn&gt; &amp;b)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-15" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1476" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator/(const Vec&lt;_Tp, cn&gt; &amp;a, double alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="double" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-14" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1470" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator/(const Vec&lt;_Tp, cn&gt; &amp;a, float alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="float" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-13" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1464" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator/(const Vec&lt;_Tp, cn&gt; &amp;a, int alpha)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="int" right="" name="alpha" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-20" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1321" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, m&gt;" signature="Vec&lt;_Tp, m&gt; operator*(const Matx&lt;_Tp, m, n&gt; &amp;a, const Vec&lt;_Tp, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Vec&lt;_Tp, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1349" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp1, cn&gt; &amp;" signature="Vec&lt;_Tp1, cn&gt; &amp; operator+=(Vec&lt;_Tp1, cn&gt; &amp;a, const Vec&lt;_Tp2, cn&gt; &amp;b)">
                <parameter left="Vec&lt;_Tp1, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Vec&lt;_Tp2, cn&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="cv::operator-=" href="cv.html#operator--eq-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1357" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp1, cn&gt; &amp;" signature="Vec&lt;_Tp1, cn&gt; &amp; operator-=(Vec&lt;_Tp1, cn&gt; &amp;a, const Vec&lt;_Tp2, cn&gt; &amp;b)">
                <parameter left="Vec&lt;_Tp1, cn&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Vec&lt;_Tp2, cn&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="VecCommaInitializer" fullname="cv::VecCommaInitializer" href="cv.html#VecCommaInitializer" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="VecCommaInitializer(Vec&lt;_Tp, cn&gt; *_vec)">
                <parameter left="Vec&lt;_Tp, cn&gt; *" right="" name="_vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator," fullname="cv::operator," href="cv.html#operator-2c-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1171" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="VecCommaInitializer&lt;_Tp, cn&gt; &amp;" signature="VecCommaInitializer&lt;_Tp, cn&gt; &amp; operator,(_T2 value)">
                <parameter left="_T2" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-17" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1159" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="VecCommaInitializer&lt;_Tp, cn&gt;" signature="VecCommaInitializer&lt;_Tp, cn&gt; operator&lt;&lt;(const Vec&lt;_Tp, cn&gt; &amp;vec, _T2 val)">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="vec" default=""/>
                <parameter left="_T2" right="" name="val" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-5" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1412" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL2Sqr(const Point_&lt;double&gt; &amp;pt)">
                <parameter left="const Point_&lt;double&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1411" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL2Sqr(const Point_&lt;float&gt; &amp;pt)">
                <parameter left="const Point_&lt;float&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1410" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_AccTp" signature="_AccTp normL2Sqr(const Point_&lt;int64&gt; &amp;pt)">
                <parameter left="const Point_&lt;int64&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="816" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int i)">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int i)">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="801" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator()(int row_idx, int col_idx)">
                <parameter left="int" right="" name="row_idx" default=""/>
                <parameter left="int" right="" name="col_idx" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator[]" fullname="cv::operator[]" href="cv.html#operator-5b-5d-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp &amp;" signature="_Tp &amp; operator[](int i)">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-7" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="94" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-6" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="92" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-60" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="160" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(float16_t v)">
                <parameter left="float16_t" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-5" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="90" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-8" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="96" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-1" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="82" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-3" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="86" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-72" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="407" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-71" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="406" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="80" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(uchar v)">
                <parameter left="uchar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-9" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="98" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-4" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="88" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-2" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="84" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp saturate_cast(ushort v)">
                <parameter left="ushort" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-7" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1018" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="cv::operator!=" href="cv.html#operator-not-eq-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1336" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;" fullname="cv::operator&lt;" href="cv.html#operator-lt-5" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1340" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const FileNodeIterator &amp;it1, const FileNodeIterator &amp;it2)">
                <parameter left="const FileNodeIterator &amp;" right="" name="it1" default=""/>
                <parameter left="const FileNodeIterator &amp;" right="" name="it2" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-7" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1012" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Complex&lt;_Tp&gt; &amp;a, const Complex&lt;_Tp&gt; &amp;b)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-5" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1328" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Matx&lt;_Tp, m, n&gt; &amp;a, const Matx&lt;_Tp, m, n&gt; &amp;b)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="cv::operator+=" href="cv.html#operator-2b-eq-7" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GIOProtoArgs&lt;Tg&gt; &amp;" signature="cv::GIOProtoArgs&lt;Tg&gt; &amp; operator+=(cv::GIOProtoArgs&lt;Tg&gt; &amp;lhs, const cv::GIOProtoArgs&lt;Tg&gt; &amp;rhs)">
                <parameter left="cv::GIOProtoArgs&lt;Tg&gt; &amp;" right="" name="lhs" default=""/>
                <parameter left="const cv::GIOProtoArgs&lt;Tg&gt; &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="Create" fullname="cv::Create" href="cv.html#Create" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::MediaFrame" signature="cv::MediaFrame Create(Args &amp;&amp;... args)">
                <parameter left="Args &amp;&amp;..." right="" name="args" default=""/>
            </function>
            <function threadsafety="unspecified" name="to_own" fullname="cv::to_own" href="cv.html#to_own-1" status="active" access="public" location="convert.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/convert.hpp" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="cv::gapi::own::Mat" signature="cv::gapi::own::Mat to_own(Mat &amp;&amp;) = delete">
                <parameter left="Mat &amp;&amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="to_own" fullname="cv::to_own" href="cv.html#to_own-2" status="active" access="public" location="convert.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/convert.hpp" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::own::Mat" signature="cv::gapi::own::Mat to_own(Mat const &amp;m)">
                <parameter left="Mat const &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-6" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1114" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double abs(const Complex&lt;_Tp&gt; &amp;a)">
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="determinant" fullname="cv::determinant" href="cv.html#determinant-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="905" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double determinant(const Matx&lt;_Tp, m, m&gt; &amp;a)">
                <parameter left="const Matx&lt;_Tp, m, m&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="determinant" fullname="cv::determinant" href="cv.html#determinant" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="304" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double determinant(const Matx&lt;_Tp, m, m&gt; &amp;a)">
                <parameter left="const Matx&lt;_Tp, m, m&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="norm" fullname="cv::norm" href="cv.html#norm" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="306" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double norm(const Matx&lt;_Tp, m, n&gt; &amp;M)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
            </function>
            <function threadsafety="unspecified" name="norm" fullname="cv::norm" href="cv.html#norm-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="920" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double norm(const Matx&lt;_Tp, m, n&gt; &amp;M)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
            </function>
            <function threadsafety="unspecified" name="norm" fullname="cv::norm" href="cv.html#norm-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="307" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double norm(const Matx&lt;_Tp, m, n&gt; &amp;M, int normType)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
                <parameter left="int" right="" name="normType" default=""/>
            </function>
            <function threadsafety="unspecified" name="norm" fullname="cv::norm" href="cv.html#norm-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="926" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double norm(const Matx&lt;_Tp, m, n&gt; &amp;M, int normType)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
                <parameter left="int" right="" name="normType" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-11" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1420" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double normL2Sqr(const Point_&lt;double&gt; &amp;pt)">
                <parameter left="const Point_&lt;double&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-10" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1419" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double normL2Sqr(const Point_&lt;float&gt; &amp;pt)">
                <parameter left="const Point_&lt;float&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-9" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1417" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double normL2Sqr(const Point_&lt;int&gt; &amp;pt)">
                <parameter left="const Point_&lt;int&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="trace" fullname="cv::trace" href="cv.html#trace-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="911" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double trace(const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="trace" fullname="cv::trace" href="cv.html#trace" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="305" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double trace(const Matx&lt;_Tp, m, n&gt; &amp;a)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-8" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float normL2Sqr(const Point_&lt;float&gt; &amp;pt)">
                <parameter left="const Point_&lt;float&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-70" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-69" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-66" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-68" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="171" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-62" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="165" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-64" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-61" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(uchar v)">
                <parameter left="uchar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-67" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-65" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-63" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float16_t" signature="float16_t saturate_cast(ushort v)">
                <parameter left="ushort" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="ocv_kernel" fullname="cv::ocv_kernel" href="cv.html#ocv_kernel" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="511" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="gapi::cpu::GOCVFunctor" signature="gapi::cpu::GOCVFunctor ocv_kernel(Callable &amp;c)">
                <parameter left="Callable &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="ocv_kernel" fullname="cv::ocv_kernel" href="cv.html#ocv_kernel-1" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="521" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="gapi::cpu::GOCVFunctor" signature="gapi::cpu::GOCVFunctor ocv_kernel(const Callable &amp;c)">
                <parameter left="const Callable &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-6" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1414" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int normL2Sqr(const Point_&lt;int&gt; &amp;pt)">
                <parameter left="const Point_&lt;int&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="partition" fullname="cv::partition" href="cv.html#partition" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="502" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int partition(const std::vector&lt;_Tp&gt; &amp;_vec, std::vector&lt;int&gt; &amp;labels, _EqPredicate predicate)">
                <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="_vec" default=""/>
                <parameter left="std::vector&lt;int&gt; &amp;" right="" name="labels" default=""/>
                <parameter left="_EqPredicate" right="" name="predicate" default="_EqPredicate()"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="440" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(Ptr&lt;Formatted&gt; fmtd, FILE *stream)">
                <parameter left="Ptr&lt;Formatted&gt;" right="" name="fmtd" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print-1" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="451" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(const Mat &amp;mtx, FILE *stream)">
                <parameter left="const Mat &amp;" right="" name="mtx" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print-5" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="475" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(const Matx&lt;_Tp, m, n&gt; &amp;matx, FILE *stream)">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="matx" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print-2" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="457" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(const UMat &amp;mtx, FILE *stream)">
                <parameter left="const UMat &amp;" right="" name="mtx" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print-4" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="469" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(const std::vector&lt;Point3_&lt;_Tp&gt; &gt; &amp;vec, FILE *stream)">
                <parameter left="const std::vector&lt;Point3_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="print" fullname="cv::print" href="cv.html#print-3" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="463" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int print(const std::vector&lt;Point_&lt;_Tp&gt; &gt; &amp;vec, FILE *stream)">
                <parameter left="const std::vector&lt;Point_&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
                <parameter left="FILE *" right="" name="stream" default="stdout"/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-47" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="141" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-46" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-44" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="138" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-82" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="422" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-81" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="421" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-45" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-43" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="137" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="normL2Sqr" fullname="cv::normL2Sqr" href="cv.html#normL2Sqr-7" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1415" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 normL2Sqr(const Point_&lt;int64&gt; &amp;pt)">
                <parameter left="const Point_&lt;int64&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-59" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="157" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-84" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="425" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64_t" signature="int64_t saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-83" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="424" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64_t" signature="int64_t saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--17" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1334" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="ptrdiff_t" signature="ptrdiff_t operator-(const FileNodeIterator &amp;it1, const FileNodeIterator &amp;it2)">
                <parameter left="const FileNodeIterator &amp;" right="" name="it1" default=""/>
                <parameter left="const FileNodeIterator &amp;" right="" name="it2" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-25" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="116" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-24" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="115" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-21" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="112" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-26" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-22" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-76" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="413" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-75" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="412" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-19" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(uchar v)">
                <parameter left="uchar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-27" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="118" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-23" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-20" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="schar" signature="schar saturate_cast(ushort v)">
                <parameter left="ushort" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-40" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-39" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="132" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-37" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="130" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-41" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-80" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="419" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-79" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="418" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-42" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-38" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="131" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-36" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short saturate_cast(ushort v)">
                <parameter left="ushort" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="getElemSize" fullname="cv::getElemSize" href="cv.html#getElemSize" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="568" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t getElemSize(int type)">
                <parameter left="int" right="" name="type" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-5" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="445" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble abs(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="max" fullname="cv::max" href="cv.html#max-3" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="441" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble max(const softdouble &amp;a, const softdouble &amp;b)">
                <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                <parameter left="const softdouble &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="min" fullname="cv::min" href="cv.html#min-3" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="438" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble min(const softdouble &amp;a, const softdouble &amp;b)">
                <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                <parameter left="const softdouble &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cv::abs" href="cv.html#abs-4" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="444" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat abs(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="max" fullname="cv::max" href="cv.html#max-2" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="440" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat max(const softfloat &amp;a, const softfloat &amp;b)">
                <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                <parameter left="const softfloat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="min" fullname="cv::min" href="cv.html#min-2" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="437" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat min(const softfloat &amp;a, const softfloat &amp;b)">
                <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                <parameter left="const softfloat &amp;" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-19" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="1686" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;, const Quat&lt;S&gt; &amp;)">
                <parameter left="std::ostream &amp;" right="" name="" default=""/>
                <parameter left="const Quat&lt;S&gt; &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-18" status="active" access="public" location="quaternion.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.hpp" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;, const Quat&lt;_Tp&gt; &amp;)">
                <parameter left="std::ostream &amp;" right="" name="" default=""/>
                <parameter left="const Quat&lt;_Tp&gt; &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-20" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="316" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const Quat&lt;T&gt; &amp;q)">
                <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-22" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const cv::GArrayDesc &amp;desc)">
                <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                <parameter left="const cv::GArrayDesc &amp;" right="" name="desc" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-23" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const cv::GOpaqueDesc &amp;desc)">
                <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                <parameter left="const cv::GOpaqueDesc &amp;" right="" name="desc" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-24" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const cv::GScalarDesc &amp;desc)">
                <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                <parameter left="const cv::GScalarDesc &amp;" right="" name="desc" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::operator&lt;&lt;" href="cv.html#operator-lt-lt-21" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="397" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const TickMeter &amp;tm)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const TickMeter &amp;" right="" name="tm" default=""/>
            </function>
            <function threadsafety="unspecified" name="to_own" fullname="cv::to_own" href="cv.html#to_own" status="active" access="public" location="convert.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/convert.hpp" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T&gt;" signature="std::vector&lt;T&gt; to_own(const cv::MatSize &amp;sz)">
                <parameter left="const cv::MatSize &amp;" right="" name="sz" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-40" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4836" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * operator*()"/>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-16" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-15" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-12" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-17" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-10" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-13" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="103" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-74" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="410" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-73" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="409" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-18" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-14" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-11" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar" signature="uchar saturate_cast(ushort v)">
                <parameter left="ushort" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-57" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="154" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-58" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-55" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="152" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-56" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="153" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64" signature="uint64 saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-88" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="434" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-87" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="433" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint64_t" signature="uint64_t saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-54" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-53" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-50" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="145" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-51" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="146" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-48" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-49" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="144" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-86" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="431" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-85" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="430" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-52" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned" signature="unsigned saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-33" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(double v)">
                <parameter left="double" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-32" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(float v)">
                <parameter left="float" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-30" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="122" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(int v)">
                <parameter left="int" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-34" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(int64 v)">
                <parameter left="int64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-28" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(schar v)">
                <parameter left="schar" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-29" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(short v)">
                <parameter left="short" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-78" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(softdouble a)">
                <parameter left="softdouble" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-77" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="415" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(softfloat a)">
                <parameter left="softfloat" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-35" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="127" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(uint64 v)">
                <parameter left="uint64" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="saturate_cast" fullname="cv::saturate_cast" href="cv.html#saturate_cast-31" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/core/saturate.hpp" lineno="123" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ushort" signature="ushort saturate_cast(unsigned v)">
                <parameter left="unsigned" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="allocate" fullname="cv::allocate" href="cv.html#allocate" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="994" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void allocate(size_t _size)">
                <parameter left="size_t" right="" name="_size" default=""/>
            </function>
            <function threadsafety="unspecified" name="deallocate" fullname="cv::deallocate" href="cv.html#deallocate" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1010" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deallocate()"/>
            <function threadsafety="unspecified" name="forEach_impl" fullname="cv::forEach_impl" href="cv.html#forEach_impl" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="617" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forEach_impl(const Functor &amp;operation)">
                <parameter left="const Functor &amp;" right="" name="operation" default=""/>
            </function>
            <function threadsafety="unspecified" name="parallel_for_" fullname="cv::parallel_for_" href="cv.html#parallel_for_" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="609" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void parallel_for_(const Range &amp;range, std::function&lt;void( const Range &amp; ) &gt; functor, double nstripes)">
                <parameter left="const Range &amp;" right="" name="range" default=""/>
                <parameter left="std::function&lt;void( const Range &amp; ) &gt;" right="" name="functor" default=""/>
                <parameter left="double" right="" name="nstripes" default="-1."/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-3" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="755" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Complex&lt;_Tp&gt; &amp;value, const Complex&lt;_Tp&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Complex&lt;_Tp&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="742" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Point3_&lt;_Tp&gt; &amp;value, const Point3_&lt;_Tp&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Point3_&lt;_Tp&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Point3_&lt;_Tp&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="736" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Point_&lt;_Tp&gt; &amp;value, const Point_&lt;_Tp&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Point_&lt;_Tp&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-4" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="761" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Rect_&lt;_Tp&gt; &amp;value, const Rect_&lt;_Tp&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Rect_&lt;_Tp&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Rect_&lt;_Tp&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-2" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="749" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Size_&lt;_Tp&gt; &amp;value, const Size_&lt;_Tp&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Size_&lt;_Tp&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-5" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="768" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, Vec&lt;_Tp, cn&gt; &amp;value, const Vec&lt;_Tp, cn&gt; &amp;default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="Vec&lt;_Tp, cn&gt; &amp;" right="" name="value" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-6" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1126" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, bool &amp;value, bool default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="bool &amp;" right="" name="value" default=""/>
                <parameter left="bool" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-8" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1142" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, schar &amp;value, schar default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="schar &amp;" right="" name="value" default=""/>
                <parameter left="schar" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-10" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1158" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, short &amp;value, short default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="short &amp;" right="" name="value" default=""/>
                <parameter left="short" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-7" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1134" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, uchar &amp;value, uchar default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="uchar &amp;" right="" name="value" default=""/>
                <parameter left="uchar" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="read" fullname="cv::read" href="cv.html#read-9" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1150" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;node, ushort &amp;value, ushort default_value)">
                <parameter left="const FileNode &amp;" right="" name="node" default=""/>
                <parameter left="ushort &amp;" right="" name="value" default=""/>
                <parameter left="ushort" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="resize" fullname="cv::resize" href="cv.html#resize" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1021" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resize(size_t _size)">
                <parameter left="size_t" right="" name="_size" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-8" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="942" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Complex&lt;_Tp&gt; &amp;c)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-11" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="965" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Matx&lt;_Tp, m, n&gt; &amp;x)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-6" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="927" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Point3_&lt;_Tp&gt; &amp;pt)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Point3_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-5" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="920" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Point_&lt;_Tp&gt; &amp;pt)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-13" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="980" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Range &amp;r)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Range &amp;" right="" name="r" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-9" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="949" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Rect_&lt;_Tp&gt; &amp;r)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Rect_&lt;_Tp&gt; &amp;" right="" name="r" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-12" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="971" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Scalar_&lt;_Tp&gt; &amp;s)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Scalar_&lt;_Tp&gt; &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-7" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="935" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Size_&lt;_Tp&gt; &amp;sz)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="sz" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-18" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1015" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Complex&lt;_Tp&gt; &amp;c)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Complex&lt;_Tp&gt; &amp;" right="" name="c" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-25" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1069" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const DMatch &amp;m)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const DMatch &amp;" right="" name="m" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-24" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1056" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const KeyPoint &amp;kpt)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const KeyPoint &amp;" right="" name="kpt" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-21" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1036" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Matx&lt;_Tp, m, n&gt; &amp;x)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-16" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1001" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Point3_&lt;_Tp&gt; &amp;pt)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Point3_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-15" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="994" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Point_&lt;_Tp&gt; &amp;pt)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-23" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1049" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Range &amp;r)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Range &amp;" right="" name="r" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-19" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1022" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Rect_&lt;_Tp&gt; &amp;r)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Rect_&lt;_Tp&gt; &amp;" right="" name="r" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-22" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1042" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Scalar_&lt;_Tp&gt; &amp;s)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Scalar_&lt;_Tp&gt; &amp;" right="" name="s" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-17" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1008" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Size_&lt;_Tp&gt; &amp;sz)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="sz" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-20" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1029" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const Vec&lt;_Tp, cn&gt; &amp;v)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-26" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1080" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const _Tp &amp;val)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const _Tp &amp;" right="" name="val" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-27" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1085" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const std::vector&lt;_Tp&gt; &amp;vec)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-28" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="1092" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;name, const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;vec)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="name" default=""/>
                <parameter left="const std::vector&lt;std::vector&lt;_Tp&gt; &gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-4" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="914" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;value)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const String &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-10" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="958" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const Vec&lt;_Tp, cn&gt; &amp;v)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="890" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const _Tp &amp;value)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const _Tp &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-3" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="908" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const double &amp;value)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const double &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-2" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="902" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const float &amp;value)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const float &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-1" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="896" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const int &amp;value)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const int &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="cv::write" href="cv.html#write-14" status="active" access="public" location="persistence.hpp" filepath="/usr/local/include/opencv4/opencv2/core/persistence.hpp" lineno="987" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const std::vector&lt;_Tp&gt; &amp;vec)">
                <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                <parameter left="const std::vector&lt;_Tp&gt; &amp;" right="" name="vec" default=""/>
            </function>
            <function threadsafety="unspecified" name="~AutoBuffer" fullname="cv::~AutoBuffer" href="cv.html#dtor.AutoBuffer" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="990" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~AutoBuffer()"/>
            <function threadsafety="unspecified" name="conj" fullname="cv::conj" href="cv.html#conj-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="1005" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Complex&lt;_Tp&gt;" signature="Complex&lt;_Tp&gt; conj() const"/>
            <function threadsafety="unspecified" name="toRotMat3x3" fullname="cv::toRotMat3x3" href="cv.html#toRotMat3x3" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="706" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;T, 3, 3&gt;" signature="Matx&lt;T, 3, 3&gt; toRotMat3x3(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="toRotMat4x4" fullname="cv::toRotMat4x4" href="cv.html#toRotMat4x4" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="685" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;T, 4, 4&gt;" signature="Matx&lt;T, 4, 4&gt; toRotMat4x4(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="row" fullname="cv::row" href="cv.html#row" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="768" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, 1, n&gt;" signature="Matx&lt;_Tp, 1, n&gt; row(int i) const">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="col" fullname="cv::col" href="cv.html#col" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="775" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, 1&gt;" signature="Matx&lt;_Tp, m, 1&gt; col(int j) const">
                <parameter left="int" right="" name="j" default=""/>
            </function>
            <function threadsafety="unspecified" name="div" fullname="cv::div" href="cv.html#div" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="886" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; div(const Matx&lt;_Tp, m, n&gt; &amp;a) const">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="mul" fullname="cv::mul" href="cv.html#mul" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="880" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; mul(const Matx&lt;_Tp, m, n&gt; &amp;a) const">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-11" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="966" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;" signature="Matx&lt;_Tp, m, n&gt; operator*() const"/>
            <function threadsafety="unspecified" name="diag" fullname="cv::diag" href="cv.html#diag-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="785" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m, n&gt;::diag_type" signature="Matx&lt;_Tp, m, n&gt;::diag_type diag() const"/>
            <function threadsafety="unspecified" name="get_minor" fullname="cv::get_minor" href="cv.html#get_minor" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="757" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m1, n1&gt;" signature="Matx&lt;_Tp, m1, n1&gt; get_minor(int base_row, int base_col) const">
                <parameter left="int" right="" name="base_row" default=""/>
                <parameter left="int" right="" name="base_col" default=""/>
            </function>
            <function threadsafety="unspecified" name="reshape" fullname="cv::reshape" href="cv.html#reshape" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="749" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, m1, n1&gt;" signature="Matx&lt;_Tp, m1, n1&gt; reshape() const"/>
            <function threadsafety="unspecified" name="solve" fullname="cv::solve" href="cv.html#solve-1" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="242" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, l&gt;" signature="Matx&lt;_Tp, n, l&gt; solve(const Matx&lt;_Tp, m, l&gt; &amp;rhs, int method) const">
                <parameter left="const Matx&lt;_Tp, m, l&gt; &amp;" right="" name="rhs" default=""/>
                <parameter left="int" right="" name="method" default=""/>
            </function>
            <function threadsafety="unspecified" name="inv" fullname="cv::inv" href="cv.html#inv" status="active" access="public" location="operations.hpp" filepath="/usr/local/include/opencv4/opencv2/core/operations.hpp" lineno="233" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, m&gt;" signature="Matx&lt;_Tp, n, m&gt; inv(int method, bool *p_is_ok) const">
                <parameter left="int" right="" name="method" default=""/>
                <parameter left="bool *" right="" name="p_is_ok" default=""/>
            </function>
            <function threadsafety="unspecified" name="t" fullname="cv::t" href="cv.html#t" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="892" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matx&lt;_Tp, n, m&gt;" signature="Matx&lt;_Tp, n, m&gt; t() const"/>
            <function threadsafety="unspecified" name="pos" fullname="cv::pos" href="cv.html#pos" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4867" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point pos() const"/>
            <function threadsafety="unspecified" name="acos" fullname="cv::acos" href="cv.html#acos-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="635" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acos() const"/>
            <function threadsafety="unspecified" name="acosh" fullname="cv::acosh" href="cv.html#acosh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="593" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; acosh() const"/>
            <function threadsafety="unspecified" name="asin" fullname="cv::asin" href="cv.html#asin-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="620" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asin() const"/>
            <function threadsafety="unspecified" name="asinh" fullname="cv::asinh" href="cv.html#asinh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="581" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; asinh() const"/>
            <function threadsafety="unspecified" name="atan" fullname="cv::atan" href="cv.html#atan-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="650" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atan() const"/>
            <function threadsafety="unspecified" name="atanh" fullname="cv::atanh" href="cv.html#atanh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="605" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; atanh() const"/>
            <function threadsafety="unspecified" name="conjugate" fullname="cv::conjugate" href="cv.html#conjugate" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="329" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; conjugate() const"/>
            <function threadsafety="unspecified" name="cos" fullname="cv::cos" href="cv.html#cos-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="554" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cos() const"/>
            <function threadsafety="unspecified" name="cosh" fullname="cv::cosh" href="cv.html#cosh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="510" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; cosh() const"/>
            <function threadsafety="unspecified" name="crossProduct" fullname="cv::crossProduct" href="cv.html#crossProduct-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="447" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; crossProduct(const Quat&lt;T&gt; &amp;q) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="exp" fullname="cv::exp" href="cv.html#exp-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="347" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; exp() const"/>
            <function threadsafety="unspecified" name="inv" fullname="cv::inv" href="cv.html#inv-3" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="471" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; inv(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="log" fullname="cv::log" href="cv.html#log-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="362" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; log(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="normalize" fullname="cv::normalize" href="cv.html#normalize-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="453" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; normalize() const"/>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-30" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="202" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator*(const Quat&lt;T&gt; &amp;q1) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="cv::operator+" href="cv.html#operator-2b-13" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="146" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator+(const Quat&lt;T&gt; &amp;q1) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--18" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="133" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator-() const"/>
            <function threadsafety="unspecified" name="operator-" fullname="cv::operator-" href="cv.html#operator--21" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator-(const Quat&lt;T&gt; &amp;q1) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-17" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="276" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator/(const Quat&lt;T&gt; &amp;q) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator/" fullname="cv::operator/" href="cv.html#operator-2f-16" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="269" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; operator/(const T a) const">
                <parameter left="const T" right="" name="a" default=""/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power-5" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="427" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const Quat&lt;T&gt; &amp;q, QuatAssumeType assumeUnit) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="power" fullname="cv::power" href="cv.html#power-3" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="387" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; power(const T alpha, QuatAssumeType assumeUnit) const">
                <parameter left="const T" right="" name="alpha" default=""/>
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="sin" fullname="cv::sin" href="cv.html#sin-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="539" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sin() const"/>
            <function threadsafety="unspecified" name="sinh" fullname="cv::sinh" href="cv.html#sinh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="493" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sinh() const"/>
            <function threadsafety="unspecified" name="sqrt" fullname="cv::sqrt" href="cv.html#sqrt-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="413" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; sqrt(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="tan" fullname="cv::tan" href="cv.html#tan-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="569" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tan() const"/>
            <function threadsafety="unspecified" name="tanh" fullname="cv::tanh" href="cv.html#tanh-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="525" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Quat&lt;T&gt;" signature="Quat&lt;T&gt; tanh() const"/>
            <function threadsafety="unspecified" name="at" fullname="cv::at" href="cv.html#at" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="323" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T at(size_t index) const">
                <parameter left="size_t" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="dot" fullname="cv::dot" href="cv.html#dot-1" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="433" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T dot(Quat&lt;T&gt; q1) const">
                <parameter left="Quat&lt;T&gt;" right="" name="q1" default=""/>
            </function>
            <function threadsafety="unspecified" name="getAngle" fullname="cv::getAngle" href="cv.html#getAngle" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="659" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T getAngle(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="norm" fullname="cv::norm" href="cv.html#norm-4" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="335" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T norm() const"/>
            <function threadsafety="unspecified" name="getAxis" fullname="cv::getAxis" href="cv.html#getAxis" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="673" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;T, 3&gt;" signature="Vec&lt;T, 3&gt; getAxis(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="toRotVec" fullname="cv::toRotVec" href="cv.html#toRotVec" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="726" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;T, 3&gt;" signature="Vec&lt;T, 3&gt; toRotVec(QuatAssumeType assumeUnit) const">
                <parameter left="QuatAssumeType" right="" name="assumeUnit" default=""/>
            </function>
            <function threadsafety="unspecified" name="toVec" fullname="cv::toVec" href="cv.html#toVec" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="734" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;T, 4&gt;" signature="Vec&lt;T, 4&gt; toVec() const"/>
            <function threadsafety="unspecified" name="cross" fullname="cv::cross" href="cv.html#cross" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1088" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; cross(const Vec&lt;_Tp, cn&gt; &amp;) const">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="mul" fullname="cv::mul" href="cv.html#mul-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1056" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; mul(const Vec&lt;_Tp, cn&gt; &amp;v) const">
                <parameter left="const Vec&lt;_Tp, cn&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator*" fullname="cv::operator*" href="cv.html#operator-2a-12" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1179" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, cn&gt;" signature="Vec&lt;_Tp, cn&gt; operator*() const"/>
            <function threadsafety="unspecified" name="solve" fullname="cv::solve" href="cv.html#solve" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="898" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;_Tp, n&gt;" signature="Vec&lt;_Tp, n&gt; solve(const Vec&lt;_Tp, m&gt; &amp;rhs, int method) const">
                <parameter left="const Vec&lt;_Tp, m&gt; &amp;" right="" name="rhs" default=""/>
                <parameter left="int" right="" name="method" default=""/>
            </function>
            <function threadsafety="unspecified" name="conj" fullname="cv::conj" href="cv.html#conj-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1070" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;double, 2&gt;" signature="Vec&lt;double, 2&gt; conj() const"/>
            <function threadsafety="unspecified" name="cross" fullname="cv::cross" href="cv.html#cross-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1103" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;double, 3&gt;" signature="Vec&lt;double, 3&gt; cross(const Vec&lt;double, 3&gt; &amp;v) const">
                <parameter left="const Vec&lt;double, 3&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="conj" fullname="cv::conj" href="cv.html#conj-3" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1082" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;double, 4&gt;" signature="Vec&lt;double, 4&gt; conj() const"/>
            <function threadsafety="unspecified" name="conj" fullname="cv::conj" href="cv.html#conj" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1064" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;float, 2&gt;" signature="Vec&lt;float, 2&gt; conj() const"/>
            <function threadsafety="unspecified" name="cross" fullname="cv::cross" href="cv.html#cross-1" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1095" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;float, 3&gt;" signature="Vec&lt;float, 3&gt; cross(const Vec&lt;float, 3&gt; &amp;v) const">
                <parameter left="const Vec&lt;float, 3&gt; &amp;" right="" name="v" default=""/>
            </function>
            <function threadsafety="unspecified" name="conj" fullname="cv::conj" href="cv.html#conj-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1076" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Vec&lt;float, 4&gt;" signature="Vec&lt;float, 4&gt; conj() const"/>
            <function threadsafety="unspecified" name="dot" fullname="cv::dot" href="cv.html#dot" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="716" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp dot(const Matx&lt;_Tp, m, n&gt; &amp;M) const">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
            </function>
            <function threadsafety="unspecified" name="isNormal" fullname="cv::isNormal" href="cv.html#isNormal" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="792" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isNormal(T eps) const">
                <parameter left="T" right="" name="eps" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="cv::operator==" href="cv.html#operator-eq-eq-6" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="140" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Quat&lt;T&gt; &amp;q) const">
                <parameter left="const Quat&lt;T&gt; &amp;" right="" name="q" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator[]" fullname="cv::operator[]" href="cv.html#operator-5b-5d-2" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="282" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; operator[](std::size_t n) const">
                <parameter left="std::size_t" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29-2" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="808" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int i) const">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29-4" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1133" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int i) const">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator()" fullname="cv::operator()" href="cv.html#operator-28-29" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="794" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator()(int row_idx, int col_idx) const">
                <parameter left="int" right="" name="row_idx" default=""/>
                <parameter left="int" right="" name="col_idx" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator[]" fullname="cv::operator[]" href="cv.html#operator-5b-5d" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1119" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp &amp;" signature="const _Tp &amp; operator[](int i) const">
                <parameter left="int" right="" name="i" default=""/>
            </function>
            <function threadsafety="unspecified" name="ddot" fullname="cv::ddot" href="cv.html#ddot" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="724" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double ddot(const Matx&lt;_Tp, m, n&gt; &amp;M) const">
                <parameter left="const Matx&lt;_Tp, m, n&gt; &amp;" right="" name="M" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator Matx&lt;T2, m, n&gt;" fullname="cv::operator Matx&lt;T2, m, n&gt;" href="cv.html#operator-Matx-ltT2-2c-m-2c-n-gt" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="742" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Matx&lt;T2, m, n&gt;() const"/>
            <function threadsafety="unspecified" name="operator Vec&lt;T2, cn&gt;" fullname="cv::operator Vec&lt;T2, cn&gt;" href="cv.html#operator-Vec-ltT2-2c-cn-gt" status="active" access="public" location="matx.hpp" filepath="/usr/local/include/opencv4/opencv2/core/matx.hpp" lineno="1111" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;T2, cn&gt;() const"/>
            <function threadsafety="unspecified" name="assertNormal" fullname="cv::assertNormal" href="cv.html#assertNormal" status="active" access="public" location="quaternion.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/quaternion.inl.hpp" lineno="802" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assertNormal(T eps) const">
                <parameter left="T" right="" name="eps" default=""/>
            </function>
            <class threadsafety="unspecified" name="softdouble" fullname="cv::softdouble" href="cv-softdouble.html" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="226">
                <function threadsafety="unspecified" name="operator%=" fullname="cv::softdouble::operator%=" href="cv-softdouble.html#operator-25-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="289" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator%=(const softdouble &amp;a)">
                    <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*=" fullname="cv::softdouble::operator*=" href="cv-softdouble.html#operator-2a-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="287" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator*=(const softdouble &amp;a)">
                    <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::softdouble::operator+=" href="cv-softdouble.html#operator-2b-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="285" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator+=(const softdouble &amp;a)">
                    <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::softdouble::operator-=" href="cv-softdouble.html#operator--eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="286" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator-=(const softdouble &amp;a)">
                    <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/=" fullname="cv::softdouble::operator/=" href="cv-softdouble.html#operator-2f-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="288" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator/=(const softdouble &amp;a)">
                    <parameter left="const softdouble &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::softdouble::operator=" href="cv-softdouble.html#operator-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="234" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble &amp;" signature="softdouble &amp; operator=(const softdouble &amp;c)">
                    <parameter left="const softdouble &amp;" right="" name="c" default=""/>
                </function>
                <function threadsafety="unspecified" name="eps" fullname="cv::softdouble::eps" href="cv-softdouble.html#eps" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="356" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble eps()"/>
                <function threadsafety="unspecified" name="fromRaw" fullname="cv::softdouble::fromRaw" href="cv-softdouble.html#fromRaw" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="243" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble fromRaw(const uint64_t a)">
                    <parameter left="const uint64_t" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="inf" fullname="cv::softdouble::inf" href="cv-softdouble.html#inf" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="348" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble inf()"/>
                <function threadsafety="unspecified" name="max" fullname="cv::softdouble::max" href="cv-softdouble.html#max" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="358" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble max()"/>
                <function threadsafety="unspecified" name="min" fullname="cv::softdouble::min" href="cv-softdouble.html#min" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="354" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble min()"/>
                <function threadsafety="unspecified" name="nan" fullname="cv::softdouble::nan" href="cv-softdouble.html#nan" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="350" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble nan()"/>
                <function threadsafety="unspecified" name="one" fullname="cv::softdouble::one" href="cv-softdouble.html#one" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="352" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble one()"/>
                <function threadsafety="unspecified" name="pi" fullname="cv::softdouble::pi" href="cv-softdouble.html#pi" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="360" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble pi()"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::softdouble::zero" href="cv-softdouble.html#zero" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="346" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble zero()"/>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="230" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble()"/>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-6" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="257" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const double a)">
                    <parameter left="const double" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-4" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const int32_t )">
                    <parameter left="const int32_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-5" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="249" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const int64_t )">
                    <parameter left="const int64_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-1" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="232" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const softdouble &amp;c)">
                    <parameter left="const softdouble &amp;" right="" name="c" default=""/>
                </function>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-2" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="246" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const uint32_t )">
                    <parameter left="const uint32_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softdouble" fullname="cv::softdouble::softdouble" href="cv-softdouble.html#softdouble-3" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="247" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softdouble(const uint64_t )">
                    <parameter left="const uint64_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="getSign" fullname="cv::softdouble::getSign" href="cv-softdouble.html#getSign" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="312" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getSign() const"/>
                <function threadsafety="unspecified" name="isInf" fullname="cv::softdouble::isInf" href="cv-softdouble.html#isInf" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="307" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isInf() const"/>
                <function threadsafety="unspecified" name="isNaN" fullname="cv::softdouble::isNaN" href="cv-softdouble.html#isNaN" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="305" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isNaN() const"/>
                <function threadsafety="unspecified" name="isSubnormal" fullname="cv::softdouble::isSubnormal" href="cv-softdouble.html#isSubnormal" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="309" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSubnormal() const"/>
                <function threadsafety="unspecified" name="operator!=" fullname="cv::softdouble::operator!=" href="cv-softdouble.html#operator-not-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="298" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;" fullname="cv::softdouble::operator&lt;" href="cv-softdouble.html#operator-lt" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="301" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::softdouble::operator&lt;=" href="cv-softdouble.html#operator-lt-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="302" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;=(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::softdouble::operator==" href="cv-softdouble.html#operator-eq-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="297" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&gt;" fullname="cv::softdouble::operator&gt;" href="cv-softdouble.html#operator-gt" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="299" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&gt;(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::softdouble::operator&gt;=" href="cv-softdouble.html#operator-gt-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="300" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&gt;=(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="getExp" fullname="cv::softdouble::getExp" href="cv-softdouble.html#getExp" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getExp() const"/>
                <function threadsafety="unspecified" name="operator double" fullname="cv::softdouble::operator double" href="cv-softdouble.html#operator-double" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="261" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator double() const"/>
                <function threadsafety="unspecified" name="operator softfloat" fullname="cv::softdouble::operator softfloat" href="cv-softdouble.html#operator-softfloat" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="260" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator softfloat() const"/>
                <function threadsafety="unspecified" name="getFrac" fullname="cv::softdouble::getFrac" href="cv-softdouble.html#getFrac" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="329" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble getFrac() const"/>
                <function threadsafety="unspecified" name="operator%" fullname="cv::softdouble::operator%" href="cv-softdouble.html#operator-25" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="283" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator%(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::softdouble::operator*" href="cv-softdouble.html#operator-2a" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="266" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator*(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+" fullname="cv::softdouble::operator+" href="cv-softdouble.html#operator-2b" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="264" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator+(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-" fullname="cv::softdouble::operator-" href="cv-softdouble.html#operator--1" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="268" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator-() const"/>
                <function threadsafety="unspecified" name="operator-" fullname="cv::softdouble::operator-" href="cv-softdouble.html#operator-" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="265" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator-(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/" fullname="cv::softdouble::operator/" href="cv-softdouble.html#operator-2f" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="267" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble operator/(const softdouble &amp;) const">
                    <parameter left="const softdouble &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="setExp" fullname="cv::softdouble::setExp" href="cv-softdouble.html#setExp" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="318" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble setExp(int e) const">
                    <parameter left="int" right="" name="e" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFrac" fullname="cv::softdouble::setFrac" href="cv-softdouble.html#setFrac" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="338" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble setFrac(const softdouble &amp;s) const">
                    <parameter left="const softdouble &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSign" fullname="cv::softdouble::setSign" href="cv-softdouble.html#setSign" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="314" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softdouble" signature="softdouble setSign(bool sign) const">
                    <parameter left="bool" right="" name="sign" default=""/>
                </function>
                <variable threadsafety="unspecified" name="v" fullname="cv::softdouble::v" href="cv-softdouble.html#v-var" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="362" type="uint64_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="softfloat" fullname="cv::softfloat" href="cv-softfloat.html" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="89">
                <function threadsafety="unspecified" name="fromRaw" fullname="cv::softfloat::fromRaw" href="cv-softfloat.html#fromRaw" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="106" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const softfloat" signature="const softfloat fromRaw(const uint32_t a)">
                    <parameter left="const uint32_t" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator%=" fullname="cv::softfloat::operator%=" href="cv-softfloat.html#operator-25-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="152" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator%=(const softfloat &amp;a)">
                    <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*=" fullname="cv::softfloat::operator*=" href="cv-softfloat.html#operator-2a-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator*=(const softfloat &amp;a)">
                    <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+=" fullname="cv::softfloat::operator+=" href="cv-softfloat.html#operator-2b-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="148" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator+=(const softfloat &amp;a)">
                    <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-=" fullname="cv::softfloat::operator-=" href="cv-softfloat.html#operator--eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator-=(const softfloat &amp;a)">
                    <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/=" fullname="cv::softfloat::operator/=" href="cv-softfloat.html#operator-2f-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="151" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator/=(const softfloat &amp;a)">
                    <parameter left="const softfloat &amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::softfloat::operator=" href="cv-softfloat.html#operator-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="97" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat &amp;" signature="softfloat &amp; operator=(const softfloat &amp;c)">
                    <parameter left="const softfloat &amp;" right="" name="c" default=""/>
                </function>
                <function threadsafety="unspecified" name="eps" fullname="cv::softfloat::eps" href="cv-softfloat.html#eps" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="214" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat eps()"/>
                <function threadsafety="unspecified" name="inf" fullname="cv::softfloat::inf" href="cv-softfloat.html#inf" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="206" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat inf()"/>
                <function threadsafety="unspecified" name="max" fullname="cv::softfloat::max" href="cv-softfloat.html#max" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="216" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat max()"/>
                <function threadsafety="unspecified" name="min" fullname="cv::softfloat::min" href="cv-softfloat.html#min" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="212" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat min()"/>
                <function threadsafety="unspecified" name="nan" fullname="cv::softfloat::nan" href="cv-softfloat.html#nan" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="208" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat nan()"/>
                <function threadsafety="unspecified" name="one" fullname="cv::softfloat::one" href="cv-softfloat.html#one" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="210" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat one()"/>
                <function threadsafety="unspecified" name="pi" fullname="cv::softfloat::pi" href="cv-softfloat.html#pi" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="218" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat pi()"/>
                <function threadsafety="unspecified" name="zero" fullname="cv::softfloat::zero" href="cv-softfloat.html#zero" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="204" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat zero()"/>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="93" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat()"/>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-6" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="120" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const float a)">
                    <parameter left="const float" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-4" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="111" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const int32_t )">
                    <parameter left="const int32_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-5" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="112" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const int64_t )">
                    <parameter left="const int64_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-1" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="95" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const softfloat &amp;c)">
                    <parameter left="const softfloat &amp;" right="" name="c" default=""/>
                </function>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-2" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="109" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const uint32_t )">
                    <parameter left="const uint32_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="softfloat" fullname="cv::softfloat::softfloat" href="cv-softfloat.html#softfloat-3" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="110" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="softfloat(const uint64_t )">
                    <parameter left="const uint64_t" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="getSign" fullname="cv::softfloat::getSign" href="cv-softfloat.html#getSign" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="175" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getSign() const"/>
                <function threadsafety="unspecified" name="isInf" fullname="cv::softfloat::isInf" href="cv-softfloat.html#isInf" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="170" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isInf() const"/>
                <function threadsafety="unspecified" name="isNaN" fullname="cv::softfloat::isNaN" href="cv-softfloat.html#isNaN" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="168" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isNaN() const"/>
                <function threadsafety="unspecified" name="isSubnormal" fullname="cv::softfloat::isSubnormal" href="cv-softfloat.html#isSubnormal" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="172" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSubnormal() const"/>
                <function threadsafety="unspecified" name="operator!=" fullname="cv::softfloat::operator!=" href="cv-softfloat.html#operator-not-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="161" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;" fullname="cv::softfloat::operator&lt;" href="cv-softfloat.html#operator-lt" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="164" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;=" fullname="cv::softfloat::operator&lt;=" href="cv-softfloat.html#operator-lt-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="165" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;=(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::softfloat::operator==" href="cv-softfloat.html#operator-eq-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="160" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&gt;" fullname="cv::softfloat::operator&gt;" href="cv-softfloat.html#operator-gt" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="162" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&gt;(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&gt;=" fullname="cv::softfloat::operator&gt;=" href="cv-softfloat.html#operator-gt-eq" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="163" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&gt;=(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="getExp" fullname="cv::softfloat::getExp" href="cv-softfloat.html#getExp" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="179" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getExp() const"/>
                <function threadsafety="unspecified" name="operator float" fullname="cv::softfloat::operator float" href="cv-softfloat.html#operator-float" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="124" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator float() const"/>
                <function threadsafety="unspecified" name="operator softdouble" fullname="cv::softfloat::operator softdouble" href="cv-softfloat.html#operator-softdouble" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="123" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator softdouble() const"/>
                <function threadsafety="unspecified" name="getFrac" fullname="cv::softfloat::getFrac" href="cv-softfloat.html#getFrac" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="187" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat getFrac() const"/>
                <function threadsafety="unspecified" name="operator%" fullname="cv::softfloat::operator%" href="cv-softfloat.html#operator-25" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="146" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator%(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::softfloat::operator*" href="cv-softfloat.html#operator-2a" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="129" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator*(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+" fullname="cv::softfloat::operator+" href="cv-softfloat.html#operator-2b" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="127" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator+(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator-" fullname="cv::softfloat::operator-" href="cv-softfloat.html#operator--1" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator-() const"/>
                <function threadsafety="unspecified" name="operator-" fullname="cv::softfloat::operator-" href="cv-softfloat.html#operator-" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="128" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator-(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator/" fullname="cv::softfloat::operator/" href="cv-softfloat.html#operator-2f" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat operator/(const softfloat &amp;) const">
                    <parameter left="const softfloat &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="setExp" fullname="cv::softfloat::setExp" href="cv-softfloat.html#setExp" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="181" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat setExp(int e) const">
                    <parameter left="int" right="" name="e" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFrac" fullname="cv::softfloat::setFrac" href="cv-softfloat.html#setFrac" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="196" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat setFrac(const softfloat &amp;s) const">
                    <parameter left="const softfloat &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSign" fullname="cv::softfloat::setSign" href="cv-softfloat.html#setSign" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="177" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="softfloat" signature="softfloat setSign(bool sign) const">
                    <parameter left="bool" right="" name="sign" default=""/>
                </function>
                <variable threadsafety="unspecified" name="v" fullname="cv::softfloat::v" href="cv-softfloat.html#v-var" status="active" access="public" location="softfloat.hpp" filepath="/usr/local/include/opencv4/opencv2/core/softfloat.hpp" lineno="220" type="uint32_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="DataDepth" fullname="cv::DataDepth" href="cv-datadepth.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="284">
                <variable threadsafety="unspecified" name="fmt" fullname="cv::DataDepth::fmt" href="cv-datadepth.html#fmt-var" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="291" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="value" fullname="cv::DataDepth::value" href="cv-datadepth.html#value-var" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="289" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="DataType" fullname="cv::DataType" href="cv-datatype.html" status="active" access="public" location="traits.hpp" filepath="/usr/local/include/opencv4/opencv2/core/traits.hpp" lineno="112"/>
            <class threadsafety="unspecified" name="Complex" fullname="cv::Complex" href="cv-complex.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="74">
                <function threadsafety="unspecified" name="Complex" fullname="cv::Complex::Complex" href="cv-complex.html#Complex" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="79" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Complex()"/>
                <function threadsafety="unspecified" name="Complex" fullname="cv::Complex::Complex" href="cv-complex.html#Complex-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="80" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Complex(_Tp _re, _Tp _im)">
                    <parameter left="_Tp" right="" name="_re" default=""/>
                    <parameter left="_Tp" right="" name="_im" default="0"/>
                </function>
                <function threadsafety="unspecified" name="conj" fullname="cv::Complex::conj" href="cv-complex.html#conj" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="85" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Complex" signature="Complex conj() const"/>
                <function threadsafety="unspecified" name="operator Complex&lt;T2&gt;" fullname="cv::Complex::operator Complex&lt;T2&gt;" href="cv-complex.html#operator-Complex-ltT2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="83" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Complex&lt;T2&gt;() const"/>
            </class>
            <class threadsafety="unspecified" name="DMatch" fullname="cv::DMatch" href="cv-dmatch.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="808">
                <function threadsafety="unspecified" name="DMatch" fullname="cv::DMatch::DMatch" href="cv-dmatch.html#DMatch" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="811" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DMatch()"/>
                <function threadsafety="unspecified" name="DMatch" fullname="cv::DMatch::DMatch" href="cv-dmatch.html#DMatch-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="812" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DMatch(int _queryIdx, int _trainIdx, float _distance)">
                    <parameter left="int" right="" name="_queryIdx" default=""/>
                    <parameter left="int" right="" name="_trainIdx" default=""/>
                    <parameter left="float" right="" name="_distance" default=""/>
                </function>
                <function threadsafety="unspecified" name="DMatch" fullname="cv::DMatch::DMatch" href="cv-dmatch.html#DMatch-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="813" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DMatch(int _queryIdx, int _trainIdx, int _imgIdx, float _distance)">
                    <parameter left="int" right="" name="_queryIdx" default=""/>
                    <parameter left="int" right="" name="_trainIdx" default=""/>
                    <parameter left="int" right="" name="_imgIdx" default=""/>
                    <parameter left="float" right="" name="_distance" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;" fullname="cv::DMatch::operator&lt;" href="cv-dmatch.html#operator-lt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="822" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const DMatch &amp;m) const">
                    <parameter left="const DMatch &amp;" right="" name="m" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="KeyPoint" fullname="cv::KeyPoint" href="cv-keypoint.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="711">
                <function threadsafety="unspecified" name="KeyPoint" fullname="cv::KeyPoint::KeyPoint" href="cv-keypoint.html#KeyPoint" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="715" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KeyPoint()"/>
                <function threadsafety="unspecified" name="KeyPoint" fullname="cv::KeyPoint::KeyPoint" href="cv-keypoint.html#KeyPoint-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="734" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KeyPoint(float x, float y, float _size, float _angle, float _response, int _octave, int _class_id)">
                    <parameter left="float" right="" name="x" default=""/>
                    <parameter left="float" right="" name="y" default=""/>
                    <parameter left="float" right="" name="_size" default=""/>
                    <parameter left="float" right="" name="_angle" default="-1"/>
                    <parameter left="float" right="" name="_response" default="0"/>
                    <parameter left="int" right="" name="_octave" default="0"/>
                    <parameter left="int" right="" name="_class_id" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="KeyPoint" fullname="cv::KeyPoint::KeyPoint" href="cv-keypoint.html#KeyPoint-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="724" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KeyPoint(Point2f _pt, float _size, float _angle, float _response, int _octave, int _class_id)">
                    <parameter left="Point2f" right="" name="_pt" default=""/>
                    <parameter left="float" right="" name="_size" default=""/>
                    <parameter left="float" right="" name="_angle" default="-1"/>
                    <parameter left="float" right="" name="_response" default="0"/>
                    <parameter left="int" right="" name="_octave" default="0"/>
                    <parameter left="int" right="" name="_class_id" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="hash" fullname="cv::KeyPoint::hash" href="cv-keypoint.html#hash" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="736" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t hash() const"/>
            </class>
            <class threadsafety="unspecified" name="Moments" fullname="cv::Moments" href="cv-moments.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="926">
                <function threadsafety="unspecified" name="Moments" fullname="cv::Moments::Moments" href="cv-moments.html#Moments" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="930" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Moments()"/>
                <function threadsafety="unspecified" name="Moments" fullname="cv::Moments::Moments" href="cv-moments.html#Moments-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="932" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Moments(double m00, double m10, double m01, double m20, double m11, double m02, double m30, double m21, double m12, double m03)">
                    <parameter left="double" right="" name="m00" default=""/>
                    <parameter left="double" right="" name="m10" default=""/>
                    <parameter left="double" right="" name="m01" default=""/>
                    <parameter left="double" right="" name="m20" default=""/>
                    <parameter left="double" right="" name="m11" default=""/>
                    <parameter left="double" right="" name="m02" default=""/>
                    <parameter left="double" right="" name="m30" default=""/>
                    <parameter left="double" right="" name="m21" default=""/>
                    <parameter left="double" right="" name="m12" default=""/>
                    <parameter left="double" right="" name="m03" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Point3_" fullname="cv::Point3_" href="cv-point3.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="239">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Point3_::value_type" href="cv-point3.html#value_type-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="242"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Point3_::operator=" href="cv-point3.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="252" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point3_ &amp;" signature="Point3_ &amp; operator=(const Point3_ &amp;pt)">
                    <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_::Point3_" href="cv-point3.html#Point3_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="245" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_()"/>
                <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_::Point3_" href="cv-point3.html#Point3_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="246" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(_Tp _x, _Tp _y, _Tp _z)">
                    <parameter left="_Tp" right="" name="_x" default=""/>
                    <parameter left="_Tp" right="" name="_y" default=""/>
                    <parameter left="_Tp" right="" name="_z" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_::Point3_" href="cv-point3.html#Point3_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="247" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(const Point3_ &amp;pt)">
                    <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_::Point3_" href="cv-point3.html#Point3_-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="249" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(const Point_&lt;_Tp&gt; &amp;pt)">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point3_" fullname="cv::Point3_::Point3_" href="cv-point3.html#Point3_-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="250" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point3_(const Vec&lt;_Tp, 3&gt; &amp;v)">
                    <parameter left="const Vec&lt;_Tp, 3&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="cross" fullname="cv::Point3_::cross" href="cv-point3.html#cross" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="264" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point3_" signature="Point3_ cross(const Point3_ &amp;pt) const">
                    <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="dot" fullname="cv::Point3_::dot" href="cv-point3.html#dot" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="260" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp dot(const Point3_ &amp;pt) const">
                    <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="ddot" fullname="cv::Point3_::ddot" href="cv-point3.html#ddot" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="262" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double ddot(const Point3_ &amp;pt) const">
                    <parameter left="const Point3_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator Point3_&lt;_Tp2&gt;" fullname="cv::Point3_::operator Point3_&lt;_Tp2&gt;" href="cv-point3.html#operator-Point3_-lt_Tp2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="255" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Point3_&lt;_Tp2&gt;() const"/>
                <function threadsafety="unspecified" name="operator Vec&lt;_Tp, 3&gt;" fullname="cv::Point3_::operator Vec&lt;_Tp, 3&gt;" href="cv-point3.html#operator-Vec-lt_Tp-2c-3-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="257" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;_Tp, 3&gt;() const"/>
                <variable threadsafety="unspecified" name="x" fullname="cv::Point3_::x" href="cv-point3.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="265" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="y" fullname="cv::Point3_::y" href="cv-point3.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="266" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="z" fullname="cv::Point3_::z" href="cv-point3.html#z-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="267" type="_Tp" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Point_" fullname="cv::Point_" href="cv-point.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="157">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Point_::value_type" href="cv-point.html#value_type-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="160"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Point_::operator=" href="cv-point.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="170" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point_ &amp;" signature="Point_ &amp; operator=(const Point_ &amp;pt)">
                    <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point_" fullname="cv::Point_::Point_" href="cv-point.html#Point_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="163" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_()"/>
                <function threadsafety="unspecified" name="Point_" fullname="cv::Point_::Point_" href="cv-point.html#Point_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="164" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(_Tp _x, _Tp _y)">
                    <parameter left="_Tp" right="" name="_x" default=""/>
                    <parameter left="_Tp" right="" name="_y" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point_" fullname="cv::Point_::Point_" href="cv-point.html#Point_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="165" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(const Point_ &amp;pt)">
                    <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point_" fullname="cv::Point_::Point_" href="cv-point.html#Point_-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="167" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(const Size_&lt;_Tp&gt; &amp;sz)">
                    <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="Point_" fullname="cv::Point_::Point_" href="cv-point.html#Point_-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="168" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point_(const Vec&lt;_Tp, 2&gt; &amp;v)">
                    <parameter left="const Vec&lt;_Tp, 2&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="dot" fullname="cv::Point_::dot" href="cv-point.html#dot" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="179" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp dot(const Point_ &amp;pt) const">
                    <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="inside" fullname="cv::Point_::inside" href="cv-point.html#inside" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="185" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool inside(const Rect_&lt;_Tp&gt; &amp;r) const">
                    <parameter left="const Rect_&lt;_Tp&gt; &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="cross" fullname="cv::Point_::cross" href="cv-point.html#cross" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="183" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double cross(const Point_ &amp;pt) const">
                    <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="ddot" fullname="cv::Point_::ddot" href="cv-point.html#ddot" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="181" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double ddot(const Point_ &amp;pt) const">
                    <parameter left="const Point_ &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator Point_&lt;_Tp2&gt;" fullname="cv::Point_::operator Point_&lt;_Tp2&gt;" href="cv-point.html#operator-Point_-lt_Tp2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="173" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Point_&lt;_Tp2&gt;() const"/>
                <function threadsafety="unspecified" name="operator Vec&lt;_Tp, 2&gt;" fullname="cv::Point_::operator Vec&lt;_Tp, 2&gt;" href="cv-point.html#operator-Vec-lt_Tp-2c-2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Vec&lt;_Tp, 2&gt;() const"/>
                <variable threadsafety="unspecified" name="x" fullname="cv::Point_::x" href="cv-point.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="186" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="y" fullname="cv::Point_::y" href="cv-point.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="187" type="_Tp" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Range" fullname="cv::Range" href="cv-range.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="589">
                <function threadsafety="unspecified" name="all" fullname="cv::Range::all" href="cv-range.html#all" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="596" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Range" signature="Range all()"/>
                <function threadsafety="unspecified" name="Range" fullname="cv::Range::Range" href="cv-range.html#Range" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="592" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Range()"/>
                <function threadsafety="unspecified" name="Range" fullname="cv::Range::Range" href="cv-range.html#Range-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="593" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Range(int _start, int _end)">
                    <parameter left="int" right="" name="_start" default=""/>
                    <parameter left="int" right="" name="_end" default=""/>
                </function>
                <function threadsafety="unspecified" name="empty" fullname="cv::Range::empty" href="cv-range.html#empty" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="595" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::Range::size" href="cv-range.html#size" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="594" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
            </class>
            <class threadsafety="unspecified" name="Rect_" fullname="cv::Rect_" href="cv-rect.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="420">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Rect_::value_type" href="cv-rect.html#value_type-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="423"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Rect_::operator=" href="cv-rect.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="433" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect_ &amp;" signature="Rect_ &amp; operator=(const Rect_ &amp;r)">
                    <parameter left="const Rect_ &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="Rect_" fullname="cv::Rect_::Rect_" href="cv-rect.html#Rect_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="426" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect_()"/>
                <function threadsafety="unspecified" name="Rect_" fullname="cv::Rect_::Rect_" href="cv-rect.html#Rect_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="427" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect_(_Tp _x, _Tp _y, _Tp _width, _Tp _height)">
                    <parameter left="_Tp" right="" name="_x" default=""/>
                    <parameter left="_Tp" right="" name="_y" default=""/>
                    <parameter left="_Tp" right="" name="_width" default=""/>
                    <parameter left="_Tp" right="" name="_height" default=""/>
                </function>
                <function threadsafety="unspecified" name="Rect_" fullname="cv::Rect_::Rect_" href="cv-rect.html#Rect_-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="430" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect_(const Point_&lt;_Tp&gt; &amp;org, const Size_&lt;_Tp&gt; &amp;sz)">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="org" default=""/>
                    <parameter left="const Size_&lt;_Tp&gt; &amp;" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="Rect_" fullname="cv::Rect_::Rect_" href="cv-rect.html#Rect_-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="431" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect_(const Point_&lt;_Tp&gt; &amp;pt1, const Point_&lt;_Tp&gt; &amp;pt2)">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt1" default=""/>
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt2" default=""/>
                </function>
                <function threadsafety="unspecified" name="Rect_" fullname="cv::Rect_::Rect_" href="cv-rect.html#Rect_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="428" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect_(const Rect_ &amp;r)">
                    <parameter left="const Rect_ &amp;" right="" name="r" default=""/>
                </function>
                <function threadsafety="unspecified" name="br" fullname="cv::Rect_::br" href="cv-rect.html#br" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="438" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point_&lt;_Tp&gt;" signature="Point_&lt;_Tp&gt; br() const"/>
                <function threadsafety="unspecified" name="tl" fullname="cv::Rect_::tl" href="cv-rect.html#tl" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="436" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point_&lt;_Tp&gt;" signature="Point_&lt;_Tp&gt; tl() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::Rect_::size" href="cv-rect.html#size" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="441" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size_&lt;_Tp&gt;" signature="Size_&lt;_Tp&gt; size() const"/>
                <function threadsafety="unspecified" name="area" fullname="cv::Rect_::area" href="cv-rect.html#area" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="443" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp area() const"/>
                <function threadsafety="unspecified" name="contains" fullname="cv::Rect_::contains" href="cv-rect.html#contains" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="451" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool contains(const Point_&lt;_Tp&gt; &amp;pt) const">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="empty" fullname="cv::Rect_::empty" href="cv-rect.html#empty" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="445" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="operator Rect_&lt;_Tp2&gt;" fullname="cv::Rect_::operator Rect_&lt;_Tp2&gt;" href="cv-rect.html#operator-Rect_-lt_Tp2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="448" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Rect_&lt;_Tp2&gt;() const"/>
                <variable threadsafety="unspecified" name="height" fullname="cv::Rect_::height" href="cv-rect.html#height-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="456" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="width" fullname="cv::Rect_::width" href="cv-rect.html#width-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="455" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="x" fullname="cv::Rect_::x" href="cv-rect.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="453" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="y" fullname="cv::Rect_::y" href="cv-rect.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="454" type="_Tp" static="false"/>
            </class>
            <class threadsafety="unspecified" name="RotatedRect" fullname="cv::RotatedRect" href="cv-rotatedrect.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="503">
                <function threadsafety="unspecified" name="RotatedRect" fullname="cv::RotatedRect::RotatedRect" href="cv-rotatedrect.html#RotatedRect" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="507" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RotatedRect()"/>
                <function threadsafety="unspecified" name="RotatedRect" fullname="cv::RotatedRect::RotatedRect" href="cv-rotatedrect.html#RotatedRect-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="514" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RotatedRect(const Point2f &amp;center, const Size2f &amp;size, float angle)">
                    <parameter left="const Point2f &amp;" right="" name="center" default=""/>
                    <parameter left="const Size2f &amp;" right="" name="size" default=""/>
                    <parameter left="float" right="" name="angle" default=""/>
                </function>
                <function threadsafety="unspecified" name="RotatedRect" fullname="cv::RotatedRect::RotatedRect" href="cv-rotatedrect.html#RotatedRect-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="519" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RotatedRect(const Point2f &amp;point1, const Point2f &amp;point2, const Point2f &amp;point3)">
                    <parameter left="const Point2f &amp;" right="" name="point1" default=""/>
                    <parameter left="const Point2f &amp;" right="" name="point2" default=""/>
                    <parameter left="const Point2f &amp;" right="" name="point3" default=""/>
                </function>
                <function threadsafety="unspecified" name="boundingRect" fullname="cv::RotatedRect::boundingRect" href="cv-rotatedrect.html#boundingRect" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="526" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect" signature="Rect boundingRect() const"/>
                <function threadsafety="unspecified" name="boundingRect2f" fullname="cv::RotatedRect::boundingRect2f" href="cv-rotatedrect.html#boundingRect2f" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="528" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect_&lt;float&gt;" signature="Rect_&lt;float&gt; boundingRect2f() const"/>
                <function threadsafety="unspecified" name="points" fullname="cv::RotatedRect::points" href="cv-rotatedrect.html#points" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="524" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void points(Point2f[] pts) const">
                    <parameter left="Point2f[]" right="" name="pts" default=""/>
                </function>
                <variable threadsafety="unspecified" name="angle" fullname="cv::RotatedRect::angle" href="cv-rotatedrect.html#angle-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="534" type="float" static="false"/>
                <variable threadsafety="unspecified" name="center" fullname="cv::RotatedRect::center" href="cv-rotatedrect.html#center-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="530" type="Point2f" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::RotatedRect::size" href="cv-rotatedrect.html#size-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="532" type="Size2f" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_" href="cv-scalar.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="636" bases="cv::Vec">
                <function threadsafety="unspecified" name="operator=" fullname="cv::Scalar_::operator=" href="cv-scalar.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="647" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Scalar_ &amp;" signature="Scalar_ &amp; operator=(const Scalar_ &amp;s)">
                    <parameter left="const Scalar_ &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_::Scalar_" href="cv-scalar.html#Scalar_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="640" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar_()"/>
                <function threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_::Scalar_" href="cv-scalar.html#Scalar_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="642" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar_(_Tp v0)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_::Scalar_" href="cv-scalar.html#Scalar_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="641" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar_(_Tp v0, _Tp v1, _Tp v2, _Tp v3)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                    <parameter left="_Tp" right="" name="v1" default=""/>
                    <parameter left="_Tp" right="" name="v2" default="0"/>
                    <parameter left="_Tp" right="" name="v3" default="0"/>
                </function>
                <function threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_::Scalar_" href="cv-scalar.html#Scalar_-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="644" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar_(const Scalar_ &amp;s)">
                    <parameter left="const Scalar_ &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="Scalar_" fullname="cv::Scalar_::Scalar_" href="cv-scalar.html#Scalar_-4" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="651" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar_(const Vec&lt;_Tp2, cn&gt; &amp;v)">
                    <parameter left="const Vec&lt;_Tp2, cn&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="all" fullname="cv::Scalar_::all" href="cv-scalar.html#all" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="654" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Scalar_&lt;_Tp&gt;" signature="Scalar_&lt;_Tp&gt; all(_Tp v0)">
                    <parameter left="_Tp" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="conj" fullname="cv::Scalar_::conj" href="cv-scalar.html#conj" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="663" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Scalar_&lt;_Tp&gt;" signature="Scalar_&lt;_Tp&gt; conj() const"/>
                <function threadsafety="unspecified" name="mul" fullname="cv::Scalar_::mul" href="cv-scalar.html#mul" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="660" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Scalar_&lt;_Tp&gt;" signature="Scalar_&lt;_Tp&gt; mul(const Scalar_&lt;_Tp&gt; &amp;a, double scale) const">
                    <parameter left="const Scalar_&lt;_Tp&gt; &amp;" right="" name="a" default=""/>
                    <parameter left="double" right="" name="scale" default="1"/>
                </function>
                <function threadsafety="unspecified" name="isReal" fullname="cv::Scalar_::isReal" href="cv-scalar.html#isReal" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="666" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isReal() const"/>
                <function threadsafety="unspecified" name="operator Scalar_&lt;T2&gt;" fullname="cv::Scalar_::operator Scalar_&lt;T2&gt;" href="cv-scalar.html#operator-Scalar_-ltT2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="657" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Scalar_&lt;T2&gt;() const"/>
            </class>
            <class threadsafety="unspecified" name="Size_" fullname="cv::Size_" href="cv-size.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="315">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::Size_::value_type" href="cv-size.html#value_type-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="318"/>
                <function threadsafety="unspecified" name="operator=" fullname="cv::Size_::operator=" href="cv-size.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="327" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size_ &amp;" signature="Size_ &amp; operator=(const Size_ &amp;sz)">
                    <parameter left="const Size_ &amp;" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="Size_" fullname="cv::Size_::Size_" href="cv-size.html#Size_" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="321" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size_()"/>
                <function threadsafety="unspecified" name="Size_" fullname="cv::Size_::Size_" href="cv-size.html#Size_-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="322" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size_(_Tp _width, _Tp _height)">
                    <parameter left="_Tp" right="" name="_width" default=""/>
                    <parameter left="_Tp" right="" name="_height" default=""/>
                </function>
                <function threadsafety="unspecified" name="Size_" fullname="cv::Size_::Size_" href="cv-size.html#Size_-3" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="325" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size_(const Point_&lt;_Tp&gt; &amp;pt)">
                    <parameter left="const Point_&lt;_Tp&gt; &amp;" right="" name="pt" default=""/>
                </function>
                <function threadsafety="unspecified" name="Size_" fullname="cv::Size_::Size_" href="cv-size.html#Size_-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="323" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size_(const Size_ &amp;sz)">
                    <parameter left="const Size_ &amp;" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="area" fullname="cv::Size_::area" href="cv-size.html#area" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="330" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp" signature="_Tp area() const"/>
                <function threadsafety="unspecified" name="empty" fullname="cv::Size_::empty" href="cv-size.html#empty" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="334" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="aspectRatio" fullname="cv::Size_::aspectRatio" href="cv-size.html#aspectRatio" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="332" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double aspectRatio() const"/>
                <function threadsafety="unspecified" name="operator Size_&lt;_Tp2&gt;" fullname="cv::Size_::operator Size_&lt;_Tp2&gt;" href="cv-size.html#operator-Size_-lt_Tp2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="337" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Size_&lt;_Tp2&gt;() const"/>
                <variable threadsafety="unspecified" name="height" fullname="cv::Size_::height" href="cv-size.html#height-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="340" type="_Tp" static="false"/>
                <variable threadsafety="unspecified" name="width" fullname="cv::Size_::width" href="cv-size.html#width-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="339" type="_Tp" static="false"/>
            </class>
            <class threadsafety="unspecified" name="TermCriteria" fullname="cv::TermCriteria" href="cv-termcriteria.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="852">
                <enum threadsafety="unspecified" name="Type" fullname="cv::TermCriteria::Type" href="cv-termcriteria.html#Type-enum" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="858">
                    <value name="COUNT" value="1"/>
                    <value name="MAX_ITER" value="COUNT"/>
                    <value name="EPS" value="2"/>
                </enum>
                <function threadsafety="unspecified" name="TermCriteria" fullname="cv::TermCriteria::TermCriteria" href="cv-termcriteria.html#TermCriteria" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="866" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TermCriteria()"/>
                <function threadsafety="unspecified" name="TermCriteria" fullname="cv::TermCriteria::TermCriteria" href="cv-termcriteria.html#TermCriteria-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="872" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TermCriteria(int type, int maxCount, double epsilon)">
                    <parameter left="int" right="" name="type" default=""/>
                    <parameter left="int" right="" name="maxCount" default=""/>
                    <parameter left="double" right="" name="epsilon" default=""/>
                </function>
                <function threadsafety="unspecified" name="isValid" fullname="cv::TermCriteria::isValid" href="cv-termcriteria.html#isValid" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="874" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
                <variable threadsafety="unspecified" name="epsilon" fullname="cv::TermCriteria::epsilon" href="cv-termcriteria.html#epsilon-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="883" type="double" static="false"/>
                <variable threadsafety="unspecified" name="maxCount" fullname="cv::TermCriteria::maxCount" href="cv-termcriteria.html#maxCount-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="882" type="int" static="false"/>
                <variable threadsafety="unspecified" name="type" fullname="cv::TermCriteria::type" href="cv-termcriteria.html#type-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="881" type="int" static="false"/>
            </class>
            <typedef threadsafety="unspecified" name="Complexd" fullname="cv::Complexd" href="cv.html#Complexd-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="91"/>
            <typedef threadsafety="unspecified" name="Complexf" fullname="cv::Complexf" href="cv.html#Complexf-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="90"/>
            <typedef threadsafety="unspecified" name="Point" fullname="cv::Point" href="cv.html#Point-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="194"/>
            <typedef threadsafety="unspecified" name="Point2d" fullname="cv::Point2d" href="cv.html#Point2d-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="193"/>
            <typedef threadsafety="unspecified" name="Point2f" fullname="cv::Point2f" href="cv.html#Point2f-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="192"/>
            <typedef threadsafety="unspecified" name="Point2i" fullname="cv::Point2i" href="cv.html#Point2i-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="190"/>
            <typedef threadsafety="unspecified" name="Point2l" fullname="cv::Point2l" href="cv.html#Point2l-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="191"/>
            <typedef threadsafety="unspecified" name="Point3d" fullname="cv::Point3d" href="cv.html#Point3d-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="272"/>
            <typedef threadsafety="unspecified" name="Point3f" fullname="cv::Point3f" href="cv.html#Point3f-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="271"/>
            <typedef threadsafety="unspecified" name="Point3i" fullname="cv::Point3i" href="cv.html#Point3i-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="270"/>
            <typedef threadsafety="unspecified" name="Rect" fullname="cv::Rect" href="cv.html#Rect-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="462"/>
            <typedef threadsafety="unspecified" name="Rect2d" fullname="cv::Rect2d" href="cv.html#Rect2d-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="461"/>
            <typedef threadsafety="unspecified" name="Rect2f" fullname="cv::Rect2f" href="cv.html#Rect2f-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="460"/>
            <typedef threadsafety="unspecified" name="Rect2i" fullname="cv::Rect2i" href="cv.html#Rect2i-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="459"/>
            <typedef threadsafety="unspecified" name="Scalar" fullname="cv::Scalar" href="cv.html#Scalar-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="669"/>
            <typedef threadsafety="unspecified" name="Size" fullname="cv::Size" href="cv.html#Size-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="347"/>
            <typedef threadsafety="unspecified" name="Size2d" fullname="cv::Size2d" href="cv.html#Size2d-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="346"/>
            <typedef threadsafety="unspecified" name="Size2f" fullname="cv::Size2f" href="cv.html#Size2f-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="345"/>
            <typedef threadsafety="unspecified" name="Size2i" fullname="cv::Size2i" href="cv.html#Size2i-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="343"/>
            <typedef threadsafety="unspecified" name="Size2l" fullname="cv::Size2l" href="cv.html#Size2l-typedef" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="344"/>
            <function threadsafety="unspecified" name="operator Complex&lt;T2&gt;" fullname="cv::operator Complex&lt;T2&gt;" href="cv.html#operator-Complex-ltT2-gt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/core/types.hpp" lineno="999" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator Complex&lt;T2&gt;() const"/>
            <namespace threadsafety="unspecified" name="samples" fullname="cv::samples" href="cv-samples.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1131">
                <function threadsafety="unspecified" name="findFileOrKeep" fullname="cv::samples::findFileOrKeep" href="cv-samples.html#findFileOrKeep" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1167" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::String" signature="cv::String findFileOrKeep(const cv::String &amp;relative_path, bool silentMode)">
                    <parameter left="const cv::String &amp;" right="" name="relative_path" default=""/>
                    <parameter left="bool" right="" name="silentMode" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer" href="cv-autobuffer.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="100">
                <typedef threadsafety="unspecified" name="value_type" fullname="cv::AutoBuffer::value_type" href="cv-autobuffer.html#value_type-typedef" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="104"/>
                <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer::AutoBuffer" href="cv-autobuffer.html#AutoBuffer" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="107" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer()"/>
                <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer::AutoBuffer" href="cv-autobuffer.html#AutoBuffer-2" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="112" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer(const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;buf)">
                    <parameter left="const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" right="" name="buf" default=""/>
                </function>
                <function threadsafety="unspecified" name="AutoBuffer" fullname="cv::AutoBuffer::AutoBuffer" href="cv-autobuffer.html#AutoBuffer-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="109" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutoBuffer(size_t _size)">
                    <parameter left="size_t" right="" name="_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::AutoBuffer::operator=" href="cv-autobuffer.html#operator-eq" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="114" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" signature="AutoBuffer&lt;_Tp, fixed_size&gt; &amp; operator=(const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;buf)">
                    <parameter left="const AutoBuffer&lt;_Tp, fixed_size&gt; &amp;" right="" name="buf" default=""/>
                </function>
                <function threadsafety="unspecified" name="data" fullname="cv::AutoBuffer::data" href="cv-autobuffer.html#data" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="128" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="_Tp *" signature="_Tp * data()"/>
                <function threadsafety="unspecified" name="operator _Tp *" fullname="cv::AutoBuffer::operator _Tp *" href="cv-autobuffer.html#operator-_Tp--2a" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator _Tp *()"/>
                <function threadsafety="unspecified" name="allocate" fullname="cv::AutoBuffer::allocate" href="cv-autobuffer.html#allocate" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void allocate(size_t _size)">
                    <parameter left="size_t" right="" name="_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="deallocate" fullname="cv::AutoBuffer::deallocate" href="cv-autobuffer.html#deallocate" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="122" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deallocate()"/>
                <function threadsafety="unspecified" name="resize" fullname="cv::AutoBuffer::resize" href="cv-autobuffer.html#resize" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resize(size_t _size)">
                    <parameter left="size_t" right="" name="_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="~AutoBuffer" fullname="cv::AutoBuffer::~AutoBuffer" href="cv-autobuffer.html#dtor.AutoBuffer" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="117" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~AutoBuffer()"/>
                <function threadsafety="unspecified" name="data" fullname="cv::AutoBuffer::data" href="cv-autobuffer.html#data-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const _Tp *" signature="const _Tp * data() const"/>
                <function threadsafety="unspecified" name="operator const _Tp *" fullname="cv::AutoBuffer::operator const _Tp *" href="cv-autobuffer.html#operator-const-_Tp--2a" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="136" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator const _Tp *() const"/>
                <function threadsafety="unspecified" name="size" fullname="cv::AutoBuffer::size" href="cv-autobuffer.html#size" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="126" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
                <variable threadsafety="unspecified" name="buf" fullname="cv::AutoBuffer::buf" href="cv-autobuffer.html#buf-var" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="150" type="_Tp[( fixed_size&gt; 0 ) ? fixed_size:1]" static="false"/>
                <variable threadsafety="unspecified" name="ptr" fullname="cv::AutoBuffer::ptr" href="cv-autobuffer.html#ptr-var" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="146" type="_Tp *" static="false"/>
                <variable threadsafety="unspecified" name="sz" fullname="cv::AutoBuffer::sz" href="cv-autobuffer.html#sz-var" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="148" type="size_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="CommandLineParser" fullname="cv::CommandLineParser" href="cv-commandlineparser.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="799">
                <function threadsafety="unspecified" name="operator=" fullname="cv::CommandLineParser::operator=" href="cv-commandlineparser.html#operator-eq" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="817" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CommandLineParser &amp;" signature="CommandLineParser &amp; operator=(const CommandLineParser &amp;parser)">
                    <parameter left="const CommandLineParser &amp;" right="" name="parser" default=""/>
                </function>
                <function threadsafety="unspecified" name="CommandLineParser" fullname="cv::CommandLineParser::CommandLineParser" href="cv-commandlineparser.html#CommandLineParser-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="814" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CommandLineParser(const CommandLineParser &amp;parser)">
                    <parameter left="const CommandLineParser &amp;" right="" name="parser" default=""/>
                </function>
                <function threadsafety="unspecified" name="CommandLineParser" fullname="cv::CommandLineParser::CommandLineParser" href="cv-commandlineparser.html#CommandLineParser" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="811" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CommandLineParser(int argc, const char * const[] argv, const String &amp;keys)">
                    <parameter left="int" right="" name="argc" default=""/>
                    <parameter left="const char * const[]" right="" name="argv" default=""/>
                    <parameter left="const String &amp;" right="" name="keys" default=""/>
                </function>
                <function threadsafety="unspecified" name="about" fullname="cv::CommandLineParser::about" href="cv-commandlineparser.html#about" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="922" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void about(const String &amp;message)">
                    <parameter left="const String &amp;" right="" name="message" default=""/>
                </function>
                <function threadsafety="unspecified" name="~CommandLineParser" fullname="cv::CommandLineParser::~CommandLineParser" href="cv-commandlineparser.html#dtor.CommandLineParser" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="820" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~CommandLineParser()"/>
                <function threadsafety="unspecified" name="getPathToApplication" fullname="cv::CommandLineParser::getPathToApplication" href="cv-commandlineparser.html#getPathToApplication" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="832" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String getPathToApplication() const"/>
                <function threadsafety="unspecified" name="get" fullname="cv::CommandLineParser::get" href="cv-commandlineparser.html#get" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="866" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(const String &amp;name, bool space_delete) const">
                    <parameter left="const String &amp;" right="" name="name" default=""/>
                    <parameter left="bool" right="" name="space_delete" default="true"/>
                </function>
                <function threadsafety="unspecified" name="get" fullname="cv::CommandLineParser::get" href="cv-commandlineparser.html#get-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="898" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(int index, bool space_delete) const">
                    <parameter left="int" right="" name="index" default=""/>
                    <parameter left="bool" right="" name="space_delete" default="true"/>
                </function>
                <function threadsafety="unspecified" name="check" fullname="cv::CommandLineParser::check" href="cv-commandlineparser.html#check" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="916" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool check() const"/>
                <function threadsafety="unspecified" name="has" fullname="cv::CommandLineParser::has" href="cv-commandlineparser.html#has" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="909" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool has(const String &amp;name) const">
                    <parameter left="const String &amp;" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="getByIndex" fullname="cv::CommandLineParser::getByIndex" href="cv-commandlineparser.html#getByIndex" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="940" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getByIndex(int index, bool space_delete, Param type, void *dst) const">
                    <parameter left="int" right="" name="index" default=""/>
                    <parameter left="bool" right="" name="space_delete" default=""/>
                    <parameter left="Param" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="getByName" fullname="cv::CommandLineParser::getByName" href="cv-commandlineparser.html#getByName" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="939" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getByName(const String &amp;name, bool space_delete, Param type, void *dst) const">
                    <parameter left="const String &amp;" right="" name="name" default=""/>
                    <parameter left="bool" right="" name="space_delete" default=""/>
                    <parameter left="Param" right="" name="type" default=""/>
                    <parameter left="void *" right="" name="dst" default=""/>
                </function>
                <function threadsafety="unspecified" name="printErrors" fullname="cv::CommandLineParser::printErrors" href="cv-commandlineparser.html#printErrors" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="936" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void printErrors() const"/>
                <function threadsafety="unspecified" name="printMessage" fullname="cv::CommandLineParser::printMessage" href="cv-commandlineparser.html#printMessage" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="930" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void printMessage() const"/>
                <variable threadsafety="unspecified" name="impl" fullname="cv::CommandLineParser::impl" href="cv-commandlineparser.html#impl-var" status="active" access="protected" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="943" type="Impl *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Node" fullname="cv::Node" href="cv-node.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1054">
                <function threadsafety="unspecified" name="Node" fullname="cv::Node::Node" href="cv-node.html#Node" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1057" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Node()"/>
                <function threadsafety="unspecified" name="Node" fullname="cv::Node::Node" href="cv-node.html#Node-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1061" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Node(OBJECT &amp;payload)">
                    <parameter left="OBJECT &amp;" right="" name="payload" default=""/>
                </function>
                <function threadsafety="unspecified" name="getDepth" fullname="cv::Node::getDepth" href="cv-node.html#getDepth" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1116" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getDepth()"/>
                <function threadsafety="unspecified" name="addChild" fullname="cv::Node::addChild" href="cv-node.html#addChild" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1096" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addChild(Node&lt;OBJECT&gt; *pNode)">
                    <parameter left="Node&lt;OBJECT&gt; *" right="" name="pNode" default=""/>
                </function>
                <function threadsafety="unspecified" name="removeChilds" fullname="cv::Node::removeChilds" href="cv-node.html#removeChilds" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeChilds()"/>
                <function threadsafety="unspecified" name="~Node" fullname="cv::Node::~Node" href="cv-node.html#dtor.Node" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1065" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Node()"/>
                <function threadsafety="unspecified" name="findChild" fullname="cv::Node::findChild" href="cv-node.html#findChild" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1076" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Node&lt;OBJECT&gt; *" signature="Node&lt;OBJECT&gt; * findChild(OBJECT &amp;payload) const">
                    <parameter left="OBJECT &amp;" right="" name="payload" default=""/>
                </function>
                <function threadsafety="unspecified" name="findChild" fullname="cv::Node::findChild" href="cv-node.html#findChild-1" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1086" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int findChild(Node&lt;OBJECT&gt; *pNode) const">
                    <parameter left="Node&lt;OBJECT&gt; *" right="" name="pNode" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_childs" fullname="cv::Node::m_childs" href="cv-node.html#m_childs-var" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1127" type="std::vector&lt;Node&lt;OBJECT&gt; *&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_pParent" fullname="cv::Node::m_pParent" href="cv-node.html#m_pParent-var" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1126" type="Node&lt;OBJECT&gt; *" static="false"/>
                <variable threadsafety="unspecified" name="m_payload" fullname="cv::Node::m_payload" href="cv-node.html#m_payload-var" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1125" type="OBJECT" static="false"/>
            </class>
            <class threadsafety="unspecified" name="ParallelLoopBody" fullname="cv::ParallelLoopBody" href="cv-parallelloopbody.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="576">
                <function threadsafety="unspecified" name="~ParallelLoopBody" fullname="cv::ParallelLoopBody::~ParallelLoopBody" href="cv-parallelloopbody.html#dtor.ParallelLoopBody" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="579" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ParallelLoopBody()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::ParallelLoopBody::operator()" href="cv-parallelloopbody.html#operator-28-29" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="580" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(const Range &amp;range) const = 0">
                    <parameter left="const Range &amp;" right="" name="range" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="ParallelLoopBodyLambdaWrapper" fullname="cv::ParallelLoopBodyLambdaWrapper" href="cv-parallelloopbodylambdawrapper.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="590" bases="cv::ParallelLoopBody">
                <function threadsafety="unspecified" name="ParallelLoopBodyLambdaWrapper" fullname="cv::ParallelLoopBodyLambdaWrapper::ParallelLoopBodyLambdaWrapper" href="cv-parallelloopbodylambdawrapper.html#ParallelLoopBodyLambdaWrapper" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="595" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ParallelLoopBodyLambdaWrapper(std::function&lt;void( const Range &amp; ) &gt; functor)">
                    <parameter left="std::function&lt;void( const Range &amp; ) &gt;" right="" name="functor" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="TickMeter" fullname="cv::TickMeter" href="cv-tickmeter.html" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="294">
                <function threadsafety="unspecified" name="TickMeter" fullname="cv::TickMeter::TickMeter" href="cv-tickmeter.html#TickMeter" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="298" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP TickMeter()"/>
            </class>
            <typedef threadsafety="unspecified" name="AutoLock" fullname="cv::AutoLock" href="cv.html#AutoLock-typedef" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="718"/>
            <typedef threadsafety="unspecified" name="Mutex" fullname="cv::Mutex" href="cv.html#Mutex-typedef" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="717"/>
            <function threadsafety="unspecified" name="size" fullname="cv::size" href="cv.html#size" status="active" access="public" location="utility.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utility.hpp" lineno="1045" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
            <namespace threadsafety="unspecified" name="instr" fullname="cv::instr" href="cv-instr.html" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="40">
                <class threadsafety="unspecified" name="NodeData" fullname="cv::instr::NodeData" href="cv-instr-nodedata.html" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="69">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::instr::NodeData::operator=" href="cv-instr-nodedata.html#operator-eq" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="75" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NodeData &amp;" signature="NodeData &amp; operator=(const NodeData &amp;)">
                        <parameter left="const NodeData &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="NodeData" fullname="cv::instr::NodeData::NodeData" href="cv-instr-nodedata.html#NodeData-1" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="73" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NodeData(NodeData &amp;ref)">
                        <parameter left="NodeData &amp;" right="" name="ref" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="NodeData" fullname="cv::instr::NodeData::NodeData" href="cv-instr-nodedata.html#NodeData" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="72" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NodeData(const char *funName, const char *fileName, int lineNum, void *retAddress, bool alwaysExpand, cv::instr::TYPE instrType, cv::instr::IMPL implType)">
                        <parameter left="const char *" right="" name="funName" default="0"/>
                        <parameter left="const char *" right="" name="fileName" default="NULL"/>
                        <parameter left="int" right="" name="lineNum" default="0"/>
                        <parameter left="void *" right="" name="retAddress" default="NULL"/>
                        <parameter left="bool" right="" name="alwaysExpand" default="false"/>
                        <parameter left="cv::instr::TYPE" right="" name="instrType" default="TYPE_GENERAL"/>
                        <parameter left="cv::instr::IMPL" right="" name="implType" default="IMPL_PLAIN"/>
                    </function>
                    <function threadsafety="unspecified" name="~NodeData" fullname="cv::instr::NodeData::~NodeData" href="cv-instr-nodedata.html#dtor.NodeData" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="74" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~NodeData()"/>
                    <function threadsafety="unspecified" name="getMeanMs" fullname="cv::instr::NodeData::getMeanMs" href="cv-instr-nodedata.html#getMeanMs" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="93" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getMeanMs() const"/>
                    <function threadsafety="unspecified" name="getTotalMs" fullname="cv::instr::NodeData::getTotalMs" href="cv-instr-nodedata.html#getTotalMs" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="92" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getTotalMs() const"/>
                    <variable threadsafety="unspecified" name="m_alwaysExpand" fullname="cv::instr::NodeData::m_alwaysExpand" href="cv-instr-nodedata.html#m_alwaysExpand-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="83" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="m_counter" fullname="cv::instr::NodeData::m_counter" href="cv-instr-nodedata.html#m_counter-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="86" type="volatile int" static="false"/>
                    <variable threadsafety="unspecified" name="m_fileName" fullname="cv::instr::NodeData::m_fileName" href="cv-instr-nodedata.html#m_fileName-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="80" type="const char *" static="false"/>
                    <variable threadsafety="unspecified" name="m_funError" fullname="cv::instr::NodeData::m_funError" href="cv-instr-nodedata.html#m_funError-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="84" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="m_funName" fullname="cv::instr::NodeData::m_funName" href="cv-instr-nodedata.html#m_funName-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="77" type="cv::String" static="false"/>
                    <variable threadsafety="unspecified" name="m_implType" fullname="cv::instr::NodeData::m_implType" href="cv-instr-nodedata.html#m_implType-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="79" type="cv::instr::IMPL" static="false"/>
                    <variable threadsafety="unspecified" name="m_instrType" fullname="cv::instr::NodeData::m_instrType" href="cv-instr-nodedata.html#m_instrType-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="78" type="cv::instr::TYPE" static="false"/>
                    <variable threadsafety="unspecified" name="m_lineNum" fullname="cv::instr::NodeData::m_lineNum" href="cv-instr-nodedata.html#m_lineNum-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="81" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="m_retAddress" fullname="cv::instr::NodeData::m_retAddress" href="cv-instr-nodedata.html#m_retAddress-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="82" type="void *" static="false"/>
                    <variable threadsafety="unspecified" name="m_threads" fullname="cv::instr::NodeData::m_threads" href="cv-instr-nodedata.html#m_threads-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="89" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="m_ticksTotal" fullname="cv::instr::NodeData::m_ticksTotal" href="cv-instr-nodedata.html#m_ticksTotal-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="87" type="volatile uint64" static="false"/>
                    <variable threadsafety="unspecified" name="m_tls" fullname="cv::instr::NodeData::m_tls" href="cv-instr-nodedata.html#m_tls-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="88" type="TLSDataAccumulator&lt;NodeDataTls&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="NodeDataTls" fullname="cv::instr::NodeDataTls" href="cv-instr-nodedatatls.html" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="60">
                    <function threadsafety="unspecified" name="NodeDataTls" fullname="cv::instr::NodeDataTls::NodeDataTls" href="cv-instr-nodedatatls.html#NodeDataTls" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="NodeDataTls()"/>
                    <variable threadsafety="unspecified" name="m_ticksTotal" fullname="cv::instr::NodeDataTls::m_ticksTotal" href="cv-instr-nodedatatls.html#m_ticksTotal-var" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="66" type="uint64" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="FLAGS" fullname="cv::instr::FLAGS" href="cv-instr.html#FLAGS-enum" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="108">
                    <value name="FLAGS_NONE" value="0"/>
                    <value name="FLAGS_MAPPING" value="0x01"/>
                    <value name="FLAGS_EXPAND_SAME_NAMES" value="0x02"/>
                </enum>
                <enum threadsafety="unspecified" name="IMPL" fullname="cv::instr::IMPL" href="cv-instr.html#IMPL-enum" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="53">
                    <value name="IMPL_PLAIN" value="0"/>
                    <value name="IMPL_IPP" value="1"/>
                    <value name="IMPL_OPENCL" value="2"/>
                </enum>
                <enum threadsafety="unspecified" name="TYPE" fullname="cv::instr::TYPE" href="cv-instr.html#TYPE-enum" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="45">
                    <value name="TYPE_GENERAL" value="0"/>
                    <value name="TYPE_MARKER" value="1"/>
                    <value name="TYPE_WRAPPER" value="2"/>
                    <value name="TYPE_FUN" value="3"/>
                </enum>
                <typedef threadsafety="unspecified" name="InstrNode" fullname="cv::instr::InstrNode" href="cv-instr.html#InstrNode-typedef" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="97"/>
                <function threadsafety="unspecified" name="operator==" fullname="cv::instr::operator==" href="cv-instr.html#operator-eq-eq" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const NodeData &amp;lhs, const NodeData &amp;rhs)">
                    <parameter left="const NodeData &amp;" right="" name="lhs" default=""/>
                    <parameter left="const NodeData &amp;" right="" name="rhs" default=""/>
                </function>
                <function threadsafety="unspecified" name="setFlags" fullname="cv::instr::setFlags" href="cv-instr.html#setFlags" status="active" access="public" location="instrumentation.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/instrumentation.hpp" lineno="116" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFlags(int modeFlags)">
                    <parameter left="int" right="" name="modeFlags" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="TLSData" fullname="cv::TLSData" href="cv-tlsdata.html" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="63" bases="cv::TLSDataContainer">
                <function threadsafety="unspecified" name="TLSData" fullname="cv::TLSData::TLSData" href="cv-tlsdata.html#TLSData" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="66" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TLSData()"/>
                <function threadsafety="unspecified" name="cleanup" fullname="cv::TLSData::cleanup" href="cv-tlsdata.html#cleanup" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanup()"/>
                <function threadsafety="unspecified" name="~TLSData" fullname="cv::TLSData::~TLSData" href="cv-tlsdata.html#dtor.TLSData" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="67" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~TLSData()"/>
                <function threadsafety="unspecified" name="getRef" fullname="cv::TLSData::getRef" href="cv-tlsdata.html#getRef" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="70" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; getRef() const"/>
                <function threadsafety="unspecified" name="get" fullname="cv::TLSData::get" href="cv-tlsdata.html#get" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="69" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * get() const"/>
            </class>
            <class threadsafety="unspecified" name="TLSDataAccumulator" fullname="cv::TLSDataAccumulator" href="cv-tlsdataaccumulator.html" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="88" bases="cv::TLSData">
                <function threadsafety="unspecified" name="TLSDataAccumulator" fullname="cv::TLSDataAccumulator::TLSDataAccumulator" href="cv-tlsdataaccumulator.html#TLSDataAccumulator" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="95" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TLSDataAccumulator()"/>
                <function threadsafety="unspecified" name="detachData" fullname="cv::TLSDataAccumulator::detachData" href="cv-tlsdataaccumulator.html#detachData" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="132" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T *&gt; &amp;" signature="std::vector&lt;T *&gt; &amp; detachData()"/>
                <function threadsafety="unspecified" name="_cleanupDetachedData" fullname="cv::TLSDataAccumulator::_cleanupDetachedData" href="cv-tlsdataaccumulator.html#underscore.cleanupDetachedData" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="191" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _cleanupDetachedData()"/>
                <function threadsafety="unspecified" name="_cleanupTerminatedData" fullname="cv::TLSDataAccumulator::_cleanupTerminatedData" href="cv-tlsdataaccumulator.html#underscore.cleanupTerminatedData" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="201" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _cleanupTerminatedData()"/>
                <function threadsafety="unspecified" name="cleanup" fullname="cv::TLSDataAccumulator::cleanup" href="cv-tlsdataaccumulator.html#cleanup" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanup()"/>
                <function threadsafety="unspecified" name="cleanupDetachedData" fullname="cv::TLSDataAccumulator::cleanupDetachedData" href="cv-tlsdataaccumulator.html#cleanupDetachedData" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="157" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanupDetachedData()"/>
                <function threadsafety="unspecified" name="release" fullname="cv::TLSDataAccumulator::release" href="cv-tlsdataaccumulator.html#release" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="178" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="~TLSDataAccumulator" fullname="cv::TLSDataAccumulator::~TLSDataAccumulator" href="cv-tlsdataaccumulator.html#dtor.TLSDataAccumulator" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="96" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~TLSDataAccumulator()"/>
                <function threadsafety="unspecified" name="gather" fullname="cv::TLSDataAccumulator::gather" href="cv-tlsdataaccumulator.html#gather" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="108" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void gather(std::vector&lt;T *&gt; &amp;data) const">
                    <parameter left="std::vector&lt;T *&gt; &amp;" right="" name="data" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="TLSDataContainer" fullname="cv::TLSDataContainer" href="cv-tlsdatacontainer.html" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="25">
                <function threadsafety="unspecified" name="operator=" fullname="cv::TLSDataContainer::operator=" href="cv-tlsdatacontainer.html#operator-eq" status="active" access="private" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="54" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="TLSDataContainer &amp;" signature="TLSDataContainer &amp; operator=(const TLSDataContainer &amp;) = delete">
                    <parameter left="const TLSDataContainer &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="TLSDataContainer" fullname="cv::TLSDataContainer::TLSDataContainer" href="cv-tlsdatacontainer.html#TLSDataContainer" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="28" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TLSDataContainer()"/>
                <function threadsafety="unspecified" name="TLSDataContainer" fullname="cv::TLSDataContainer::TLSDataContainer" href="cv-tlsdatacontainer.html#TLSDataContainer-1" status="active" access="private" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="53" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="TLSDataContainer(TLSDataContainer &amp;) = delete">
                    <parameter left="TLSDataContainer &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="cleanup" fullname="cv::TLSDataContainer::cleanup" href="cv-tlsdatacontainer.html#cleanup" status="active" access="public" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cleanup()"/>
                <function threadsafety="unspecified" name="detachData" fullname="cv::TLSDataContainer::detachData" href="cv-tlsdatacontainer.html#detachData" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detachData(std::vector&lt;void *&gt; &amp;data)">
                    <parameter left="std::vector&lt;void *&gt; &amp;" right="" name="data" default=""/>
                </function>
                <function threadsafety="unspecified" name="release" fullname="cv::TLSDataContainer::release" href="cv-tlsdatacontainer.html#release" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void release()"/>
                <function threadsafety="unspecified" name="~TLSDataContainer" fullname="cv::TLSDataContainer::~TLSDataContainer" href="cv-tlsdatacontainer.html#dtor.TLSDataContainer" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="29" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~TLSDataContainer()"/>
                <function threadsafety="unspecified" name="createDataInstance" fullname="cv::TLSDataContainer::createDataInstance" href="cv-tlsdatacontainer.html#createDataInstance" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="40" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * createDataInstance() const = 0"/>
                <function threadsafety="unspecified" name="getData" fullname="cv::TLSDataContainer::getData" href="cv-tlsdatacontainer.html#getData" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="36" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * getData() const"/>
                <function threadsafety="unspecified" name="deleteDataInstance" fullname="cv::TLSDataContainer::deleteDataInstance" href="cv-tlsdatacontainer.html#deleteDataInstance" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="41" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deleteDataInstance(void *pData) const = 0">
                    <parameter left="void *" right="" name="pData" default=""/>
                </function>
                <function threadsafety="unspecified" name="gatherData" fullname="cv::TLSDataContainer::gatherData" href="cv-tlsdatacontainer.html#gatherData" status="active" access="protected" location="tls.hpp" filepath="/usr/local/include/opencv4/opencv2/core/utils/tls.hpp" lineno="32" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void gatherData(std::vector&lt;void *&gt; &amp;data) const">
                    <parameter left="std::vector&lt;void *&gt; &amp;" right="" name="data" default=""/>
                </function>
            </class>
            <namespace threadsafety="unspecified" name="va_intel" fullname="cv::va_intel" href="cv-va-intel.html" status="active" access="public" location="va_intel.hpp" filepath="/usr/local/include/opencv4/opencv2/core/va_intel.hpp" lineno="27">
                <namespace threadsafety="unspecified" name="ocl" fullname="cv::va_intel::ocl" href="cv-va-intel-ocl.html" status="active" access="public" location="va_intel.hpp" filepath="/usr/local/include/opencv4/opencv2/core/va_intel.hpp" lineno="42"/>
            </namespace>
            <namespace threadsafety="unspecified" name="dnn" fullname="cv::dnn" href="cv-dnn.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="47">
                <class threadsafety="unspecified" name="AbsLayer" fullname="cv::dnn::AbsLayer" href="cv-dnn-abslayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="488" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::AbsLayer::create" href="cv-dnn-abslayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="491" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;AbsLayer&gt;" signature="Ptr&lt;AbsLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="AccumLayer" fullname="cv::dnn::AccumLayer" href="cv-dnn-accumlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="569" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::AccumLayer::create" href="cv-dnn-accumlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="572" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;AccumLayer&gt;" signature="Ptr&lt;AccumLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ActivationLayer" fullname="cv::dnn::ActivationLayer" href="cv-dnn-activationlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="423" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="forwardSlice" fullname="cv::dnn::ActivationLayer::forwardSlice" href="cv-dnn-activationlayer.html#forwardSlice" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="426" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forwardSlice(const float *src, float *dst, int len, size_t outPlaneSize, int cn0, int cn1) const = 0">
                        <parameter left="const float *" right="" name="src" default=""/>
                        <parameter left="float *" right="" name="dst" default=""/>
                        <parameter left="int" right="" name="len" default=""/>
                        <parameter left="size_t" right="" name="outPlaneSize" default=""/>
                        <parameter left="int" right="" name="cn0" default=""/>
                        <parameter left="int" right="" name="cn1" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="BNLLLayer" fullname="cv::dnn::BNLLLayer" href="cv-dnn-bnlllayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="482" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::BNLLLayer::create" href="cv-dnn-bnlllayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="485" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BNLLLayer&gt;" signature="Ptr&lt;BNLLLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="BaseConvolutionLayer" fullname="cv::dnn::BaseConvolutionLayer" href="cv-dnn-baseconvolutionlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="210" bases="cv::dnn::Layer">
                    <variable threadsafety="unspecified" name="adjust_pads" fullname="cv::dnn::BaseConvolutionLayer::adjust_pads" href="cv-dnn-baseconvolutionlayer.html#adjust_pads-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="214" type="std::vector&lt;size_t&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="numOutput" fullname="cv::dnn::BaseConvolutionLayer::numOutput" href="cv-dnn-baseconvolutionlayer.html#numOutput-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="218" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="padMode" fullname="cv::dnn::BaseConvolutionLayer::padMode" href="cv-dnn-baseconvolutionlayer.html#padMode-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="217" type="String" static="false"/>
                </class>
                <class threadsafety="unspecified" name="BatchNormLayer" fullname="cv::dnn::BatchNormLayer" href="cv-dnn-batchnormlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="523" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::BatchNormLayer::create" href="cv-dnn-batchnormlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="529" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BatchNormLayer&gt;" signature="Ptr&lt;BatchNormLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="epsilon" fullname="cv::dnn::BatchNormLayer::epsilon" href="cv-dnn-batchnormlayer.html#epsilon-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="527" type="float" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ChannelsPReLULayer" fullname="cv::dnn::ChannelsPReLULayer" href="cv-dnn-channelsprelulayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="446" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ChannelsPReLULayer::create" href="cv-dnn-channelsprelulayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="449" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ConcatLayer" fullname="cv::dnn::ConcatLayer" href="cv-dnn-concatlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="310" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ConcatLayer::create" href="cv-dnn-concatlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="322" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ConcatLayer&gt;" signature="Ptr&lt;ConcatLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="axis" fullname="cv::dnn::ConcatLayer::axis" href="cv-dnn-concatlayer.html#axis-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="313" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="padding" fullname="cv::dnn::ConcatLayer::padding" href="cv-dnn-concatlayer.html#padding-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="320" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ConstLayer" fullname="cv::dnn::ConstLayer" href="cv-dnn-constlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="83" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ConstLayer::create" href="cv-dnn-constlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="86" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ConvolutionLayer" fullname="cv::dnn::ConvolutionLayer" href="cv-dnn-convolutionlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="221" bases="cv::dnn::BaseConvolutionLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ConvolutionLayer::create" href="cv-dnn-convolutionlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="224" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BaseConvolutionLayer&gt;" signature="Ptr&lt;BaseConvolutionLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CorrelationLayer" fullname="cv::dnn::CorrelationLayer" href="cv-dnn-correlationlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="563" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::CorrelationLayer::create" href="cv-dnn-correlationlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="566" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;CorrelationLayer&gt;" signature="Ptr&lt;CorrelationLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CropAndResizeLayer" fullname="cv::dnn::CropAndResizeLayer" href="cv-dnn-cropandresizelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="677" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::CropAndResizeLayer::create" href="cv-dnn-cropandresizelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="680" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CropLayer" fullname="cv::dnn::CropLayer" href="cv-dnn-croplayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="504" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::CropLayer::create" href="cv-dnn-croplayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="507" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DataAugmentationLayer" fullname="cv::dnn::DataAugmentationLayer" href="cv-dnn-dataaugmentationlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="557" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::DataAugmentationLayer::create" href="cv-dnn-dataaugmentationlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="560" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DataAugmentationLayer&gt;" signature="Ptr&lt;DataAugmentationLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DeconvolutionLayer" fullname="cv::dnn::DeconvolutionLayer" href="cv-dnn-deconvolutionlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="227" bases="cv::dnn::BaseConvolutionLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::DeconvolutionLayer::create" href="cv-dnn-deconvolutionlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="230" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BaseConvolutionLayer&gt;" signature="Ptr&lt;BaseConvolutionLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DetectionOutputLayer" fullname="cv::dnn::DetectionOutputLayer" href="cv-dnn-detectionoutputlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="609" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::DetectionOutputLayer::create" href="cv-dnn-detectionoutputlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="612" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;DetectionOutputLayer&gt;" signature="Ptr&lt;DetectionOutputLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ELULayer" fullname="cv::dnn::ELULayer" href="cv-dnn-elulayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="452" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ELULayer::create" href="cv-dnn-elulayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="455" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ELULayer&gt;" signature="Ptr&lt;ELULayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="EltwiseLayer" fullname="cv::dnn::EltwiseLayer" href="cv-dnn-eltwiselayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="517" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::EltwiseLayer::create" href="cv-dnn-eltwiselayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="520" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;EltwiseLayer&gt;" signature="Ptr&lt;EltwiseLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="FlattenLayer" fullname="cv::dnn::FlattenLayer" href="cv-dnn-flattenlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="304" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::FlattenLayer::create" href="cv-dnn-flattenlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="307" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;FlattenLayer&gt;" signature="Ptr&lt;FlattenLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="FlowWarpLayer" fullname="cv::dnn::FlowWarpLayer" href="cv-dnn-flowwarplayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="575" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::FlowWarpLayer::create" href="cv-dnn-flowwarplayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="578" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;FlowWarpLayer&gt;" signature="Ptr&lt;FlowWarpLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="InnerProductLayer" fullname="cv::dnn::InnerProductLayer" href="cv-dnn-innerproductlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="277" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::InnerProductLayer::create" href="cv-dnn-innerproductlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="281" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;InnerProductLayer&gt;" signature="Ptr&lt;InnerProductLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="axis" fullname="cv::dnn::InnerProductLayer::axis" href="cv-dnn-innerproductlayer.html#axis-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="280" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="InterpLayer" fullname="cv::dnn::InterpLayer" href="cv-dnn-interplayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="665" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::InterpLayer::create" href="cv-dnn-interplayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="668" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="LRNLayer" fullname="cv::dnn::LRNLayer" href="cv-dnn-lrnlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="233" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::LRNLayer::create" href="cv-dnn-lrnlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="242" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;LRNLayer&gt;" signature="Ptr&lt;LRNLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="normBySize" fullname="cv::dnn::LRNLayer::normBySize" href="cv-dnn-lrnlayer.html#normBySize-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="240" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="size" fullname="cv::dnn::LRNLayer::size" href="cv-dnn-lrnlayer.html#size-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="238" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="type" fullname="cv::dnn::LRNLayer::type" href="cv-dnn-lrnlayer.html#type-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="236" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="LSTMLayer" fullname="cv::dnn::LSTMLayer" href="cv-dnn-lstmlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="90" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::LSTMLayer::create" href="cv-dnn-lstmlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="94" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;LSTMLayer&gt;" signature="Ptr&lt;LSTMLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setOutShape" fullname="cv::dnn::LSTMLayer::setOutShape" href="cv-dnn-lstmlayer.html#setOutShape" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="134" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setOutShape(const MatShape &amp;outTailShape) = 0">
                        <parameter left="const MatShape &amp;" right="" name="outTailShape" default="MatShape()"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="MVNLayer" fullname="cv::dnn::MVNLayer" href="cv-dnn-mvnlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="284" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::MVNLayer::create" href="cv-dnn-mvnlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="290" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;MVNLayer&gt;" signature="Ptr&lt;MVNLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="eps" fullname="cv::dnn::MVNLayer::eps" href="cv-dnn-mvnlayer.html#eps-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="287" type="float" static="false"/>
                </class>
                <class threadsafety="unspecified" name="MaxUnpoolLayer" fullname="cv::dnn::MaxUnpoolLayer" href="cv-dnn-maxunpoollayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="532" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::MaxUnpoolLayer::create" href="cv-dnn-maxunpoollayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="539" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;MaxUnpoolLayer&gt;" signature="Ptr&lt;MaxUnpoolLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="poolKernel" fullname="cv::dnn::MaxUnpoolLayer::poolKernel" href="cv-dnn-maxunpoollayer.html#poolKernel-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="535" type="Size" static="false"/>
                    <variable threadsafety="unspecified" name="poolPad" fullname="cv::dnn::MaxUnpoolLayer::poolPad" href="cv-dnn-maxunpoollayer.html#poolPad-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="536" type="Size" static="false"/>
                    <variable threadsafety="unspecified" name="poolStride" fullname="cv::dnn::MaxUnpoolLayer::poolStride" href="cv-dnn-maxunpoollayer.html#poolStride-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="537" type="Size" static="false"/>
                </class>
                <class threadsafety="unspecified" name="MishLayer" fullname="cv::dnn::MishLayer" href="cv-dnn-mishlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="470" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::MishLayer::create" href="cv-dnn-mishlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="473" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;MishLayer&gt;" signature="Ptr&lt;MishLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="NormalizeBBoxLayer" fullname="cv::dnn::NormalizeBBoxLayer" href="cv-dnn-normalizebboxlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="640" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::NormalizeBBoxLayer::create" href="cv-dnn-normalizebboxlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="646" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;NormalizeBBoxLayer&gt;" signature="Ptr&lt;NormalizeBBoxLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PaddingLayer" fullname="cv::dnn::PaddingLayer" href="cv-dnn-paddinglayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="416" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::PaddingLayer::create" href="cv-dnn-paddinglayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="419" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;PaddingLayer&gt;" signature="Ptr&lt;PaddingLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PermuteLayer" fullname="cv::dnn::PermuteLayer" href="cv-dnn-permutelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="373" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::PermuteLayer::create" href="cv-dnn-permutelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="376" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;PermuteLayer&gt;" signature="Ptr&lt;PermuteLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PoolingLayer" fullname="cv::dnn::PoolingLayer" href="cv-dnn-poolinglayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="245" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::PoolingLayer::create" href="cv-dnn-poolinglayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="266" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;PoolingLayer&gt;" signature="Ptr&lt;PoolingLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="avePoolPaddedArea" fullname="cv::dnn::PoolingLayer::avePoolPaddedArea" href="cv-dnn-poolinglayer.html#avePoolPaddedArea-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="259" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="ceilMode" fullname="cv::dnn::PoolingLayer::ceilMode" href="cv-dnn-poolinglayer.html#ceilMode-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="255" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="computeMaxIdx" fullname="cv::dnn::PoolingLayer::computeMaxIdx" href="cv-dnn-poolinglayer.html#computeMaxIdx-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="253" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="globalPooling" fullname="cv::dnn::PoolingLayer::globalPooling" href="cv-dnn-poolinglayer.html#globalPooling-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="251" type="bool" static="false"/>
                    <variable threadsafety="unspecified" name="isGlobalPooling" fullname="cv::dnn::PoolingLayer::isGlobalPooling" href="cv-dnn-poolinglayer.html#isGlobalPooling-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="252" type="std::vector&lt;bool&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="padMode" fullname="cv::dnn::PoolingLayer::padMode" href="cv-dnn-poolinglayer.html#padMode-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="254" type="String" static="false"/>
                    <variable threadsafety="unspecified" name="pooledSize" fullname="cv::dnn::PoolingLayer::pooledSize" href="cv-dnn-poolinglayer.html#pooledSize-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="261" type="Size" static="false"/>
                    <variable threadsafety="unspecified" name="psRoiOutChannels" fullname="cv::dnn::PoolingLayer::psRoiOutChannels" href="cv-dnn-poolinglayer.html#psRoiOutChannels-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="264" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="spatialScale" fullname="cv::dnn::PoolingLayer::spatialScale" href="cv-dnn-poolinglayer.html#spatialScale-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="262" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="type" fullname="cv::dnn::PoolingLayer::type" href="cv-dnn-poolinglayer.html#type-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="248" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="PowerLayer" fullname="cv::dnn::PowerLayer" href="cv-dnn-powerlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="494" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::PowerLayer::create" href="cv-dnn-powerlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="499" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;PowerLayer&gt;" signature="Ptr&lt;PowerLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="PriorBoxLayer" fullname="cv::dnn::PriorBoxLayer" href="cv-dnn-priorboxlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="581" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::PriorBoxLayer::create" href="cv-dnn-priorboxlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="584" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;PriorBoxLayer&gt;" signature="Ptr&lt;PriorBoxLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ProposalLayer" fullname="cv::dnn::ProposalLayer" href="cv-dnn-proposallayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="671" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ProposalLayer::create" href="cv-dnn-proposallayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="674" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ProposalLayer&gt;" signature="Ptr&lt;ProposalLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="RNNLayer" fullname="cv::dnn::RNNLayer" href="cv-dnn-rnnlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="181" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::RNNLayer::create" href="cv-dnn-rnnlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="185" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;RNNLayer&gt;" signature="Ptr&lt;RNNLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setProduceHiddenOutput" fullname="cv::dnn::RNNLayer::setProduceHiddenOutput" href="cv-dnn-rnnlayer.html#setProduceHiddenOutput" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="206" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setProduceHiddenOutput(bool produce) = 0">
                        <parameter left="bool" right="" name="produce" default="false"/>
                    </function>
                    <function threadsafety="unspecified" name="setWeights" fullname="cv::dnn::RNNLayer::setWeights" href="cv-dnn-rnnlayer.html#setWeights" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="201" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setWeights(const Mat &amp;Wxh, const Mat &amp;bh, const Mat &amp;Whh, const Mat &amp;Who, const Mat &amp;bo) = 0">
                        <parameter left="const Mat &amp;" right="" name="Wxh" default=""/>
                        <parameter left="const Mat &amp;" right="" name="bh" default=""/>
                        <parameter left="const Mat &amp;" right="" name="Whh" default=""/>
                        <parameter left="const Mat &amp;" right="" name="Who" default=""/>
                        <parameter left="const Mat &amp;" right="" name="bo" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ReLU6Layer" fullname="cv::dnn::ReLU6Layer" href="cv-dnn-relu6layer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="438" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ReLU6Layer::create" href="cv-dnn-relu6layer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="443" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ReLU6Layer&gt;" signature="Ptr&lt;ReLU6Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ReLULayer" fullname="cv::dnn::ReLULayer" href="cv-dnn-relulayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="430" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ReLULayer::create" href="cv-dnn-relulayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="435" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ReLULayer&gt;" signature="Ptr&lt;ReLULayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="negativeSlope" fullname="cv::dnn::ReLULayer::negativeSlope" href="cv-dnn-relulayer.html#negativeSlope-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="433" type="float" static="false"/>
                </class>
                <class threadsafety="unspecified" name="RegionLayer" fullname="cv::dnn::RegionLayer" href="cv-dnn-regionlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="593" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::RegionLayer::create" href="cv-dnn-regionlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="598" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;RegionLayer&gt;" signature="Ptr&lt;RegionLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="nmsThreshold" fullname="cv::dnn::RegionLayer::nmsThreshold" href="cv-dnn-regionlayer.html#nmsThreshold-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="596" type="float" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ReorgLayer" fullname="cv::dnn::ReorgLayer" href="cv-dnn-reorglayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="587" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ReorgLayer::create" href="cv-dnn-reorglayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="590" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ReorgLayer&gt;" signature="Ptr&lt;ReorgLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ReshapeLayer" fullname="cv::dnn::ReshapeLayer" href="cv-dnn-reshapelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="295" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ReshapeLayer::create" href="cv-dnn-reshapelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="301" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ReshapeLayer&gt;" signature="Ptr&lt;ReshapeLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="newShapeDesc" fullname="cv::dnn::ReshapeLayer::newShapeDesc" href="cv-dnn-reshapelayer.html#newShapeDesc-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="298" type="MatShape" static="false"/>
                    <variable threadsafety="unspecified" name="newShapeRange" fullname="cv::dnn::ReshapeLayer::newShapeRange" href="cv-dnn-reshapelayer.html#newShapeRange-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="299" type="Range" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ResizeLayer" fullname="cv::dnn::ResizeLayer" href="cv-dnn-resizelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="654" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ResizeLayer::create" href="cv-dnn-resizelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="657" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ResizeLayer&gt;" signature="Ptr&lt;ResizeLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ScaleLayer" fullname="cv::dnn::ScaleLayer" href="cv-dnn-scalelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="542" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ScaleLayer::create" href="cv-dnn-scalelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="548" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;ScaleLayer&gt;" signature="Ptr&lt;ScaleLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="axis" fullname="cv::dnn::ScaleLayer::axis" href="cv-dnn-scalelayer.html#axis-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="546" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="hasBias" fullname="cv::dnn::ScaleLayer::hasBias" href="cv-dnn-scalelayer.html#hasBias-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="545" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ShiftLayer" fullname="cv::dnn::ShiftLayer" href="cv-dnn-shiftlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="551" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ShiftLayer::create" href="cv-dnn-shiftlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="554" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="ShuffleChannelLayer" fullname="cv::dnn::ShuffleChannelLayer" href="cv-dnn-shufflechannellayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="388" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::ShuffleChannelLayer::create" href="cv-dnn-shufflechannellayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="391" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;Layer&gt;" signature="Ptr&lt;Layer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="group" fullname="cv::dnn::ShuffleChannelLayer::group" href="cv-dnn-shufflechannellayer.html#group-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="393" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SigmoidLayer" fullname="cv::dnn::SigmoidLayer" href="cv-dnn-sigmoidlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="476" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::SigmoidLayer::create" href="cv-dnn-sigmoidlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="479" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;SigmoidLayer&gt;" signature="Ptr&lt;SigmoidLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SliceLayer" fullname="cv::dnn::SliceLayer" href="cv-dnn-slicelayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="357" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::SliceLayer::create" href="cv-dnn-slicelayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="370" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;SliceLayer&gt;" signature="Ptr&lt;SliceLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="axis" fullname="cv::dnn::SliceLayer::axis" href="cv-dnn-slicelayer.html#axis-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="367" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="num_split" fullname="cv::dnn::SliceLayer::num_split" href="cv-dnn-slicelayer.html#num_split-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="368" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="sliceRanges" fullname="cv::dnn::SliceLayer::sliceRanges" href="cv-dnn-slicelayer.html#sliceRanges-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="366" type="std::vector&lt;std::vector&lt;Range&gt; &gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SoftmaxLayer" fullname="cv::dnn::SoftmaxLayer" href="cv-dnn-softmaxlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="269" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::SoftmaxLayer::create" href="cv-dnn-softmaxlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="274" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;SoftmaxLayer&gt;" signature="Ptr&lt;SoftmaxLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="logSoftMax" fullname="cv::dnn::SoftmaxLayer::logSoftMax" href="cv-dnn-softmaxlayer.html#logSoftMax-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="272" type="bool" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SplitLayer" fullname="cv::dnn::SplitLayer" href="cv-dnn-splitlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="325" bases="cv::dnn::Layer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::SplitLayer::create" href="cv-dnn-splitlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="330" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;SplitLayer&gt;" signature="Ptr&lt;SplitLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="outputsCount" fullname="cv::dnn::SplitLayer::outputsCount" href="cv-dnn-splitlayer.html#outputsCount-var" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="328" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="SwishLayer" fullname="cv::dnn::SwishLayer" href="cv-dnn-swishlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="464" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::SwishLayer::create" href="cv-dnn-swishlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="467" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;SwishLayer&gt;" signature="Ptr&lt;SwishLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TanHLayer" fullname="cv::dnn::TanHLayer" href="cv-dnn-tanhlayer.html" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="458" bases="cv::dnn::ActivationLayer">
                    <function threadsafety="unspecified" name="create" fullname="cv::dnn::TanHLayer::create" href="cv-dnn-tanhlayer.html#create" status="active" access="public" location="all_layers.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/all_layers.hpp" lineno="461" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;TanHLayer&gt;" signature="Ptr&lt;TanHLayer&gt; create(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Dict" fullname="cv::dnn::Dict" href="cv-dnn-dict.html" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="114">
                    <typedef threadsafety="unspecified" name="_Dict" fullname="cv::dnn::Dict::_Dict" href="cv-dnn-dict.html#_Dict-typedef" status="active" access="private" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="116"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::dnn::Dict::ptr" href="cv-dnn-dict.html#ptr" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DictValue *" signature="DictValue * ptr(const String &amp;key)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="set" fullname="cv::dnn::Dict::set" href="cv-dnn-dict.html#set" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; set(const String &amp;key, const T &amp;value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="const T &amp;" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="erase" fullname="cv::dnn::Dict::erase" href="cv-dnn-dict.html#erase" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="146" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void erase(const String &amp;key)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get" fullname="cv::dnn::Dict::get" href="cv-dnn-dict.html#get-1" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="135" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(const String &amp;key) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get" fullname="cv::dnn::Dict::get" href="cv-dnn-dict.html#get-2" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="139" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get(const String &amp;key, const T &amp;defaultValue) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="const T &amp;" right="" name="defaultValue" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="has" fullname="cv::dnn::Dict::has" href="cv-dnn-dict.html#has" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="122" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool has(const String &amp;key) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get" fullname="cv::dnn::Dict::get" href="cv-dnn-dict.html#get" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const DictValue &amp;" signature="const DictValue &amp; get(const String &amp;key) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::dnn::Dict::ptr" href="cv-dnn-dict.html#ptr-1" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="128" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const DictValue *" signature="const DictValue * ptr(const String &amp;key) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="begin" fullname="cv::dnn::Dict::begin" href="cv-dnn-dict.html#begin" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="150" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::map&lt;String, DictValue&gt;::const_iterator" signature="std::map&lt;String, DictValue&gt;::const_iterator begin() const"/>
                    <function threadsafety="unspecified" name="end" fullname="cv::dnn::Dict::end" href="cv-dnn-dict.html#end" status="active" access="public" location="dict.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dict.hpp" lineno="152" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::map&lt;String, DictValue&gt;::const_iterator" signature="std::map&lt;String, DictValue&gt;::const_iterator end() const"/>
                </class>
                <class threadsafety="unspecified" name="BackendNode" fullname="cv::dnn::BackendNode" href="cv-dnn-backendnode.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="121">
                    <function threadsafety="unspecified" name="BackendNode" fullname="cv::dnn::BackendNode::BackendNode" href="cv-dnn-backendnode.html#BackendNode" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="124" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackendNode(int backendId)">
                        <parameter left="int" right="" name="backendId" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~BackendNode" fullname="cv::dnn::BackendNode::~BackendNode" href="cv-dnn-backendnode.html#dtor.BackendNode" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="126" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BackendNode()"/>
                    <variable threadsafety="unspecified" name="backendId" fullname="cv::dnn::BackendNode::backendId" href="cv-dnn-backendnode.html#backendId-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="128" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="BackendWrapper" fullname="cv::dnn::BackendWrapper" href="cv-dnn-backendwrapper.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="134">
                    <function threadsafety="unspecified" name="BackendWrapper" fullname="cv::dnn::BackendWrapper::BackendWrapper" href="cv-dnn-backendwrapper.html#BackendWrapper-2" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="158" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackendWrapper(const Ptr&lt;BackendWrapper&gt; &amp;base, const MatShape &amp;shape)">
                        <parameter left="const Ptr&lt;BackendWrapper&gt; &amp;" right="" name="base" default=""/>
                        <parameter left="const MatShape &amp;" right="" name="shape" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="BackendWrapper" fullname="cv::dnn::BackendWrapper::BackendWrapper" href="cv-dnn-backendwrapper.html#BackendWrapper" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackendWrapper(int backendId, int targetId)">
                        <parameter left="int" right="" name="backendId" default=""/>
                        <parameter left="int" right="" name="targetId" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="BackendWrapper" fullname="cv::dnn::BackendWrapper::BackendWrapper" href="cv-dnn-backendwrapper.html#BackendWrapper-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="146" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackendWrapper(int targetId, const cv::Mat &amp;m)">
                        <parameter left="int" right="" name="targetId" default=""/>
                        <parameter left="const cv::Mat &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copyToHost" fullname="cv::dnn::BackendWrapper::copyToHost" href="cv-dnn-backendwrapper.html#copyToHost" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="165" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyToHost() = 0"/>
                    <function threadsafety="unspecified" name="setHostDirty" fullname="cv::dnn::BackendWrapper::setHostDirty" href="cv-dnn-backendwrapper.html#setHostDirty" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="170" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setHostDirty() = 0"/>
                    <function threadsafety="unspecified" name="~BackendWrapper" fullname="cv::dnn::BackendWrapper::~BackendWrapper" href="cv-dnn-backendwrapper.html#dtor.BackendWrapper" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="160" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BackendWrapper()"/>
                    <variable threadsafety="unspecified" name="backendId" fullname="cv::dnn::BackendWrapper::backendId" href="cv-dnn-backendwrapper.html#backendId-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="172" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="targetId" fullname="cv::dnn::BackendWrapper::targetId" href="cv-dnn-backendwrapper.html#targetId-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="173" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="ClassificationModel" fullname="cv::dnn::ClassificationModel" href="cv-dnn-classificationmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1187" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="ClassificationModel" fullname="cv::dnn::ClassificationModel::ClassificationModel" href="cv-dnn-classificationmodel.html#ClassificationModel-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP ClassificationModel(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ClassificationModel" fullname="cv::dnn::ClassificationModel::ClassificationModel" href="cv-dnn-classificationmodel.html#ClassificationModel" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1196" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP ClassificationModel(const String &amp;model, const String &amp;config)">
                        <parameter left="const String &amp;" right="" name="model" default=""/>
                        <parameter left="const String &amp;" right="" name="config" default="&quot;&quot;"/>
                    </function>
                    <function threadsafety="unspecified" name="classify" fullname="cv::dnn::ClassificationModel::classify" href="cv-dnn-classificationmodel.html#classify" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1207" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::pair&lt;int, float&gt;" signature="std::pair&lt;int, float&gt; classify(InputArray frame)">
                        <parameter left="InputArray" right="" name="frame" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="DetectionModel" fullname="cv::dnn::DetectionModel" href="cv-dnn-detectionmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1282" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="DetectionModel" fullname="cv::dnn::DetectionModel::DetectionModel" href="cv-dnn-detectionmodel.html#DetectionModel-2" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1299" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL DetectionModel()"/>
                    <function threadsafety="unspecified" name="DetectionModel" fullname="cv::dnn::DetectionModel::DetectionModel" href="cv-dnn-detectionmodel.html#DetectionModel-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1297" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DetectionModel(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="DetectionModel" fullname="cv::dnn::DetectionModel::DetectionModel" href="cv-dnn-detectionmodel.html#DetectionModel" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1291" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP DetectionModel(const String &amp;model, const String &amp;config)">
                        <parameter left="const String &amp;" right="" name="model" default=""/>
                        <parameter left="const String &amp;" right="" name="config" default="&quot;&quot;"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KeypointsModel" fullname="cv::dnn::KeypointsModel" href="cv-dnn-keypointsmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1219" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="KeypointsModel" fullname="cv::dnn::KeypointsModel::KeypointsModel" href="cv-dnn-keypointsmodel.html#KeypointsModel-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1234" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KeypointsModel(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="KeypointsModel" fullname="cv::dnn::KeypointsModel::KeypointsModel" href="cv-dnn-keypointsmodel.html#KeypointsModel" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1228" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KeypointsModel(const String &amp;model, const String &amp;config)">
                        <parameter left="const String &amp;" right="" name="model" default=""/>
                        <parameter left="const String &amp;" right="" name="config" default="&quot;&quot;"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Layer" fullname="cv::dnn::Layer" href="cv-dnn-layer.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="183">
                    <function threadsafety="unspecified" name="Layer" fullname="cv::dnn::Layer::Layer" href="cv-dnn-layer.html#Layer" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="378" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Layer()"/>
                    <function threadsafety="unspecified" name="Layer" fullname="cv::dnn::Layer::Layer" href="cv-dnn-layer.html#Layer-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="379" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Layer(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initCUDA" fullname="cv::dnn::Layer::initCUDA" href="cv-dnn-layer.html#initCUDA" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="296" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; initCUDA(void *context, const std::vector&lt;Ptr&lt;BackendWrapper&gt;&gt; &amp; inputs, const std::vector&lt;Ptr&lt;BackendWrapper&gt;&gt; &amp; outputs )">
                        <parameter left="void *" right="" name="context" default=""/>
                        <parameter left="const std::vector&lt;Ptr&lt;BackendWrapper&gt;&gt; &amp; inputs, const std::vector&lt;Ptr&lt;BackendWrapper&gt;&gt; &amp; outputs" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initHalide" fullname="cv::dnn::Layer::initHalide" href="cv-dnn-layer.html#initHalide" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="281" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; initHalide(const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;inputs)">
                        <parameter left="const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;" right="" name="inputs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initInfEngine" fullname="cv::dnn::Layer::initInfEngine" href="cv-dnn-layer.html#initInfEngine" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="283" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; initInfEngine(const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;inputs)">
                        <parameter left="const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;" right="" name="inputs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initNgraph" fullname="cv::dnn::Layer::initNgraph" href="cv-dnn-layer.html#initNgraph" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="285" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; initNgraph(const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;inputs, const std::vector&lt;Ptr&lt;BackendNode&gt; &gt; &amp;nodes)">
                        <parameter left="const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;" right="" name="inputs" default=""/>
                        <parameter left="const std::vector&lt;Ptr&lt;BackendNode&gt; &gt; &amp;" right="" name="nodes" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initVkCom" fullname="cv::dnn::Layer::initVkCom" href="cv-dnn-layer.html#initVkCom" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="287" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; initVkCom(const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;inputs)">
                        <parameter left="const std::vector&lt;Ptr&lt;BackendWrapper&gt; &gt; &amp;" right="" name="inputs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="tryAttach" fullname="cv::dnn::Layer::tryAttach" href="cv-dnn-layer.html#tryAttach" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="327" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BackendNode&gt;" signature="Ptr&lt;BackendNode&gt; tryAttach(const Ptr&lt;BackendNode&gt; &amp;node)">
                        <parameter left="const Ptr&lt;BackendNode&gt; &amp;" right="" name="node" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setActivation" fullname="cv::dnn::Layer::setActivation" href="cv-dnn-layer.html#setActivation" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="335" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setActivation(const Ptr&lt;ActivationLayer&gt; &amp;layer)">
                        <parameter left="const Ptr&lt;ActivationLayer&gt; &amp;" right="" name="layer" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="supportBackend" fullname="cv::dnn::Layer::supportBackend" href="cv-dnn-layer.html#supportBackend" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="269" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool supportBackend(int backendId)">
                        <parameter left="int" right="" name="backendId" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="tryFuse" fullname="cv::dnn::Layer::tryFuse" href="cv-dnn-layer.html#tryFuse" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="342" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool tryFuse(Ptr&lt;Layer&gt; &amp;top)">
                        <parameter left="Ptr&lt;Layer&gt; &amp;" right="" name="top" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="updateMemoryShapes" fullname="cv::dnn::Layer::updateMemoryShapes" href="cv-dnn-layer.html#updateMemoryShapes" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="372" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool updateMemoryShapes(const std::vector&lt;MatShape&gt; &amp;inputs)">
                        <parameter left="const std::vector&lt;MatShape&gt; &amp;" right="" name="inputs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="inputNameToIndex" fullname="cv::dnn::Layer::inputNameToIndex" href="cv-dnn-layer.html#inputNameToIndex" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="258" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int inputNameToIndex(String inputName)">
                        <parameter left="String" right="" name="inputName" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="forward" fullname="cv::dnn::Layer::forward" href="cv-dnn-layer.html#forward" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="224" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forward(InputArrayOfArrays inputs, OutputArrayOfArrays outputs, OutputArrayOfArrays internals)">
                        <parameter left="InputArrayOfArrays" right="" name="inputs" default=""/>
                        <parameter left="OutputArrayOfArrays" right="" name="outputs" default=""/>
                        <parameter left="OutputArrayOfArrays" right="" name="internals" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="forward_fallback" fullname="cv::dnn::Layer::forward_fallback" href="cv-dnn-layer.html#forward_fallback" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="231" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void forward_fallback(InputArrayOfArrays inputs, OutputArrayOfArrays outputs, OutputArrayOfArrays internals)">
                        <parameter left="InputArrayOfArrays" right="" name="inputs" default=""/>
                        <parameter left="OutputArrayOfArrays" right="" name="outputs" default=""/>
                        <parameter left="OutputArrayOfArrays" right="" name="internals" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setParamsFrom" fullname="cv::dnn::Layer::setParamsFrom" href="cv-dnn-layer.html#setParamsFrom" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="380" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setParamsFrom(const LayerParams &amp;params)">
                        <parameter left="const LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="unsetAttached" fullname="cv::dnn::Layer::unsetAttached" href="cv-dnn-layer.html#unsetAttached" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="362" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void unsetAttached()"/>
                    <function threadsafety="unspecified" name="~Layer" fullname="cv::dnn::Layer::~Layer" href="cv-dnn-layer.html#dtor.Layer" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="381" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Layer()"/>
                    <function threadsafety="unspecified" name="getMemoryShapes" fullname="cv::dnn::Layer::getMemoryShapes" href="cv-dnn-layer.html#getMemoryShapes" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="364" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool getMemoryShapes(const std::vector&lt;MatShape&gt; &amp;inputs, const int requiredOutputs, std::vector&lt;MatShape&gt; &amp;outputs, std::vector&lt;MatShape&gt; &amp;internals) const">
                        <parameter left="const std::vector&lt;MatShape&gt; &amp;" right="" name="inputs" default=""/>
                        <parameter left="const int" right="" name="requiredOutputs" default=""/>
                        <parameter left="std::vector&lt;MatShape&gt; &amp;" right="" name="outputs" default=""/>
                        <parameter left="std::vector&lt;MatShape&gt; &amp;" right="" name="internals" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getFLOPS" fullname="cv::dnn::Layer::getFLOPS" href="cv-dnn-layer.html#getFLOPS" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="369" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int64" signature="int64 getFLOPS(const std::vector&lt;MatShape&gt; &amp;inputs, const std::vector&lt;MatShape&gt; &amp;outputs) const">
                        <parameter left="const std::vector&lt;MatShape&gt; &amp;" right="" name="inputs" default=""/>
                        <parameter left="const std::vector&lt;MatShape&gt; &amp;" right="" name="outputs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="applyHalideScheduler" fullname="cv::dnn::Layer::applyHalideScheduler" href="cv-dnn-layer.html#applyHalideScheduler" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="313" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void applyHalideScheduler(Ptr&lt;BackendNode&gt; &amp;node, const std::vector&lt;Mat *&gt; &amp;inputs, const std::vector&lt;Mat&gt; &amp;outputs, int targetId) const">
                        <parameter left="Ptr&lt;BackendNode&gt; &amp;" right="" name="node" default=""/>
                        <parameter left="const std::vector&lt;Mat *&gt; &amp;" right="" name="inputs" default=""/>
                        <parameter left="const std::vector&lt;Mat&gt; &amp;" right="" name="outputs" default=""/>
                        <parameter left="int" right="" name="targetId" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getScaleShift" fullname="cv::dnn::Layer::getScaleShift" href="cv-dnn-layer.html#getScaleShift" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="357" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getScaleShift(Mat &amp;scale, Mat &amp;shift) const">
                        <parameter left="Mat &amp;" right="" name="scale" default=""/>
                        <parameter left="Mat &amp;" right="" name="shift" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="LayerParams" fullname="cv::dnn::LayerParams" href="cv-dnn-layerparams.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="108" bases="cv::dnn::Dict">
                    <variable threadsafety="unspecified" name="blobs" fullname="cv::dnn::LayerParams::blobs" href="cv-dnn-layerparams.html#blobs-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="112" type="std::vector&lt;Mat&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="name" fullname="cv::dnn::LayerParams::name" href="cv-dnn-layerparams.html#name-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="114" type="String" static="false"/>
                    <variable threadsafety="unspecified" name="type" fullname="cv::dnn::LayerParams::type" href="cv-dnn-layerparams.html#type-var" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="115" type="String" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Model" fullname="cv::dnn::Model" href="cv-dnn-model.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1080">
                    <function threadsafety="unspecified" name="Model" fullname="cv::dnn::Model::Model" href="cv-dnn-model.html#Model" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1083" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL Model()"/>
                    <function threadsafety="unspecified" name="Model" fullname="cv::dnn::Model::Model" href="cv-dnn-model.html#Model-4" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1103" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Model(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Model" fullname="cv::dnn::Model::Model" href="cv-dnn-model.html#Model-3" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1097" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Model(const String &amp;model, const String &amp;config)">
                        <parameter left="const String &amp;" right="" name="model" default=""/>
                        <parameter left="const String &amp;" right="" name="config" default="&quot;&quot;"/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::dnn::Model::operator=" href="cv-dnn-model.html#operator-eq-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1089" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="Model &amp;" signature="Model &amp; operator=(Model &amp;&amp;) = default">
                        <parameter left="Model &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::dnn::Model::operator=" href="cv-dnn-model.html#operator-eq" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1088" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="Model &amp;" signature="Model &amp; operator=(const Model &amp;) = default">
                        <parameter left="const Model &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Model" fullname="cv::dnn::Model::Model" href="cv-dnn-model.html#Model-2" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1087" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Model(Model &amp;&amp;) = default">
                        <parameter left="Model &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="Model" fullname="cv::dnn::Model::Model" href="cv-dnn-model.html#Model-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1086" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Model(const Model &amp;) = default">
                        <parameter left="const Model &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getNetwork_" fullname="cv::dnn::Model::getNetwork_" href="cv-dnn-model.html#getNetwork_-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net &amp;" signature="Net &amp; getNetwork_()"/>
                    <function threadsafety="unspecified" name="operatorNet&amp;" fullname="cv::dnn::Model::operatorNet&amp;" href="cv-dnn-model.html#operatorNet-and" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1167" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL operatorNet&amp;() const"/>
                    <function threadsafety="unspecified" name="getImplRef" fullname="cv::dnn::Model::getImplRef" href="cv-dnn-model.html#getImplRef" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl &amp;" signature="Impl &amp; getImplRef() const"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::dnn::Model::getImpl" href="cv-dnn-model.html#getImpl" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1175" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <function threadsafety="unspecified" name="getNetwork_" fullname="cv::dnn::Model::getNetwork_" href="cv-dnn-model.html#getNetwork_" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1171" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net &amp;" signature="Net &amp; getNetwork_() const"/>
                    <variable threadsafety="unspecified" name="impl" fullname="cv::dnn::Model::impl" href="cv-dnn-model.html#impl-var" status="active" access="protected" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1178" type="Ptr&lt;Impl&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Net" fullname="cv::dnn::Net" href="cv-dnn-net.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="394">
                    <typedef threadsafety="unspecified" name="LayerId" fullname="cv::dnn::Net::LayerId" href="cv-dnn-net.html#LayerId-typedef" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="461"/>
                    <function threadsafety="unspecified" name="Net" fullname="cv::dnn::Net::Net" href="cv-dnn-net.html#Net" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="398" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Net()"/>
                    <function threadsafety="unspecified" name="readFromModelOptimizer" fullname="cv::dnn::Net::readFromModelOptimizer" href="cv-dnn-net.html#readFromModelOptimizer" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="424" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Net" signature="Net readFromModelOptimizer(const uchar *bufferModelConfigPtr, size_t bufferModelConfigSize, const uchar *bufferWeightsPtr, size_t bufferWeightsSize)">
                        <parameter left="const uchar *" right="" name="bufferModelConfigPtr" default=""/>
                        <parameter left="size_t" right="" name="bufferModelConfigSize" default=""/>
                        <parameter left="const uchar *" right="" name="bufferWeightsPtr" default=""/>
                        <parameter left="size_t" right="" name="bufferWeightsSize" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="addLayer" fullname="cv::dnn::Net::addLayer" href="cv-dnn-net.html#addLayer" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="447" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int addLayer(const String &amp;name, const String &amp;type, LayerParams &amp;params)">
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="const String &amp;" right="" name="type" default=""/>
                        <parameter left="LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="addLayerToPrev" fullname="cv::dnn::Net::addLayerToPrev" href="cv-dnn-net.html#addLayerToPrev" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="451" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int addLayerToPrev(const String &amp;name, const String &amp;type, LayerParams &amp;params)">
                        <parameter left="const String &amp;" right="" name="name" default=""/>
                        <parameter left="const String &amp;" right="" name="type" default=""/>
                        <parameter left="LayerParams &amp;" right="" name="params" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getLayerInputs" fullname="cv::dnn::Net::getLayerInputs" href="cv-dnn-net.html#getLayerInputs" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="467" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;Ptr&lt;Layer&gt; &gt;" signature="std::vector&lt;Ptr&lt;Layer&gt; &gt; getLayerInputs(LayerId layerId)">
                        <parameter left="LayerId" right="" name="layerId" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="connect" fullname="cv::dnn::Net::connect" href="cv-dnn-net.html#connect" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="490" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void connect(int outLayerId, int outNum, int inpLayerId, int inpNum)">
                        <parameter left="int" right="" name="outLayerId" default=""/>
                        <parameter left="int" right="" name="outNum" default=""/>
                        <parameter left="int" right="" name="inpLayerId" default=""/>
                        <parameter left="int" right="" name="inpNum" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SegmentationModel" fullname="cv::dnn::SegmentationModel" href="cv-dnn-segmentationmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1251" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="SegmentationModel" fullname="cv::dnn::SegmentationModel::SegmentationModel" href="cv-dnn-segmentationmodel.html#SegmentationModel-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1266" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP SegmentationModel(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SegmentationModel" fullname="cv::dnn::SegmentationModel::SegmentationModel" href="cv-dnn-segmentationmodel.html#SegmentationModel" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1260" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP SegmentationModel(const String &amp;model, const String &amp;config)">
                        <parameter left="const String &amp;" right="" name="model" default=""/>
                        <parameter left="const String &amp;" right="" name="config" default="&quot;&quot;"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TextDetectionModel" fullname="cv::dnn::TextDetectionModel" href="cv-dnn-textdetectionmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1409" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="TextDetectionModel" fullname="cv::dnn::TextDetectionModel::TextDetectionModel" href="cv-dnn-textdetectionmodel.html#TextDetectionModel" status="active" access="protected" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1412" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL TextDetectionModel()"/>
                </class>
                <class threadsafety="unspecified" name="TextDetectionModel_DB" fullname="cv::dnn::TextDetectionModel_DB" href="cv-dnn-textdetectionmodel-db.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1543" bases="cv::dnn::TextDetectionModel">
                    <function threadsafety="unspecified" name="TextDetectionModel_DB" fullname="cv::dnn::TextDetectionModel_DB::TextDetectionModel_DB" href="cv-dnn-textdetectionmodel-db.html#TextDetectionModel_DB" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1546" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL TextDetectionModel_DB()"/>
                    <function threadsafety="unspecified" name="TextDetectionModel_DB" fullname="cv::dnn::TextDetectionModel_DB::TextDetectionModel_DB" href="cv-dnn-textdetectionmodel-db.html#TextDetectionModel_DB-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1553" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP TextDetectionModel_DB(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TextDetectionModel_EAST" fullname="cv::dnn::TextDetectionModel_EAST" href="cv-dnn-textdetectionmodel-east.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1482" bases="cv::dnn::TextDetectionModel">
                    <function threadsafety="unspecified" name="TextDetectionModel_EAST" fullname="cv::dnn::TextDetectionModel_EAST::TextDetectionModel_EAST" href="cv-dnn-textdetectionmodel-east.html#TextDetectionModel_EAST" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1485" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL TextDetectionModel_EAST()"/>
                    <function threadsafety="unspecified" name="TextDetectionModel_EAST" fullname="cv::dnn::TextDetectionModel_EAST::TextDetectionModel_EAST" href="cv-dnn-textdetectionmodel-east.html#TextDetectionModel_EAST-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1492" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP TextDetectionModel_EAST(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="TextRecognitionModel" fullname="cv::dnn::TextRecognitionModel" href="cv-dnn-textrecognitionmodel.html" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1337" bases="cv::dnn::Model">
                    <function threadsafety="unspecified" name="TextRecognitionModel" fullname="cv::dnn::TextRecognitionModel::TextRecognitionModel" href="cv-dnn-textrecognitionmodel.html#TextRecognitionModel" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1340" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_DEPRECATED_EXTERNAL" signature="CV_DEPRECATED_EXTERNAL TextRecognitionModel()"/>
                    <function threadsafety="unspecified" name="TextRecognitionModel" fullname="cv::dnn::TextRecognitionModel::TextRecognitionModel" href="cv-dnn-textrecognitionmodel.html#TextRecognitionModel-1" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="1348" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP TextRecognitionModel(const Net &amp;network)">
                        <parameter left="const Net &amp;" right="" name="network" default=""/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="Backend" fullname="cv::dnn::Backend" href="cv-dnn.html#Backend-enum" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="65">
                    <value name="DNN_BACKEND_DEFAULT" value="0"/>
                    <value name="DNN_BACKEND_HALIDE" value="1"/>
                    <value name="DNN_BACKEND_INFERENCE_ENGINE" value="2"/>
                    <value name="DNN_BACKEND_OPENCV" value="3"/>
                    <value name="DNN_BACKEND_VKCOM" value="4"/>
                    <value name="DNN_BACKEND_CUDA" value="5"/>
                </enum>
                <enum threadsafety="unspecified" name="Target" fullname="cv::dnn::Target" href="cv-dnn.html#Target-enum" status="active" access="public" location="dnn.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/dnn.hpp" lineno="87">
                    <value name="DNN_TARGET_CPU" value="0"/>
                    <value name="DNN_TARGET_OPENCL" value="1"/>
                    <value name="DNN_TARGET_OPENCL_FP16" value="2"/>
                    <value name="DNN_TARGET_MYRIAD" value="3"/>
                    <value name="DNN_TARGET_VULKAN" value="4"/>
                    <value name="DNN_TARGET_FPGA" value="5"/>
                    <value name="DNN_TARGET_CUDA" value="6"/>
                    <value name="DNN_TARGET_CUDA_FP16" value="7"/>
                    <value name="DNN_TARGET_HDDL" value="8"/>
                </enum>
                <function threadsafety="unspecified" name="getPlane" fullname="cv::dnn::getPlane" href="cv-dnn.html#getPlane" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="108" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat getPlane(const Mat &amp;m, int n, int cn)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="int" right="" name="n" default=""/>
                    <parameter left="int" right="" name="cn" default=""/>
                </function>
                <function threadsafety="unspecified" name="slice" fullname="cv::dnn::slice" href="cv-dnn.html#slice" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat slice(const Mat &amp;m, const _Range &amp;r0)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r0" default=""/>
                </function>
                <function threadsafety="unspecified" name="slice" fullname="cv::dnn::slice" href="cv-dnn.html#slice-1" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="72" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat slice(const Mat &amp;m, const _Range &amp;r0, const _Range &amp;r1)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r0" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r1" default=""/>
                </function>
                <function threadsafety="unspecified" name="slice" fullname="cv::dnn::slice" href="cv-dnn.html#slice-2" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="83" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat slice(const Mat &amp;m, const _Range &amp;r0, const _Range &amp;r1, const _Range &amp;r2)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r0" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r1" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r2" default=""/>
                </function>
                <function threadsafety="unspecified" name="slice" fullname="cv::dnn::slice" href="cv-dnn.html#slice-3" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="95" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat slice(const Mat &amp;m, const _Range &amp;r0, const _Range &amp;r1, const _Range &amp;r2, const _Range &amp;r3)">
                    <parameter left="const Mat &amp;" right="" name="m" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r0" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r1" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r2" default=""/>
                    <parameter left="const _Range &amp;" right="" name="r3" default=""/>
                </function>
                <function threadsafety="unspecified" name="shape" fullname="cv::dnn::shape" href="cv-dnn.html#shape-1" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="126" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatShape" signature="MatShape shape(const Mat &amp;mat)">
                    <parameter left="const Mat &amp;" right="" name="mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="shape" fullname="cv::dnn::shape" href="cv-dnn.html#shape-2" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="131" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatShape" signature="MatShape shape(const MatSize &amp;sz)">
                    <parameter left="const MatSize &amp;" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="shape" fullname="cv::dnn::shape" href="cv-dnn.html#shape-3" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="136" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatShape" signature="MatShape shape(const UMat &amp;mat)">
                    <parameter left="const UMat &amp;" right="" name="mat" default=""/>
                </function>
                <function threadsafety="unspecified" name="shape" fullname="cv::dnn::shape" href="cv-dnn.html#shape" status="active" access="public" location="shape_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/shape_utils.hpp" lineno="119" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="MatShape" signature="MatShape shape(const int *dims, const int n)">
                    <parameter left="const int *" right="" name="dims" default=""/>
                    <parameter left="const int" right="" name="n" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="CV__DNN_INLINE_NS" fullname="cv::dnn::CV__DNN_INLINE_NS" href="cv-dnn-cv-dnn-inline-ns.html" status="active" access="public" location="version.hpp" filepath="/usr/local/include/opencv4/opencv2/dnn/version.hpp" lineno="15"/>
            </namespace>
            <class threadsafety="unspecified" name="AKAZE" fullname="cv::AKAZE" href="cv-akaze.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="822" bases="cv::Feature2D">
                <enum threadsafety="unspecified" name="DescriptorType" fullname="cv::AKAZE::DescriptorType" href="cv-akaze.html#DescriptorType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="826">
                    <value name="DESCRIPTOR_KAZE_UPRIGHT" value="2"/>
                    <value name="DESCRIPTOR_KAZE" value="3"/>
                    <value name="DESCRIPTOR_MLDB_UPRIGHT" value="4"/>
                    <value name="DESCRIPTOR_MLDB" value="5"/>
                </enum>
            </class>
            <class threadsafety="unspecified" name="Accumulator" fullname="cv::Accumulator" href="cv-accumulator.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="881">
                <typedef threadsafety="unspecified" name="Type" fullname="cv::Accumulator::Type" href="cv-accumulator.html#Type-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="883"/>
            </class>
            <class threadsafety="unspecified" name="AffineFeature" fullname="cv::AffineFeature" href="cv-affinefeature.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="251" bases="cv::Feature2D"/>
            <class threadsafety="unspecified" name="AgastFeatureDetector" fullname="cv::AgastFeatureDetector" href="cv-agastfeaturedetector.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="600" bases="cv::Feature2D">
                <enum threadsafety="unspecified" name="DetectorType" fullname="cv::AgastFeatureDetector::DetectorType" href="cv-agastfeaturedetector.html#DetectorType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="603">
                    <value name="AGAST_5_8" value="0"/>
                    <value name="AGAST_7_12d" value="1"/>
                    <value name="AGAST_7_12s" value="2"/>
                    <value name="OAST_9_16" value="3"/>
                </enum>
                <variable threadsafety="unspecified" name="NONMAX_SUPPRESSION" fullname="cv::AgastFeatureDetector::NONMAX_SUPPRESSION" href="cv-agastfeaturedetector.html#NONMAX_SUPPRESSION-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="610" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="THRESHOLD" fullname="cv::AgastFeatureDetector::THRESHOLD" href="cv-agastfeaturedetector.html#THRESHOLD-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="610" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="BFMatcher" fullname="cv::BFMatcher" href="cv-bfmatcher.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1200" bases="cv::DescriptorMatcher">
                <function threadsafety="unspecified" name="BFMatcher" fullname="cv::BFMatcher::BFMatcher" href="cv-bfmatcher.html#BFMatcher" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1207" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BFMatcher(int normType, bool crossCheck)">
                    <parameter left="int" right="" name="normType" default="NORM_L2"/>
                    <parameter left="bool" right="" name="crossCheck" default="false"/>
                </function>
                <function threadsafety="unspecified" name="~BFMatcher" fullname="cv::BFMatcher::~BFMatcher" href="cv-bfmatcher.html#dtor.BFMatcher" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1209" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BFMatcher()"/>
                <variable threadsafety="unspecified" name="crossCheck" fullname="cv::BFMatcher::crossCheck" href="cv-bfmatcher.html#crossCheck-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1235" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="normType" fullname="cv::BFMatcher::normType" href="cv-bfmatcher.html#normType-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1234" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="BOWImgDescriptorExtractor" fullname="cv::BOWImgDescriptorExtractor" href="cv-bowimgdescriptorextractor.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1473">
                <function threadsafety="unspecified" name="BOWImgDescriptorExtractor" fullname="cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor" href="cv-bowimgdescriptorextractor.html#BOWImgDescriptorExtractor-1" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1486" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BOWImgDescriptorExtractor(const Ptr&lt;DescriptorMatcher&gt; &amp;dmatcher)">
                    <parameter left="const Ptr&lt;DescriptorMatcher&gt; &amp;" right="" name="dmatcher" default=""/>
                </function>
                <function threadsafety="unspecified" name="BOWImgDescriptorExtractor" fullname="cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor" href="cv-bowimgdescriptorextractor.html#BOWImgDescriptorExtractor" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1483" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BOWImgDescriptorExtractor(const Ptr&lt;DescriptorExtractor&gt; &amp;dextractor, const Ptr&lt;DescriptorMatcher&gt; &amp;dmatcher)">
                    <parameter left="const Ptr&lt;DescriptorExtractor&gt; &amp;" right="" name="dextractor" default=""/>
                    <parameter left="const Ptr&lt;DescriptorMatcher&gt; &amp;" right="" name="dmatcher" default=""/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::BOWImgDescriptorExtractor::compute" href="cv-bowimgdescriptorextractor.html#compute" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1510" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(InputArray image, std::vector&lt;KeyPoint&gt; &amp;keypoints, OutputArray imgDescriptor, std::vector&lt;std::vector&lt;int&gt; &gt; *pointIdxsOfClusters, Mat *descriptors)">
                    <parameter left="InputArray" right="" name="image" default=""/>
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                    <parameter left="OutputArray" right="" name="imgDescriptor" default=""/>
                    <parameter left="std::vector&lt;std::vector&lt;int&gt; &gt; *" right="" name="pointIdxsOfClusters" default="0"/>
                    <parameter left="Mat *" right="" name="descriptors" default="0"/>
                </function>
                <function threadsafety="unspecified" name="compute" fullname="cv::BOWImgDescriptorExtractor::compute" href="cv-bowimgdescriptorextractor.html#compute-1" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1519" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute(InputArray keypointDescriptors, OutputArray imgDescriptor, std::vector&lt;std::vector&lt;int&gt; &gt; *pointIdxsOfClusters)">
                    <parameter left="InputArray" right="" name="keypointDescriptors" default=""/>
                    <parameter left="OutputArray" right="" name="imgDescriptor" default=""/>
                    <parameter left="std::vector&lt;std::vector&lt;int&gt; &gt; *" right="" name="pointIdxsOfClusters" default="0"/>
                </function>
                <function threadsafety="unspecified" name="~BOWImgDescriptorExtractor" fullname="cv::BOWImgDescriptorExtractor::~BOWImgDescriptorExtractor" href="cv-bowimgdescriptorextractor.html#dtor.BOWImgDescriptorExtractor" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1487" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BOWImgDescriptorExtractor()"/>
                <variable threadsafety="unspecified" name="dextractor" fullname="cv::BOWImgDescriptorExtractor::dextractor" href="cv-bowimgdescriptorextractor.html#dextractor-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1536" type="Ptr&lt;DescriptorExtractor&gt;" static="false"/>
                <variable threadsafety="unspecified" name="dmatcher" fullname="cv::BOWImgDescriptorExtractor::dmatcher" href="cv-bowimgdescriptorextractor.html#dmatcher-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1537" type="Ptr&lt;DescriptorMatcher&gt;" static="false"/>
                <variable threadsafety="unspecified" name="vocabulary" fullname="cv::BOWImgDescriptorExtractor::vocabulary" href="cv-bowimgdescriptorextractor.html#vocabulary-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1535" type="Mat" static="false"/>
            </class>
            <class threadsafety="unspecified" name="BOWKMeansTrainer" fullname="cv::BOWKMeansTrainer" href="cv-bowkmeanstrainer.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1440" bases="cv::BOWTrainer">
                <function threadsafety="unspecified" name="BOWKMeansTrainer" fullname="cv::BOWKMeansTrainer::BOWKMeansTrainer" href="cv-bowkmeanstrainer.html#BOWKMeansTrainer" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1447" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP BOWKMeansTrainer(int clusterCount, const TermCriteria &amp;termcrit, int attempts, int flags)">
                    <parameter left="int" right="" name="clusterCount" default=""/>
                    <parameter left="const TermCriteria &amp;" right="" name="termcrit" default="TermCriteria()"/>
                    <parameter left="int" right="" name="attempts" default="3"/>
                    <parameter left="int" right="" name="flags" default="KMEANS_PP_CENTERS"/>
                </function>
                <function threadsafety="unspecified" name="~BOWKMeansTrainer" fullname="cv::BOWKMeansTrainer::~BOWKMeansTrainer" href="cv-bowkmeanstrainer.html#dtor.BOWKMeansTrainer" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1449" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BOWKMeansTrainer()"/>
                <variable threadsafety="unspecified" name="attempts" fullname="cv::BOWKMeansTrainer::attempts" href="cv-bowkmeanstrainer.html#attempts-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1459" type="int" static="false"/>
                <variable threadsafety="unspecified" name="clusterCount" fullname="cv::BOWKMeansTrainer::clusterCount" href="cv-bowkmeanstrainer.html#clusterCount-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1457" type="int" static="false"/>
                <variable threadsafety="unspecified" name="flags" fullname="cv::BOWKMeansTrainer::flags" href="cv-bowkmeanstrainer.html#flags-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1460" type="int" static="false"/>
                <variable threadsafety="unspecified" name="termcrit" fullname="cv::BOWKMeansTrainer::termcrit" href="cv-bowkmeanstrainer.html#termcrit-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1458" type="TermCriteria" static="false"/>
            </class>
            <class threadsafety="unspecified" name="BOWTrainer" fullname="cv::BOWTrainer" href="cv-bowtrainer.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1394">
                <function threadsafety="unspecified" name="BOWTrainer" fullname="cv::BOWTrainer::BOWTrainer" href="cv-bowtrainer.html#BOWTrainer" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1397" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BOWTrainer()"/>
                <function threadsafety="unspecified" name="~BOWTrainer" fullname="cv::BOWTrainer::~BOWTrainer" href="cv-bowtrainer.html#dtor.BOWTrainer" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1398" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BOWTrainer()"/>
                <variable threadsafety="unspecified" name="descriptors" fullname="cv::BOWTrainer::descriptors" href="cv-bowtrainer.html#descriptors-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1434" type="std::vector&lt;Mat&gt;" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::BOWTrainer::size" href="cv-bowtrainer.html#size-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1435" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="BRISK" fullname="cv::BRISK" href="cv-brisk.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="340" bases="cv::Feature2D"/>
            <class threadsafety="unspecified" name="DescriptorMatcher" fullname="cv::DescriptorMatcher" href="cv-descriptormatcher.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="951" bases="cv::Algorithm">
                <class threadsafety="unspecified" name="DescriptorCollection" fullname="cv::DescriptorMatcher::DescriptorCollection" href="cv-descriptormatcher-descriptorcollection.html" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1152">
                    <function threadsafety="unspecified" name="DescriptorCollection" fullname="cv::DescriptorMatcher::DescriptorCollection::DescriptorCollection" href="cv-descriptormatcher-descriptorcollection.html#DescriptorCollection" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1155" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescriptorCollection()"/>
                    <function threadsafety="unspecified" name="DescriptorCollection" fullname="cv::DescriptorMatcher::DescriptorCollection::DescriptorCollection" href="cv-descriptormatcher-descriptorcollection.html#DescriptorCollection-1" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1156" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DescriptorCollection(const DescriptorCollection &amp;collection)">
                        <parameter left="const DescriptorCollection &amp;" right="" name="collection" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clear" fullname="cv::DescriptorMatcher::DescriptorCollection::clear" href="cv-descriptormatcher-descriptorcollection.html#clear" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1161" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
                    <function threadsafety="unspecified" name="set" fullname="cv::DescriptorMatcher::DescriptorCollection::set" href="cv-descriptormatcher-descriptorcollection.html#set" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1160" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void set(const std::vector&lt;Mat&gt; &amp;descriptors)">
                        <parameter left="const std::vector&lt;Mat&gt; &amp;" right="" name="descriptors" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~DescriptorCollection" fullname="cv::DescriptorMatcher::DescriptorCollection::~DescriptorCollection" href="cv-descriptormatcher-descriptorcollection.html#dtor.DescriptorCollection" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1157" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DescriptorCollection()"/>
                    <function threadsafety="unspecified" name="getDescriptors" fullname="cv::DescriptorMatcher::DescriptorCollection::getDescriptors" href="cv-descriptormatcher-descriptorcollection.html#getDescriptors" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1163" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Mat &amp;" signature="const Mat &amp; getDescriptors() const"/>
                    <function threadsafety="unspecified" name="getDescriptor" fullname="cv::DescriptorMatcher::DescriptorCollection::getDescriptor" href="cv-descriptormatcher-descriptorcollection.html#getDescriptor-1" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1165" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Mat" signature="const Mat getDescriptor(int globalDescIdx) const">
                        <parameter left="int" right="" name="globalDescIdx" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getDescriptor" fullname="cv::DescriptorMatcher::DescriptorCollection::getDescriptor" href="cv-descriptormatcher-descriptorcollection.html#getDescriptor" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1164" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Mat" signature="const Mat getDescriptor(int imgIdx, int localDescIdx) const">
                        <parameter left="int" right="" name="imgIdx" default=""/>
                        <parameter left="int" right="" name="localDescIdx" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="size" fullname="cv::DescriptorMatcher::DescriptorCollection::size" href="cv-descriptormatcher-descriptorcollection.html#size" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1168" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
                    <function threadsafety="unspecified" name="getLocalIdx" fullname="cv::DescriptorMatcher::DescriptorCollection::getLocalIdx" href="cv-descriptormatcher-descriptorcollection.html#getLocalIdx" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1166" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getLocalIdx(int globalDescIdx, int &amp;imgIdx, int &amp;localDescIdx) const">
                        <parameter left="int" right="" name="globalDescIdx" default=""/>
                        <parameter left="int &amp;" right="" name="imgIdx" default=""/>
                        <parameter left="int &amp;" right="" name="localDescIdx" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="mergedDescriptors" fullname="cv::DescriptorMatcher::DescriptorCollection::mergedDescriptors" href="cv-descriptormatcher-descriptorcollection.html#mergedDescriptors-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1171" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="startIdxs" fullname="cv::DescriptorMatcher::DescriptorCollection::startIdxs" href="cv-descriptormatcher-descriptorcollection.html#startIdxs-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1172" type="std::vector&lt;int&gt;" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="MatcherType" fullname="cv::DescriptorMatcher::MatcherType" href="cv-descriptormatcher.html#MatcherType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="954">
                    <value name="FLANNBASED" value="1"/>
                    <value name="BRUTEFORCE" value="2"/>
                    <value name="BRUTEFORCE_L1" value="3"/>
                    <value name="BRUTEFORCE_HAMMING" value="4"/>
                    <value name="BRUTEFORCE_HAMMINGLUT" value="5"/>
                    <value name="BRUTEFORCE_SL2" value="6"/>
                </enum>
                <function threadsafety="unspecified" name="clone_op" fullname="cv::DescriptorMatcher::clone_op" href="cv-descriptormatcher.html#clone_op" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1186" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat clone_op(Mat m)">
                    <parameter left="Mat" right="" name="m" default=""/>
                </function>
                <function threadsafety="unspecified" name="isMaskedOut" fullname="cv::DescriptorMatcher::isMaskedOut" href="cv-descriptormatcher.html#isMaskedOut" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1184" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMaskedOut(InputArrayOfArrays masks, int queryIdx)">
                    <parameter left="InputArrayOfArrays" right="" name="masks" default=""/>
                    <parameter left="int" right="" name="queryIdx" default=""/>
                </function>
                <function threadsafety="unspecified" name="isPossibleMatch" fullname="cv::DescriptorMatcher::isPossibleMatch" href="cv-descriptormatcher.html#isPossibleMatch" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1183" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isPossibleMatch(InputArray mask, int queryIdx, int trainIdx)">
                    <parameter left="InputArray" right="" name="mask" default=""/>
                    <parameter left="int" right="" name="queryIdx" default=""/>
                    <parameter left="int" right="" name="trainIdx" default=""/>
                </function>
                <function threadsafety="unspecified" name="knnMatchImpl" fullname="cv::DescriptorMatcher::knnMatchImpl" href="cv-descriptormatcher.html#knnMatchImpl" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1178" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void knnMatchImpl(InputArray queryDescriptors, std::vector&lt;std::vector&lt;DMatch&gt; &gt; &amp;matches, int k, InputArrayOfArrays masks, bool compactResult) = 0">
                    <parameter left="InputArray" right="" name="queryDescriptors" default=""/>
                    <parameter left="std::vector&lt;std::vector&lt;DMatch&gt; &gt; &amp;" right="" name="matches" default=""/>
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="InputArrayOfArrays" right="" name="masks" default="noArray()"/>
                    <parameter left="bool" right="" name="compactResult" default="false"/>
                </function>
                <function threadsafety="unspecified" name="radiusMatchImpl" fullname="cv::DescriptorMatcher::radiusMatchImpl" href="cv-descriptormatcher.html#radiusMatchImpl" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1180" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void radiusMatchImpl(InputArray queryDescriptors, std::vector&lt;std::vector&lt;DMatch&gt; &gt; &amp;matches, float maxDistance, InputArrayOfArrays masks, bool compactResult) = 0">
                    <parameter left="InputArray" right="" name="queryDescriptors" default=""/>
                    <parameter left="std::vector&lt;std::vector&lt;DMatch&gt; &gt; &amp;" right="" name="matches" default=""/>
                    <parameter left="float" right="" name="maxDistance" default=""/>
                    <parameter left="InputArrayOfArrays" right="" name="masks" default="noArray()"/>
                    <parameter left="bool" right="" name="compactResult" default="false"/>
                </function>
                <function threadsafety="unspecified" name="~DescriptorMatcher" fullname="cv::DescriptorMatcher::~DescriptorMatcher" href="cv-descriptormatcher.html#dtor.DescriptorMatcher" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="964" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DescriptorMatcher()"/>
                <function threadsafety="unspecified" name="checkMasks" fullname="cv::DescriptorMatcher::checkMasks" href="cv-descriptormatcher.html#checkMasks" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1187" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void checkMasks(InputArrayOfArrays masks, int queryDescriptorsCount) const">
                    <parameter left="InputArrayOfArrays" right="" name="masks" default=""/>
                    <parameter left="int" right="" name="queryDescriptorsCount" default=""/>
                </function>
                <variable threadsafety="unspecified" name="trainDescCollection" fullname="cv::DescriptorMatcher::trainDescCollection" href="cv-descriptormatcher.html#trainDescCollection-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1190" type="std::vector&lt;Mat&gt;" static="false"/>
                <variable threadsafety="unspecified" name="utrainDescCollection" fullname="cv::DescriptorMatcher::utrainDescCollection" href="cv-descriptormatcher.html#utrainDescCollection-var" status="active" access="protected" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1191" type="std::vector&lt;UMat&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="FastFeatureDetector" fullname="cv::FastFeatureDetector" href="cv-fastfeaturedetector.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="540" bases="cv::Feature2D">
                <enum threadsafety="unspecified" name="DetectorType" fullname="cv::FastFeatureDetector::DetectorType" href="cv-fastfeaturedetector.html#DetectorType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="543">
                    <value name="TYPE_5_8" value="0"/>
                    <value name="TYPE_7_12" value="1"/>
                    <value name="TYPE_9_16" value="2"/>
                </enum>
                <variable threadsafety="unspecified" name="FAST_N" fullname="cv::FastFeatureDetector::FAST_N" href="cv-fastfeaturedetector.html#FAST_N-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="550" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NONMAX_SUPPRESSION" fullname="cv::FastFeatureDetector::NONMAX_SUPPRESSION" href="cv-fastfeaturedetector.html#NONMAX_SUPPRESSION-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="549" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="THRESHOLD" fullname="cv::FastFeatureDetector::THRESHOLD" href="cv-fastfeaturedetector.html#THRESHOLD-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="549" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="Feature2D" fullname="cv::Feature2D" href="cv-feature2d.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="147" bases="cv::Algorithm">
                <function threadsafety="unspecified" name="~Feature2D" fullname="cv::Feature2D::~Feature2D" href="cv-feature2d.html#dtor.Feature2D" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="151" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Feature2D()"/>
            </class>
            <class threadsafety="unspecified" name="GFTTDetector" fullname="cv::GFTTDetector" href="cv-gfttdetector.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="655" bases="cv::Feature2D"/>
            <class threadsafety="unspecified" name="KAZE" fullname="cv::KAZE" href="cv-kaze.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="760" bases="cv::Feature2D">
                <enum threadsafety="unspecified" name="DiffusivityType" fullname="cv::KAZE::DiffusivityType" href="cv-kaze.html#DiffusivityType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="763">
                    <value name="DIFF_PM_G1" value="0"/>
                    <value name="DIFF_PM_G2" value="1"/>
                    <value name="DIFF_WEICKERT" value="2"/>
                    <value name="DIFF_CHARBONNIER" value="3"/>
                </enum>
            </class>
            <class threadsafety="unspecified" name="KeyPointsFilter" fullname="cv::KeyPointsFilter" href="cv-keypointsfilter.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="106">
                <function threadsafety="unspecified" name="KeyPointsFilter" fullname="cv::KeyPointsFilter::KeyPointsFilter" href="cv-keypointsfilter.html#KeyPointsFilter" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="109" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KeyPointsFilter()"/>
                <function threadsafety="unspecified" name="removeDuplicated" fullname="cv::KeyPointsFilter::removeDuplicated" href="cv-keypointsfilter.html#removeDuplicated" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="127" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeDuplicated(std::vector&lt;KeyPoint&gt; &amp;keypoints)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                </function>
                <function threadsafety="unspecified" name="removeDuplicatedSorted" fullname="cv::KeyPointsFilter::removeDuplicatedSorted" href="cv-keypointsfilter.html#removeDuplicatedSorted" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="131" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeDuplicatedSorted(std::vector&lt;KeyPoint&gt; &amp;keypoints)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                </function>
                <function threadsafety="unspecified" name="retainBest" fullname="cv::KeyPointsFilter::retainBest" href="cv-keypointsfilter.html#retainBest" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="136" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void retainBest(std::vector&lt;KeyPoint&gt; &amp;keypoints, int npoints)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                    <parameter left="int" right="" name="npoints" default=""/>
                </function>
                <function threadsafety="unspecified" name="runByImageBorder" fullname="cv::KeyPointsFilter::runByImageBorder" href="cv-keypointsfilter.html#runByImageBorder" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="114" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void runByImageBorder(std::vector&lt;KeyPoint&gt; &amp;keypoints, Size imageSize, int borderSize)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                    <parameter left="Size" right="" name="imageSize" default=""/>
                    <parameter left="int" right="" name="borderSize" default=""/>
                </function>
                <function threadsafety="unspecified" name="runByKeypointSize" fullname="cv::KeyPointsFilter::runByKeypointSize" href="cv-keypointsfilter.html#runByKeypointSize" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="118" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void runByKeypointSize(std::vector&lt;KeyPoint&gt; &amp;keypoints, float minSize, float maxSize)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                    <parameter left="float" right="" name="minSize" default=""/>
                    <parameter left="float" right="" name="maxSize" default="FLT_MAX"/>
                </function>
                <function threadsafety="unspecified" name="runByPixelsMask" fullname="cv::KeyPointsFilter::runByPixelsMask" href="cv-keypointsfilter.html#runByPixelsMask" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="123" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void runByPixelsMask(std::vector&lt;KeyPoint&gt; &amp;keypoints, const Mat &amp;mask)">
                    <parameter left="std::vector&lt;KeyPoint&gt; &amp;" right="" name="keypoints" default=""/>
                    <parameter left="const Mat &amp;" right="" name="mask" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="L1" fullname="cv::L1" href="cv-l1.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="927">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cv::L1::ResultType" href="cv-l1.html#ResultType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="931"/>
                <typedef threadsafety="unspecified" name="ValueType" fullname="cv::L1::ValueType" href="cv-l1.html#ValueType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="930"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::L1::operator()" href="cv-l1.html#operator-28-29" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="933" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const T *a, const T *b, int size) const">
                    <parameter left="const T *" right="" name="a" default=""/>
                    <parameter left="const T *" right="" name="b" default=""/>
                    <parameter left="int" right="" name="size" default=""/>
                </function>
                <variable threadsafety="unspecified" name="normType" fullname="cv::L1::normType" href="cv-l1.html#normType-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="929" type="const NormTypes = NORM_L1" static="true"/>
            </class>
            <class threadsafety="unspecified" name="L2" fullname="cv::L2" href="cv-l2.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="911">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cv::L2::ResultType" href="cv-l2.html#ResultType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="915"/>
                <typedef threadsafety="unspecified" name="ValueType" fullname="cv::L2::ValueType" href="cv-l2.html#ValueType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="914"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::L2::operator()" href="cv-l2.html#operator-28-29" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="917" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const T *a, const T *b, int size) const">
                    <parameter left="const T *" right="" name="a" default=""/>
                    <parameter left="const T *" right="" name="b" default=""/>
                    <parameter left="int" right="" name="size" default=""/>
                </function>
                <variable threadsafety="unspecified" name="normType" fullname="cv::L2::normType" href="cv-l2.html#normType-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="913" type="const NormTypes = NORM_L2" static="true"/>
            </class>
            <class threadsafety="unspecified" name="MSER" fullname="cv::MSER" href="cv-mser.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="489" bases="cv::Feature2D"/>
            <class threadsafety="unspecified" name="ORB" fullname="cv::ORB" href="cv-orb.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="404" bases="cv::Feature2D">
                <enum threadsafety="unspecified" name="ScoreType" fullname="cv::ORB::ScoreType" href="cv-orb.html#ScoreType-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="407">
                    <value name="HARRIS_SCORE" value="0"/>
                    <value name="FAST_SCORE" value="1"/>
                </enum>
                <variable threadsafety="unspecified" name="kBytes" fullname="cv::ORB::kBytes" href="cv-orb.html#kBytes-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="408" type="const int = 32" static="true"/>
            </class>
            <class threadsafety="unspecified" name="SIFT" fullname="cv::SIFT" href="cv-sift.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="276" bases="cv::Feature2D"/>
            <class threadsafety="unspecified" name="SL2" fullname="cv::SL2" href="cv-sl2.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="895">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cv::SL2::ResultType" href="cv-sl2.html#ResultType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="899"/>
                <typedef threadsafety="unspecified" name="ValueType" fullname="cv::SL2::ValueType" href="cv-sl2.html#ValueType-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="898"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SL2::operator()" href="cv-sl2.html#operator-28-29" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="901" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const T *a, const T *b, int size) const">
                    <parameter left="const T *" right="" name="a" default=""/>
                    <parameter left="const T *" right="" name="b" default=""/>
                    <parameter left="int" right="" name="size" default=""/>
                </function>
                <variable threadsafety="unspecified" name="normType" fullname="cv::SL2::normType" href="cv-sl2.html#normType-var" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="897" type="const NormTypes = NORM_L2SQR" static="true"/>
            </class>
            <class threadsafety="unspecified" name="SimpleBlobDetector" fullname="cv::SimpleBlobDetector" href="cv-simpleblobdetector.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="713" bases="cv::Feature2D">
                <class threadsafety="unspecified" name="Params" fullname="cv::SimpleBlobDetector::Params" href="cv-simpleblobdetector-params.html" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="716">
                    <function threadsafety="unspecified" name="Params" fullname="cv::SimpleBlobDetector::Params::Params" href="cv-simpleblobdetector-params.html#Params" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="718" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Params()"/>
                    <function threadsafety="unspecified" name="read" fullname="cv::SimpleBlobDetector::Params::read" href="cv-simpleblobdetector-params.html#read" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="740" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void read(const FileNode &amp;fn)">
                        <parameter left="const FileNode &amp;" right="" name="fn" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="write" fullname="cv::SimpleBlobDetector::Params::write" href="cv-simpleblobdetector-params.html#write" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="741" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs) const">
                        <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                    </function>
                </class>
            </class>
            <enum threadsafety="unspecified" name="DrawMatchesFlags" fullname="cv::DrawMatchesFlags" href="cv.html#DrawMatchesFlags-enum" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="1296">
                <value name="DEFAULT" value="0"/>
                <value name="DRAW_OVER_OUTIMG" value="1"/>
                <value name="NOT_DRAW_SINGLE_POINTS" value="2"/>
                <value name="DRAW_RICH_KEYPOINTS" value="4"/>
            </enum>
            <typedef threadsafety="unspecified" name="AffineDescriptorExtractor" fullname="cv::AffineDescriptorExtractor" href="cv.html#AffineDescriptorExtractor-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="270"/>
            <typedef threadsafety="unspecified" name="AffineFeatureDetector" fullname="cv::AffineFeatureDetector" href="cv.html#AffineFeatureDetector-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="269"/>
            <typedef threadsafety="unspecified" name="DescriptorExtractor" fullname="cv::DescriptorExtractor" href="cv.html#DescriptorExtractor-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="242"/>
            <typedef threadsafety="unspecified" name="FeatureDetector" fullname="cv::FeatureDetector" href="cv.html#FeatureDetector-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="235"/>
            <typedef threadsafety="unspecified" name="SiftDescriptorExtractor" fullname="cv::SiftDescriptorExtractor" href="cv.html#SiftDescriptorExtractor-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="335"/>
            <typedef threadsafety="unspecified" name="SiftFeatureDetector" fullname="cv::SiftFeatureDetector" href="cv.html#SiftFeatureDetector-typedef" status="active" access="public" location="features2d.hpp" filepath="/usr/local/include/opencv4/opencv2/features2d.hpp" lineno="334"/>
            <namespace threadsafety="unspecified" name="flann" fullname="cv::flann" href="cv-flann.html" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="68">
                <class threadsafety="unspecified" name="CvType" fullname="cv::flann::CvType" href="cv-flann-cvtype.html" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="75"/>
                <class threadsafety="unspecified" name="GenericIndex" fullname="cv::flann::GenericIndex" href="cv-flann-genericindex.html" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="170">
                    <typedef threadsafety="unspecified" name="DistanceType" fullname="cv::flann::GenericIndex::DistanceType" href="cv-flann-genericindex.html#DistanceType-typedef" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="174"/>
                    <typedef threadsafety="unspecified" name="ElementType" fullname="cv::flann::GenericIndex::ElementType" href="cv-flann-genericindex.html#ElementType-typedef" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="173"/>
                    <function threadsafety="unspecified" name="save" fullname="cv::flann::GenericIndex::save" href="cv-flann-genericindex.html#save" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="320" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save(String filename)">
                        <parameter left="String" right="" name="filename" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~GenericIndex" fullname="cv::flann::GenericIndex::~GenericIndex" href="cv-flann-genericindex.html#dtor.GenericIndex" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="288" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GenericIndex()"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::flann::GenericIndex::size" href="cv-flann-genericindex.html#size" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="324" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
                    <function threadsafety="unspecified" name="veclen" fullname="cv::flann::GenericIndex::veclen" href="cv-flann-genericindex.html#veclen" status="active" access="public" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="322" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int veclen() const"/>
                </class>
                <class threadsafety="unspecified" name="AutotunedIndexParams" fullname="cv::flann::AutotunedIndexParams" href="cv-flann-autotunedindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="116" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="AutotunedIndexParams" fullname="cv::flann::AutotunedIndexParams::AutotunedIndexParams" href="cv-flann-autotunedindexparams.html#AutotunedIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="118" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutotunedIndexParams(float target_precision, float build_weight, float memory_weight, float sample_fraction)">
                        <parameter left="float" right="" name="target_precision" default="0.8f"/>
                        <parameter left="float" right="" name="build_weight" default="0.01f"/>
                        <parameter left="float" right="" name="memory_weight" default="0"/>
                        <parameter left="float" right="" name="sample_fraction" default="0.1f"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="CompositeIndexParams" fullname="cv::flann::CompositeIndexParams" href="cv-flann-compositeindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="110" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="CompositeIndexParams" fullname="cv::flann::CompositeIndexParams::CompositeIndexParams" href="cv-flann-compositeindexparams.html#CompositeIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="112" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompositeIndexParams(int trees, int branching, int iterations, cvflann::flann_centers_init_t centers_init, float cb_index)">
                        <parameter left="int" right="" name="trees" default="4"/>
                        <parameter left="int" right="" name="branching" default="32"/>
                        <parameter left="int" right="" name="iterations" default="11"/>
                        <parameter left="cvflann::flann_centers_init_t" right="" name="centers_init" default="cvflann::FLANN_CENTERS_RANDOM"/>
                        <parameter left="float" right="" name="cb_index" default="0.2f"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="HierarchicalClusteringIndexParams" fullname="cv::flann::HierarchicalClusteringIndexParams" href="cv-flann-hierarchicalclusteringindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="122" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="HierarchicalClusteringIndexParams" fullname="cv::flann::HierarchicalClusteringIndexParams::HierarchicalClusteringIndexParams" href="cv-flann-hierarchicalclusteringindexparams.html#HierarchicalClusteringIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="124" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HierarchicalClusteringIndexParams(int branching, cvflann::flann_centers_init_t centers_init, int trees, int leaf_size)">
                        <parameter left="int" right="" name="branching" default="32"/>
                        <parameter left="cvflann::flann_centers_init_t" right="" name="centers_init" default="cvflann::FLANN_CENTERS_RANDOM"/>
                        <parameter left="int" right="" name="trees" default="4"/>
                        <parameter left="int" right="" name="leaf_size" default="100"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="Index" fullname="cv::flann::Index" href="cv-flann-index.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="150">
                    <function threadsafety="unspecified" name="Index" fullname="cv::flann::Index::Index" href="cv-flann-index.html#Index" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="153" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Index()"/>
                    <function threadsafety="unspecified" name="Index" fullname="cv::flann::Index::Index" href="cv-flann-index.html#Index-1" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="154" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Index(InputArray features, const IndexParams &amp;params, cvflann::flann_distance_t distType)">
                        <parameter left="InputArray" right="" name="features" default=""/>
                        <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                        <parameter left="cvflann::flann_distance_t" right="" name="distType" default="cvflann::FLANN_DIST_L2"/>
                    </function>
                    <function threadsafety="unspecified" name="load_" fullname="cv::flann::Index::load_" href="cv-flann-index.html#load_" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool load_(const String &amp;filename)">
                        <parameter left="const String &amp;" right="" name="filename" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Index" fullname="cv::flann::Index::~Index" href="cv-flann-index.html#dtor.Index" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="155" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Index()"/>
                    <variable threadsafety="unspecified" name="algo" fullname="cv::flann::Index::algo" href="cv-flann-index.html#algo-var" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="175" type="cvflann::flann_algorithm_t" static="false"/>
                    <variable threadsafety="unspecified" name="distType" fullname="cv::flann::Index::distType" href="cv-flann-index.html#distType-var" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="174" type="cvflann::flann_distance_t" static="false"/>
                    <variable threadsafety="unspecified" name="featureType" fullname="cv::flann::Index::featureType" href="cv-flann-index.html#featureType-var" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="176" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="features_clone" fullname="cv::flann::Index::features_clone" href="cv-flann-index.html#features_clone-var" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="178" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="index" fullname="cv::flann::Index::index" href="cv-flann-index.html#index-var" status="active" access="protected" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="177" type="void *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="IndexParams" fullname="cv::flann::IndexParams" href="cv-flann-indexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="71">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::flann::IndexParams::operator=" href="cv-flann-indexparams.html#operator-eq" status="active" access="private" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="97" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IndexParams &amp;" signature="IndexParams &amp; operator=(const IndexParams &amp;)">
                        <parameter left="const IndexParams &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="IndexParams" fullname="cv::flann::IndexParams::IndexParams" href="cv-flann-indexparams.html#IndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="73" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="IndexParams()"/>
                    <function threadsafety="unspecified" name="IndexParams" fullname="cv::flann::IndexParams::IndexParams" href="cv-flann-indexparams.html#IndexParams-1" status="active" access="private" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="96" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="IndexParams(const IndexParams &amp;)">
                        <parameter left="const IndexParams &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setAlgorithm" fullname="cv::flann::IndexParams::setAlgorithm" href="cv-flann-indexparams.html#setAlgorithm" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setAlgorithm(int value)">
                        <parameter left="int" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setBool" fullname="cv::flann::IndexParams::setBool" href="cv-flann-indexparams.html#setBool" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setBool(const String &amp;key, bool value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="bool" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setDouble" fullname="cv::flann::IndexParams::setDouble" href="cv-flann-indexparams.html#setDouble" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDouble(const String &amp;key, double value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="double" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setFloat" fullname="cv::flann::IndexParams::setFloat" href="cv-flann-indexparams.html#setFloat" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFloat(const String &amp;key, float value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="float" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setInt" fullname="cv::flann::IndexParams::setInt" href="cv-flann-indexparams.html#setInt" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="81" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setInt(const String &amp;key, int value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="int" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setString" fullname="cv::flann::IndexParams::setString" href="cv-flann-indexparams.html#setString" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setString(const String &amp;key, const String &amp;value)">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="const String &amp;" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~IndexParams" fullname="cv::flann::IndexParams::~IndexParams" href="cv-flann-indexparams.html#dtor.IndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="74" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~IndexParams()"/>
                    <function threadsafety="unspecified" name="getString" fullname="cv::flann::IndexParams::getString" href="cv-flann-indexparams.html#getString" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="String" signature="String getString(const String &amp;key, const String &amp;defaultVal) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="const String &amp;" right="" name="defaultVal" default="String()"/>
                    </function>
                    <function threadsafety="unspecified" name="getDouble" fullname="cv::flann::IndexParams::getDouble" href="cv-flann-indexparams.html#getDouble" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="78" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double getDouble(const String &amp;key, double defaultVal) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="double" right="" name="defaultVal" default="-1"/>
                    </function>
                    <function threadsafety="unspecified" name="getInt" fullname="cv::flann::IndexParams::getInt" href="cv-flann-indexparams.html#getInt" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="77" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getInt(const String &amp;key, int defaultVal) const">
                        <parameter left="const String &amp;" right="" name="key" default=""/>
                        <parameter left="int" right="" name="defaultVal" default="-1"/>
                    </function>
                    <function threadsafety="unspecified" name="getAll" fullname="cv::flann::IndexParams::getAll" href="cv-flann-indexparams.html#getAll" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="88" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getAll(std::vector&lt;String&gt; &amp;names, std::vector&lt;FlannIndexType&gt; &amp;types, std::vector&lt;String&gt; &amp;strValues, std::vector&lt;double&gt; &amp;numValues) const">
                        <parameter left="std::vector&lt;String&gt; &amp;" right="" name="names" default=""/>
                        <parameter left="std::vector&lt;FlannIndexType&gt; &amp;" right="" name="types" default=""/>
                        <parameter left="std::vector&lt;String&gt; &amp;" right="" name="strValues" default=""/>
                        <parameter left="std::vector&lt;double&gt; &amp;" right="" name="numValues" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="params" fullname="cv::flann::IndexParams::params" href="cv-flann-indexparams.html#params-var" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="93" type="void *" static="false"/>
                </class>
                <class threadsafety="unspecified" name="KDTreeIndexParams" fullname="cv::flann::KDTreeIndexParams" href="cv-flann-kdtreeindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="100" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="KDTreeIndexParams" fullname="cv::flann::KDTreeIndexParams::KDTreeIndexParams" href="cv-flann-kdtreeindexparams.html#KDTreeIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="102" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeIndexParams(int trees)">
                        <parameter left="int" right="" name="trees" default="4"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="KMeansIndexParams" fullname="cv::flann::KMeansIndexParams" href="cv-flann-kmeansindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="128" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="KMeansIndexParams" fullname="cv::flann::KMeansIndexParams::KMeansIndexParams" href="cv-flann-kmeansindexparams.html#KMeansIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="130" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KMeansIndexParams(int branching, int iterations, cvflann::flann_centers_init_t centers_init, float cb_index)">
                        <parameter left="int" right="" name="branching" default="32"/>
                        <parameter left="int" right="" name="iterations" default="11"/>
                        <parameter left="cvflann::flann_centers_init_t" right="" name="centers_init" default="cvflann::FLANN_CENTERS_RANDOM"/>
                        <parameter left="float" right="" name="cb_index" default="0.2f"/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="LinearIndexParams" fullname="cv::flann::LinearIndexParams" href="cv-flann-linearindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="105" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="LinearIndexParams" fullname="cv::flann::LinearIndexParams::LinearIndexParams" href="cv-flann-linearindexparams.html#LinearIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="107" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LinearIndexParams()"/>
                </class>
                <class threadsafety="unspecified" name="LshIndexParams" fullname="cv::flann::LshIndexParams" href="cv-flann-lshindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="134" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="LshIndexParams" fullname="cv::flann::LshIndexParams::LshIndexParams" href="cv-flann-lshindexparams.html#LshIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="136" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshIndexParams(int table_number, int key_size, int multi_probe_level)">
                        <parameter left="int" right="" name="table_number" default=""/>
                        <parameter left="int" right="" name="key_size" default=""/>
                        <parameter left="int" right="" name="multi_probe_level" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SavedIndexParams" fullname="cv::flann::SavedIndexParams" href="cv-flann-savedindexparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="139" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="SavedIndexParams" fullname="cv::flann::SavedIndexParams::SavedIndexParams" href="cv-flann-savedindexparams.html#SavedIndexParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="141" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SavedIndexParams(const String &amp;filename)">
                        <parameter left="const String &amp;" right="" name="filename" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="SearchParams" fullname="cv::flann::SearchParams" href="cv-flann-searchparams.html" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="144" bases="cv::flann::IndexParams">
                    <function threadsafety="unspecified" name="SearchParams" fullname="cv::flann::SearchParams::SearchParams" href="cv-flann-searchparams.html#SearchParams-1" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="147" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SearchParams(int checks, float eps, bool sorted)">
                        <parameter left="int" right="" name="checks" default="32"/>
                        <parameter left="float" right="" name="eps" default="0"/>
                        <parameter left="bool" right="" name="sorted" default="true"/>
                    </function>
                    <function threadsafety="unspecified" name="SearchParams" fullname="cv::flann::SearchParams::SearchParams" href="cv-flann-searchparams.html#SearchParams" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="146" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SearchParams(int checks, float eps, bool sorted, bool explore_all_trees)">
                        <parameter left="int" right="" name="checks" default=""/>
                        <parameter left="float" right="" name="eps" default=""/>
                        <parameter left="bool" right="" name="sorted" default=""/>
                        <parameter left="bool" right="" name="explore_all_trees" default=""/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="FlannIndexType" fullname="cv::flann::FlannIndexType" href="cv-flann.html#FlannIndexType-enum" status="active" access="public" location="miniflann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/miniflann.hpp" lineno="57">
                    <value name="FLANN_INDEX_TYPE_8U" value="CV_8U"/>
                    <value name="FLANN_INDEX_TYPE_8S" value="CV_8S"/>
                    <value name="FLANN_INDEX_TYPE_16U" value="CV_16U"/>
                    <value name="FLANN_INDEX_TYPE_16S" value="CV_16S"/>
                    <value name="FLANN_INDEX_TYPE_32S" value="CV_32S"/>
                    <value name="FLANN_INDEX_TYPE_32F" value="CV_32F"/>
                    <value name="FLANN_INDEX_TYPE_64F" value="CV_64F"/>
                    <value name="FLANN_INDEX_TYPE_STRING" value=""/>
                    <value name="FLANN_INDEX_TYPE_BOOL" value=""/>
                    <value name="FLANN_INDEX_TYPE_ALGORITHM" value=""/>
                    <value name="LAST_VALUE_FLANN_INDEX_TYPE" value="FLANN_INDEX_TYPE_ALGORITHM"/>
                </enum>
            </namespace>
            <namespace threadsafety="unspecified" name="gapi" fullname="cv::gapi" href="cv-gapi.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/core.hpp" lineno="31">
                <namespace threadsafety="unspecified" name="core" fullname="cv::gapi::core" href="cv-gapi-core.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/core.hpp" lineno="32">
                    <namespace threadsafety="unspecified" name="cpu" fullname="cv::gapi::core::cpu" href="cv-gapi-core-cpu.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/core.hpp" lineno="17"/>
                    <namespace threadsafety="unspecified" name="fluid" fullname="cv::gapi::core::fluid" href="cv-gapi-core-fluid.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/core.hpp" lineno="14"/>
                    <namespace threadsafety="unspecified" name="gpu" fullname="cv::gapi::core::gpu" href="cv-gapi-core-gpu.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gpu/core.hpp" lineno="19"/>
                    <namespace threadsafety="unspecified" name="ocl" fullname="cv::gapi::core::ocl" href="cv-gapi-core-ocl.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/core.hpp" lineno="17"/>
                    <namespace threadsafety="unspecified" name="plaidml" fullname="cv::gapi::core::plaidml" href="cv-gapi-core-plaidml.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/core.hpp" lineno="14"/>
                </namespace>
                <namespace threadsafety="unspecified" name="streaming" fullname="cv::gapi::streaming" href="cv-gapi-streaming.html" status="active" access="public" location="core.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/core.hpp" lineno="580">
                    <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::streaming::detail" href="cv-gapi-streaming-detail.html" status="active" access="public" location="desync.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/desync.hpp" lineno="23">
                        <class threadsafety="unspecified" name="GDesync" fullname="cv::gapi::streaming::detail::GDesync" href="cv-gapi-streaming-detail-gdesync.html" status="active" access="public" location="desync.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/desync.hpp" lineno="24">
                            <function threadsafety="unspecified" name="id" fullname="cv::gapi::streaming::detail::GDesync::id" href="cv-gapi-streaming-detail-gdesync.html#id" status="active" access="public" location="desync.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/desync.hpp" lineno="25" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * id()"/>
                            <function threadsafety="unspecified" name="yield" fullname="cv::gapi::streaming::detail::GDesync::yield" href="cv-gapi-streaming-detail-gdesync.html#yield" status="active" access="public" location="desync.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/desync.hpp" lineno="35" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::tuple&lt;R...&gt;" signature="std::tuple&lt;R...&gt; yield(cv::GCall &amp;call, cv::detail::Seq&lt;IIs...&gt; )">
                                <parameter left="cv::GCall &amp;" right="" name="call" default=""/>
                                <parameter left="cv::detail::Seq&lt;IIs...&gt;" right="" name="" default=""/>
                            </function>
                        </class>
                        <function threadsafety="unspecified" name="desync" fullname="cv::gapi::streaming::detail::desync" href="cv-gapi-streaming-detail.html#desync" status="active" access="public" location="desync.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/desync.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="G" signature="G desync(const G &amp;g)">
                            <parameter left="const G &amp;" right="" name="g" default=""/>
                        </function>
                        <class threadsafety="unspecified" name="GMeta" fullname="cv::gapi::streaming::detail::GMeta" href="cv-gapi-streaming-detail-gmeta.html" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="27">
                            <function threadsafety="unspecified" name="getOutMeta" fullname="cv::gapi::streaming::detail::GMeta::getOutMeta" href="cv-gapi-streaming-detail-gmeta.html#getOutMeta" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="37" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GMetaArgs" signature="GMetaArgs getOutMeta(const GMetaArgs &amp;args, const GArgs &amp;)">
                                <parameter left="const GMetaArgs &amp;" right="" name="args" default=""/>
                                <parameter left="const GArgs &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="id" fullname="cv::gapi::streaming::detail::GMeta::id" href="cv-gapi-streaming-detail-gmeta.html#id" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="28" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * id()"/>
                            <function threadsafety="unspecified" name="yield" fullname="cv::gapi::streaming::detail::GMeta::yield" href="cv-gapi-streaming-detail-gmeta.html#yield" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="33" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="std::tuple&lt;R...&gt;" signature="std::tuple&lt;R...&gt; yield(cv::GCall &amp;call, cv::detail::Seq&lt;IIs...&gt; )">
                                <parameter left="cv::GCall &amp;" right="" name="call" default=""/>
                                <parameter left="cv::detail::Seq&lt;IIs...&gt;" right="" name="" default=""/>
                            </function>
                        </class>
                    </namespace>
                    <namespace threadsafety="unspecified" name="meta_tag" fullname="cv::gapi::streaming::meta_tag" href="cv-gapi-streaming-meta-tag.html" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="21"/>
                    <function threadsafety="unspecified" name="meta" fullname="cv::gapi::streaming::meta" href="cv-gapi-streaming.html#meta" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOpaque&lt;T&gt;" signature="cv::GOpaque&lt;T&gt; meta(G g, const std::string &amp;tag)">
                        <parameter left="G" right="" name="g" default=""/>
                        <parameter left="const std::string &amp;" right="" name="tag" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="seqNo" fullname="cv::gapi::streaming::seqNo" href="cv-gapi-streaming.html#seqNo" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="70" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOpaque&lt;int64_t&gt;" signature="cv::GOpaque&lt;int64_t&gt; seqNo(G g)">
                        <parameter left="G" right="" name="g" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="seq_id" fullname="cv::gapi::streaming::seq_id" href="cv-gapi-streaming.html#seq_id" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOpaque&lt;int64_t&gt;" signature="cv::GOpaque&lt;int64_t&gt; seq_id(G g)">
                        <parameter left="G" right="" name="g" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="timestamp" fullname="cv::gapi::streaming::timestamp" href="cv-gapi-streaming.html#timestamp" status="active" access="public" location="meta.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/meta.hpp" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOpaque&lt;int64_t&gt;" signature="cv::GOpaque&lt;int64_t&gt; timestamp(G g)">
                        <parameter left="G" right="" name="g" default=""/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="cpu" fullname="cv::gapi::cpu" href="cv-gapi-cpu.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="43">
                    <function threadsafety="unspecified" name="ocv_kernel" fullname="cv::gapi::cpu::ocv_kernel" href="cv-gapi-cpu.html#ocv_kernel-1" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOCVFunctor" signature="GOCVFunctor ocv_kernel(Callable &amp;c)">
                        <parameter left="Callable &amp;" right="" name="c" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ocv_kernel" fullname="cv::gapi::cpu::ocv_kernel" href="cv-gapi-cpu.html#ocv_kernel" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOCVFunctor" signature="GOCVFunctor ocv_kernel(const Callable &amp;c)">
                        <parameter left="const Callable &amp;" right="" name="c" default=""/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="imgproc" fullname="cv::gapi::imgproc" href="cv-gapi-imgproc.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/imgproc.hpp" lineno="16">
                    <namespace threadsafety="unspecified" name="cpu" fullname="cv::gapi::imgproc::cpu" href="cv-gapi-imgproc-cpu.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/imgproc.hpp" lineno="17"/>
                    <namespace threadsafety="unspecified" name="fluid" fullname="cv::gapi::imgproc::fluid" href="cv-gapi-imgproc-fluid.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/imgproc.hpp" lineno="14"/>
                    <namespace threadsafety="unspecified" name="gpu" fullname="cv::gapi::imgproc::gpu" href="cv-gapi-imgproc-gpu.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gpu/imgproc.hpp" lineno="20"/>
                    <namespace threadsafety="unspecified" name="ocl" fullname="cv::gapi::imgproc::ocl" href="cv-gapi-imgproc-ocl.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/imgproc.hpp" lineno="17"/>
                </namespace>
                <namespace threadsafety="unspecified" name="video" fullname="cv::gapi::video" href="cv-gapi-video.html" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/video.hpp" lineno="14">
                    <namespace threadsafety="unspecified" name="cpu" fullname="cv::gapi::video::cpu" href="cv-gapi-video-cpu.html" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/video.hpp" lineno="15"/>
                    <class threadsafety="unspecified" name="BackgroundSubtractorParams" fullname="cv::gapi::video::BackgroundSubtractorParams" href="cv-gapi-video-backgroundsubtractorparams.html" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="100">
                        <function threadsafety="unspecified" name="BackgroundSubtractorParams" fullname="cv::gapi::video::BackgroundSubtractorParams::BackgroundSubtractorParams" href="cv-gapi-video-backgroundsubtractorparams.html#BackgroundSubtractorParams" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="125" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackgroundSubtractorParams()"/>
                        <function threadsafety="unspecified" name="BackgroundSubtractorParams" fullname="cv::gapi::video::BackgroundSubtractorParams::BackgroundSubtractorParams" href="cv-gapi-video-backgroundsubtractorparams.html#BackgroundSubtractorParams-1" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="139" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BackgroundSubtractorParams(BackgroundSubtractorType op, int histLength, double thrshld, bool detect, double lRate)">
                            <parameter left="BackgroundSubtractorType" right="" name="op" default=""/>
                            <parameter left="int" right="" name="histLength" default=""/>
                            <parameter left="double" right="" name="thrshld" default=""/>
                            <parameter left="bool" right="" name="detect" default=""/>
                            <parameter left="double" right="" name="lRate" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="detectShadows" fullname="cv::gapi::video::BackgroundSubtractorParams::detectShadows" href="cv-gapi-video-backgroundsubtractorparams.html#detectShadows-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="116" type="bool = true" static="false"/>
                        <variable threadsafety="unspecified" name="history" fullname="cv::gapi::video::BackgroundSubtractorParams::history" href="cv-gapi-video-backgroundsubtractorparams.html#history-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="106" type="int = 500" static="false"/>
                        <variable threadsafety="unspecified" name="learningRate" fullname="cv::gapi::video::BackgroundSubtractorParams::learningRate" href="cv-gapi-video-backgroundsubtractorparams.html#learningRate-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="122" type="double =-1" static="false"/>
                        <variable threadsafety="unspecified" name="operation" fullname="cv::gapi::video::BackgroundSubtractorParams::operation" href="cv-gapi-video-backgroundsubtractorparams.html#operation-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="103" type="BackgroundSubtractorType = TYPE_BS_MOG2" static="false"/>
                        <variable threadsafety="unspecified" name="threshold" fullname="cv::gapi::video::BackgroundSubtractorParams::threshold" href="cv-gapi-video-backgroundsubtractorparams.html#threshold-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="113" type="double = 16" static="false"/>
                    </class>
                    <enum threadsafety="unspecified" name="BackgroundSubtractorType" fullname="cv::gapi::video::BackgroundSubtractorType" href="cv-gapi-video.html#BackgroundSubtractorType-enum" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="92">
                        <value name="TYPE_BS_MOG2" value="0"/>
                        <value name="TYPE_BS_KNN" value="1"/>
                    </enum>
                    <function threadsafety="unspecified" name="checkParams" fullname="cv::gapi::video::checkParams" href="cv-gapi-video.html#checkParams" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void checkParams(const cv::gapi::KalmanParams &amp;kfParams, const cv::GMatDesc &amp;measurement, const cv::GMatDesc &amp;control)">
                        <parameter left="const cv::gapi::KalmanParams &amp;" right="" name="kfParams" default=""/>
                        <parameter left="const cv::GMatDesc &amp;" right="" name="measurement" default=""/>
                        <parameter left="const cv::GMatDesc &amp;" right="" name="control" default="{}"/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="fluid" fullname="cv::gapi::fluid" href="cv-gapi-fluid.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="23">
                    <class threadsafety="unspecified" name="Border" fullname="cv::gapi::fluid::Border" href="cv-gapi-fluid-border.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="25">
                        <function threadsafety="unspecified" name="Border" fullname="cv::gapi::fluid::Border::Border" href="cv-gapi-fluid-border.html#Border" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="28" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Border(int _type, cv::Scalar _val)">
                            <parameter left="int" right="" name="_type" default=""/>
                            <parameter left="cv::Scalar" right="" name="_val" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="type" fullname="cv::gapi::fluid::Border::type" href="cv-gapi-fluid-border.html#type-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="30" type="int" static="false"/>
                        <variable threadsafety="unspecified" name="value" fullname="cv::gapi::fluid::Border::value" href="cv-gapi-fluid-border.html#value-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="31" type="cv::Scalar" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="Buffer" fullname="cv::gapi::fluid::Buffer" href="cv-gapi-fluid-buffer.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="92">
                        <class threadsafety="unspecified" name="Cache" fullname="cv::gapi::fluid::Buffer::Cache" href="cv-gapi-fluid-buffer-cache.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="95">
                            <variable threadsafety="unspecified" name="m_desc" fullname="cv::gapi::fluid::Buffer::Cache::m_desc" href="cv-gapi-fluid-buffer-cache.html#m_desc-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="98" type="GMatDesc" static="false"/>
                            <variable threadsafety="unspecified" name="m_linePtrs" fullname="cv::gapi::fluid::Buffer::Cache::m_linePtrs" href="cv-gapi-fluid-buffer-cache.html#m_linePtrs-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="97" type="std::vector&lt;uint8_t *&gt;" static="false"/>
                        </class>
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::fluid::Buffer::operator=" href="cv-gapi-fluid-buffer.html#operator-eq" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="116" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Buffer &amp;" signature="Buffer &amp; operator=(Buffer &amp;&amp;)">
                            <parameter left="Buffer &amp;&amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Buffer" fullname="cv::gapi::fluid::Buffer::Buffer" href="cv-gapi-fluid-buffer.html#Buffer" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="103" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer()"/>
                        <function threadsafety="unspecified" name="Buffer" fullname="cv::gapi::fluid::Buffer::Buffer" href="cv-gapi-fluid-buffer.html#Buffer-1" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="105" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(const cv::GMatDesc &amp;desc)">
                            <parameter left="const cv::GMatDesc &amp;" right="" name="desc" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Buffer" fullname="cv::gapi::fluid::Buffer::Buffer" href="cv-gapi-fluid-buffer.html#Buffer-2" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="108" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(const cv::GMatDesc &amp;desc, int max_line_consumption, int border_size, int skew, int wlpi, BorderOpt border)">
                            <parameter left="const cv::GMatDesc &amp;" right="" name="desc" default=""/>
                            <parameter left="int" right="" name="max_line_consumption" default=""/>
                            <parameter left="int" right="" name="border_size" default=""/>
                            <parameter left="int" right="" name="skew" default=""/>
                            <parameter left="int" right="" name="wlpi" default=""/>
                            <parameter left="BorderOpt" right="" name="border" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Buffer" fullname="cv::gapi::fluid::Buffer::Buffer" href="cv-gapi-fluid-buffer.html#Buffer-3" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="114" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(const cv::Mat &amp;data, bool is_input)">
                            <parameter left="const cv::Mat &amp;" right="" name="data" default=""/>
                            <parameter left="bool" right="" name="is_input" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="priv" fullname="cv::gapi::fluid::Buffer::priv" href="cv-gapi-fluid-buffer.html#priv" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Priv &amp;" signature="Priv &amp; priv()"/>
                        <function threadsafety="unspecified" name="OutLine" fullname="cv::gapi::fluid::Buffer::OutLine" href="cv-gapi-fluid-buffer.html#OutLine" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="123" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * OutLine(int index)">
                            <parameter left="int" right="" name="index" default="0"/>
                        </function>
                        <function threadsafety="unspecified" name="mkView" fullname="cv::gapi::fluid::Buffer::mkView" href="cv-gapi-fluid-buffer.html#mkView" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="138" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View" signature="View mkView(int borderSize, bool ownStorage)">
                            <parameter left="int" right="" name="borderSize" default=""/>
                            <parameter left="bool" right="" name="ownStorage" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="OutLineB" fullname="cv::gapi::fluid::Buffer::OutLineB" href="cv-gapi-fluid-buffer.html#OutLineB" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="118" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint8_t *" signature="uint8_t * OutLineB(int index)">
                            <parameter left="int" right="" name="index" default="0"/>
                        </function>
                        <function threadsafety="unspecified" name="addView" fullname="cv::gapi::fluid::Buffer::addView" href="cv-gapi-fluid-buffer.html#addView" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addView(const View *v)">
                            <parameter left="const View *" right="" name="v" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~Buffer" fullname="cv::gapi::fluid::Buffer::~Buffer" href="cv-gapi-fluid-buffer.html#dtor.Buffer" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="115" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Buffer()"/>
                        <function threadsafety="unspecified" name="meta" fullname="cv::gapi::fluid::Buffer::meta" href="cv-gapi-fluid-buffer.html#meta" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="136" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMatDesc &amp;" signature="const GMatDesc &amp; meta() const"/>
                        <function threadsafety="unspecified" name="priv" fullname="cv::gapi::fluid::Buffer::priv" href="cv-gapi-fluid-buffer.html#priv-1" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="143" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Priv &amp;" signature="const Priv &amp; priv() const"/>
                        <function threadsafety="unspecified" name="length" fullname="cv::gapi::fluid::Buffer::length" href="cv-gapi-fluid-buffer.html#length" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="133" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int length() const"/>
                        <function threadsafety="unspecified" name="linesReady" fullname="cv::gapi::fluid::Buffer::linesReady" href="cv-gapi-fluid-buffer.html#linesReady" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int linesReady() const"/>
                        <function threadsafety="unspecified" name="lpi" fullname="cv::gapi::fluid::Buffer::lpi" href="cv-gapi-fluid-buffer.html#lpi" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="134" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int lpi() const"/>
                        <function threadsafety="unspecified" name="y" fullname="cv::gapi::fluid::Buffer::y" href="cv-gapi-fluid-buffer.html#y" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="129" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int y() const"/>
                        <function threadsafety="unspecified" name="debug" fullname="cv::gapi::fluid::Buffer::debug" href="cv-gapi-fluid-buffer.html#debug" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="132" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void debug(std::ostream &amp;os) const">
                            <parameter left="std::ostream &amp;" right="" name="os" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="View" fullname="cv::gapi::fluid::View" href="cv-gapi-fluid-view.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="40">
                        <class threadsafety="unspecified" name="Cache" fullname="cv::gapi::fluid::View::Cache" href="cv-gapi-fluid-view-cache.html" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="43">
                            <function threadsafety="unspecified" name="linePtr" fullname="cv::gapi::fluid::View::Cache::linePtr" href="cv-gapi-fluid-view-cache.html#linePtr" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="49" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uint8_t *" signature="const uint8_t * linePtr(int index) const">
                                <parameter left="int" right="" name="index" default=""/>
                            </function>
                            <variable threadsafety="unspecified" name="m_border_size" fullname="cv::gapi::fluid::View::Cache::m_border_size" href="cv-gapi-fluid-view-cache.html#m_border_size-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="47" type="int = 0" static="false"/>
                            <variable threadsafety="unspecified" name="m_desc" fullname="cv::gapi::fluid::View::Cache::m_desc" href="cv-gapi-fluid-view-cache.html#m_desc-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="46" type="GMatDesc" static="false"/>
                            <variable threadsafety="unspecified" name="m_linePtrs" fullname="cv::gapi::fluid::View::Cache::m_linePtrs" href="cv-gapi-fluid-view-cache.html#m_linePtrs-var" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="45" type="std::vector&lt;const uint8_t *&gt;" static="false"/>
                        </class>
                        <function threadsafety="unspecified" name="priv" fullname="cv::gapi::fluid::View::priv" href="cv-gapi-fluid-view.html#priv" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Priv &amp;" signature="Priv &amp; priv()"/>
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::fluid::View::operator=" href="cv-gapi-fluid-view.html#operator-eq" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="84" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View &amp;" signature="View &amp; operator=(View &amp;&amp;v)">
                            <parameter left="View &amp;&amp;" right="" name="v" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="View" fullname="cv::gapi::fluid::View::View" href="cv-gapi-fluid-view.html#View" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="81" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View()"/>
                        <function threadsafety="unspecified" name="View" fullname="cv::gapi::fluid::View::View" href="cv-gapi-fluid-view.html#View-2" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="83" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View(View &amp;&amp;v)">
                            <parameter left="View &amp;&amp;" right="" name="v" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="View" fullname="cv::gapi::fluid::View::View" href="cv-gapi-fluid-view.html#View-1" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="82" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View(std::unique_ptr&lt;Priv&gt; &amp;&amp;p)">
                            <parameter left="std::unique_ptr&lt;Priv&gt; &amp;&amp;" right="" name="p" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~View" fullname="cv::gapi::fluid::View::~View" href="cv-gapi-fluid-view.html#dtor.View" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="85" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~View()"/>
                        <function threadsafety="unspecified" name="meta" fullname="cv::gapi::fluid::View::meta" href="cv-gapi-fluid-view.html#meta" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="75" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMatDesc &amp;" signature="const GMatDesc &amp; meta() const"/>
                        <function threadsafety="unspecified" name="priv" fullname="cv::gapi::fluid::View::priv" href="cv-gapi-fluid-view.html#priv-1" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="79" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Priv &amp;" signature="const Priv &amp; priv() const"/>
                        <function threadsafety="unspecified" name="length" fullname="cv::gapi::fluid::View::length" href="cv-gapi-fluid-view.html#length" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="72" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int length() const"/>
                        <function threadsafety="unspecified" name="y" fullname="cv::gapi::fluid::View::y" href="cv-gapi-fluid-view.html#y" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="73" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int y() const"/>
                    </class>
                    <function threadsafety="unspecified" name="operator==" fullname="cv::gapi::fluid::operator==" href="cv-gapi-fluid.html#operator-eq-eq" status="active" access="public" location="gfluidbuffer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidbuffer.hpp" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Border &amp;b1, const Border &amp;b2)">
                        <parameter left="const Border &amp;" right="" name="b1" default=""/>
                        <parameter left="const Border &amp;" right="" name="b2" default=""/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="wip" fullname="cv::gapi::wip" href="cv-gapi-wip.html" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="186">
                    <class threadsafety="unspecified" name="Data" fullname="cv::gapi::wip::Data" href="cv-gapi-wip-data.html" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="195">
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::wip::Data::operator=" href="cv-gapi-wip-data.html#operator-eq-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="201" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Data &amp;" signature="Data &amp; operator=(T &amp;&amp;t)">
                            <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::wip::Data::operator=" href="cv-gapi-wip-data.html#operator-eq" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="199" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Data &amp;" signature="Data &amp; operator=(const T &amp;t)">
                            <parameter left="const T &amp;" right="" name="t" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="GAsyncCanceled" fullname="cv::gapi::wip::GAsyncCanceled" href="cv-gapi-wip-gasynccanceled.html" status="active" access="public" location="gasync_context.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gasync_context.hpp" lineno="48"/>
                    <class threadsafety="unspecified" name="GAsyncContext" fullname="cv::gapi::wip::GAsyncContext" href="cv-gapi-wip-gasynccontext.html" status="active" access="public" location="gasync_context.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gasync_context.hpp" lineno="28">
                        <function threadsafety="unspecified" name="cancel" fullname="cv::gapi::wip::GAsyncContext::cancel" href="cv-gapi-wip-gasynccontext.html#cancel" status="active" access="public" location="gasync_context.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gasync_context.hpp" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool cancel()"/>
                        <function threadsafety="unspecified" name="isCanceled" fullname="cv::gapi::wip::GAsyncContext::isCanceled" href="cv-gapi-wip-gasynccontext.html#isCanceled" status="active" access="public" location="gasync_context.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gasync_context.hpp" lineno="45" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isCanceled() const"/>
                    </class>
                    <namespace threadsafety="unspecified" name="draw" fullname="cv::gapi::wip::draw" href="cv-gapi-wip-draw.html" status="active" access="public" location="render.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render.hpp" lineno="70">
                        <class threadsafety="unspecified" name="Circle" fullname="cv::gapi::wip::draw::Circle" href="cv-gapi-wip-draw-circle.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="161">
                            <function threadsafety="unspecified" name="Circle" fullname="cv::gapi::wip::draw::Circle::Circle" href="cv-gapi-wip-draw-circle.html#Circle-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="183" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Circle() = default"/>
                            <function threadsafety="unspecified" name="Circle" fullname="cv::gapi::wip::draw::Circle::Circle" href="cv-gapi-wip-draw-circle.html#Circle" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="173" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Circle(const cv::Point &amp;center_, int radius_, const cv::Scalar &amp;color_, int thick_, int lt_, int shift_)">
                                <parameter left="const cv::Point &amp;" right="" name="center_" default=""/>
                                <parameter left="int" right="" name="radius_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                                <parameter left="int" right="" name="thick_" default="1"/>
                                <parameter left="int" right="" name="lt_" default="8"/>
                                <parameter left="int" right="" name="shift_" default="0"/>
                            </function>
                            <variable threadsafety="unspecified" name="center" fullname="cv::gapi::wip::draw::Circle::center" href="cv-gapi-wip-draw-circle.html#center-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="186" type="cv::Point" static="false"/>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::Circle::color" href="cv-gapi-wip-draw-circle.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="188" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="lt" fullname="cv::gapi::wip::draw::Circle::lt" href="cv-gapi-wip-draw-circle.html#lt-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="190" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="radius" fullname="cv::gapi::wip::draw::Circle::radius" href="cv-gapi-wip-draw-circle.html#radius-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="187" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="shift" fullname="cv::gapi::wip::draw::Circle::shift" href="cv-gapi-wip-draw-circle.html#shift-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="191" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="thick" fullname="cv::gapi::wip::draw::Circle::thick" href="cv-gapi-wip-draw-circle.html#thick-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="189" type="int" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="FText" fullname="cv::gapi::wip::draw::FText" href="cv-gapi-wip-draw-ftext.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="92">
                            <function threadsafety="unspecified" name="FText" fullname="cv::gapi::wip::draw::FText::FText" href="cv-gapi-wip-draw-ftext.html#FText-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="110" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="FText() = default"/>
                            <function threadsafety="unspecified" name="FText" fullname="cv::gapi::wip::draw::FText::FText" href="cv-gapi-wip-draw-ftext.html#FText" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="102" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FText(const std::wstring &amp;text_, const cv::Point &amp;org_, int fh_, const cv::Scalar &amp;color_)">
                                <parameter left="const std::wstring &amp;" right="" name="text_" default=""/>
                                <parameter left="const cv::Point &amp;" right="" name="org_" default=""/>
                                <parameter left="int" right="" name="fh_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                            </function>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::FText::color" href="cv-gapi-wip-draw-ftext.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="116" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="fh" fullname="cv::gapi::wip::draw::FText::fh" href="cv-gapi-wip-draw-ftext.html#fh-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="115" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="org" fullname="cv::gapi::wip::draw::FText::org" href="cv-gapi-wip-draw-ftext.html#org-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="114" type="cv::Point" static="false"/>
                            <variable threadsafety="unspecified" name="text" fullname="cv::gapi::wip::draw::FText::text" href="cv-gapi-wip-draw-ftext.html#text-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="113" type="std::wstring" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Image" fullname="cv::gapi::wip::draw::Image" href="cv-gapi-wip-draw-image.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="269">
                            <function threadsafety="unspecified" name="Image" fullname="cv::gapi::wip::draw::Image::Image" href="cv-gapi-wip-draw-image.html#Image-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="285" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Image() = default"/>
                            <function threadsafety="unspecified" name="Image" fullname="cv::gapi::wip::draw::Image::Image" href="cv-gapi-wip-draw-image.html#Image" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="278" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Image(const cv::Point &amp;org_, const cv::Mat &amp;img_, const cv::Mat &amp;alpha_)">
                                <parameter left="const cv::Point &amp;" right="" name="org_" default=""/>
                                <parameter left="const cv::Mat &amp;" right="" name="img_" default=""/>
                                <parameter left="const cv::Mat &amp;" right="" name="alpha_" default=""/>
                            </function>
                            <variable threadsafety="unspecified" name="alpha" fullname="cv::gapi::wip::draw::Image::alpha" href="cv-gapi-wip-draw-image.html#alpha-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="290" type="cv::Mat" static="false"/>
                            <variable threadsafety="unspecified" name="img" fullname="cv::gapi::wip::draw::Image::img" href="cv-gapi-wip-draw-image.html#img-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="289" type="cv::Mat" static="false"/>
                            <variable threadsafety="unspecified" name="org" fullname="cv::gapi::wip::draw::Image::org" href="cv-gapi-wip-draw-image.html#org-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="288" type="cv::Point" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Line" fullname="cv::gapi::wip::draw::Line" href="cv-gapi-wip-draw-line.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="200">
                            <function threadsafety="unspecified" name="Line" fullname="cv::gapi::wip::draw::Line::Line" href="cv-gapi-wip-draw-line.html#Line-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="222" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Line() = default"/>
                            <function threadsafety="unspecified" name="Line" fullname="cv::gapi::wip::draw::Line::Line" href="cv-gapi-wip-draw-line.html#Line" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="212" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Line(const cv::Point &amp;pt1_, const cv::Point &amp;pt2_, const cv::Scalar &amp;color_, int thick_, int lt_, int shift_)">
                                <parameter left="const cv::Point &amp;" right="" name="pt1_" default=""/>
                                <parameter left="const cv::Point &amp;" right="" name="pt2_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                                <parameter left="int" right="" name="thick_" default="1"/>
                                <parameter left="int" right="" name="lt_" default="8"/>
                                <parameter left="int" right="" name="shift_" default="0"/>
                            </function>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::Line::color" href="cv-gapi-wip-draw-line.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="227" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="lt" fullname="cv::gapi::wip::draw::Line::lt" href="cv-gapi-wip-draw-line.html#lt-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="229" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="pt1" fullname="cv::gapi::wip::draw::Line::pt1" href="cv-gapi-wip-draw-line.html#pt1-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="225" type="cv::Point" static="false"/>
                            <variable threadsafety="unspecified" name="pt2" fullname="cv::gapi::wip::draw::Line::pt2" href="cv-gapi-wip-draw-line.html#pt2-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="226" type="cv::Point" static="false"/>
                            <variable threadsafety="unspecified" name="shift" fullname="cv::gapi::wip::draw::Line::shift" href="cv-gapi-wip-draw-line.html#shift-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="230" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="thick" fullname="cv::gapi::wip::draw::Line::thick" href="cv-gapi-wip-draw-line.html#thick-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="228" type="int" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Mosaic" fullname="cv::gapi::wip::draw::Mosaic" href="cv-gapi-wip-draw-mosaic.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="239">
                            <function threadsafety="unspecified" name="Mosaic" fullname="cv::gapi::wip::draw::Mosaic::Mosaic" href="cv-gapi-wip-draw-mosaic.html#Mosaic-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="255" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mosaic()"/>
                            <function threadsafety="unspecified" name="Mosaic" fullname="cv::gapi::wip::draw::Mosaic::Mosaic" href="cv-gapi-wip-draw-mosaic.html#Mosaic" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="248" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mosaic(const cv::Rect &amp;mos_, int cellSz_, int decim_)">
                                <parameter left="const cv::Rect &amp;" right="" name="mos_" default=""/>
                                <parameter left="int" right="" name="cellSz_" default=""/>
                                <parameter left="int" right="" name="decim_" default=""/>
                            </function>
                            <variable threadsafety="unspecified" name="cellSz" fullname="cv::gapi::wip::draw::Mosaic::cellSz" href="cv-gapi-wip-draw-mosaic.html#cellSz-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="259" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="decim" fullname="cv::gapi::wip::draw::Mosaic::decim" href="cv-gapi-wip-draw-mosaic.html#decim-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="260" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="mos" fullname="cv::gapi::wip::draw::Mosaic::mos" href="cv-gapi-wip-draw-mosaic.html#mos-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="258" type="cv::Rect" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Poly" fullname="cv::gapi::wip::draw::Poly" href="cv-gapi-wip-draw-poly.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="297">
                            <function threadsafety="unspecified" name="Poly" fullname="cv::gapi::wip::draw::Poly::Poly" href="cv-gapi-wip-draw-poly.html#Poly-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="317" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Poly() = default"/>
                            <function threadsafety="unspecified" name="Poly" fullname="cv::gapi::wip::draw::Poly::Poly" href="cv-gapi-wip-draw-poly.html#Poly" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="308" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Poly(const std::vector&lt;cv::Point&gt; &amp;points_, const cv::Scalar &amp;color_, int thick_, int lt_, int shift_)">
                                <parameter left="const std::vector&lt;cv::Point&gt; &amp;" right="" name="points_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                                <parameter left="int" right="" name="thick_" default="1"/>
                                <parameter left="int" right="" name="lt_" default="8"/>
                                <parameter left="int" right="" name="shift_" default="0"/>
                            </function>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::Poly::color" href="cv-gapi-wip-draw-poly.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="321" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="lt" fullname="cv::gapi::wip::draw::Poly::lt" href="cv-gapi-wip-draw-poly.html#lt-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="323" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="points" fullname="cv::gapi::wip::draw::Poly::points" href="cv-gapi-wip-draw-poly.html#points-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="320" type="std::vector&lt;cv::Point&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="shift" fullname="cv::gapi::wip::draw::Poly::shift" href="cv-gapi-wip-draw-poly.html#shift-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="324" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="thick" fullname="cv::gapi::wip::draw::Poly::thick" href="cv-gapi-wip-draw-poly.html#thick-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="322" type="int" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Rect" fullname="cv::gapi::wip::draw::Rect" href="cv-gapi-wip-draw-rect.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="125">
                            <function threadsafety="unspecified" name="Rect" fullname="cv::gapi::wip::draw::Rect::Rect" href="cv-gapi-wip-draw-rect.html#Rect-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="145" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Rect() = default"/>
                            <function threadsafety="unspecified" name="Rect" fullname="cv::gapi::wip::draw::Rect::Rect" href="cv-gapi-wip-draw-rect.html#Rect" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="136" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect(const cv::Rect &amp;rect_, const cv::Scalar &amp;color_, int thick_, int lt_, int shift_)">
                                <parameter left="const cv::Rect &amp;" right="" name="rect_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                                <parameter left="int" right="" name="thick_" default="1"/>
                                <parameter left="int" right="" name="lt_" default="8"/>
                                <parameter left="int" right="" name="shift_" default="0"/>
                            </function>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::Rect::color" href="cv-gapi-wip-draw-rect.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="149" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="lt" fullname="cv::gapi::wip::draw::Rect::lt" href="cv-gapi-wip-draw-rect.html#lt-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="151" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="rect" fullname="cv::gapi::wip::draw::Rect::rect" href="cv-gapi-wip-draw-rect.html#rect-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="148" type="cv::Rect" static="false"/>
                            <variable threadsafety="unspecified" name="shift" fullname="cv::gapi::wip::draw::Rect::shift" href="cv-gapi-wip-draw-rect.html#shift-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="152" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="thick" fullname="cv::gapi::wip::draw::Rect::thick" href="cv-gapi-wip-draw-rect.html#thick-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="150" type="int" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="Text" fullname="cv::gapi::wip::draw::Text" href="cv-gapi-wip-draw-text.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="44">
                            <function threadsafety="unspecified" name="Text" fullname="cv::gapi::wip::draw::Text::Text" href="cv-gapi-wip-draw-text.html#Text-1" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="71" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Text() = default"/>
                            <function threadsafety="unspecified" name="Text" fullname="cv::gapi::wip::draw::Text::Text" href="cv-gapi-wip-draw-text.html#Text" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Text(const std::string &amp;text_, const cv::Point &amp;org_, int ff_, double fs_, const cv::Scalar &amp;color_, int thick_, int lt_, bool bottom_left_origin_)">
                                <parameter left="const std::string &amp;" right="" name="text_" default=""/>
                                <parameter left="const cv::Point &amp;" right="" name="org_" default=""/>
                                <parameter left="int" right="" name="ff_" default=""/>
                                <parameter left="double" right="" name="fs_" default=""/>
                                <parameter left="const cv::Scalar &amp;" right="" name="color_" default=""/>
                                <parameter left="int" right="" name="thick_" default="1"/>
                                <parameter left="int" right="" name="lt_" default="8"/>
                                <parameter left="bool" right="" name="bottom_left_origin_" default="false"/>
                            </function>
                            <variable threadsafety="unspecified" name="bottom_left_origin" fullname="cv::gapi::wip::draw::Text::bottom_left_origin" href="cv-gapi-wip-draw-text.html#bottom_left_origin-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="81" type="bool" static="false"/>
                            <variable threadsafety="unspecified" name="color" fullname="cv::gapi::wip::draw::Text::color" href="cv-gapi-wip-draw-text.html#color-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="78" type="cv::Scalar" static="false"/>
                            <variable threadsafety="unspecified" name="ff" fullname="cv::gapi::wip::draw::Text::ff" href="cv-gapi-wip-draw-text.html#ff-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="76" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="fs" fullname="cv::gapi::wip::draw::Text::fs" href="cv-gapi-wip-draw-text.html#fs-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="77" type="double" static="false"/>
                            <variable threadsafety="unspecified" name="lt" fullname="cv::gapi::wip::draw::Text::lt" href="cv-gapi-wip-draw-text.html#lt-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="80" type="int" static="false"/>
                            <variable threadsafety="unspecified" name="org" fullname="cv::gapi::wip::draw::Text::org" href="cv-gapi-wip-draw-text.html#org-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="75" type="cv::Point" static="false"/>
                            <variable threadsafety="unspecified" name="text" fullname="cv::gapi::wip::draw::Text::text" href="cv-gapi-wip-draw-text.html#text-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="74" type="std::string" static="false"/>
                            <variable threadsafety="unspecified" name="thick" fullname="cv::gapi::wip::draw::Text::thick" href="cv-gapi-wip-draw-text.html#thick-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="79" type="int" static="false"/>
                        </class>
                        <class threadsafety="unspecified" name="freetype_font" fullname="cv::gapi::wip::draw::freetype_font" href="cv-gapi-wip-draw-freetype-font.html" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="30">
                            <variable threadsafety="unspecified" name="path" fullname="cv::gapi::wip::draw::freetype_font::path" href="cv-gapi-wip-draw-freetype-font.html#path-var" status="active" access="public" location="render_types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render_types.hpp" lineno="33" type="std::string" static="false"/>
                        </class>
                    </namespace>
                    <class threadsafety="unspecified" name="GCaptureSource" fullname="cv::gapi::wip::GCaptureSource" href="cv-gapi-wip-gcapturesource.html" status="active" access="public" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="47" bases="cv::gapi::wip::IStreamSource">
                        <function threadsafety="unspecified" name="GCaptureSource" fullname="cv::gapi::wip::GCaptureSource::GCaptureSource" href="cv-gapi-wip-gcapturesource.html#GCaptureSource-1" status="active" access="public" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCaptureSource(const std::string &amp;path)">
                            <parameter left="const std::string &amp;" right="" name="path" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="GCaptureSource" fullname="cv::gapi::wip::GCaptureSource::GCaptureSource" href="cv-gapi-wip-gcapturesource.html#GCaptureSource" status="active" access="public" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCaptureSource(int id)">
                            <parameter left="int" right="" name="id" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="pull" fullname="cv::gapi::wip::GCaptureSource::pull" href="cv-gapi-wip-gcapturesource.html#pull" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="79" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool pull(cv::gapi::wip::Data &amp;data) override">
                            <parameter left="cv::gapi::wip::Data &amp;" right="" name="data" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="prep" fullname="cv::gapi::wip::GCaptureSource::prep" href="cv-gapi-wip-gcapturesource.html#prep" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void prep()"/>
                        <function threadsafety="unspecified" name="descr_of" fullname="cv::gapi::wip::GCaptureSource::descr_of" href="cv-gapi-wip-gcapturesource.html#descr_of" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="109" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="GMetaArg" signature="GMetaArg descr_of() const override"/>
                        <variable threadsafety="unspecified" name="cap" fullname="cv::gapi::wip::GCaptureSource::cap" href="cv-gapi-wip-gcapturesource.html#cap-var" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="57" type="cv::VideoCapture" static="false"/>
                        <variable threadsafety="unspecified" name="counter" fullname="cv::gapi::wip::GCaptureSource::counter" href="cv-gapi-wip-gcapturesource.html#counter-var" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="60" type="int64_t = 0" static="false"/>
                        <variable threadsafety="unspecified" name="first" fullname="cv::gapi::wip::GCaptureSource::first" href="cv-gapi-wip-gcapturesource.html#first-var" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="58" type="cv::Mat" static="false"/>
                        <variable threadsafety="unspecified" name="first_pulled" fullname="cv::gapi::wip::GCaptureSource::first_pulled" href="cv-gapi-wip-gcapturesource.html#first_pulled-var" status="active" access="protected" location="cap.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/cap.hpp" lineno="59" type="bool = false" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="IStreamSource" fullname="cv::gapi::wip::IStreamSource" href="cv-gapi-wip-istreamsource.html" status="active" access="public" location="source.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/source.hpp" lineno="39">
                        <function threadsafety="unspecified" name="ptr" fullname="cv::gapi::wip::IStreamSource::ptr" href="cv-gapi-wip-istreamsource.html#ptr" status="active" access="public" location="source.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/source.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr" signature="Ptr ptr()"/>
                        <function threadsafety="unspecified" name="pull" fullname="cv::gapi::wip::IStreamSource::pull" href="cv-gapi-wip-istreamsource.html#pull" status="active" access="public" location="source.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/source.hpp" lineno="44" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool pull(Data &amp;data) = 0">
                            <parameter left="Data &amp;" right="" name="data" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~IStreamSource" fullname="cv::gapi::wip::IStreamSource::~IStreamSource" href="cv-gapi-wip-istreamsource.html#dtor.IStreamSource" status="active" access="public" location="source.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/source.hpp" lineno="46" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~IStreamSource() = default"/>
                        <function threadsafety="unspecified" name="descr_of" fullname="cv::gapi::wip::IStreamSource::descr_of" href="cv-gapi-wip-istreamsource.html#descr_of" status="active" access="public" location="source.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/streaming/source.hpp" lineno="45" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMetaArg" signature="GMetaArg descr_of() const = 0"/>
                    </class>
                </namespace>
                <namespace threadsafety="unspecified" name="s11n" fullname="cv::gapi::s11n" href="cv-gapi-s11n.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="101">
                    <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::s11n::detail" href="cv-gapi-s11n-detail.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="102">
                        <class threadsafety="unspecified" name="wrap_serialize" fullname="cv::gapi::s11n::detail::wrap_serialize" href="cv-gapi-s11n-detail-wrap-serialize.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="228">
                            <function threadsafety="unspecified" name="serialize" fullname="cv::gapi::s11n::detail::wrap_serialize::serialize" href="cv-gapi-s11n-detail-wrap-serialize.html#serialize" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="230" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(IOStream &amp;os, const GCompileArg &amp;arg)">
                                <parameter left="IOStream &amp;" right="" name="os" default=""/>
                                <parameter left="const GCompileArg &amp;" right="" name="arg" default=""/>
                            </function>
                        </class>
                        <function threadsafety="unspecified" name="get_v" fullname="cv::gapi::s11n::detail::get_v" href="cv-gapi-s11n-detail.html#get_v" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="235" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; get_v(IIStream &amp;, V &amp;, std::size_t , std::size_t )">
                            <parameter left="IIStream &amp;" right="" name="" default=""/>
                            <parameter left="V &amp;" right="" name="" default=""/>
                            <parameter left="std::size_t" right="" name="" default=""/>
                            <parameter left="std::size_t" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="get_v" fullname="cv::gapi::s11n::detail::get_v" href="cv-gapi-s11n-detail.html#get_v-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="239" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; get_v(IIStream &amp;is, V &amp;v, std::size_t i, std::size_t gi)">
                            <parameter left="IIStream &amp;" right="" name="is" default=""/>
                            <parameter left="V &amp;" right="" name="v" default=""/>
                            <parameter left="std::size_t" right="" name="i" default=""/>
                            <parameter left="std::size_t" right="" name="gi" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="put_v" fullname="cv::gapi::s11n::detail::put_v" href="cv-gapi-s11n-detail.html#put_v" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="225" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; put_v(IOStream &amp;, const V &amp;, std::size_t )">
                            <parameter left="IOStream &amp;" right="" name="" default=""/>
                            <parameter left="const V &amp;" right="" name="" default=""/>
                            <parameter left="std::size_t" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="put_v" fullname="cv::gapi::s11n::detail::put_v" href="cv-gapi-s11n-detail.html#put_v-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="229" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; put_v(IOStream &amp;os, const V &amp;v, std::size_t x)">
                            <parameter left="IOStream &amp;" right="" name="os" default=""/>
                            <parameter left="const V &amp;" right="" name="v" default=""/>
                            <parameter left="std::size_t" right="" name="x" default=""/>
                        </function>
                        <class threadsafety="unspecified" name="NotImplemented" fullname="cv::gapi::s11n::detail::NotImplemented" href="cv-gapi-s11n-detail-notimplemented.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n/base.hpp" lineno="21"/>
                        <class threadsafety="unspecified" name="S11N" fullname="cv::gapi::s11n::detail::S11N" href="cv-gapi-s11n-detail-s11n.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n/base.hpp" lineno="27" bases="cv::gapi::s11n::detail::NotImplemented">
                            <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::s11n::detail::S11N::deserialize" href="cv-gapi-s11n-detail-s11n.html#deserialize" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n/base.hpp" lineno="31" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T deserialize(IIStream &amp;)">
                                <parameter left="IIStream &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="serialize" fullname="cv::gapi::s11n::detail::S11N::serialize" href="cv-gapi-s11n-detail-s11n.html#serialize" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n/base.hpp" lineno="28" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(IOStream &amp;, const T &amp;)">
                                <parameter left="IOStream &amp;" right="" name="" default=""/>
                                <parameter left="const T &amp;" right="" name="" default=""/>
                            </function>
                        </class>
                        <class threadsafety="unspecified" name="has_S11N_spec" fullname="cv::gapi::s11n::detail::has_S11N_spec" href="cv-gapi-s11n-detail-has-s11n-spec.html" status="active" access="public" location="base.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n/base.hpp" lineno="36"/>
                    </namespace>
                    <class threadsafety="unspecified" name="IIStream" fullname="cv::gapi::s11n::IIStream" href="cv-gapi-s11n-iistream.html" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="94">
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="96" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(bool &amp;) = 0">
                            <parameter left="bool &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-2" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="98" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(char &amp;) = 0">
                            <parameter left="char &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-8" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="104" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(double &amp;) = 0">
                            <parameter left="double &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-7" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="103" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(float &amp;) = 0">
                            <parameter left="float &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-6" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="102" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(int &amp;) = 0">
                            <parameter left="int &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-4" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="100" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(short &amp;) = 0">
                            <parameter left="short &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-11" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="107" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(std::string &amp;) = 0">
                            <parameter left="std::string &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="97" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(std::vector&lt;bool&gt;::reference ) = 0">
                            <parameter left="std::vector&lt;bool&gt;::reference" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-9" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="105" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(uint32_t &amp;) = 0">
                            <parameter left="uint32_t &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-10" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="106" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(uint64_t &amp;) = 0">
                            <parameter left="uint64_t &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-3" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="99" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(unsigned char &amp;) = 0">
                            <parameter left="unsigned char &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::IIStream::operator&gt;&gt;" href="cv-gapi-s11n-iistream.html#operator-gt-gt-5" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="101" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(unsigned short &amp;) = 0">
                            <parameter left="unsigned short &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~IIStream" fullname="cv::gapi::s11n::IIStream::~IIStream" href="cv-gapi-s11n-iistream.html#dtor.IIStream" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="95" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~IIStream() = default"/>
                    </class>
                    <class threadsafety="unspecified" name="IOStream" fullname="cv::gapi::s11n::IOStream" href="cv-gapi-s11n-iostream.html" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="78">
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="81" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(bool ) = 0">
                            <parameter left="bool" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="82" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(char ) = 0">
                            <parameter left="char" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-10" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="91" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(const std::string &amp;) = 0">
                            <parameter left="const std::string &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-9" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="90" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(double ) = 0">
                            <parameter left="double" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-8" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="89" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(float ) = 0">
                            <parameter left="float" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-5" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="86" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(int ) = 0">
                            <parameter left="int" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-3" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="84" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(short ) = 0">
                            <parameter left="short" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-6" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="87" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(uint32_t ) = 0">
                            <parameter left="uint32_t" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-7" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="88" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(uint64_t ) = 0">
                            <parameter left="uint64_t" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-2" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="83" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(unsigned char ) = 0">
                            <parameter left="unsigned char" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::IOStream::operator&lt;&lt;" href="cv-gapi-s11n-iostream.html#operator-lt-lt-4" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="85" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(unsigned short ) = 0">
                            <parameter left="unsigned short" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="~IOStream" fullname="cv::gapi::s11n::IOStream::~IOStream" href="cv-gapi-s11n-iostream.html#dtor.IOStream" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="79" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~IOStream() = default"/>
                    </class>
                    <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::operator&gt;&gt;" href="cv-gapi-s11n.html#operator-gt-gt-3" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="255" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(IIStream &amp;is, cv::util::variant&lt;Ts...&gt; &amp;v)">
                        <parameter left="IIStream &amp;" right="" name="is" default=""/>
                        <parameter left="cv::util::variant&lt;Ts...&gt; &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::operator&gt;&gt;" href="cv-gapi-s11n.html#operator-gt-gt" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(IIStream &amp;is, std::map&lt;K, V&gt; &amp;m)">
                        <parameter left="IIStream &amp;" right="" name="is" default=""/>
                        <parameter left="std::map&lt;K, V&gt; &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::operator&gt;&gt;" href="cv-gapi-s11n.html#operator-gt-gt-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="189" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(IIStream &amp;is, std::unordered_map&lt;K, V&gt; &amp;m)">
                        <parameter left="IIStream &amp;" right="" name="is" default=""/>
                        <parameter left="std::unordered_map&lt;K, V&gt; &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&gt;&gt;" fullname="cv::gapi::s11n::operator&gt;&gt;" href="cv-gapi-s11n.html#operator-gt-gt-2" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="209" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IIStream &amp;" signature="IIStream &amp; operator&gt;&gt;(IIStream &amp;is, std::vector&lt;T&gt; &amp;ts)">
                        <parameter left="IIStream &amp;" right="" name="is" default=""/>
                        <parameter left="std::vector&lt;T&gt; &amp;" right="" name="ts" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::operator&lt;&lt;" href="cv-gapi-s11n.html#operator-lt-lt-3" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="250" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(IOStream &amp;os, const cv::util::variant&lt;Ts...&gt; &amp;v)">
                        <parameter left="IOStream &amp;" right="" name="os" default=""/>
                        <parameter left="const cv::util::variant&lt;Ts...&gt; &amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::operator&lt;&lt;" href="cv-gapi-s11n.html#operator-lt-lt" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="162" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(IOStream &amp;os, const std::map&lt;K, V&gt; &amp;m)">
                        <parameter left="IOStream &amp;" right="" name="os" default=""/>
                        <parameter left="const std::map&lt;K, V&gt; &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::operator&lt;&lt;" href="cv-gapi-s11n.html#operator-lt-lt-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="182" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(IOStream &amp;os, const std::unordered_map&lt;K, V&gt; &amp;m)">
                        <parameter left="IOStream &amp;" right="" name="os" default=""/>
                        <parameter left="const std::unordered_map&lt;K, V&gt; &amp;" right="" name="m" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::s11n::operator&lt;&lt;" href="cv-gapi-s11n.html#operator-lt-lt-2" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="202" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IOStream &amp;" signature="IOStream &amp; operator&lt;&lt;(IOStream &amp;os, const std::vector&lt;T&gt; &amp;ts)">
                        <parameter left="IOStream &amp;" right="" name="os" default=""/>
                        <parameter left="const std::vector&lt;T&gt; &amp;" right="" name="ts" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getRunArgByIdx" fullname="cv::gapi::s11n::getRunArgByIdx" href="cv-gapi-s11n.html#getRunArgByIdx" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="264" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getRunArgByIdx(IIStream &amp;is, cv::util::variant&lt;Ts...&gt; &amp;v, uint32_t idx)">
                        <parameter left="IIStream &amp;" right="" name="is" default=""/>
                        <parameter left="cv::util::variant&lt;Ts...&gt; &amp;" right="" name="v" default=""/>
                        <parameter left="uint32_t" right="" name="idx" default=""/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="compound" fullname="cv::gapi::compound" href="cv-gapi-compound.html" status="active" access="public" location="gcompoundkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompoundkernel.hpp" lineno="19"/>
                <class threadsafety="unspecified" name="GFunctor" fullname="cv::gapi::GFunctor" href="cv-gapi-gfunctor.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="414">
                    <function threadsafety="unspecified" name="GFunctor" fullname="cv::gapi::GFunctor::GFunctor" href="cv-gapi-gfunctor.html#GFunctor" status="active" access="protected" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="423" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GFunctor(const char *id)">
                        <parameter left="const char *" right="" name="id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~GFunctor" fullname="cv::gapi::GFunctor::~GFunctor" href="cv-gapi-gfunctor.html#dtor.GFunctor" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="421" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~GFunctor() = default"/>
                    <function threadsafety="unspecified" name="id" fullname="cv::gapi::GFunctor::id" href="cv-gapi-gfunctor.html#id" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="419" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const char *" signature="const char * id() const"/>
                    <function threadsafety="unspecified" name="impl" fullname="cv::gapi::GFunctor::impl" href="cv-gapi-gfunctor.html#impl" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="417" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GKernelImpl" signature="cv::GKernelImpl impl() const = 0"/>
                    <function threadsafety="unspecified" name="backend" fullname="cv::gapi::GFunctor::backend" href="cv-gapi-gfunctor.html#backend" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="418" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend() const = 0"/>
                </class>
                <class threadsafety="unspecified" name="GKernelPackage" fullname="cv::gapi::GKernelPackage" href="cv-gapi-gkernelpackage.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="459">
                    <function threadsafety="unspecified" name="includeHelper" fullname="cv::gapi::GKernelPackage::includeHelper" href="cv-gapi-gkernelpackage.html#includeHelper" status="active" access="protected" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="479" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;( std::is_base_of&lt;cv::detail::KernelTag, KImpl&gt;::value ), void&gt;::type" signature="std::enable_if&lt;( std::is_base_of&lt;cv::detail::KernelTag, KImpl&gt;::value ), void&gt;::type includeHelper()"/>
                    <function threadsafety="unspecified" name="includeHelper" fullname="cv::gapi::GKernelPackage::includeHelper" href="cv-gapi-gkernelpackage.html#includeHelper-1" status="active" access="protected" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="493" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;( std::is_base_of&lt;cv::detail::TransformTag, TImpl&gt;::value ), void&gt;::type" signature="std::enable_if&lt;( std::is_base_of&lt;cv::detail::TransformTag, TImpl&gt;::value ), void&gt;::type includeHelper()"/>
                    <function threadsafety="unspecified" name="include" fullname="cv::gapi::GKernelPackage::include" href="cv-gapi-gkernelpackage.html#include-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="603" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void include()"/>
                    <function threadsafety="unspecified" name="include" fullname="cv::gapi::GKernelPackage::include" href="cv-gapi-gkernelpackage.html#include" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="500" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void include(const GFunctor &amp;functor)">
                        <parameter left="const GFunctor &amp;" right="" name="functor" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="remove" fullname="cv::gapi::GKernelPackage::remove" href="cv-gapi-gkernelpackage.html#remove-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="557" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void remove()"/>
                    <function threadsafety="unspecified" name="remove" fullname="cv::gapi::GKernelPackage::remove" href="cv-gapi-gkernelpackage.html#remove" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="548" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void remove(const GBackend &amp;backend)">
                        <parameter left="const GBackend &amp;" right="" name="backend" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="removeAPI" fullname="cv::gapi::GKernelPackage::removeAPI" href="cv-gapi-gkernelpackage.html#removeAPI" status="active" access="protected" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="474" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void removeAPI(const std::string &amp;id)">
                        <parameter left="const std::string &amp;" right="" name="id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="lookup" fullname="cv::gapi::GKernelPackage::lookup" href="cv-gapi-gkernelpackage.html#lookup" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="588" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GBackend" signature="GBackend lookup() const"/>
                    <function threadsafety="unspecified" name="includes" fullname="cv::gapi::GKernelPackage::includes" href="cv-gapi-gkernelpackage.html#includes" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="530" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool includes() const"/>
                    <function threadsafety="unspecified" name="includesAPI" fullname="cv::gapi::GKernelPackage::includesAPI" href="cv-gapi-gkernelpackage.html#includesAPI" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="569" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool includesAPI() const"/>
                    <function threadsafety="unspecified" name="includesAPI" fullname="cv::gapi::GKernelPackage::includesAPI" href="cv-gapi-gkernelpackage.html#includesAPI-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="575" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool includesAPI(const std::string &amp;id) const">
                        <parameter left="const std::string &amp;" right="" name="id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get_transformations" fullname="cv::gapi::GKernelPackage::get_transformations" href="cv-gapi-gkernelpackage.html#get_transformations" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="517" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::vector&lt;GTransform&gt; &amp;" signature="const std::vector&lt;GTransform&gt; &amp; get_transformations() const"/>
                    <function threadsafety="unspecified" name="lookup" fullname="cv::gapi::GKernelPackage::lookup" href="cv-gapi-gkernelpackage.html#lookup-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="594" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::pair&lt;cv::gapi::GBackend, cv::GKernelImpl&gt;" signature="std::pair&lt;cv::gapi::GBackend, cv::GKernelImpl&gt; lookup(const std::string &amp;id) const">
                        <parameter left="const std::string &amp;" right="" name="id" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="size" fullname="cv::gapi::GKernelPackage::size" href="cv-gapi-gkernelpackage.html#size" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="510" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::size_t" signature="std::size_t size() const"/>
                    <function threadsafety="unspecified" name="backends" fullname="cv::gapi::GKernelPackage::backends" href="cv-gapi-gkernelpackage.html#backends" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="613" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;GBackend&gt;" signature="std::vector&lt;GBackend&gt; backends() const"/>
                </class>
                <class threadsafety="unspecified" name="use_only" fullname="cv::gapi::use_only" href="cv-gapi-use-only.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="704">
                    <variable threadsafety="unspecified" name="pkg" fullname="cv::gapi::use_only::pkg" href="cv-gapi-use-only.html#pkg-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="706" type="GKernelPackage" static="false"/>
                </class>
                <function threadsafety="unspecified" name="combine" fullname="cv::gapi::combine" href="cv-gapi.html#combine" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="691" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GKernelPackage" signature="GKernelPackage combine(const GKernelPackage &amp;a, const GKernelPackage &amp;b, Ps &amp;&amp;... rest)">
                    <parameter left="const GKernelPackage &amp;" right="" name="a" default=""/>
                    <parameter left="const GKernelPackage &amp;" right="" name="b" default=""/>
                    <parameter left="Ps &amp;&amp;..." right="" name="rest" default=""/>
                </function>
                <function threadsafety="unspecified" name="kernels" fullname="cv::gapi::kernels" href="cv-gapi.html#kernels" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="646" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GKernelPackage" signature="GKernelPackage kernels()"/>
                <function threadsafety="unspecified" name="kernels" fullname="cv::gapi::kernels" href="cv-gapi.html#kernels-1" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="666" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GKernelPackage" signature="GKernelPackage kernels(FF &amp;... functors)">
                    <parameter left="FF &amp;..." right="" name="functors" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::detail" href="cv-gapi-detail.html" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="206">
                    <class threadsafety="unspecified" name="deserialize_runarg" fullname="cv::gapi::detail::deserialize_runarg" href="cv-gapi-detail-deserialize-runarg.html" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="296">
                        <function threadsafety="unspecified" name="exec" fullname="cv::gapi::detail::deserialize_runarg::exec" href="cv-gapi-detail-deserialize-runarg.html#exec" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="297" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GRunArg" signature="GRunArg exec(cv::gapi::s11n::IIStream &amp;is, uint32_t idx)">
                            <parameter left="cv::gapi::s11n::IIStream &amp;" right="" name="is" default=""/>
                            <parameter left="uint32_t" right="" name="idx" default=""/>
                        </function>
                    </class>
                    <function threadsafety="unspecified" name="getCompileArgs" fullname="cv::gapi::detail::getCompileArgs" href="cv-gapi-detail.html#getCompileArgs" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GCompileArgs" signature="cv::GCompileArgs getCompileArgs(const std::vector&lt;char&gt; &amp;p)">
                        <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getCompileArgs" fullname="cv::gapi::detail::getCompileArgs" href="cv-gapi-detail.html#getCompileArgs-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="318" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GCompileArgs" signature="cv::GCompileArgs getCompileArgs(const std::vector&lt;char&gt; &amp;sArgs)">
                        <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="sArgs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getRunArgsWithRMats" fullname="cv::gapi::detail::getRunArgsWithRMats" href="cv-gapi-detail.html#getRunArgsWithRMats" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GRunArgs" signature="cv::GRunArgs getRunArgsWithRMats(const std::vector&lt;char&gt; &amp;p)">
                        <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getRunArgsWithRMats" fullname="cv::gapi::detail::getRunArgsWithRMats" href="cv-gapi-detail.html#getRunArgsWithRMats-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="346" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GRunArgs" signature="cv::GRunArgs getRunArgsWithRMats(const std::vector&lt;char&gt; &amp;p)">
                        <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="tryDeserializeCompArg" fullname="cv::gapi::detail::tryDeserializeCompArg" href="cv-gapi-detail.html#tryDeserializeCompArg" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="311" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::optional&lt;GCompileArg&gt;" signature="cv::util::optional&lt;GCompileArg&gt; tryDeserializeCompArg(const std::string &amp;tag, const std::vector&lt;char&gt; &amp;sArg)">
                        <parameter left="const std::string &amp;" right="" name="tag" default=""/>
                        <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="sArg" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="checkVector" fullname="cv::gapi::detail::checkVector" href="cv-gapi-detail.html#checkVector" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int checkVector(const GMatDesc &amp;in, const size_t n)">
                        <parameter left="const GMatDesc &amp;" right="" name="in" default=""/>
                        <parameter left="const size_t" right="" name="n" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="checkVector" fullname="cv::gapi::detail::checkVector" href="cv-gapi-detail.html#checkVector-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="224" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;int&gt;" signature="std::vector&lt;int&gt; checkVector(const GMatDesc &amp;in)">
                        <parameter left="const GMatDesc &amp;" right="" name="in" default=""/>
                    </function>
                </namespace>
                <namespace threadsafety="unspecified" name="own" fullname="cv::gapi::own" href="cv-gapi-own.html" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="232">
                    <function threadsafety="unspecified" name="saturate" fullname="cv::gapi::own::saturate" href="cv-gapi-own.html#saturate" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="26" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="DST" signature="DST saturate(SRC x)">
                        <parameter left="SRC" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="to_ocv" fullname="cv::gapi::own::to_ocv" href="cv-gapi-own.html#to_ocv-1" status="active" access="public" location="convert.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/convert.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="cv::Mat" signature="cv::Mat to_ocv(Mat &amp;&amp;) = delete">
                        <parameter left="Mat &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::own::detail" href="cv-gapi-own-detail.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="24">
                        <class threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader" href="cv-gapi-own-detail-matheader.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="44">
                            <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::detail::MatHeader::operator=" href="cv-gapi-own-detail-matheader.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="65" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MatHeader &amp;" signature="MatHeader &amp; operator=(MatHeader &amp;&amp;src)">
                                <parameter left="MatHeader &amp;&amp;" right="" name="src" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::detail::MatHeader::operator=" href="cv-gapi-own-detail-matheader.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="64" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="MatHeader &amp;" signature="MatHeader &amp; operator=(const MatHeader &amp;) = default">
                                <parameter left="const MatHeader &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader::MatHeader" href="cv-gapi-own-detail-matheader.html#MatHeader" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="48" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="MatHeader() = default"/>
                            <function threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader::MatHeader" href="cv-gapi-own-detail-matheader.html#MatHeader-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="59" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatHeader(MatHeader &amp;&amp;src)">
                                <parameter left="MatHeader &amp;&amp;" right="" name="src" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader::MatHeader" href="cv-gapi-own-detail-matheader.html#MatHeader-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="58" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="MatHeader(const MatHeader &amp;) = default">
                                <parameter left="const MatHeader &amp;" right="" name="" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader::MatHeader" href="cv-gapi-own-detail-matheader.html#MatHeader-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="54" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatHeader(const std::vector&lt;int&gt; &amp;_dims, int type, void *_data)">
                                <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="_dims" default=""/>
                                <parameter left="int" right="" name="type" default=""/>
                                <parameter left="void *" right="" name="_data" default=""/>
                            </function>
                            <function threadsafety="unspecified" name="MatHeader" fullname="cv::gapi::own::detail::MatHeader::MatHeader" href="cv-gapi-own-detail-matheader.html#MatHeader-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MatHeader(int _rows, int _cols, int type, void *_data, size_t _step)">
                                <parameter left="int" right="" name="_rows" default=""/>
                                <parameter left="int" right="" name="_cols" default=""/>
                                <parameter left="int" right="" name="type" default=""/>
                                <parameter left="void *" right="" name="_data" default=""/>
                                <parameter left="size_t" right="" name="_step" default=""/>
                            </function>
                            <variable threadsafety="unspecified" name="AUTO_STEP" fullname="cv::gapi::own::detail::MatHeader::AUTO_STEP" href="cv-gapi-own-detail-matheader.html#AUTO_STEP-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="45" type="const int" static="true"/>
                            <variable threadsafety="unspecified" name="TYPE_MASK" fullname="cv::gapi::own::detail::MatHeader::TYPE_MASK" href="cv-gapi-own-detail-matheader.html#TYPE_MASK-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="46" type="const int" static="true"/>
                            <variable threadsafety="unspecified" name="data" fullname="cv::gapi::own::detail::MatHeader::data" href="cv-gapi-own-detail-matheader.html#data-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="81" type="uchar *= nullptr" static="false"/>
                            <variable threadsafety="unspecified" name="dims" fullname="cv::gapi::own::detail::MatHeader::dims" href="cv-gapi-own-detail-matheader.html#dims-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="84" type="std::vector&lt;int&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="rows" fullname="cv::gapi::own::detail::MatHeader::rows" href="cv-gapi-own-detail-matheader.html#rows-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="79" type="int = 0, cols = 0" static="false"/>
                            <variable threadsafety="unspecified" name="step" fullname="cv::gapi::own::detail::MatHeader::step" href="cv-gapi-own-detail-matheader.html#step-var" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="82" type="size_t = 0" static="false"/>
                        </class>
                        <function threadsafety="unspecified" name="default_step" fullname="cv::gapi::own::detail::default_step" href="cv-gapi-own-detail.html#default_step" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t default_step(int type, int cols)">
                            <parameter left="int" right="" name="type" default=""/>
                            <parameter left="int" right="" name="cols" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="assign_row" fullname="cv::gapi::own::detail::assign_row" href="cv-gapi-own-detail.html#assign_row" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void assign_row(void *ptr, int cols, Scalar const &amp;s)">
                            <parameter left="void *" right="" name="ptr" default=""/>
                            <parameter left="int" right="" name="cols" default=""/>
                            <parameter left="Scalar const &amp;" right="" name="s" default=""/>
                        </function>
                    </namespace>
                    <class threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat" href="cv-gapi-own-mat.html" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="88" bases="cv::gapi::own::detail::MatHeader">
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::Mat::operator=" href="cv-gapi-own-mat.html#operator-eq-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="131" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(Mat &amp;&amp;) = default">
                            <parameter left="Mat &amp;&amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::Mat::operator=" href="cv-gapi-own-mat.html#operator-eq" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="130" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(Mat const &amp;) = default">
                            <parameter left="Mat const &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::Mat::operator=" href="cv-gapi-own-mat.html#operator-eq-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="136" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat &amp;" signature="Mat &amp; operator=(const Scalar &amp;s)">
                            <parameter left="const Scalar &amp;" right="" name="s" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="91" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Mat() = default"/>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-6" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="128" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Mat(Mat &amp;&amp;) = default">
                            <parameter left="Mat &amp;&amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-5" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="127" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Mat(Mat const &amp;) = default">
                            <parameter left="Mat const &amp;" right="" name="" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-4" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="119" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(Mat const &amp;src, const Rect &amp;roi)">
                            <parameter left="Mat const &amp;" right="" name="src" default=""/>
                            <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="111" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(const std::vector&lt;int&gt; &amp;_dims, int _type, void *_data)">
                            <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="_dims" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                            <parameter left="void *" right="" name="_data" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="107" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(int _rows, int _cols, int _type, void *_data, size_t _step)">
                            <parameter left="int" right="" name="_rows" default=""/>
                            <parameter left="int" right="" name="_cols" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                            <parameter left="void *" right="" name="_data" default=""/>
                            <parameter left="size_t" right="" name="_step" default="AUTO_STEP"/>
                        </function>
                        <function threadsafety="unspecified" name="Mat" fullname="cv::gapi::own::Mat::Mat" href="cv-gapi-own-mat.html#Mat-3" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="115" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Mat(std::vector&lt;int&gt; &amp;&amp;_dims, int _type, void *_data)">
                            <parameter left="std::vector&lt;int&gt; &amp;&amp;" right="" name="_dims" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                            <parameter left="void *" right="" name="_data" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="ptr" fullname="cv::gapi::own::Mat::ptr" href="cv-gapi-own-mat.html#ptr" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="334" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * ptr(int row, int col)">
                            <parameter left="int" right="" name="row" default=""/>
                            <parameter left="int" right="" name="col" default="0"/>
                        </function>
                        <function threadsafety="unspecified" name="create" fullname="cv::gapi::own::Mat::create" href="cv-gapi-own-mat.html#create-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="232" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size _size, int _type)">
                            <parameter left="Size" right="" name="_size" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="create" fullname="cv::gapi::own::Mat::create" href="cv-gapi-own-mat.html#create-2" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="245" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(const std::vector&lt;int&gt; &amp;_dims, int _type)">
                            <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="_dims" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="create" fullname="cv::gapi::own::Mat::create" href="cv-gapi-own-mat.html#create" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="224" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(int _rows, int _cols, int _type)">
                            <parameter left="int" right="" name="_rows" default=""/>
                            <parameter left="int" right="" name="_cols" default=""/>
                            <parameter left="int" right="" name="_type" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="clone" fullname="cv::gapi::own::Mat::clone" href="cv-gapi-own-mat.html#clone" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="262" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat clone() const"/>
                        <function threadsafety="unspecified" name="operator()" fullname="cv::gapi::own::Mat::operator()" href="cv-gapi-own-mat.html#operator-28-29" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="321" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat operator()(const Rect &amp;roi) const">
                            <parameter left="const Rect &amp;" right="" name="roi" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="empty" fullname="cv::gapi::own::Mat::empty" href="cv-gapi-own-mat.html#empty" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="301" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                        <function threadsafety="unspecified" name="ptr" fullname="cv::gapi::own::Mat::ptr" href="cv-gapi-own-mat.html#ptr-1" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="339" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const uchar *" signature="const uchar * ptr(int row, int col) const">
                            <parameter left="int" right="" name="row" default=""/>
                            <parameter left="int" right="" name="col" default="0"/>
                        </function>
                        <function threadsafety="unspecified" name="channels" fullname="cv::gapi::own::Mat::channels" href="cv-gapi-own-mat.html#channels" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="217" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
                        <function threadsafety="unspecified" name="depth" fullname="cv::gapi::own::Mat::depth" href="cv-gapi-own-mat.html#depth" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="210" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                        <function threadsafety="unspecified" name="type" fullname="cv::gapi::own::Mat::type" href="cv-gapi-own-mat.html#type" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="195" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                        <function threadsafety="unspecified" name="elemSize" fullname="cv::gapi::own::Mat::elemSize" href="cv-gapi-own-mat.html#elemSize" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="186" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                        <function threadsafety="unspecified" name="total" fullname="cv::gapi::own::Mat::total" href="cv-gapi-own-mat.html#total" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="311" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t total() const"/>
                        <function threadsafety="unspecified" name="copyTo" fullname="cv::gapi::own::Mat::copyTo" href="cv-gapi-own-mat.html#copyTo" status="active" access="public" location="mat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/mat.hpp" lineno="279" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(Mat &amp;dst) const">
                            <parameter left="Mat &amp;" right="" name="dst" default=""/>
                        </function>
                    </class>
                    <function threadsafety="unspecified" name="saturate" fullname="cv::gapi::own::saturate" href="cv-gapi-own.html#saturate-1" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="52" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="DST" signature="DST saturate(SRC x, R round)">
                        <parameter left="SRC" right="" name="x" default=""/>
                        <parameter left="R" right="" name="round" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="ceild" fullname="cv::gapi::own::ceild" href="cv-gapi-own.html#ceild" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double ceild(double x)">
                        <parameter left="double" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="floord" fullname="cv::gapi::own::floord" href="cv-gapi-own.html#floord" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double floord(double x)">
                        <parameter left="double" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="rintd" fullname="cv::gapi::own::rintd" href="cv-gapi-own.html#rintd" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double rintd(double x)">
                        <parameter left="double" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="roundd" fullname="cv::gapi::own::roundd" href="cv-gapi-own.html#roundd" status="active" access="public" location="saturate.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/saturate.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double roundd(double x)">
                        <parameter left="double" right="" name="x" default=""/>
                    </function>
                    <class threadsafety="unspecified" name="Scalar" fullname="cv::gapi::own::Scalar" href="cv-gapi-own-scalar.html" status="active" access="public" location="scalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/scalar.hpp" lineno="20">
                        <function threadsafety="unspecified" name="Scalar" fullname="cv::gapi::own::Scalar::Scalar" href="cv-gapi-own-scalar.html#Scalar" status="active" access="public" location="scalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/scalar.hpp" lineno="23" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Scalar() = default"/>
                        <function threadsafety="unspecified" name="Scalar" fullname="cv::gapi::own::Scalar::Scalar" href="cv-gapi-own-scalar.html#Scalar-1" status="active" access="public" location="scalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/scalar.hpp" lineno="24" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar(double v0)">
                            <parameter left="double" right="" name="v0" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Scalar" fullname="cv::gapi::own::Scalar::Scalar" href="cv-gapi-own-scalar.html#Scalar-2" status="active" access="public" location="scalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/scalar.hpp" lineno="25" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Scalar(double v0, double v1, double v2, double v3)">
                            <parameter left="double" right="" name="v0" default=""/>
                            <parameter left="double" right="" name="v1" default=""/>
                            <parameter left="double" right="" name="v2" default="0"/>
                            <parameter left="double" right="" name="v3" default="0"/>
                        </function>
                    </class>
                    <function threadsafety="unspecified" name="operator==" fullname="cv::gapi::own::operator==" href="cv-gapi-own.html#operator-eq-eq" status="active" access="public" location="scalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/scalar.hpp" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Scalar &amp;lhs, const Scalar &amp;rhs)">
                        <parameter left="const Scalar &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Scalar &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="to_ocv" fullname="cv::gapi::own::to_ocv" href="cv-gapi-own.html#to_ocv" status="active" access="public" location="convert.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/convert.hpp" lineno="41" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Mat" signature="cv::Mat to_ocv(Mat const &amp;m)">
                        <parameter left="Mat const &amp;" right="" name="m" default=""/>
                    </function>
                    <class threadsafety="unspecified" name="Point" fullname="cv::gapi::own::Point" href="cv-gapi-own-point.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="21">
                        <function threadsafety="unspecified" name="Point" fullname="cv::gapi::own::Point::Point" href="cv-gapi-own-point.html#Point" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="24" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Point() = default"/>
                        <function threadsafety="unspecified" name="Point" fullname="cv::gapi::own::Point::Point" href="cv-gapi-own-point.html#Point-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="25" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point(int _x, int _y)">
                            <parameter left="int" right="" name="_x" default=""/>
                            <parameter left="int" right="" name="_y" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="x" fullname="cv::gapi::own::Point::x" href="cv-gapi-own-point.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="27" type="int = 0" static="false"/>
                        <variable threadsafety="unspecified" name="y" fullname="cv::gapi::own::Point::y" href="cv-gapi-own-point.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="28" type="int = 0" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="Point2f" fullname="cv::gapi::own::Point2f" href="cv-gapi-own-point2f.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="31">
                        <function threadsafety="unspecified" name="Point2f" fullname="cv::gapi::own::Point2f::Point2f" href="cv-gapi-own-point2f.html#Point2f" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Point2f() = default"/>
                        <function threadsafety="unspecified" name="Point2f" fullname="cv::gapi::own::Point2f::Point2f" href="cv-gapi-own-point2f.html#Point2f-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Point2f(float _x, float _y)">
                            <parameter left="float" right="" name="_x" default=""/>
                            <parameter left="float" right="" name="_y" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="x" fullname="cv::gapi::own::Point2f::x" href="cv-gapi-own-point2f.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="37" type="float = 0.f" static="false"/>
                        <variable threadsafety="unspecified" name="y" fullname="cv::gapi::own::Point2f::y" href="cv-gapi-own-point2f.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="38" type="float = 0.f" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="Rect" fullname="cv::gapi::own::Rect" href="cv-gapi-own-rect.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="41">
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::Rect::operator=" href="cv-gapi-own-rect.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="48" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect &amp;" signature="Rect &amp; operator=(const cv::Rect &amp;other)">
                            <parameter left="const cv::Rect &amp;" right="" name="other" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Rect" fullname="cv::gapi::own::Rect::Rect" href="cv-gapi-own-rect.html#Rect" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="44" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Rect() = default"/>
                        <function threadsafety="unspecified" name="Rect" fullname="cv::gapi::own::Rect::Rect" href="cv-gapi-own-rect.html#Rect-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="47" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect(const cv::Rect &amp;other)">
                            <parameter left="const cv::Rect &amp;" right="" name="other" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Rect" fullname="cv::gapi::own::Rect::Rect" href="cv-gapi-own-rect.html#Rect-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="45" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Rect(int _x, int _y, int _width, int _height)">
                            <parameter left="int" right="" name="_x" default=""/>
                            <parameter left="int" right="" name="_y" default=""/>
                            <parameter left="int" right="" name="_width" default=""/>
                            <parameter left="int" right="" name="_height" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="height" fullname="cv::gapi::own::Rect::height" href="cv-gapi-own-rect.html#height-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="61" type="int = 0" static="false"/>
                        <variable threadsafety="unspecified" name="width" fullname="cv::gapi::own::Rect::width" href="cv-gapi-own-rect.html#width-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="60" type="int = 0" static="false"/>
                        <variable threadsafety="unspecified" name="x" fullname="cv::gapi::own::Rect::x" href="cv-gapi-own-rect.html#x-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="58" type="int = 0" static="false"/>
                        <variable threadsafety="unspecified" name="y" fullname="cv::gapi::own::Rect::y" href="cv-gapi-own-rect.html#y-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="59" type="int = 0" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="Size" fullname="cv::gapi::own::Size" href="cv-gapi-own-size.html" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="98">
                        <function threadsafety="unspecified" name="operator=" fullname="cv::gapi::own::Size::operator=" href="cv-gapi-own-size.html#operator-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="105" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size &amp;" signature="Size &amp; operator=(const cv::Size &amp;rhs)">
                            <parameter left="const cv::Size &amp;" right="" name="rhs" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Size" fullname="cv::gapi::own::Size::Size" href="cv-gapi-own-size.html#Size" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="101" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="Size() = default"/>
                        <function threadsafety="unspecified" name="Size" fullname="cv::gapi::own::Size::Size" href="cv-gapi-own-size.html#Size-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="104" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size(const cv::Size &amp;other)">
                            <parameter left="const cv::Size &amp;" right="" name="other" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Size" fullname="cv::gapi::own::Size::Size" href="cv-gapi-own-size.html#Size-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="102" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Size(int _width, int _height)">
                            <parameter left="int" right="" name="_width" default=""/>
                            <parameter left="int" right="" name="_height" default=""/>
                        </function>
                        <variable threadsafety="unspecified" name="height" fullname="cv::gapi::own::Size::height" href="cv-gapi-own-size.html#height-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="114" type="int = 0" static="false"/>
                        <variable threadsafety="unspecified" name="width" fullname="cv::gapi::own::Size::width" href="cv-gapi-own-size.html#width-var" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="113" type="int = 0" static="false"/>
                    </class>
                    <function threadsafety="unspecified" name="operator&amp;=" fullname="cv::gapi::own::operator&amp;=" href="cv-gapi-own.html#operator-and-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Rect &amp;" signature="Rect &amp; operator&amp;=(Rect &amp;lhs, const Rect &amp;rhs)">
                        <parameter left="Rect &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Rect &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator+=" fullname="cv::gapi::own::operator+=" href="cv-gapi-own.html#operator-2b-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size &amp;" signature="Size &amp; operator+=(Size &amp;lhs, const Size &amp;rhs)">
                        <parameter left="Size &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Size &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator!=" fullname="cv::gapi::own::operator!=" href="cv-gapi-own.html#operator-not-eq" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="69" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const Rect &amp;lhs, const Rect &amp;rhs)">
                        <parameter left="const Rect &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Rect &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator!=" fullname="cv::gapi::own::operator!=" href="cv-gapi-own.html#operator-not-eq-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const Size &amp;lhs, const Size &amp;rhs)">
                        <parameter left="const Size &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Size &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator==" fullname="cv::gapi::own::operator==" href="cv-gapi-own.html#operator-eq-eq-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Rect &amp;lhs, const Rect &amp;rhs)">
                        <parameter left="const Rect &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Rect &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator==" fullname="cv::gapi::own::operator==" href="cv-gapi-own.html#operator-eq-eq-2" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Size &amp;lhs, const Size &amp;rhs)">
                        <parameter left="const Size &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Size &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&amp;" fullname="cv::gapi::own::operator&amp;" href="cv-gapi-own.html#operator-and" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="87" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Rect" signature="const Rect operator&amp;(const Rect &amp;lhs, const Rect &amp;rhs)">
                        <parameter left="const Rect &amp;" right="" name="lhs" default=""/>
                        <parameter left="const Rect &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::own::operator&lt;&lt;" href="cv-gapi-own.html#operator-lt-lt" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="93" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;o, const Rect &amp;rect)">
                        <parameter left="std::ostream &amp;" right="" name="o" default=""/>
                        <parameter left="const Rect &amp;" right="" name="rect" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::gapi::own::operator&lt;&lt;" href="cv-gapi-own.html#operator-lt-lt-1" status="active" access="public" location="types.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/own/types.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;o, const Size &amp;s)">
                        <parameter left="std::ostream &amp;" right="" name="o" default=""/>
                        <parameter left="const Size &amp;" right="" name="s" default=""/>
                    </function>
                </namespace>
                <class threadsafety="unspecified" name="GNetPackage" fullname="cv::gapi::GNetPackage" href="cv-gapi-gnetpackage.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="460">
                    <function threadsafety="unspecified" name="GNetPackage" fullname="cv::gapi::GNetPackage::GNetPackage" href="cv-gapi-gnetpackage.html#GNetPackage" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="461" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GNetPackage() = default"/>
                    <function threadsafety="unspecified" name="GNetPackage" fullname="cv::gapi::GNetPackage::GNetPackage" href="cv-gapi-gnetpackage.html#GNetPackage-1" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="462" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GNetPackage(std::initializer_list&lt;GNetParam&gt; ii)">
                        <parameter left="std::initializer_list&lt;GNetParam&gt;" right="" name="ii" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="backends" fullname="cv::gapi::GNetPackage::backends" href="cv-gapi-gnetpackage.html#backends" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="463" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;GBackend&gt;" signature="std::vector&lt;GBackend&gt; backends() const"/>
                    <variable threadsafety="unspecified" name="networks" fullname="cv::gapi::GNetPackage::networks" href="cv-gapi-gnetpackage.html#networks-var" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="464" type="std::vector&lt;GNetParam&gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Generic" fullname="cv::gapi::Generic" href="cv-gapi-generic.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="389"/>
                <function threadsafety="unspecified" name="infer" fullname="cv::gapi::infer" href="cv-gapi.html#infer-3" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="398" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GInferOutputs" signature="GInferOutputs infer(const std::string &amp;tag, const GInferInputs &amp;inputs)">
                    <parameter left="const std::string &amp;" right="" name="tag" default=""/>
                    <parameter left="const GInferInputs &amp;" right="" name="inputs" default=""/>
                </function>
                <function threadsafety="unspecified" name="infer" fullname="cv::gapi::infer" href="cv-gapi.html#infer-2" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="382" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net::Result" signature="Net::Result infer(Args &amp;&amp;... args)">
                    <parameter left="Args &amp;&amp;..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="infer" fullname="cv::gapi::infer" href="cv-gapi.html#infer" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="323" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net::Result" signature="Net::Result infer(cv::GOpaque&lt;cv::Rect&gt; roi, T in)">
                    <parameter left="cv::GOpaque&lt;cv::Rect&gt;" right="" name="roi" default=""/>
                    <parameter left="T" right="" name="in" default=""/>
                </function>
                <function threadsafety="unspecified" name="infer" fullname="cv::gapi::infer" href="cv-gapi.html#infer-1" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="341" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net::ResultL" signature="Net::ResultL infer(cv::GArray&lt;cv::Rect&gt; roi, Args &amp;&amp;... args)">
                    <parameter left="cv::GArray&lt;cv::Rect&gt;" right="" name="roi" default=""/>
                    <parameter left="Args &amp;&amp;..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="infer2" fullname="cv::gapi::infer2" href="cv-gapi.html#infer2" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="364" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Net::ResultL" signature="Net::ResultL infer2(T image, cv::GArray&lt;Args&gt; ... args)">
                    <parameter left="T" right="" name="image" default=""/>
                    <parameter left="cv::GArray&lt;Args&gt; ..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="networks" fullname="cv::gapi::networks" href="cv-gapi.html#networks" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="486" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GNetPackage" signature="cv::gapi::GNetPackage networks(Args &amp;&amp;... args)">
                    <parameter left="Args &amp;&amp;..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="getCompileArg" fullname="cv::gapi::getCompileArg" href="cv-gapi.html#getCompileArg" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="214" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::optional&lt;T&gt;" signature="cv::util::optional&lt;T&gt; getCompileArg(const cv::GCompileArgs &amp;args)">
                    <parameter left="const cv::GCompileArgs &amp;" right="" name="args" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="ie" fullname="cv::gapi::ie" href="cv-gapi-ie.html" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="19">
                    <class threadsafety="unspecified" name="PyParams" fullname="cv::gapi::ie::PyParams" href="cv-gapi-ie-pyparams.html" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="23">
                        <function threadsafety="unspecified" name="PyParams" fullname="cv::gapi::ie::PyParams::PyParams" href="cv-gapi-ie-pyparams.html#PyParams" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="25" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="PyParams() = default"/>
                        <function threadsafety="unspecified" name="PyParams" fullname="cv::gapi::ie::PyParams::PyParams" href="cv-gapi-ie-pyparams.html#PyParams-2" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PyParams(const std::string &amp;tag, const std::string &amp;model, const std::string &amp;device)">
                            <parameter left="const std::string &amp;" right="" name="tag" default=""/>
                            <parameter left="const std::string &amp;" right="" name="model" default=""/>
                            <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="PyParams" fullname="cv::gapi::ie::PyParams::PyParams" href="cv-gapi-ie-pyparams.html#PyParams-1" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="27" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PyParams(const std::string &amp;tag, const std::string &amp;model, const std::string &amp;weights, const std::string &amp;device)">
                            <parameter left="const std::string &amp;" right="" name="tag" default=""/>
                            <parameter left="const std::string &amp;" right="" name="model" default=""/>
                            <parameter left="const std::string &amp;" right="" name="weights" default=""/>
                            <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="backend" fullname="cv::gapi::ie::PyParams::backend" href="cv-gapi-ie-pyparams.html#backend" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="36" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GBackend" signature="GBackend backend() const"/>
                        <function threadsafety="unspecified" name="params" fullname="cv::gapi::ie::PyParams::params" href="cv-gapi-ie-pyparams.html#params" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="38" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::any" signature="cv::util::any params() const"/>
                        <function threadsafety="unspecified" name="tag" fullname="cv::gapi::ie::PyParams::tag" href="cv-gapi-ie-pyparams.html#tag" status="active" access="public" location="bindings_ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/bindings_ie.hpp" lineno="37" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::string" signature="std::string tag() const"/>
                    </class>
                    <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::ie::detail" href="cv-gapi-ie-detail.html" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="48">
                        <class threadsafety="unspecified" name="ParamDesc" fullname="cv::gapi::ie::detail::ParamDesc" href="cv-gapi-ie-detail-paramdesc.html" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="49">
                            <enum threadsafety="unspecified" name="Kind" fullname="cv::gapi::ie::detail::ParamDesc::Kind" href="cv-gapi-ie-detail-paramdesc.html#Kind-enum" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="66">
                                <value name="Load" value="0"/>
                                <value name="Import" value="1"/>
                            </enum>
                            <variable threadsafety="unspecified" name="config" fullname="cv::gapi::ie::detail::ParamDesc::config" href="cv-gapi-ie-detail-paramdesc.html#config-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="69" type="IEConfig" static="false"/>
                            <variable threadsafety="unspecified" name="const_inputs" fullname="cv::gapi::ie::detail::ParamDesc::const_inputs" href="cv-gapi-ie-detail-paramdesc.html#const_inputs-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="59" type="std::unordered_map&lt;std::string, ConstInput&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="device_id" fullname="cv::gapi::ie::detail::ParamDesc::device_id" href="cv-gapi-ie-detail-paramdesc.html#device_id-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="52" type="std::string" static="false"/>
                            <variable threadsafety="unspecified" name="input_names" fullname="cv::gapi::ie::detail::ParamDesc::input_names" href="cv-gapi-ie-detail-paramdesc.html#input_names-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="55" type="std::vector&lt;std::string&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="is_generic" fullname="cv::gapi::ie::detail::ParamDesc::is_generic" href="cv-gapi-ie-detail-paramdesc.html#is_generic-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="68" type="bool" static="false"/>
                            <variable threadsafety="unspecified" name="kind" fullname="cv::gapi::ie::detail::ParamDesc::kind" href="cv-gapi-ie-detail-paramdesc.html#kind-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="67" type="Kind" static="false"/>
                            <variable threadsafety="unspecified" name="model_path" fullname="cv::gapi::ie::detail::ParamDesc::model_path" href="cv-gapi-ie-detail-paramdesc.html#model_path-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="50" type="std::string" static="false"/>
                            <variable threadsafety="unspecified" name="num_in" fullname="cv::gapi::ie::detail::ParamDesc::num_in" href="cv-gapi-ie-detail-paramdesc.html#num_in-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="63" type="std::size_t" static="false"/>
                            <variable threadsafety="unspecified" name="num_out" fullname="cv::gapi::ie::detail::ParamDesc::num_out" href="cv-gapi-ie-detail-paramdesc.html#num_out-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="64" type="std::size_t" static="false"/>
                            <variable threadsafety="unspecified" name="output_names" fullname="cv::gapi::ie::detail::ParamDesc::output_names" href="cv-gapi-ie-detail-paramdesc.html#output_names-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="56" type="std::vector&lt;std::string&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="weights_path" fullname="cv::gapi::ie::detail::ParamDesc::weights_path" href="cv-gapi-ie-detail-paramdesc.html#weights_path-var" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="51" type="std::string" static="false"/>
                        </class>
                    </namespace>
                    <class threadsafety="unspecified" name="Params" fullname="cv::gapi::ie::Params" href="cv-gapi-ie-params.html" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="84">
                        <function threadsafety="unspecified" name="pluginConfig" fullname="cv::gapi::ie::Params::pluginConfig" href="cv-gapi-ie-params.html#pluginConfig" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="130" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params &amp;" signature="Params &amp; pluginConfig(IEConfig &amp;&amp;cfg)">
                            <parameter left="IEConfig &amp;&amp;" right="" name="cfg" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="pluginConfig" fullname="cv::gapi::ie::Params::pluginConfig" href="cv-gapi-ie-params.html#pluginConfig-1" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="135" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params &amp;" signature="Params &amp; pluginConfig(const IEConfig &amp;cfg)">
                            <parameter left="const IEConfig &amp;" right="" name="cfg" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Params" fullname="cv::gapi::ie::Params::Params" href="cv-gapi-ie-params.html#Params-1" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="97" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Params(const std::string &amp;model, const std::string &amp;device)">
                            <parameter left="const std::string &amp;" right="" name="model" default=""/>
                            <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="Params" fullname="cv::gapi::ie::Params::Params" href="cv-gapi-ie-params.html#Params" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="86" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Params(const std::string &amp;model, const std::string &amp;weights, const std::string &amp;device)">
                            <parameter left="const std::string &amp;" right="" name="model" default=""/>
                            <parameter left="const std::string &amp;" right="" name="weights" default=""/>
                            <parameter left="const std::string &amp;" right="" name="device" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgInputLayers" fullname="cv::gapi::ie::Params::cfgInputLayers" href="cv-gapi-ie-params.html#cfgInputLayers" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgInputLayers(const PortCfg&lt;Net&gt;::In &amp;ll)">
                            <parameter left="const PortCfg&lt;Net&gt;::In &amp;" right="" name="ll" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgOutputLayers" fullname="cv::gapi::ie::Params::cfgOutputLayers" href="cv-gapi-ie-params.html#cfgOutputLayers" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="115" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgOutputLayers(const PortCfg&lt;Net&gt;::Out &amp;ll)">
                            <parameter left="const PortCfg&lt;Net&gt;::Out &amp;" right="" name="ll" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="constInput" fullname="cv::gapi::ie::Params::constInput" href="cv-gapi-ie-params.html#constInput" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="123" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; constInput(const std::string &amp;layer_name, const cv::Mat &amp;data, TraitAs hint)">
                            <parameter left="const std::string &amp;" right="" name="layer_name" default=""/>
                            <parameter left="const cv::Mat &amp;" right="" name="data" default=""/>
                            <parameter left="TraitAs" right="" name="hint" default="TraitAs::TENSOR"/>
                        </function>
                        <function threadsafety="unspecified" name="backend" fullname="cv::gapi::ie::Params::backend" href="cv-gapi-ie-params.html#backend" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="141" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GBackend" signature="GBackend backend() const"/>
                        <function threadsafety="unspecified" name="params" fullname="cv::gapi::ie::Params::params" href="cv-gapi-ie-params.html#params" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="143" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::any" signature="cv::util::any params() const"/>
                        <function threadsafety="unspecified" name="tag" fullname="cv::gapi::ie::Params::tag" href="cv-gapi-ie-params.html#tag" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="142" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::string" signature="std::string tag() const"/>
                        <variable threadsafety="unspecified" name="desc" fullname="cv::gapi::ie::Params::desc" href="cv-gapi-ie-params.html#desc-var" status="active" access="protected" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="147" type="detail::ParamDesc" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="PortCfg" fullname="cv::gapi::ie::PortCfg" href="cv-gapi-ie-portcfg.html" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="75"/>
                    <enum threadsafety="unspecified" name="TraitAs" fullname="cv::gapi::ie::TraitAs" href="cv-gapi-ie.html#TraitAs-enum" status="active" access="public" location="ie.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/ie.hpp" lineno="40">
                        <value name="TENSOR" value="0"/>
                        <value name="IMAGE" value="1"/>
                    </enum>
                </namespace>
                <namespace threadsafety="unspecified" name="onnx" fullname="cv::gapi::onnx" href="cv-gapi-onnx.html" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="23">
                    <namespace threadsafety="unspecified" name="detail" fullname="cv::gapi::onnx::detail" href="cv-gapi-onnx-detail.html" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="38">
                        <class threadsafety="unspecified" name="ParamDesc" fullname="cv::gapi::onnx::detail::ParamDesc" href="cv-gapi-onnx-detail-paramdesc.html" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="39">
                            <variable threadsafety="unspecified" name="const_inputs" fullname="cv::gapi::onnx::detail::ParamDesc::const_inputs" href="cv-gapi-onnx-detail-paramdesc.html#const_inputs-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="52" type="std::unordered_map&lt;std::string, ConstInput&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="custom_post_proc" fullname="cv::gapi::onnx::detail::ParamDesc::custom_post_proc" href="cv-gapi-onnx-detail-paramdesc.html#custom_post_proc-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="58" type="PostProc" static="false"/>
                            <variable threadsafety="unspecified" name="input_names" fullname="cv::gapi::onnx::detail::ParamDesc::input_names" href="cv-gapi-onnx-detail-paramdesc.html#input_names-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="48" type="std::vector&lt;std::string&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="mean" fullname="cv::gapi::onnx::detail::ParamDesc::mean" href="cv-gapi-onnx-detail-paramdesc.html#mean-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="54" type="std::vector&lt;cv::Scalar&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="model_path" fullname="cv::gapi::onnx::detail::ParamDesc::model_path" href="cv-gapi-onnx-detail-paramdesc.html#model_path-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="40" type="std::string" static="false"/>
                            <variable threadsafety="unspecified" name="normalize" fullname="cv::gapi::onnx::detail::ParamDesc::normalize" href="cv-gapi-onnx-detail-paramdesc.html#normalize-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="60" type="std::vector&lt;bool&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="num_in" fullname="cv::gapi::onnx::detail::ParamDesc::num_in" href="cv-gapi-onnx-detail-paramdesc.html#num_in-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="44" type="std::size_t" static="false"/>
                            <variable threadsafety="unspecified" name="num_out" fullname="cv::gapi::onnx::detail::ParamDesc::num_out" href="cv-gapi-onnx-detail-paramdesc.html#num_out-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="45" type="std::size_t" static="false"/>
                            <variable threadsafety="unspecified" name="out_metas" fullname="cv::gapi::onnx::detail::ParamDesc::out_metas" href="cv-gapi-onnx-detail-paramdesc.html#out_metas-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="57" type="std::vector&lt;cv::GMatDesc&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="output_names" fullname="cv::gapi::onnx::detail::ParamDesc::output_names" href="cv-gapi-onnx-detail-paramdesc.html#output_names-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="49" type="std::vector&lt;std::string&gt;" static="false"/>
                            <variable threadsafety="unspecified" name="stdev" fullname="cv::gapi::onnx::detail::ParamDesc::stdev" href="cv-gapi-onnx-detail-paramdesc.html#stdev-var" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="55" type="std::vector&lt;cv::Scalar&gt;" static="false"/>
                        </class>
                    </namespace>
                    <class threadsafety="unspecified" name="Params" fullname="cv::gapi::onnx::Params" href="cv-gapi-onnx-params.html" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="80">
                        <function threadsafety="unspecified" name="Params" fullname="cv::gapi::onnx::Params::Params" href="cv-gapi-onnx-params.html#Params" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="82" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Params(const std::string &amp;model)">
                            <parameter left="const std::string &amp;" right="" name="model" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgInputLayers" fullname="cv::gapi::onnx::Params::cfgInputLayers" href="cv-gapi-onnx-params.html#cfgInputLayers" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgInputLayers(const PortCfg&lt;Net&gt;::In &amp;ll)">
                            <parameter left="const PortCfg&lt;Net&gt;::In &amp;" right="" name="ll" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgMeanStd" fullname="cv::gapi::onnx::Params::cfgMeanStd" href="cv-gapi-onnx-params.html#cfgMeanStd" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgMeanStd(const PortCfg&lt;Net&gt;::NormCoefs &amp;m, const PortCfg&lt;Net&gt;::NormCoefs &amp;s)">
                            <parameter left="const PortCfg&lt;Net&gt;::NormCoefs &amp;" right="" name="m" default=""/>
                            <parameter left="const PortCfg&lt;Net&gt;::NormCoefs &amp;" right="" name="s" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgNormalize" fullname="cv::gapi::onnx::Params::cfgNormalize" href="cv-gapi-onnx-params.html#cfgNormalize" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgNormalize(const PortCfg&lt;Net&gt;::Normalize &amp;n)">
                            <parameter left="const PortCfg&lt;Net&gt;::Normalize &amp;" right="" name="n" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgOutputLayers" fullname="cv::gapi::onnx::Params::cfgOutputLayers" href="cv-gapi-onnx-params.html#cfgOutputLayers" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgOutputLayers(const PortCfg&lt;Net&gt;::Out &amp;ll)">
                            <parameter left="const PortCfg&lt;Net&gt;::Out &amp;" right="" name="ll" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="cfgPostProc" fullname="cv::gapi::onnx::Params::cfgPostProc" href="cv-gapi-onnx-params.html#cfgPostProc" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="118" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; cfgPostProc(const std::vector&lt;cv::GMatDesc&gt; &amp;outs, const PostProc &amp;pp)">
                            <parameter left="const std::vector&lt;cv::GMatDesc&gt; &amp;" right="" name="outs" default=""/>
                            <parameter left="const PostProc &amp;" right="" name="pp" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="constInput" fullname="cv::gapi::onnx::Params::constInput" href="cv-gapi-onnx-params.html#constInput" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Params&lt;Net&gt; &amp;" signature="Params&lt;Net&gt; &amp; constInput(const std::string &amp;layer_name, const cv::Mat &amp;data, TraitAs hint)">
                            <parameter left="const std::string &amp;" right="" name="layer_name" default=""/>
                            <parameter left="const cv::Mat &amp;" right="" name="data" default=""/>
                            <parameter left="TraitAs" right="" name="hint" default="TraitAs::TENSOR"/>
                        </function>
                        <function threadsafety="unspecified" name="backend" fullname="cv::gapi::onnx::Params::backend" href="cv-gapi-onnx-params.html#backend" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="89" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GBackend" signature="GBackend backend() const"/>
                        <function threadsafety="unspecified" name="params" fullname="cv::gapi::onnx::Params::params" href="cv-gapi-onnx-params.html#params" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="91" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::any" signature="cv::util::any params() const"/>
                        <function threadsafety="unspecified" name="tag" fullname="cv::gapi::onnx::Params::tag" href="cv-gapi-onnx-params.html#tag" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="90" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::string" signature="std::string tag() const"/>
                        <variable threadsafety="unspecified" name="desc" fullname="cv::gapi::onnx::Params::desc" href="cv-gapi-onnx-params.html#desc-var" status="active" access="protected" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="131" type="detail::ParamDesc" static="false"/>
                    </class>
                    <class threadsafety="unspecified" name="PortCfg" fullname="cv::gapi::onnx::PortCfg" href="cv-gapi-onnx-portcfg.html" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="65"/>
                    <enum threadsafety="unspecified" name="TraitAs" fullname="cv::gapi::onnx::TraitAs" href="cv-gapi-onnx.html#TraitAs-enum" status="active" access="public" location="onnx.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/onnx.hpp" lineno="27">
                        <value name="TENSOR" value="0"/>
                        <value name="IMAGE" value="1"/>
                    </enum>
                </namespace>
                <namespace threadsafety="unspecified" name="nn" fullname="cv::gapi::nn" href="cv-gapi-nn.html" status="active" access="public" location="parsers.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/parsers.hpp" lineno="17">
                    <namespace threadsafety="unspecified" name="parsers" fullname="cv::gapi::nn::parsers" href="cv-gapi-nn-parsers.html" status="active" access="public" location="parsers.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer/parsers.hpp" lineno="18"/>
                </namespace>
                <namespace threadsafety="unspecified" name="ocl" fullname="cv::gapi::ocl" href="cv-gapi-ocl.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="32"/>
                <namespace threadsafety="unspecified" name="plaidml" fullname="cv::gapi::plaidml" href="cv-gapi-plaidml.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="27">
                    <class threadsafety="unspecified" name="config" fullname="cv::gapi::plaidml::config" href="cv-gapi-plaidml-config.html" status="active" access="public" location="plaidml.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/plaidml.hpp" lineno="28">
                        <variable threadsafety="unspecified" name="dev_id" fullname="cv::gapi::plaidml::config::dev_id" href="cv-gapi-plaidml-config.html#dev_id-var" status="active" access="public" location="plaidml.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/plaidml.hpp" lineno="30" type="std::string" static="false"/>
                        <variable threadsafety="unspecified" name="trg_id" fullname="cv::gapi::plaidml::config::trg_id" href="cv-gapi-plaidml-config.html#trg_id-var" status="active" access="public" location="plaidml.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/plaidml.hpp" lineno="31" type="std::string" static="false"/>
                    </class>
                </namespace>
                <namespace threadsafety="unspecified" name="render" fullname="cv::gapi::render" href="cv-gapi-render.html" status="active" access="public" location="render.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render.hpp" lineno="142">
                    <namespace threadsafety="unspecified" name="ocv" fullname="cv::gapi::render::ocv" href="cv-gapi-render-ocv.html" status="active" access="public" location="render.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/render/render.hpp" lineno="144"/>
                </namespace>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="37" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize-1" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GComputation" signature="cv::GComputation deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize-2" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GMetaArgs" signature="cv::GMetaArgs deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize-3" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GRunArgs" signature="cv::GRunArgs deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize-4" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;std::is_same&lt;T, GCompileArgs&gt;::value, GCompileArgs&gt;::type" signature="std::enable_if&lt;std::is_same&lt;T, GCompileArgs&gt;::value, GCompileArgs&gt;::type deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <function threadsafety="unspecified" name="deserialize" fullname="cv::gapi::deserialize" href="cv-gapi.html#deserialize-5" status="active" access="public" location="s11n.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/s11n.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::enable_if&lt;std::is_same&lt;T, GRunArgs&gt;::value, GRunArgs&gt;::type" signature="std::enable_if&lt;std::is_same&lt;T, GRunArgs&gt;::value, GRunArgs&gt;::type deserialize(const std::vector&lt;char&gt; &amp;p)">
                    <parameter left="const std::vector&lt;char&gt; &amp;" right="" name="p" default=""/>
                </function>
                <class threadsafety="unspecified" name="KalmanParams" fullname="cv::gapi::KalmanParams" href="cv-gapi-kalmanparams.html" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="22">
                    <variable threadsafety="unspecified" name="controlMatrix" fullname="cv::gapi::KalmanParams::controlMatrix" href="cv-gapi-kalmanparams.html#controlMatrix-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="42" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="errorCov" fullname="cv::gapi::KalmanParams::errorCov" href="cv-gapi-kalmanparams.html#errorCov-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="29" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="measurementMatrix" fullname="cv::gapi::KalmanParams::measurementMatrix" href="cv-gapi-kalmanparams.html#measurementMatrix-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="36" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="measurementNoiseCov" fullname="cv::gapi::KalmanParams::measurementNoiseCov" href="cv-gapi-kalmanparams.html#measurementNoiseCov-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="40" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="processNoiseCov" fullname="cv::gapi::KalmanParams::processNoiseCov" href="cv-gapi-kalmanparams.html#processNoiseCov-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="38" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="state" fullname="cv::gapi::KalmanParams::state" href="cv-gapi-kalmanparams.html#state-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="27" type="Mat" static="false"/>
                    <variable threadsafety="unspecified" name="transitionMatrix" fullname="cv::gapi::KalmanParams::transitionMatrix" href="cv-gapi-kalmanparams.html#transitionMatrix-var" status="active" access="public" location="video.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/video.hpp" lineno="34" type="Mat" static="false"/>
                </class>
            </namespace>
            <namespace threadsafety="unspecified" name="gimpl" fullname="cv::gimpl" href="cv-gimpl.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="27">
                <namespace threadsafety="unspecified" name="render" fullname="cv::gimpl::render" href="cv-gimpl-render.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="32">
                    <namespace threadsafety="unspecified" name="ocv" fullname="cv::gimpl::render::ocv" href="cv-gimpl-render-ocv.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="34"/>
                </namespace>
            </namespace>
            <class threadsafety="unspecified" name="GCPUContext" fullname="cv::GCPUContext" href="cv-gcpucontext.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="91">
                <function threadsafety="unspecified" name="state" fullname="cv::GCPUContext::state" href="cv-gcpucontext.html#state" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GArg" signature="GArg state()"/>
                <function threadsafety="unspecified" name="outOpaqueR" fullname="cv::GCPUContext::outOpaqueR" href="cv-gcpucontext.html#outOpaqueR" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; outOpaqueR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="inArg" fullname="cv::GCPUContext::inArg" href="cv-gcpucontext.html#inArg" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; inArg(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="inMat" fullname="cv::GCPUContext::inMat" href="cv-gcpucontext.html#inMat" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const cv::Mat &amp;" signature="const cv::Mat &amp; inMat(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="inVal" fullname="cv::GCPUContext::inVal" href="cv-gcpucontext.html#inVal" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const cv::Scalar &amp;" signature="const cv::Scalar &amp; inVal(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="outMatR" fullname="cv::GCPUContext::outMatR" href="cv-gcpucontext.html#outMatR" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Mat &amp;" signature="cv::Mat &amp; outMatR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outFrame" fullname="cv::GCPUContext::outFrame" href="cv-gcpucontext.html#outFrame" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::MediaFrame &amp;" signature="cv::MediaFrame &amp; outFrame(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outValR" fullname="cv::GCPUContext::outValR" href="cv-gcpucontext.html#outValR" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="103" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Scalar &amp;" signature="cv::Scalar &amp; outValR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outOpaqueRef" fullname="cv::GCPUContext::outOpaqueRef" href="cv-gcpucontext.html#outOpaqueRef" status="active" access="protected" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::OpaqueRef &amp;" signature="detail::OpaqueRef &amp; outOpaqueRef(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outVecRef" fullname="cv::GCPUContext::outVecRef" href="cv-gcpucontext.html#outVecRef" status="active" access="protected" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::VectorRef &amp;" signature="detail::VectorRef &amp; outVecRef(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outVecR" fullname="cv::GCPUContext::outVecR" href="cv-gcpucontext.html#outVecR" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T&gt; &amp;" signature="std::vector&lt;T&gt; &amp; outVecR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_args" fullname="cv::GCPUContext::m_args" href="cv-gcpucontext.html#m_args-var" status="active" access="protected" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="123" type="std::vector&lt;GArg&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_results" fullname="cv::GCPUContext::m_results" href="cv-gcpucontext.html#m_results-var" status="active" access="protected" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="129" type="std::unordered_map&lt;std::size_t, GRunArgP&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_state" fullname="cv::GCPUContext::m_state" href="cv-gcpucontext.html#m_state-var" status="active" access="protected" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="124" type="GArg" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GCPUKernel" fullname="cv::GCPUKernel" href="cv-gcpukernel.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="135">
                <function threadsafety="unspecified" name="GCPUKernel" fullname="cv::GCPUKernel::GCPUKernel" href="cv-gcpukernel.html#GCPUKernel" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="144" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCPUKernel()"/>
                <function threadsafety="unspecified" name="GCPUKernel" fullname="cv::GCPUKernel::GCPUKernel" href="cv-gcpukernel.html#GCPUKernel-1" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="145" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCPUKernel(const RunF &amp;runF, const SetupF &amp;setupF)">
                    <parameter left="const RunF &amp;" right="" name="runF" default=""/>
                    <parameter left="const SetupF &amp;" right="" name="setupF" default="nullptr"/>
                </function>
                <variable threadsafety="unspecified" name="m_isStateful" fullname="cv::GCPUKernel::m_isStateful" href="cv-gcpukernel.html#m_isStateful-var" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="150" type="bool = false" static="false"/>
                <variable threadsafety="unspecified" name="m_runF" fullname="cv::GCPUKernel::m_runF" href="cv-gcpukernel.html#m_runF-var" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="147" type="RunF = nullptr" static="false"/>
                <variable threadsafety="unspecified" name="m_setupF" fullname="cv::GCPUKernel::m_setupF" href="cv-gcpukernel.html#m_setupF-var" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="148" type="SetupF = nullptr" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GCPUStKernelImpl" fullname="cv::GCPUStKernelImpl" href="cv-gcpustkernelimpl.html" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="469" bases="cv::detail::KernelTag">
                <function threadsafety="unspecified" name="kernel" fullname="cv::GCPUStKernelImpl::kernel" href="cv-gcpustkernelimpl.html#kernel" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="479" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::GCPUKernel" signature="cv::GCPUKernel kernel()"/>
                <function threadsafety="unspecified" name="backend" fullname="cv::GCPUStKernelImpl::backend" href="cv-gcpustkernelimpl.html#backend" status="active" access="public" location="gcpukernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/cpu/gcpukernel.hpp" lineno="478" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend()"/>
            </class>
            <class threadsafety="unspecified" name="GFluidKernel" fullname="cv::GFluidKernel" href="cv-gfluidkernel.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="45">
                <enum threadsafety="unspecified" name="Kind" fullname="cv::GFluidKernel::Kind" href="cv-gfluidkernel.html#Kind-enum" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="48">
                    <value name="Filter" value="0"/>
                    <value name="Resize" value="1"/>
                    <value name="YUV420toRGB" value="2"/>
                </enum>
                <function threadsafety="unspecified" name="GFluidKernel" fullname="cv::GFluidKernel::GFluidKernel" href="cv-gfluidkernel.html#GFluidKernel" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="74" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GFluidKernel()"/>
                <function threadsafety="unspecified" name="GFluidKernel" fullname="cv::GFluidKernel::GFluidKernel" href="cv-gfluidkernel.html#GFluidKernel-1" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GFluidKernel(Kind k, int l, bool scratch, const F &amp;f, const IS &amp;is, const RS &amp;rs, const B &amp;b, const GW &amp;win)">
                    <parameter left="Kind" right="" name="k" default=""/>
                    <parameter left="int" right="" name="l" default=""/>
                    <parameter left="bool" right="" name="scratch" default=""/>
                    <parameter left="const F &amp;" right="" name="f" default=""/>
                    <parameter left="const IS &amp;" right="" name="is" default=""/>
                    <parameter left="const RS &amp;" right="" name="rs" default=""/>
                    <parameter left="const B &amp;" right="" name="b" default=""/>
                    <parameter left="const GW &amp;" right="" name="win" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_b" fullname="cv::GFluidKernel::m_b" href="cv-gfluidkernel.html#m_b-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="92" type="const B" static="false"/>
                <variable threadsafety="unspecified" name="m_f" fullname="cv::GFluidKernel::m_f" href="cv-gfluidkernel.html#m_f-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="89" type="const F" static="false"/>
                <variable threadsafety="unspecified" name="m_gw" fullname="cv::GFluidKernel::m_gw" href="cv-gfluidkernel.html#m_gw-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="93" type="const GW" static="false"/>
                <variable threadsafety="unspecified" name="m_is" fullname="cv::GFluidKernel::m_is" href="cv-gfluidkernel.html#m_is-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="90" type="const IS" static="false"/>
                <variable threadsafety="unspecified" name="m_kind" fullname="cv::GFluidKernel::m_kind" href="cv-gfluidkernel.html#m_kind-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="85" type="Kind" static="false"/>
                <variable threadsafety="unspecified" name="m_lpi" fullname="cv::GFluidKernel::m_lpi" href="cv-gfluidkernel.html#m_lpi-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="86" type="const int =-1" static="false"/>
                <variable threadsafety="unspecified" name="m_rs" fullname="cv::GFluidKernel::m_rs" href="cv-gfluidkernel.html#m_rs-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="91" type="const RS" static="false"/>
                <variable threadsafety="unspecified" name="m_scratch" fullname="cv::GFluidKernel::m_scratch" href="cv-gfluidkernel.html#m_scratch-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="87" type="const bool = false" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GFluidKernelImpl" fullname="cv::GFluidKernelImpl" href="cv-gfluidkernelimpl.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="414" bases="cv::detail::KernelTag">
                <function threadsafety="unspecified" name="kernel" fullname="cv::GFluidKernelImpl::kernel" href="cv-gfluidkernelimpl.html#kernel" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="423" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="GFluidKernel" signature="GFluidKernel kernel()"/>
                <function threadsafety="unspecified" name="backend" fullname="cv::GFluidKernelImpl::backend" href="cv-gfluidkernelimpl.html#backend" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="432" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend()"/>
            </class>
            <class threadsafety="unspecified" name="GFluidOutputRois" fullname="cv::GFluidOutputRois" href="cv-gfluidoutputrois.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="109">
                <variable threadsafety="unspecified" name="rois" fullname="cv::GFluidOutputRois::rois" href="cv-gfluidoutputrois.html#rois-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="111" type="std::vector&lt;cv::Rect&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GFluidParallelFor" fullname="cv::GFluidParallelFor" href="cv-gfluidparallelfor.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="139">
                <variable threadsafety="unspecified" name="parallel_for" fullname="cv::GFluidParallelFor::parallel_for" href="cv-gfluidparallelfor.html#parallel_for-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="144" type="std::function&lt;void( std::size_t size, std::function&lt;void( std::size_t index ) &gt; ) &gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GFluidParallelOutputRois" fullname="cv::GFluidParallelOutputRois" href="cv-gfluidparalleloutputrois.html" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="120">
                <variable threadsafety="unspecified" name="parallel_rois" fullname="cv::GFluidParallelOutputRois::parallel_rois" href="cv-gfluidparalleloutputrois.html#parallel_rois-var" status="active" access="public" location="gfluidkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/fluid/gfluidkernel.hpp" lineno="122" type="std::vector&lt;GFluidOutputRois&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GArg" fullname="cv::GArg" href="cv-garg.html" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="46">
                <function threadsafety="unspecified" name="GArg" fullname="cv::GArg::GArg" href="cv-garg.html#GArg" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="49" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArg()"/>
                <function threadsafety="unspecified" name="GArg" fullname="cv::GArg::GArg" href="cv-garg.html#GArg-2" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="60" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArg(T &amp;&amp;t)">
                    <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                </function>
                <function threadsafety="unspecified" name="GArg" fullname="cv::GArg::GArg" href="cv-garg.html#GArg-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArg(const T &amp;t)">
                    <parameter left="const T &amp;" right="" name="t" default=""/>
                </function>
                <function threadsafety="unspecified" name="get" fullname="cv::GArg::get" href="cv-garg.html#get" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; get()"/>
                <function threadsafety="unspecified" name="unsafe_get" fullname="cv::GArg::unsafe_get" href="cv-garg.html#unsafe_get" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; unsafe_get()"/>
                <function threadsafety="unspecified" name="get" fullname="cv::GArg::get" href="cv-garg.html#get-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="72" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; get() const"/>
                <function threadsafety="unspecified" name="unsafe_get" fullname="cv::GArg::unsafe_get" href="cv-garg.html#unsafe_get-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="82" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; unsafe_get() const"/>
                <variable threadsafety="unspecified" name="kind" fullname="cv::GArg::kind" href="cv-garg.html#kind-var" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="87" type="detail::ArgKind = detail::ArgKind::OPAQUE_VAL" static="false"/>
                <variable threadsafety="unspecified" name="opaque_kind" fullname="cv::GArg::opaque_kind" href="cv-garg.html#opaque_kind-var" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="88" type="detail::OpaqueKind = detail::OpaqueKind::CV_UNKNOWN" static="false"/>
                <variable threadsafety="unspecified" name="value" fullname="cv::GArg::value" href="cv-garg.html#value-var" status="active" access="protected" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="91" type="util::any" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg" href="cv-grunarg.html" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="121">
                <function threadsafety="unspecified" name="operator=" fullname="cv::GRunArg::operator=" href="cv-grunarg.html#operator-eq-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="134" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArg &amp;" signature="GRunArg &amp; operator=(GRunArg &amp;&amp;arg)">
                    <parameter left="GRunArg &amp;&amp;" right="" name="arg" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cv::GRunArg::operator=" href="cv-grunarg.html#operator-eq" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="133" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GRunArg &amp;" signature="GRunArg &amp; operator=(const GRunArg &amp;arg)">
                    <parameter left="const GRunArg &amp;" right="" name="arg" default=""/>
                </function>
                <function threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg::GRunArg" href="cv-grunarg.html#GRunArg" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="129" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GRunArg()"/>
                <function threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg::GRunArg" href="cv-grunarg.html#GRunArg-4" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="145" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GRunArg(T &amp;&amp;t, const Meta &amp;m, std::enable_if&lt;detail::in_variant&lt;T, GRunArgBase&gt;::value, int&gt;::type )">
                    <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                    <parameter left="const Meta &amp;" right="" name="m" default="Meta{}"/>
                    <parameter left="std::enable_if&lt;detail::in_variant&lt;T, GRunArgBase&gt;::value, int&gt;::type" right="" name="" default="0"/>
                </function>
                <function threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg::GRunArg" href="cv-grunarg.html#GRunArg-3" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GRunArg(const T &amp;t, const Meta &amp;m, std::enable_if&lt;detail::in_variant&lt;T, GRunArgBase&gt;::value, int&gt;::type )">
                    <parameter left="const T &amp;" right="" name="t" default=""/>
                    <parameter left="const Meta &amp;" right="" name="m" default="Meta{}"/>
                    <parameter left="std::enable_if&lt;detail::in_variant&lt;T, GRunArgBase&gt;::value, int&gt;::type" right="" name="" default="0"/>
                </function>
                <function threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg::GRunArg" href="cv-grunarg.html#GRunArg-1" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="130" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GRunArg(const cv::GRunArg &amp;arg)">
                    <parameter left="const cv::GRunArg &amp;" right="" name="arg" default=""/>
                </function>
                <function threadsafety="unspecified" name="GRunArg" fullname="cv::GRunArg::GRunArg" href="cv-grunarg.html#GRunArg-2" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="131" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GRunArg(cv::GRunArg &amp;&amp;arg)">
                    <parameter left="cv::GRunArg &amp;&amp;" right="" name="arg" default=""/>
                </function>
                <variable threadsafety="unspecified" name="meta" fullname="cv::GRunArg::meta" href="cv-grunarg.html#meta-var" status="active" access="public" location="garg.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garg.hpp" lineno="125" type="Meta" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GArray" fullname="cv::GArray" href="cv-garray.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="337">
                <function threadsafety="unspecified" name="GArray" fullname="cv::GArray::GArray" href="cv-garray.html#GArray-2" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="348" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArray()"/>
                <function threadsafety="unspecified" name="GArray" fullname="cv::GArray::GArray" href="cv-garray.html#GArray" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="344" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArray(const std::vector&lt;HT&gt; &amp;v)">
                    <parameter left="const std::vector&lt;HT&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="GArray" fullname="cv::GArray::GArray" href="cv-garray.html#GArray-3" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="349" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArray(detail::GArrayU &amp;&amp;ref)">
                    <parameter left="detail::GArrayU &amp;&amp;" right="" name="ref" default=""/>
                </function>
                <function threadsafety="unspecified" name="GArray" fullname="cv::GArray::GArray" href="cv-garray.html#GArray-1" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="346" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GArray(std::vector&lt;HT&gt; &amp;&amp;v)">
                    <parameter left="std::vector&lt;HT&gt; &amp;&amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="VCtor" fullname="cv::GArray::VCtor" href="cv-garray.html#VCtor" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="357" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void VCtor(detail::VectorRef &amp;vref)">
                    <parameter left="detail::VectorRef &amp;" right="" name="vref" default=""/>
                </function>
                <function threadsafety="unspecified" name="putDetails" fullname="cv::GArray::putDetails" href="cv-garray.html#putDetails" status="active" access="private" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="362" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void putDetails()"/>
                <function threadsafety="unspecified" name="strip" fullname="cv::GArray::strip" href="cv-garray.html#strip" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="353" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::GArrayU" signature="detail::GArrayU strip() const"/>
            </class>
            <class threadsafety="unspecified" name="GArrayDesc" fullname="cv::GArrayDesc" href="cv-garraydesc.html" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="38">
                <function threadsafety="unspecified" name="operator==" fullname="cv::GArrayDesc::operator==" href="cv-garraydesc.html#operator-eq-eq" status="active" access="public" location="garray.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/garray.hpp" lineno="42" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const GArrayDesc &amp;) const">
                    <parameter left="const GArrayDesc &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="GCall" fullname="cv::GCall" href="cv-gcall.html" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="26">
                <function threadsafety="unspecified" name="yieldArray" fullname="cv::GCall::yieldArray" href="cv-gcall.html#yieldArray" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GArray&lt;T&gt;" signature="GArray&lt;T&gt; yieldArray(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="pass" fullname="cv::GCall::pass" href="cv-gcall.html#pass" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GCall &amp;" signature="GCall &amp; pass(Ts &amp;&amp;... args)">
                    <parameter left="Ts &amp;&amp;..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="GCall" fullname="cv::GCall::GCall" href="cv-gcall.html#GCall" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="31" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCall(const GKernel &amp;k)">
                    <parameter left="const GKernel &amp;" right="" name="k" default=""/>
                </function>
                <function threadsafety="unspecified" name="yieldFrame" fullname="cv::GCall::yieldFrame" href="cv-gcall.html#yieldFrame" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GFrame" signature="GFrame yieldFrame(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="kernel" fullname="cv::GCall::kernel" href="cv-gcall.html#kernel" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GKernel &amp;" signature="GKernel &amp; kernel()"/>
                <function threadsafety="unspecified" name="yield" fullname="cv::GCall::yield" href="cv-gcall.html#yield" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMat" signature="GMat yield(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="yieldP" fullname="cv::GCall::yieldP" href="cv-gcall.html#yieldP" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatP" signature="GMatP yieldP(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="yieldOpaque" fullname="cv::GCall::yieldOpaque" href="cv-gcall.html#yieldOpaque" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOpaque&lt;T&gt;" signature="GOpaque&lt;T&gt; yieldOpaque(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="yieldScalar" fullname="cv::GCall::yieldScalar" href="cv-gcall.html#yieldScalar" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GScalar" signature="GScalar yieldScalar(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="priv" fullname="cv::GCall::priv" href="cv-gcall.html#priv" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Priv &amp;" signature="Priv &amp; priv()"/>
                <function threadsafety="unspecified" name="params" fullname="cv::GCall::params" href="cv-gcall.html#params" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="64" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::util::any &amp;" signature="cv::util::any &amp; params()"/>
                <function threadsafety="unspecified" name="yieldArray" fullname="cv::GCall::yieldArray" href="cv-gcall.html#yieldArray-1" status="active" access="protected" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::GArrayU" signature="detail::GArrayU yieldArray(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="yieldOpaque" fullname="cv::GCall::yieldOpaque" href="cv-gcall.html#yieldOpaque-1" status="active" access="protected" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::GOpaqueU" signature="detail::GOpaqueU yieldOpaque(int output)">
                    <parameter left="int" right="" name="output" default="0"/>
                </function>
                <function threadsafety="unspecified" name="setArgs" fullname="cv::GCall::setArgs" href="cv-gcall.html#setArgs" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="66" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setArgs(std::vector&lt;GArg&gt; &amp;&amp;args)">
                    <parameter left="std::vector&lt;GArg&gt; &amp;&amp;" right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="~GCall" fullname="cv::GCall::~GCall" href="cv-gcall.html#dtor.GCall" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="32" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~GCall()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GCall::priv" href="cv-gcall.html#priv-1" status="active" access="public" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="59" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Priv &amp;" signature="const Priv &amp; priv() const"/>
                <variable threadsafety="unspecified" name="m_priv" fullname="cv::GCall::m_priv" href="cv-gcall.html#m_priv-var" status="active" access="protected" location="gcall.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcall.hpp" lineno="69" type="std::shared_ptr&lt;Priv&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GCompileArg" fullname="cv::GCompileArg" href="cv-gcompilearg.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="154">
                <function threadsafety="unspecified" name="GCompileArg" fullname="cv::GCompileArg::GCompileArg" href="cv-gcompilearg.html#GCompileArg" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="158" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="GCompileArg() = default"/>
                <function threadsafety="unspecified" name="GCompileArg" fullname="cv::GCompileArg::GCompileArg" href="cv-gcompilearg.html#GCompileArg-1" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="164" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCompileArg(T &amp;&amp;t)">
                    <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                </function>
                <function threadsafety="unspecified" name="get" fullname="cv::GCompileArg::get" href="cv-gcompilearg.html#get" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; get()"/>
                <function threadsafety="unspecified" name="get" fullname="cv::GCompileArg::get" href="cv-gcompilearg.html#get-1" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="178" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; get() const"/>
                <function threadsafety="unspecified" name="serialize" fullname="cv::GCompileArg::serialize" href="cv-gcompilearg.html#serialize" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="183" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(cv::gapi::s11n::IOStream &amp;os) const">
                    <parameter left="cv::gapi::s11n::IOStream &amp;" right="" name="os" default=""/>
                </function>
                <variable threadsafety="unspecified" name="tag" fullname="cv::GCompileArg::tag" href="cv-gcompilearg.html#tag-var" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="160" type="std::string" static="false"/>
            </class>
            <class threadsafety="unspecified" name="graph_dump_path" fullname="cv::graph_dump_path" href="cv-graph-dump-path.html" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="248">
                <variable threadsafety="unspecified" name="m_dump_path" fullname="cv::graph_dump_path::m_dump_path" href="cv-graph-dump-path.html#m_dump_path-var" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="250" type="std::string" static="false"/>
            </class>
            <enum threadsafety="unspecified" name="GShape" fullname="cv::GShape" href="cv.html#GShape-enum" status="active" access="public" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="91">
                <value name="GMAT" value="0"/>
                <value name="GSCALAR" value="1"/>
                <value name="GARRAY" value="2"/>
                <value name="GOPAQUE" value="3"/>
                <value name="GFRAME" value="4"/>
            </enum>
            <class threadsafety="unspecified" name="GCompiled" fullname="cv::GCompiled" href="cv-gcompiled.html" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="66">
                <function threadsafety="unspecified" name="GCompiled" fullname="cv::GCompiled::GCompiled" href="cv-gcompiled.html#GCompiled" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GCompiled()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GCompiled::priv" href="cv-gcompiled.html#priv" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Priv &amp;" signature="Priv &amp; priv()"/>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(GRunArgs &amp;&amp;ins, GRunArgsP &amp;&amp;outs)">
                    <parameter left="GRunArgs &amp;&amp;" right="" name="ins" default=""/>
                    <parameter left="GRunArgsP &amp;&amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29-5" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="154" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(const std::vector&lt;cv::Mat&gt; &amp;ins, const std::vector&lt;cv::Mat&gt; &amp;outs)">
                    <parameter left="const std::vector&lt;cv::Mat&gt; &amp;" right="" name="ins" default=""/>
                    <parameter left="const std::vector&lt;cv::Mat&gt; &amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29-1" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(cv::Mat in, cv::Mat &amp;out)">
                    <parameter left="cv::Mat" right="" name="in" default=""/>
                    <parameter left="cv::Mat &amp;" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29-2" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(cv::Mat in, cv::Scalar &amp;out)">
                    <parameter left="cv::Mat" right="" name="in" default=""/>
                    <parameter left="cv::Scalar &amp;" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29-3" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="128" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(cv::Mat in1, cv::Mat in2, cv::Mat &amp;out)">
                    <parameter left="cv::Mat" right="" name="in1" default=""/>
                    <parameter left="cv::Mat" right="" name="in2" default=""/>
                    <parameter left="cv::Mat &amp;" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::GCompiled::operator()" href="cv-gcompiled.html#operator-28-29-4" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void operator()(cv::Mat in1, cv::Mat in2, cv::Scalar &amp;out)">
                    <parameter left="cv::Mat" right="" name="in1" default=""/>
                    <parameter left="cv::Mat" right="" name="in2" default=""/>
                    <parameter left="cv::Scalar &amp;" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="prepareForNewStream" fullname="cv::GCompiled::prepareForNewStream" href="cv-gcompiled.html#prepareForNewStream" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="222" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void prepareForNewStream()"/>
                <function threadsafety="unspecified" name="reshape" fullname="cv::GCompiled::reshape" href="cv-gcompiled.html#reshape" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="209" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reshape(const GMetaArgs &amp;inMetas, const GCompileArgs &amp;args)">
                    <parameter left="const GMetaArgs &amp;" right="" name="inMetas" default=""/>
                    <parameter left="const GCompileArgs &amp;" right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="canReshape" fullname="cv::GCompiled::canReshape" href="cv-gcompiled.html#canReshape" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="196" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool canReshape() const"/>
                <function threadsafety="unspecified" name="metas" fullname="cv::GCompiled::metas" href="cv-gcompiled.html#metas" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMetaArgs &amp;" signature="const GMetaArgs &amp; metas() const"/>
                <function threadsafety="unspecified" name="outMetas" fullname="cv::GCompiled::outMetas" href="cv-gcompiled.html#outMetas" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="189" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMetaArgs &amp;" signature="const GMetaArgs &amp; outMetas() const"/>
                <function threadsafety="unspecified" name="operator bool" fullname="cv::GCompiled::operator bool" href="cv-gcompiled.html#operator-bool" status="active" access="public" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="165" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator bool() const"/>
                <variable threadsafety="unspecified" name="m_priv" fullname="cv::GCompiled::m_priv" href="cv-gcompiled.html#m_priv-var" status="active" access="protected" location="gcompiled.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcompiled.hpp" lineno="226" type="std::shared_ptr&lt;Priv&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GComputation" fullname="cv::GComputation" href="cv-gcomputation.html" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="119">
                <typedef threadsafety="unspecified" name="Generator" fullname="cv::GComputation::Generator" href="cv-gcomputation.html#Generator-typedef" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="123"/>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-2" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="173" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GComputation(GMat in, GMat out)">
                    <parameter left="GMat" right="" name="in" default=""/>
                    <parameter left="GMat" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-3" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="182" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GComputation(GMat in, GScalar out)">
                    <parameter left="GMat" right="" name="in" default=""/>
                    <parameter left="GScalar" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-4" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="192" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GComputation(GMat in1, GMat in2, GMat out)">
                    <parameter left="GMat" right="" name="in1" default=""/>
                    <parameter left="GMat" right="" name="in2" default=""/>
                    <parameter left="GMat" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-1" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="162" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GComputation(GProtoInputArgs &amp;&amp;ins, GProtoOutputArgs &amp;&amp;outs)">
                    <parameter left="GProtoInputArgs &amp;&amp;" right="" name="ins" default=""/>
                    <parameter left="GProtoOutputArgs &amp;&amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="compile" fullname="cv::GComputation::compile" href="cv-gcomputation.html#compile" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="358" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GCompiled" signature="GCompiled compile(GMetaArgs &amp;&amp;in_metas, GCompileArgs &amp;&amp;args)">
                    <parameter left="GMetaArgs &amp;&amp;" right="" name="in_metas" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="compile" fullname="cv::GComputation::compile" href="cv-gcomputation.html#compile-1" status="active" access="protected" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="519" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GCompiled" signature="GCompiled compile(const std::tuple&lt;Ts...&gt; &amp;meta_and_compile_args, detail::Seq&lt;IIs...&gt; )">
                    <parameter left="const std::tuple&lt;Ts...&gt; &amp;" right="" name="meta_and_compile_args" default=""/>
                    <parameter left="detail::Seq&lt;IIs...&gt;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-5" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GComputation(GMat in1, GMat in2, GScalar out)">
                    <parameter left="GMat" right="" name="in1" default=""/>
                    <parameter left="GMat" right="" name="in2" default=""/>
                    <parameter left="GScalar" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="143" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GComputation(const Generator &amp;gen)">
                    <parameter left="const Generator &amp;" right="" name="gen" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-6" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="218" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GComputation(const std::vector&lt;GMat&gt; &amp;ins, const std::vector&lt;GMat&gt; &amp;outs)">
                    <parameter left="const std::vector&lt;GMat&gt; &amp;" right="" name="ins" default=""/>
                    <parameter left="const std::vector&lt;GMat&gt; &amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="GComputation" fullname="cv::GComputation::GComputation" href="cv-gcomputation.html#GComputation-7" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="510" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GComputation(cv::gapi::s11n::IIStream &amp;)">
                    <parameter left="cv::gapi::s11n::IIStream &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="compileStreaming" fullname="cv::GComputation::compileStreaming" href="cv-gcomputation.html#compileStreaming" status="active" access="protected" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="526" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GStreamingCompiled" signature="GStreamingCompiled compileStreaming(const std::tuple&lt;Ts...&gt; &amp;meta_and_compile_args, detail::Seq&lt;IIs...&gt; )">
                    <parameter left="const std::tuple&lt;Ts...&gt; &amp;" right="" name="meta_and_compile_args" default=""/>
                    <parameter left="detail::Seq&lt;IIs...&gt;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="258" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(GRunArgs &amp;&amp;ins, GRunArgsP &amp;&amp;outs, GCompileArgs &amp;&amp;args)">
                    <parameter left="GRunArgs &amp;&amp;" right="" name="ins" default=""/>
                    <parameter left="GRunArgsP &amp;&amp;" right="" name="outs" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-1" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="264" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(const std::vector&lt;cv::Mat&gt; &amp;ins, const std::vector&lt;cv::Mat&gt; &amp;outs, GCompileArgs &amp;&amp;args)">
                    <parameter left="const std::vector&lt;cv::Mat&gt; &amp;" right="" name="ins" default=""/>
                    <parameter left="const std::vector&lt;cv::Mat&gt; &amp;" right="" name="outs" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-6" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="331" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(const std::vector&lt;cv::Mat&gt; &amp;ins, std::vector&lt;cv::Mat&gt; &amp;outs, GCompileArgs &amp;&amp;args)">
                    <parameter left="const std::vector&lt;cv::Mat&gt; &amp;" right="" name="ins" default=""/>
                    <parameter left="std::vector&lt;cv::Mat&gt; &amp;" right="" name="outs" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-2" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="279" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(cv::Mat in, cv::Mat &amp;out, GCompileArgs &amp;&amp;args)">
                    <parameter left="cv::Mat" right="" name="in" default=""/>
                    <parameter left="cv::Mat &amp;" right="" name="out" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-3" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="290" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(cv::Mat in, cv::Scalar &amp;out, GCompileArgs &amp;&amp;args)">
                    <parameter left="cv::Mat" right="" name="in" default=""/>
                    <parameter left="cv::Scalar &amp;" right="" name="out" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-4" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="302" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(cv::Mat in1, cv::Mat in2, cv::Mat &amp;out, GCompileArgs &amp;&amp;args)">
                    <parameter left="cv::Mat" right="" name="in1" default=""/>
                    <parameter left="cv::Mat" right="" name="in2" default=""/>
                    <parameter left="cv::Mat &amp;" right="" name="out" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GComputation::apply" href="cv-gcomputation.html#apply-5" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="314" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(cv::Mat in1, cv::Mat in2, cv::Scalar &amp;out, GCompileArgs &amp;&amp;args)">
                    <parameter left="cv::Mat" right="" name="in1" default=""/>
                    <parameter left="cv::Mat" right="" name="in2" default=""/>
                    <parameter left="cv::Scalar &amp;" right="" name="out" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default="{}"/>
                </function>
                <function threadsafety="unspecified" name="recompile" fullname="cv::GComputation::recompile" href="cv-gcomputation.html#recompile" status="active" access="protected" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="532" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void recompile(GMetaArgs &amp;&amp;in_metas, GCompileArgs &amp;&amp;args)">
                    <parameter left="GMetaArgs &amp;&amp;" right="" name="in_metas" default=""/>
                    <parameter left="GCompileArgs &amp;&amp;" right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="priv" fullname="cv::GComputation::priv" href="cv-gcomputation.html#priv" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="508" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Priv &amp;" signature="const Priv &amp; priv() const"/>
                <function threadsafety="unspecified" name="serialize" fullname="cv::GComputation::serialize" href="cv-gcomputation.html#serialize" status="active" access="public" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="512" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(cv::gapi::s11n::IOStream &amp;) const">
                    <parameter left="cv::gapi::s11n::IOStream &amp;" right="" name="" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_priv" fullname="cv::GComputation::m_priv" href="cv-gcomputation.html#m_priv-var" status="active" access="protected" location="gcomputation.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcomputation.hpp" lineno="534" type="std::shared_ptr&lt;Priv&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GFrame" fullname="cv::GFrame" href="cv-gframe.html" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="31">
                <function threadsafety="unspecified" name="GFrame" fullname="cv::GFrame::GFrame" href="cv-gframe.html#GFrame" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GFrame()"/>
                <function threadsafety="unspecified" name="GFrame" fullname="cv::GFrame::GFrame" href="cv-gframe.html#GFrame-1" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="35" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GFrame(const GNode &amp;n, std::size_t out)">
                    <parameter left="const GNode &amp;" right="" name="n" default=""/>
                    <parameter left="std::size_t" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="priv" fullname="cv::GFrame::priv" href="cv-gframe.html#priv" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOrigin &amp;" signature="GOrigin &amp; priv()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GFrame::priv" href="cv-gframe.html#priv-1" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="38" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GOrigin &amp;" signature="const GOrigin &amp; priv() const"/>
            </class>
            <class threadsafety="unspecified" name="GFrameDesc" fullname="cv::GFrameDesc" href="cv-gframedesc.html" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="55">
                <function threadsafety="unspecified" name="operator==" fullname="cv::GFrameDesc::operator==" href="cv-gframedesc.html#operator-eq-eq" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const GFrameDesc &amp;) const">
                    <parameter left="const GFrameDesc &amp;" right="" name="" default=""/>
                </function>
                <variable threadsafety="unspecified" name="fmt" fullname="cv::GFrameDesc::fmt" href="cv-gframedesc.html#fmt-var" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="57" type="MediaFormat" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::GFrameDesc::size" href="cv-gframedesc.html#size-var" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="58" type="cv::Size" static="false"/>
            </class>
            <enum threadsafety="unspecified" name="MediaFormat" fullname="cv::MediaFormat" href="cv.html#MediaFormat-enum" status="active" access="public" location="gframe.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gframe.hpp" lineno="45">
                <value name="BGR" value="0"/>
                <value name="NV12" value="1"/>
            </enum>
            <class threadsafety="unspecified" name="GKernel" fullname="cv::GKernel" href="cv-gkernel.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="43">
                <variable threadsafety="unspecified" name="inKinds" fullname="cv::GKernel::inKinds" href="cv-gkernel.html#inKinds-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="51" type="GKinds" static="false"/>
                <variable threadsafety="unspecified" name="name" fullname="cv::GKernel::name" href="cv-gkernel.html#name-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="47" type="std::string" static="false"/>
                <variable threadsafety="unspecified" name="outCtors" fullname="cv::GKernel::outCtors" href="cv-gkernel.html#outCtors-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="52" type="GCtors" static="false"/>
                <variable threadsafety="unspecified" name="outMeta" fullname="cv::GKernel::outMeta" href="cv-gkernel.html#outMeta-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="49" type="M" static="false"/>
                <variable threadsafety="unspecified" name="outShapes" fullname="cv::GKernel::outShapes" href="cv-gkernel.html#outShapes-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="50" type="GShapes" static="false"/>
                <variable threadsafety="unspecified" name="tag" fullname="cv::GKernel::tag" href="cv-gkernel.html#tag-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="48" type="std::string" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GKernelImpl" fullname="cv::GKernelImpl" href="cv-gkernelimpl.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="58">
                <variable threadsafety="unspecified" name="opaque" fullname="cv::GKernelImpl::opaque" href="cv-gkernelimpl.html#opaque-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="60" type="util::any" static="false"/>
                <variable threadsafety="unspecified" name="outMeta" fullname="cv::GKernelImpl::outMeta" href="cv-gkernelimpl.html#outMeta-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="61" type="GKernel::M" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GTypeInfo" fullname="cv::GTypeInfo" href="cv-gtypeinfo.html" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="29">
                <variable threadsafety="unspecified" name="kind" fullname="cv::GTypeInfo::kind" href="cv-gtypeinfo.html#kind-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="32" type="cv::detail::OpaqueKind" static="false"/>
                <variable threadsafety="unspecified" name="shape" fullname="cv::GTypeInfo::shape" href="cv-gtypeinfo.html#shape-var" status="active" access="public" location="gkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gkernel.hpp" lineno="31" type="GShape" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GMat" fullname="cv::GMat" href="cv-gmat.html" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="49">
                <function threadsafety="unspecified" name="GMat" fullname="cv::GMat::GMat" href="cv-gmat.html#GMat" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="52" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GMat()"/>
                <function threadsafety="unspecified" name="GMat" fullname="cv::GMat::GMat" href="cv-gmat.html#GMat-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="53" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GMat(const GNode &amp;n, std::size_t out)">
                    <parameter left="const GNode &amp;" right="" name="n" default=""/>
                    <parameter left="std::size_t" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="priv" fullname="cv::GMat::priv" href="cv-gmat.html#priv" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOrigin &amp;" signature="GOrigin &amp; priv()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GMat::priv" href="cv-gmat.html#priv-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GOrigin &amp;" signature="const GOrigin &amp; priv() const"/>
            </class>
            <class threadsafety="unspecified" name="GMatDesc" fullname="cv::GMatDesc" href="cv-gmatdesc.html" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="76">
                <function threadsafety="unspecified" name="GMatDesc" fullname="cv::GMatDesc::GMatDesc" href="cv-gmatdesc.html#GMatDesc-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="88" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GMatDesc(int d, const std::vector&lt;int&gt; &amp;dd)">
                    <parameter left="int" right="" name="d" default=""/>
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="dd" default=""/>
                </function>
                <function threadsafety="unspecified" name="GMatDesc" fullname="cv::GMatDesc::GMatDesc" href="cv-gmatdesc.html#GMatDesc" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="85" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GMatDesc(int d, int c, cv::Size s, bool p)">
                    <parameter left="int" right="" name="d" default=""/>
                    <parameter left="int" right="" name="c" default=""/>
                    <parameter left="cv::Size" right="" name="s" default=""/>
                    <parameter left="bool" right="" name="p" default="false"/>
                </function>
                <function threadsafety="unspecified" name="asInterleaved" fullname="cv::GMatDesc::asInterleaved" href="cv-gmatdesc.html#asInterleaved" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="195" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc asInterleaved() const"/>
                <function threadsafety="unspecified" name="asPlanar" fullname="cv::GMatDesc::asPlanar" href="cv-gmatdesc.html#asPlanar" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="169" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc asPlanar() const"/>
                <function threadsafety="unspecified" name="asPlanar" fullname="cv::GMatDesc::asPlanar" href="cv-gmatdesc.html#asPlanar-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="180" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc asPlanar(int planes) const">
                    <parameter left="int" right="" name="planes" default=""/>
                </function>
                <function threadsafety="unspecified" name="withDepth" fullname="cv::GMatDesc::withDepth" href="cv-gmatdesc.html#withDepth" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="147" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc withDepth(int ddepth) const">
                    <parameter left="int" right="" name="ddepth" default=""/>
                </function>
                <function threadsafety="unspecified" name="withSize" fullname="cv::GMatDesc::withSize" href="cv-gmatdesc.html#withSize" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="138" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc withSize(cv::Size sz) const">
                    <parameter left="cv::Size" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="withSizeDelta" fullname="cv::GMatDesc::withSizeDelta" href="cv-gmatdesc.html#withSizeDelta" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="123" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc withSizeDelta(cv::Size delta) const">
                    <parameter left="cv::Size" right="" name="delta" default=""/>
                </function>
                <function threadsafety="unspecified" name="withSizeDelta" fullname="cv::GMatDesc::withSizeDelta" href="cv-gmatdesc.html#withSizeDelta-1" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="133" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc withSizeDelta(int dx, int dy) const">
                    <parameter left="int" right="" name="dx" default=""/>
                    <parameter left="int" right="" name="dy" default=""/>
                </function>
                <function threadsafety="unspecified" name="withType" fullname="cv::GMatDesc::withType" href="cv-gmatdesc.html#withType" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="158" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc withType(int ddepth, int dchan) const">
                    <parameter left="int" right="" name="ddepth" default=""/>
                    <parameter left="int" right="" name="dchan" default=""/>
                </function>
                <function threadsafety="unspecified" name="canDescribe" fullname="cv::GMatDesc::canDescribe" href="cv-gmatdesc.html#canDescribe" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="118" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool canDescribe(const cv::RMat &amp;mat) const">
                    <parameter left="const cv::RMat &amp;" right="" name="mat" default=""/>
                </function>
                <variable threadsafety="unspecified" name="chan" fullname="cv::GMatDesc::chan" href="cv-gmatdesc.html#chan-var" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="80" type="int" static="false"/>
                <variable threadsafety="unspecified" name="depth" fullname="cv::GMatDesc::depth" href="cv-gmatdesc.html#depth-var" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="79" type="int" static="false"/>
                <variable threadsafety="unspecified" name="dims" fullname="cv::GMatDesc::dims" href="cv-gmatdesc.html#dims-var" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="83" type="std::vector&lt;int&gt;" static="false"/>
                <variable threadsafety="unspecified" name="planar" fullname="cv::GMatDesc::planar" href="cv-gmatdesc.html#planar-var" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="82" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="size" fullname="cv::GMatDesc::size" href="cv-gmatdesc.html#size-var" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="81" type="cv::Size" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GMatP" fullname="cv::GMatP" href="cv-gmatp.html" status="active" access="public" location="gmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gmat.hpp" lineno="62" bases="cv::GMat"/>
            <class threadsafety="unspecified" name="GOpaque" fullname="cv::GOpaque" href="cv-gopaque.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="308">
                <function threadsafety="unspecified" name="GOpaque" fullname="cv::GOpaque::GOpaque" href="cv-gopaque.html#GOpaque" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="315" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOpaque()"/>
                <function threadsafety="unspecified" name="GOpaque" fullname="cv::GOpaque::GOpaque" href="cv-gopaque.html#GOpaque-1" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="316" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOpaque(detail::GOpaqueU &amp;&amp;ref)">
                    <parameter left="detail::GOpaqueU &amp;&amp;" right="" name="ref" default=""/>
                </function>
                <function threadsafety="unspecified" name="Ctor" fullname="cv::GOpaque::Ctor" href="cv-gopaque.html#Ctor" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="324" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void Ctor(detail::OpaqueRef &amp;ref)">
                    <parameter left="detail::OpaqueRef &amp;" right="" name="ref" default=""/>
                </function>
                <function threadsafety="unspecified" name="putDetails" fullname="cv::GOpaque::putDetails" href="cv-gopaque.html#putDetails" status="active" access="private" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="328" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void putDetails()"/>
                <function threadsafety="unspecified" name="strip" fullname="cv::GOpaque::strip" href="cv-gopaque.html#strip" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="320" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::GOpaqueU" signature="detail::GOpaqueU strip() const"/>
            </class>
            <class threadsafety="unspecified" name="GOpaqueDesc" fullname="cv::GOpaqueDesc" href="cv-gopaquedesc.html" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="36">
                <function threadsafety="unspecified" name="operator==" fullname="cv::GOpaqueDesc::operator==" href="cv-gopaquedesc.html#operator-eq-eq" status="active" access="public" location="gopaque.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gopaque.hpp" lineno="40" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const GOpaqueDesc &amp;) const">
                    <parameter left="const GOpaqueDesc &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="GIOProtoArgs" fullname="cv::GIOProtoArgs" href="cv-gioprotoargs.html" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="57">
                <function threadsafety="unspecified" name="GIOProtoArgs" fullname="cv::GIOProtoArgs::GIOProtoArgs" href="cv-gioprotoargs.html#GIOProtoArgs" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="61" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="GIOProtoArgs() = default"/>
                <function threadsafety="unspecified" name="GIOProtoArgs" fullname="cv::GIOProtoArgs::GIOProtoArgs" href="cv-gioprotoargs.html#GIOProtoArgs-2" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="63" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GIOProtoArgs(GProtoArgs &amp;&amp;args)">
                    <parameter left="GProtoArgs &amp;&amp;" right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="GIOProtoArgs" fullname="cv::GIOProtoArgs::GIOProtoArgs" href="cv-gioprotoargs.html#GIOProtoArgs-1" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GIOProtoArgs(const GProtoArgs &amp;args)">
                    <parameter left="const GProtoArgs &amp;" right="" name="args" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_args" fullname="cv::GIOProtoArgs::m_args" href="cv-gioprotoargs.html#m_args-var" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="65" type="GProtoArgs" static="false"/>
            </class>
            <class threadsafety="unspecified" name="In_Tag" fullname="cv::In_Tag" href="cv-in-tag.html" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="89"/>
            <class threadsafety="unspecified" name="Out_Tag" fullname="cv::Out_Tag" href="cv-out-tag.html" status="active" access="public" location="gproto.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gproto.hpp" lineno="90"/>
            <class threadsafety="unspecified" name="GScalar" fullname="cv::GScalar" href="cv-gscalar.html" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="29">
                <function threadsafety="unspecified" name="GScalar" fullname="cv::GScalar::GScalar" href="cv-gscalar.html#GScalar" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="32" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GScalar()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GScalar::priv" href="cv-gscalar.html#priv" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GOrigin &amp;" signature="GOrigin &amp; priv()"/>
                <function threadsafety="unspecified" name="GScalar" fullname="cv::GScalar::GScalar" href="cv-gscalar.html#GScalar-4" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="37" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GScalar(const GNode &amp;n, std::size_t out)">
                    <parameter left="const GNode &amp;" right="" name="n" default=""/>
                    <parameter left="std::size_t" right="" name="out" default=""/>
                </function>
                <function threadsafety="unspecified" name="GScalar" fullname="cv::GScalar::GScalar" href="cv-gscalar.html#GScalar-1" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="33" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GScalar(const cv::Scalar &amp;s)">
                    <parameter left="const cv::Scalar &amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="GScalar" fullname="cv::GScalar::GScalar" href="cv-gscalar.html#GScalar-2" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GScalar(cv::Scalar &amp;&amp;s)">
                    <parameter left="cv::Scalar &amp;&amp;" right="" name="s" default=""/>
                </function>
                <function threadsafety="unspecified" name="GScalar" fullname="cv::GScalar::GScalar" href="cv-gscalar.html#GScalar-3" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GScalar(double v0)">
                    <parameter left="double" right="" name="v0" default=""/>
                </function>
                <function threadsafety="unspecified" name="priv" fullname="cv::GScalar::priv" href="cv-gscalar.html#priv-1" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="40" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GOrigin &amp;" signature="const GOrigin &amp; priv() const"/>
            </class>
            <class threadsafety="unspecified" name="GScalarDesc" fullname="cv::GScalarDesc" href="cv-gscalardesc.html" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="52">
                <function threadsafety="unspecified" name="operator!=" fullname="cv::GScalarDesc::operator!=" href="cv-gscalardesc.html#operator-not-eq" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="61" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const GScalarDesc &amp;rhs) const">
                    <parameter left="const GScalarDesc &amp;" right="" name="rhs" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::GScalarDesc::operator==" href="cv-gscalardesc.html#operator-eq-eq" status="active" access="public" location="gscalar.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gscalar.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const GScalarDesc &amp;) const">
                    <parameter left="const GScalarDesc &amp;" right="" name="" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="GStreamingCompiled" fullname="cv::GStreamingCompiled" href="cv-gstreamingcompiled.html" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="136">
                <function threadsafety="unspecified" name="GStreamingCompiled" fullname="cv::GStreamingCompiled::GStreamingCompiled" href="cv-gstreamingcompiled.html#GStreamingCompiled" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="140" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GStreamingCompiled()"/>
                <function threadsafety="unspecified" name="priv" fullname="cv::GStreamingCompiled::priv" href="cv-gstreamingcompiled.html#priv" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="331" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Priv &amp;" signature="Priv &amp; priv()"/>
                <function threadsafety="unspecified" name="pull" fullname="cv::GStreamingCompiled::pull" href="cv-gstreamingcompiled.html#pull-1" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="292" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool pull(cv::GOptRunArgsP &amp;&amp;outs)">
                    <parameter left="cv::GOptRunArgsP &amp;&amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="pull" fullname="cv::GStreamingCompiled::pull" href="cv-gstreamingcompiled.html#pull" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="251" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool pull(cv::GRunArgsP &amp;&amp;outs)">
                    <parameter left="cv::GRunArgsP &amp;&amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="try_pull" fullname="cv::GStreamingCompiled::try_pull" href="cv-gstreamingcompiled.html#try_pull" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="306" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool try_pull(cv::GRunArgsP &amp;&amp;outs)">
                    <parameter left="cv::GRunArgsP &amp;&amp;" right="" name="outs" default=""/>
                </function>
                <function threadsafety="unspecified" name="setSource" fullname="cv::GStreamingCompiled::setSource" href="cv-gstreamingcompiled.html#setSource" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="210" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSource(Args &amp;&amp;... args)">
                    <parameter left="Args &amp;&amp;..." right="" name="args" default=""/>
                </function>
                <function threadsafety="unspecified" name="metas" fullname="cv::GStreamingCompiled::metas" href="cv-gstreamingcompiled.html#metas" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="349" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMetaArgs &amp;" signature="const GMetaArgs &amp; metas() const"/>
                <function threadsafety="unspecified" name="outMetas" fullname="cv::GStreamingCompiled::outMetas" href="cv-gstreamingcompiled.html#outMetas" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="362" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const GMetaArgs &amp;" signature="const GMetaArgs &amp; outMetas() const"/>
                <function threadsafety="unspecified" name="operator bool" fullname="cv::GStreamingCompiled::operator bool" href="cv-gstreamingcompiled.html#operator-bool" status="active" access="public" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="338" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="operator bool() const"/>
                <variable threadsafety="unspecified" name="m_priv" fullname="cv::GStreamingCompiled::m_priv" href="cv-gstreamingcompiled.html#m_priv-var" status="active" access="protected" location="gstreaming.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gstreaming.hpp" lineno="366" type="std::shared_ptr&lt;Priv&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GTransform" fullname="cv::GTransform" href="cv-gtransform.html" status="active" access="public" location="gtransform.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtransform.hpp" lineno="24">
                <function threadsafety="unspecified" name="GTransform" fullname="cv::GTransform::GTransform" href="cv-gtransform.html#GTransform" status="active" access="public" location="gtransform.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtransform.hpp" lineno="34" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GTransform(const std::string &amp;d, const F &amp;p, const F &amp;s)">
                    <parameter left="const std::string &amp;" right="" name="d" default=""/>
                    <parameter left="const F &amp;" right="" name="p" default=""/>
                    <parameter left="const F &amp;" right="" name="s" default=""/>
                </function>
                <variable threadsafety="unspecified" name="description" fullname="cv::GTransform::description" href="cv-gtransform.html#description-var" status="active" access="public" location="gtransform.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtransform.hpp" lineno="30" type="std::string" static="false"/>
                <variable threadsafety="unspecified" name="pattern" fullname="cv::GTransform::pattern" href="cv-gtransform.html#pattern-var" status="active" access="public" location="gtransform.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtransform.hpp" lineno="31" type="F" static="false"/>
                <variable threadsafety="unspecified" name="substitute" fullname="cv::GTransform::substitute" href="cv-gtransform.html#substitute-var" status="active" access="public" location="gtransform.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gtransform.hpp" lineno="32" type="F" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GInfer" fullname="cv::GInfer" href="cv-ginfer.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="249" bases="cv::GInferBase"/>
            <class threadsafety="unspecified" name="GInferBase" fullname="cv::GInferBase" href="cv-ginferbase.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="160"/>
            <class threadsafety="unspecified" name="GInferInputs" fullname="cv::GInferInputs" href="cv-ginferinputs.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="181">
                <function threadsafety="unspecified" name="GInferInputs" fullname="cv::GInferInputs::GInferInputs" href="cv-ginferinputs.html#GInferInputs" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="185" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GInferInputs()"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cv::GInferInputs::operator[]" href="cv-ginferinputs.html#operator-5b-5d" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="188" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GMat &amp;" signature="cv::GMat &amp; operator[](const std::string &amp;name)">
                    <parameter left="const std::string &amp;" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="getBlobs" fullname="cv::GInferInputs::getBlobs" href="cv-ginferinputs.html#getBlobs" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="189" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Map &amp;" signature="const Map &amp; getBlobs() const"/>
            </class>
            <class threadsafety="unspecified" name="GInferList" fullname="cv::GInferList" href="cv-ginferlist.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="274" bases="cv::GInferListBase"/>
            <class threadsafety="unspecified" name="GInferList2" fullname="cv::GInferList2" href="cv-ginferlist2.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="289" bases="cv::GInferList2Base"/>
            <class threadsafety="unspecified" name="GInferList2Base" fullname="cv::GInferList2Base" href="cv-ginferlist2base.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="236"/>
            <class threadsafety="unspecified" name="GInferListBase" fullname="cv::GInferListBase" href="cv-ginferlistbase.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="225"/>
            <class threadsafety="unspecified" name="GInferOutputs" fullname="cv::GInferOutputs" href="cv-ginferoutputs.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="200">
                <function threadsafety="unspecified" name="GInferOutputs" fullname="cv::GInferOutputs::GInferOutputs" href="cv-ginferoutputs.html#GInferOutputs" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="203" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="GAPI_WRAP" signature="GAPI_WRAP GInferOutputs() = default"/>
                <function threadsafety="unspecified" name="GInferOutputs" fullname="cv::GInferOutputs::GInferOutputs" href="cv-ginferoutputs.html#GInferOutputs-1" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="204" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GInferOutputs(std::shared_ptr&lt;cv::GCall&gt; call)">
                    <parameter left="std::shared_ptr&lt;cv::GCall&gt;" right="" name="call" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="GInferROI" fullname="cv::GInferROI" href="cv-ginferroi.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="261" bases="cv::GInferROIBase"/>
            <class threadsafety="unspecified" name="GInferROIBase" fullname="cv::GInferROIBase" href="cv-ginferroibase.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="214"/>
            <class threadsafety="unspecified" name="InOutInfo" fullname="cv::InOutInfo" href="cv-inoutinfo.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="171">
                <variable threadsafety="unspecified" name="in_names" fullname="cv::InOutInfo::in_names" href="cv-inoutinfo.html#in_names-var" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="173" type="std::vector&lt;std::string&gt;" static="false"/>
                <variable threadsafety="unspecified" name="out_names" fullname="cv::InOutInfo::out_names" href="cv-inoutinfo.html#out_names-var" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="174" type="std::vector&lt;std::string&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="InferAPI" fullname="cv::InferAPI" href="cv-inferapi.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="112"/>
            <class threadsafety="unspecified" name="InferAPIList" fullname="cv::InferAPIList" href="cv-inferapilist.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="133"/>
            <class threadsafety="unspecified" name="InferAPIList2" fullname="cv::InferAPIList2" href="cv-inferapilist2.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="144"/>
            <class threadsafety="unspecified" name="InferAPIRoi" fullname="cv::InferAPIRoi" href="cv-inferapiroi.html" status="active" access="public" location="infer.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/infer.hpp" lineno="122"/>
            <class threadsafety="unspecified" name="MediaFrame" fullname="cv::MediaFrame" href="cv-mediaframe.html" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="19">
                <class threadsafety="unspecified" name="IAdapter" fullname="cv::MediaFrame::IAdapter" href="cv-mediaframe-iadapter.html" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="64">
                    <function threadsafety="unspecified" name="access" fullname="cv::MediaFrame::IAdapter::access" href="cv-mediaframe-iadapter.html#access" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="68" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="MediaFrame::View" signature="MediaFrame::View access(MediaFrame::Access ) = 0">
                        <parameter left="MediaFrame::Access" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~IAdapter" fullname="cv::MediaFrame::IAdapter::~IAdapter" href="cv-mediaframe-iadapter.html#dtor.IAdapter" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="66" virtual="pure" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~IAdapter() = 0"/>
                    <function threadsafety="unspecified" name="meta" fullname="cv::MediaFrame::IAdapter::meta" href="cv-mediaframe-iadapter.html#meta" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="67" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GFrameDesc" signature="cv::GFrameDesc meta() const = 0"/>
                </class>
                <class threadsafety="unspecified" name="View" fullname="cv::MediaFrame::View" href="cv-mediaframe-view.html" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="44">
                    <function threadsafety="unspecified" name="operator=" fullname="cv::MediaFrame::View::operator=" href="cv-mediaframe-view.html#operator-eq" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="54" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="View &amp;" signature="View &amp; operator=(const View &amp;) = delete">
                        <parameter left="const View &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::MediaFrame::View::View" href="cv-mediaframe-view.html#View" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="51" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View(Ptrs &amp;&amp;ptrs, Strides &amp;&amp;strs, Callback &amp;&amp;cb)">
                        <parameter left="Ptrs &amp;&amp;" right="" name="ptrs" default=""/>
                        <parameter left="Strides &amp;&amp;" right="" name="strs" default=""/>
                        <parameter left="Callback &amp;&amp;" right="" name="cb" default="[]() {}"/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::MediaFrame::View::View" href="cv-mediaframe-view.html#View-2" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="53" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="View(View &amp;&amp;) = default">
                        <parameter left="View &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::MediaFrame::View::View" href="cv-mediaframe-view.html#View-1" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="52" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="View(const View &amp;) = delete">
                        <parameter left="const View &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~View" fullname="cv::MediaFrame::View::~View" href="cv-mediaframe-view.html#dtor.View" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="55" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~View()"/>
                    <variable threadsafety="unspecified" name="ptr" fullname="cv::MediaFrame::View::ptr" href="cv-mediaframe-view.html#ptr-var" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="57" type="Ptrs" static="false"/>
                    <variable threadsafety="unspecified" name="stride" fullname="cv::MediaFrame::View::stride" href="cv-mediaframe-view.html#stride-var" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="58" type="Strides" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="Access" fullname="cv::MediaFrame::Access" href="cv-mediaframe.html#Access-enum" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="21">
                    <value name="R" value="0"/>
                    <value name="W" value="1"/>
                </enum>
                <function threadsafety="unspecified" name="MediaFrame" fullname="cv::MediaFrame::MediaFrame" href="cv-mediaframe.html#MediaFrame" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="26" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaFrame()"/>
                <function threadsafety="unspecified" name="MediaFrame" fullname="cv::MediaFrame::MediaFrame" href="cv-mediaframe.html#MediaFrame-1" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="27" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MediaFrame(AdapterPtr &amp;&amp;)">
                    <parameter left="AdapterPtr &amp;&amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Create" fullname="cv::MediaFrame::Create" href="cv-mediaframe.html#Create" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="28" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::MediaFrame" signature="cv::MediaFrame Create(Args &amp;&amp;... )">
                    <parameter left="Args &amp;&amp;..." right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="access" fullname="cv::MediaFrame::access" href="cv-mediaframe.html#access" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="30" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View" signature="View access(Access ) const">
                    <parameter left="Access" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="desc" fullname="cv::MediaFrame::desc" href="cv-mediaframe.html#desc" status="active" access="public" location="media.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/media.hpp" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::GFrameDesc" signature="cv::GFrameDesc desc() const"/>
            </class>
            <class threadsafety="unspecified" name="GOCLContext" fullname="cv::GOCLContext" href="cv-goclcontext.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="54">
                <function threadsafety="unspecified" name="outOpaqueR" fullname="cv::GOCLContext::outOpaqueR" href="cv-goclcontext.html#outOpaqueR" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; outOpaqueR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="inArg" fullname="cv::GOCLContext::inArg" href="cv-goclcontext.html#inArg" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; inArg(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="inVal" fullname="cv::GOCLContext::inVal" href="cv-goclcontext.html#inVal" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const cv::Scalar &amp;" signature="const cv::Scalar &amp; inVal(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="inMat" fullname="cv::GOCLContext::inMat" href="cv-goclcontext.html#inMat" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const cv::UMat &amp;" signature="const cv::UMat &amp; inMat(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="outValR" fullname="cv::GOCLContext::outValR" href="cv-goclcontext.html#outValR" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="66" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Scalar &amp;" signature="cv::Scalar &amp; outValR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outMatR" fullname="cv::GOCLContext::outMatR" href="cv-goclcontext.html#outMatR" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::UMat &amp;" signature="cv::UMat &amp; outMatR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outOpaqueRef" fullname="cv::GOCLContext::outOpaqueRef" href="cv-goclcontext.html#outOpaqueRef" status="active" access="protected" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::OpaqueRef &amp;" signature="detail::OpaqueRef &amp; outOpaqueRef(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outVecRef" fullname="cv::GOCLContext::outVecRef" href="cv-goclcontext.html#outVecRef" status="active" access="protected" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="detail::VectorRef &amp;" signature="detail::VectorRef &amp; outVecRef(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <function threadsafety="unspecified" name="outVecR" fullname="cv::GOCLContext::outVecR" href="cv-goclcontext.html#outVecR" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;T&gt; &amp;" signature="std::vector&lt;T&gt; &amp; outVecR(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_args" fullname="cv::GOCLContext::m_args" href="cv-goclcontext.html#m_args-var" status="active" access="protected" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="80" type="std::vector&lt;GArg&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_results" fullname="cv::GOCLContext::m_results" href="cv-goclcontext.html#m_results-var" status="active" access="protected" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="81" type="std::unordered_map&lt;std::size_t, GRunArgP&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GOCLKernel" fullname="cv::GOCLKernel" href="cv-goclkernel.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="87">
                <function threadsafety="unspecified" name="GOCLKernel" fullname="cv::GOCLKernel::GOCLKernel" href="cv-goclkernel.html#GOCLKernel" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="93" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOCLKernel()"/>
                <function threadsafety="unspecified" name="GOCLKernel" fullname="cv::GOCLKernel::GOCLKernel" href="cv-goclkernel.html#GOCLKernel-1" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="94" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GOCLKernel(const F &amp;f)">
                    <parameter left="const F &amp;" right="" name="f" default=""/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GOCLKernel::apply" href="cv-goclkernel.html#apply" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(GOCLContext &amp;ctx)">
                    <parameter left="GOCLContext &amp;" right="" name="ctx" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_f" fullname="cv::GOCLKernel::m_f" href="cv-goclkernel.html#m_f-var" status="active" access="protected" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="99" type="F" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GOCLKernelImpl" fullname="cv::GOCLKernelImpl" href="cv-goclkernelimpl.html" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="230" bases="cv::detail::KernelTag">
                <function threadsafety="unspecified" name="kernel" fullname="cv::GOCLKernelImpl::kernel" href="cv-goclkernelimpl.html#kernel" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="239" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::GOCLKernel" signature="cv::GOCLKernel kernel()"/>
                <function threadsafety="unspecified" name="backend" fullname="cv::GOCLKernelImpl::backend" href="cv-goclkernelimpl.html#backend" status="active" access="public" location="goclkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/ocl/goclkernel.hpp" lineno="238" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend()"/>
            </class>
            <class threadsafety="unspecified" name="GPlaidMLContext" fullname="cv::GPlaidMLContext" href="cv-gplaidmlcontext.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="35">
                <function threadsafety="unspecified" name="inArg" fullname="cv::GPlaidMLContext::inArg" href="cv-gplaidmlcontext.html#inArg" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="39" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; inArg(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="inTensor" fullname="cv::GPlaidMLContext::inTensor" href="cv-gplaidmlcontext.html#inTensor" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const plaidml::edsl::Tensor &amp;" signature="const plaidml::edsl::Tensor &amp; inTensor(int input)">
                    <parameter left="int" right="" name="input" default=""/>
                </function>
                <function threadsafety="unspecified" name="outTensor" fullname="cv::GPlaidMLContext::outTensor" href="cv-gplaidmlcontext.html#outTensor" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="47" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="plaidml::edsl::Tensor &amp;" signature="plaidml::edsl::Tensor &amp; outTensor(int output)">
                    <parameter left="int" right="" name="output" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_args" fullname="cv::GPlaidMLContext::m_args" href="cv-gplaidmlcontext.html#m_args-var" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="52" type="std::vector&lt;GArg&gt;" static="false"/>
                <variable threadsafety="unspecified" name="m_results" fullname="cv::GPlaidMLContext::m_results" href="cv-gplaidmlcontext.html#m_results-var" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="53" type="std::unordered_map&lt;std::size_t, GArg&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GPlaidMLKernel" fullname="cv::GPlaidMLKernel" href="cv-gplaidmlkernel.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="56">
                <function threadsafety="unspecified" name="GPlaidMLKernel" fullname="cv::GPlaidMLKernel::GPlaidMLKernel" href="cv-gplaidmlkernel.html#GPlaidMLKernel" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="61" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="GPlaidMLKernel() = default"/>
                <function threadsafety="unspecified" name="GPlaidMLKernel" fullname="cv::GPlaidMLKernel::GPlaidMLKernel" href="cv-gplaidmlkernel.html#GPlaidMLKernel-1" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="GPlaidMLKernel(const F &amp;f)">
                    <parameter left="const F &amp;" right="" name="f" default=""/>
                </function>
                <function threadsafety="unspecified" name="apply" fullname="cv::GPlaidMLKernel::apply" href="cv-gplaidmlkernel.html#apply" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="64" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void apply(GPlaidMLContext &amp;ctx) const">
                    <parameter left="GPlaidMLContext &amp;" right="" name="ctx" default=""/>
                </function>
                <variable threadsafety="unspecified" name="m_f" fullname="cv::GPlaidMLKernel::m_f" href="cv-gplaidmlkernel.html#m_f-var" status="active" access="protected" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="71" type="F" static="false"/>
            </class>
            <class threadsafety="unspecified" name="GPlaidMLKernelImpl" fullname="cv::GPlaidMLKernelImpl" href="cv-gplaidmlkernelimpl.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="124" bases="cv::detail::KernelTag">
                <function threadsafety="unspecified" name="kernel" fullname="cv::GPlaidMLKernelImpl::kernel" href="cv-gplaidmlkernelimpl.html#kernel" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="133" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::GPlaidMLKernel" signature="cv::GPlaidMLKernel kernel()"/>
                <function threadsafety="unspecified" name="backend" fullname="cv::GPlaidMLKernelImpl::backend" href="cv-gplaidmlkernelimpl.html#backend" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="132" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="cv::gapi::GBackend" signature="cv::gapi::GBackend backend()"/>
            </class>
            <class threadsafety="unspecified" name="RMat" fullname="cv::RMat" href="cv-rmat.html" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="45">
                <class threadsafety="unspecified" name="Adapter" fullname="cv::RMat::Adapter" href="cv-rmat-adapter.html" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="101">
                    <function threadsafety="unspecified" name="access" fullname="cv::RMat::Adapter::access" href="cv-rmat-adapter.html#access" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="109" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View" signature="View access(Access ) = 0">
                        <parameter left="Access" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="deserialize" fullname="cv::RMat::Adapter::deserialize" href="cv-rmat-adapter.html#deserialize" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="113" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deserialize(cv::gapi::s11n::IIStream &amp;)">
                        <parameter left="cv::gapi::s11n::IIStream &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="serialize" fullname="cv::RMat::Adapter::serialize" href="cv-rmat-adapter.html#serialize" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="110" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(cv::gapi::s11n::IOStream &amp;)">
                        <parameter left="cv::gapi::s11n::IOStream &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~Adapter" fullname="cv::RMat::Adapter::~Adapter" href="cv-rmat-adapter.html#dtor.Adapter" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="104" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~Adapter() = default"/>
                    <function threadsafety="unspecified" name="desc" fullname="cv::RMat::Adapter::desc" href="cv-rmat-adapter.html#desc" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="105" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc desc() const = 0"/>
                </class>
                <class threadsafety="unspecified" name="View" fullname="cv::RMat::View" href="cv-rmat-view.html" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="53">
                    <function threadsafety="unspecified" name="ptr" fullname="cv::RMat::View::ptr" href="cv-rmat-view.html#ptr" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="78" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * ptr(int y)">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::RMat::View::ptr" href="cv-rmat-view.html#ptr-2" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * ptr(int y, int x)">
                        <parameter left="int" right="" name="y" default=""/>
                        <parameter left="int" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::RMat::View::operator=" href="cv-rmat-view.html#operator-eq-1" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="66" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View &amp;" signature="View &amp; operator=(View &amp;&amp;v)">
                        <parameter left="View &amp;&amp;" right="" name="v" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::RMat::View::operator=" href="cv-rmat-view.html#operator-eq" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="64" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="View &amp;" signature="View &amp; operator=(const View &amp;) = delete">
                        <parameter left="const View &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::RMat::View::View" href="cv-rmat-view.html#View" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="59" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="View() = default"/>
                    <function threadsafety="unspecified" name="View" fullname="cv::RMat::View::View" href="cv-rmat-view.html#View-4" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="65" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="View(View &amp;&amp;) = default">
                        <parameter left="View &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::RMat::View::View" href="cv-rmat-view.html#View-1" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="60" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View(const GMatDesc &amp;desc, uchar *data, const stepsT &amp;steps, DestroyCallback &amp;&amp;cb)">
                        <parameter left="const GMatDesc &amp;" right="" name="desc" default=""/>
                        <parameter left="uchar *" right="" name="data" default=""/>
                        <parameter left="const stepsT &amp;" right="" name="steps" default="{}"/>
                        <parameter left="DestroyCallback &amp;&amp;" right="" name="cb" default="nullptr"/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::RMat::View::View" href="cv-rmat-view.html#View-2" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="61" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="View(const GMatDesc &amp;desc, uchar *data, size_t step, DestroyCallback &amp;&amp;cb)">
                        <parameter left="const GMatDesc &amp;" right="" name="desc" default=""/>
                        <parameter left="uchar *" right="" name="data" default=""/>
                        <parameter left="size_t" right="" name="step" default=""/>
                        <parameter left="DestroyCallback &amp;&amp;" right="" name="cb" default="nullptr"/>
                    </function>
                    <function threadsafety="unspecified" name="View" fullname="cv::RMat::View::View" href="cv-rmat-view.html#View-3" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="63" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="true" default="false" final="false" override="false" type="" signature="View(const View &amp;) = delete">
                        <parameter left="const View &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~View" fullname="cv::RMat::View::~View" href="cv-rmat-view.html#dtor.View" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="67" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~View()"/>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::RMat::View::ptr" href="cv-rmat-view.html#ptr-1" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="81" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T *" signature="const T * ptr(int y) const">
                        <parameter left="int" right="" name="y" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="ptr" fullname="cv::RMat::View::ptr" href="cv-rmat-view.html#ptr-3" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="87" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T *" signature="const T * ptr(int y, int x) const">
                        <parameter left="int" right="" name="y" default=""/>
                        <parameter left="int" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="dims" fullname="cv::RMat::View::dims" href="cv-rmat-view.html#dims" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="70" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::vector&lt;int&gt; &amp;" signature="const std::vector&lt;int&gt; &amp; dims() const"/>
                    <function threadsafety="unspecified" name="steps" fullname="cv::RMat::View::steps" href="cv-rmat-view.html#steps" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="91" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const stepsT &amp;" signature="const stepsT &amp; steps() const"/>
                    <function threadsafety="unspecified" name="size" fullname="cv::RMat::View::size" href="cv-rmat-view.html#size" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="69" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Size" signature="cv::Size size() const"/>
                    <function threadsafety="unspecified" name="chan" fullname="cv::RMat::View::chan" href="cv-rmat-view.html#chan" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="75" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int chan() const"/>
                    <function threadsafety="unspecified" name="cols" fullname="cv::RMat::View::cols" href="cv-rmat-view.html#cols" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="71" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols() const"/>
                    <function threadsafety="unspecified" name="depth" fullname="cv::RMat::View::depth" href="cv-rmat-view.html#depth" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="74" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
                    <function threadsafety="unspecified" name="rows" fullname="cv::RMat::View::rows" href="cv-rmat-view.html#rows" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="72" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows() const"/>
                    <function threadsafety="unspecified" name="type" fullname="cv::RMat::View::type" href="cv-rmat-view.html#type" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="73" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
                    <function threadsafety="unspecified" name="elemSize" fullname="cv::RMat::View::elemSize" href="cv-rmat-view.html#elemSize" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="76" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t elemSize() const"/>
                    <function threadsafety="unspecified" name="step" fullname="cv::RMat::View::step" href="cv-rmat-view.html#step" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="90" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t step(size_t i) const">
                        <parameter left="size_t" right="" name="i" default="0"/>
                    </function>
                </class>
                <enum threadsafety="unspecified" name="Access" fullname="cv::RMat::Access" href="cv-rmat.html#Access-enum" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="100">
                    <value name="R" value="0"/>
                    <value name="W" value="1"/>
                </enum>
                <function threadsafety="unspecified" name="RMat" fullname="cv::RMat::RMat" href="cv-rmat.html#RMat" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="119" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="RMat() = default"/>
                <function threadsafety="unspecified" name="RMat" fullname="cv::RMat::RMat" href="cv-rmat.html#RMat-1" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="120" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RMat(AdapterP &amp;&amp;a)">
                    <parameter left="AdapterP &amp;&amp;" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="desc" fullname="cv::RMat::desc" href="cv-rmat.html#desc" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="121" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="GMatDesc" signature="GMatDesc desc() const"/>
                <function threadsafety="unspecified" name="get" fullname="cv::RMat::get" href="cv-rmat.html#get" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="132" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * get() const"/>
                <function threadsafety="unspecified" name="access" fullname="cv::RMat::access" href="cv-rmat.html#access" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="128" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="View" signature="View access(Access a) const">
                    <parameter left="Access" right="" name="a" default=""/>
                </function>
                <function threadsafety="unspecified" name="serialize" fullname="cv::RMat::serialize" href="cv-rmat.html#serialize" status="active" access="public" location="rmat.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/rmat.hpp" lineno="139" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void serialize(cv::gapi::s11n::IOStream &amp;os) const">
                    <parameter left="cv::gapi::s11n::IOStream &amp;" right="" name="os" default=""/>
                </function>
            </class>
            <namespace threadsafety="unspecified" name="util" fullname="cv::util" href="cv-util.html" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="40">
                <class threadsafety="unspecified" name="any" fullname="cv::util::any" href="cv-util-any.html" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="53">
                    <class threadsafety="unspecified" name="holder" fullname="cv::util::any::holder" href="cv-util-any-holder.html" status="active" access="private" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="58">
                        <function threadsafety="unspecified" name="clone" fullname="cv::util::any::holder::clone" href="cv-util-any-holder.html#clone" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="60" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="holder_ptr" signature="holder_ptr clone() = 0"/>
                        <function threadsafety="unspecified" name="~holder" fullname="cv::util::any::holder::~holder" href="cv-util-any-holder.html#dtor.holder" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="61" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="~holder() = default"/>
                    </class>
                    <class threadsafety="unspecified" name="holder_impl" fullname="cv::util::any::holder_impl" href="cv-util-any-holder-impl.html" status="active" access="private" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="65">
                        <function threadsafety="unspecified" name="holder_impl" fullname="cv::util::any::holder_impl::holder_impl" href="cv-util-any-holder-impl.html#holder_impl" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="69" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="holder_impl(arg_t &amp;&amp;a)">
                            <parameter left="arg_t &amp;&amp;" right="" name="a" default=""/>
                        </function>
                        <function threadsafety="unspecified" name="clone" fullname="cv::util::any::holder_impl::clone" href="cv-util-any-holder-impl.html#clone" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="70" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="holder_ptr" signature="holder_ptr clone() override"/>
                        <variable threadsafety="unspecified" name="v" fullname="cv::util::any::holder_impl::v" href="cv-util-any-holder-impl.html#v-var" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="67" type="value_t" static="false"/>
                    </class>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::util::any::operator=" href="cv-util-any.html#operator-eq" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="85" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="any &amp;" signature="any &amp; operator=(any &amp;&amp;) = default">
                        <parameter left="any &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::util::any::operator=" href="cv-util-any.html#operator-eq-1" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="87" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; operator=(any const &amp;src)">
                        <parameter left="any const &amp;" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="any" fullname="cv::util::any::any" href="cv-util-any.html#any-3" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="82" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="any() = default"/>
                    <function threadsafety="unspecified" name="any" fullname="cv::util::any::any" href="cv-util-any.html#any-4" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="83" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="any(any &amp;&amp;) = default">
                        <parameter left="any &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="any" fullname="cv::util::any::any" href="cv-util-any.html#any-2" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="80" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(any &amp;src)">
                        <parameter left="any &amp;" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="any" fullname="cv::util::any::any" href="cv-util-any.html#any-1" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="78" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(any const &amp;src)">
                        <parameter left="any const &amp;" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="any" fullname="cv::util::any::any" href="cv-util-any.html#any" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="76" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(value_t &amp;&amp;arg)">
                        <parameter left="value_t &amp;&amp;" right="" name="arg" default=""/>
                    </function>
                </class>
                <class threadsafety="unspecified" name="bad_any_cast" fullname="cv::util::bad_any_cast" href="cv-util-bad-any-cast.html" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="42"/>
                <function threadsafety="unspecified" name="any_cast" fullname="cv::util::any_cast" href="cv-util.html#any_cast-3" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const value_t &amp;" signature="const value_t &amp; any_cast(const any &amp;operand)">
                    <parameter left="const any &amp;" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="unsafe_any_cast" fullname="cv::util::unsafe_any_cast" href="cv-util.html#unsafe_any_cast-1" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const value_t &amp;" signature="const value_t &amp; unsafe_any_cast(const any &amp;operand)">
                    <parameter left="const any &amp;" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="any_cast" fullname="cv::util::any_cast" href="cv-util.html#any_cast-1" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const value_t *" signature="const value_t * any_cast(const any *operand)">
                    <parameter left="const any *" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="any_cast" fullname="cv::util::any_cast" href="cv-util.html#any_cast-2" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="value_t &amp;" signature="value_t &amp; any_cast(any &amp;operand)">
                    <parameter left="any &amp;" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="unsafe_any_cast" fullname="cv::util::unsafe_any_cast" href="cv-util.html#unsafe_any_cast" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="159" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="value_t &amp;" signature="value_t &amp; unsafe_any_cast(any &amp;operand)">
                    <parameter left="any &amp;" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="any_cast" fullname="cv::util::any_cast" href="cv-util.html#any_cast" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="value_t *" signature="value_t * any_cast(any *operand)">
                    <parameter left="any *" right="" name="operand" default=""/>
                </function>
                <function threadsafety="unspecified" name="suppress_unused_warning" fullname="cv::util::suppress_unused_warning" href="cv-util.html#suppress_unused_warning" status="active" access="public" location="compiler_hints.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/compiler_hints.hpp" lineno="15" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void suppress_unused_warning(const T &amp;)">
                    <parameter left="const T &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cv::util::swap" href="cv-util.html#swap" status="active" access="public" location="any.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/any.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(any &amp;lhs, any &amp;rhs)">
                    <parameter left="any &amp;" right="" name="lhs" default=""/>
                    <parameter left="any &amp;" right="" name="rhs" default=""/>
                </function>
                <class threadsafety="unspecified" name="copy_through_move_t" fullname="cv::util::copy_through_move_t" href="cv-util-copy-through-move-t.html" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="18">
                    <function threadsafety="unspecified" name="get" fullname="cv::util::copy_through_move_t::get" href="cv-util-copy-through-move-t.html#get-1" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="21" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; get()"/>
                    <function threadsafety="unspecified" name="copy_through_move_t" fullname="cv::util::copy_through_move_t::copy_through_move_t" href="cv-util-copy-through-move-t.html#copy_through_move_t" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="22" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="copy_through_move_t(T &amp;&amp;g)">
                        <parameter left="T &amp;&amp;" right="" name="g" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copy_through_move_t" fullname="cv::util::copy_through_move_t::copy_through_move_t" href="cv-util-copy-through-move-t.html#copy_through_move_t-1" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="23" virtual="non" meta="move-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="copy_through_move_t(copy_through_move_t &amp;&amp;) = default">
                        <parameter left="copy_through_move_t &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copy_through_move_t" fullname="cv::util::copy_through_move_t::copy_through_move_t" href="cv-util-copy-through-move-t.html#copy_through_move_t-2" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="24" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="copy_through_move_t(copy_through_move_t const &amp;lhs)">
                        <parameter left="copy_through_move_t const &amp;" right="" name="lhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get" fullname="cv::util::copy_through_move_t::get" href="cv-util-copy-through-move-t.html#get" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; get() const"/>
                    <variable threadsafety="unspecified" name="value" fullname="cv::util::copy_through_move_t::value" href="cv-util-copy-through-move-t.html#value-var" status="active" access="public" location="copy_through_move.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/copy_through_move.hpp" lineno="19" type="T" static="false"/>
                </class>
                <class threadsafety="unspecified" name="bad_optional_access" fullname="cv::util::bad_optional_access" href="cv-util-bad-optional-access.html" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="18"/>
                <class threadsafety="unspecified" name="optional" fullname="cv::util::optional" href="cv-util-optional.html" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="30">
                    <class threadsafety="unspecified" name="nothing" fullname="cv::util::optional::nothing" href="cv-util-optional-nothing.html" status="active" access="private" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="76"/>
                    <function threadsafety="unspecified" name="operator*" fullname="cv::util::optional::operator*" href="cv-util-optional.html#operator-2a" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; operator*()"/>
                    <function threadsafety="unspecified" name="value" fullname="cv::util::optional::value" href="cv-util-optional.html#value" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; value()"/>
                    <function threadsafety="unspecified" name="operator-&gt;" fullname="cv::util::optional::operator-&gt;" href="cv-util-optional.html#operator--gt" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * operator-&gt;()"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::util::optional::operator=" href="cv-util-optional.html#operator-eq" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="49" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="optional &amp;" signature="optional &amp; operator=(const optional &amp;) = default">
                        <parameter left="const optional &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::util::optional::operator=" href="cv-util-optional.html#operator-eq-1" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="50" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="optional &amp;" signature="optional &amp; operator=(optional &amp;&amp;)">
                        <parameter left="optional &amp;&amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="optional" fullname="cv::util::optional::optional" href="cv-util-optional.html#optional" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="36" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="optional()"/>
                    <function threadsafety="unspecified" name="optional" fullname="cv::util::optional::optional" href="cv-util-optional.html#optional-1" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="37" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="true" final="false" override="false" type="" signature="optional(const optional &amp;) = default">
                        <parameter left="const optional &amp;" right="" name="" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="value_or" fullname="cv::util::optional::value_or" href="cv-util-optional.html#value_or" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="67" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T value_or(U &amp;&amp;default_value) const">
                        <parameter left="U &amp;&amp;" right="" name="default_value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator*" fullname="cv::util::optional::operator*" href="cv-util-optional.html#operator-2a-1" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="56" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; operator*() const"/>
                    <function threadsafety="unspecified" name="value" fullname="cv::util::optional::value" href="cv-util-optional.html#value-1" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="63" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; value() const"/>
                    <function threadsafety="unspecified" name="operator-&gt;" fullname="cv::util::optional::operator-&gt;" href="cv-util-optional.html#operator--gt-1" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="54" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T *" signature="const T * operator-&gt;() const"/>
                </class>
                <function threadsafety="unspecified" name="make_optional" fullname="cv::util::make_optional" href="cv-util.html#make_optional" status="active" access="public" location="optional.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/optional.hpp" lineno="81" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="optional&lt;std::decay&lt;T&gt;::type&gt;" signature="optional&lt;std::decay&lt;T&gt;::type&gt; make_optional(T &amp;&amp;value)">
                    <parameter left="T &amp;&amp;" right="" name="value" default=""/>
                </function>
                <namespace threadsafety="unspecified" name="detail" fullname="cv::util::detail" href="cv-util-detail.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="23">
                    <class threadsafety="unspecified" name="type_list_index_helper" fullname="cv::util::detail::type_list_index_helper" href="cv-util-detail-type-list-index-helper.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="26"/>
                </namespace>
                <class threadsafety="unspecified" name="bad_variant_access" fullname="cv::util::bad_variant_access" href="cv-util-bad-variant-access.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="47"/>
                <class threadsafety="unspecified" name="monostate" fullname="cv::util::monostate" href="cv-util-monostate.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="57"/>
                <class threadsafety="unspecified" name="type_list_index" fullname="cv::util::type_list_index" href="cv-util-type-list-index.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="42"/>
                <class threadsafety="unspecified" name="variant" fullname="cv::util::variant" href="cv-util-variant.html" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="64">
                    <class threadsafety="unspecified" name="cctr_h" fullname="cv::util::variant::cctr_h" href="cv-util-variant-cctr-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="71">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::cctr_h::help" href="cv-util-variant-cctr-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="72" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory memory, const Memory from)">
                            <parameter left="Memory" right="" name="memory" default=""/>
                            <parameter left="const Memory" right="" name="from" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="cnvrt_assign_h" fullname="cv::util::variant::cnvrt_assign_h" href="cv-util-variant-cnvrt-assign-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="104">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::cnvrt_assign_h::help" href="cv-util-variant-cnvrt-assign-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="105" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory to, void *from)">
                            <parameter left="Memory" right="" name="to" default=""/>
                            <parameter left="void *" right="" name="from" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="cnvrt_ctor_h" fullname="cv::util::variant::cnvrt_ctor_h" href="cv-util-variant-cnvrt-ctor-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="84">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::cnvrt_ctor_h::help" href="cv-util-variant-cnvrt-ctor-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="85" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory memory, void *from)">
                            <parameter left="Memory" right="" name="memory" default=""/>
                            <parameter left="void *" right="" name="from" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="copy_h" fullname="cv::util::variant::copy_h" href="cv-util-variant-copy-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="91">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::copy_h::help" href="cv-util-variant-copy-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="92" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory to, const Memory from)">
                            <parameter left="Memory" right="" name="to" default=""/>
                            <parameter left="const Memory" right="" name="from" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="dtor_h" fullname="cv::util::variant::dtor_h" href="cv-util-variant-dtor-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="117">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::dtor_h::help" href="cv-util-variant-dtor-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="118" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory memory)">
                            <parameter left="Memory" right="" name="memory" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="equal_h" fullname="cv::util::variant::equal_h" href="cv-util-variant-equal-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="124">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::equal_h::help" href="cv-util-variant-equal-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="125" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool help(const Memory lhs, const Memory rhs)">
                            <parameter left="const Memory" right="" name="lhs" default=""/>
                            <parameter left="const Memory" right="" name="rhs" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="mctr_h" fullname="cv::util::variant::mctr_h" href="cv-util-variant-mctr-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="77">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::mctr_h::help" href="cv-util-variant-mctr-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="78" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory memory, void *pval)">
                            <parameter left="Memory" right="" name="memory" default=""/>
                            <parameter left="void *" right="" name="pval" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="move_h" fullname="cv::util::variant::move_h" href="cv-util-variant-move-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="97">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::move_h::help" href="cv-util-variant-move-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="98" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory to, Memory from)">
                            <parameter left="Memory" right="" name="to" default=""/>
                            <parameter left="Memory" right="" name="from" default=""/>
                        </function>
                    </class>
                    <class threadsafety="unspecified" name="swap_h" fullname="cv::util::variant::swap_h" href="cv-util-variant-swap-h.html" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="111">
                        <function threadsafety="unspecified" name="help" fullname="cv::util::variant::swap_h::help" href="cv-util-variant-swap-h.html#help" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="112" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void help(Memory to, Memory from)">
                            <parameter left="Memory" right="" name="to" default=""/>
                            <parameter left="Memory" right="" name="from" default=""/>
                        </function>
                    </class>
                    <typedef threadsafety="unspecified" name="CCtr" fullname="cv::util::variant::CCtr" href="cv-util-variant.html#CCtr-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="132"/>
                    <typedef threadsafety="unspecified" name="Copy" fullname="cv::util::variant::Copy" href="cv-util-variant.html#Copy-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="134"/>
                    <typedef threadsafety="unspecified" name="Dtor" fullname="cv::util::variant::Dtor" href="cv-util-variant.html#Dtor-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="138"/>
                    <typedef threadsafety="unspecified" name="Equal" fullname="cv::util::variant::Equal" href="cv-util-variant.html#Equal-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="143"/>
                    <typedef threadsafety="unspecified" name="MCtr" fullname="cv::util::variant::MCtr" href="cv-util-variant.html#MCtr-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="133"/>
                    <typedef threadsafety="unspecified" name="Move" fullname="cv::util::variant::Move" href="cv-util-variant.html#Move-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="135"/>
                    <typedef threadsafety="unspecified" name="Swap" fullname="cv::util::variant::Swap" href="cv-util-variant.html#Swap-typedef" status="active" access="private" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="137"/>
                    <function threadsafety="unspecified" name="operator=" fullname="cv::util::variant::operator=" href="cv-util-variant.html#operator-eq" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="201" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="variant &amp;" signature="variant &amp; operator=(const variant &amp;rhs)">
                        <parameter left="const variant &amp;" right="" name="rhs" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="variant" fullname="cv::util::variant::variant" href="cv-util-variant.html#variant-1" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="193" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="variant(T &amp;&amp;t)">
                        <parameter left="T &amp;&amp;" right="" name="t" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="variant" fullname="cv::util::variant::variant" href="cv-util-variant.html#variant" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="184" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="variant(const variant &amp;other)">
                        <parameter left="const variant &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~variant" fullname="cv::util::variant::~variant" href="cv-util-variant.html#dtor.variant" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="198" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~variant()"/>
                    <variable threadsafety="unspecified" name="memory" fullname="cv::util::variant::memory" href="cv-util-variant.html#memory-var" status="active" access="protected" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="179" type="Memory" static="false"/>
                </class>
                <function threadsafety="unspecified" name="get" fullname="cv::util::get" href="cv-util.html#get" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="231" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; get(util::variant&lt;Types...&gt; &amp;v)">
                    <parameter left="util::variant&lt;Types...&gt; &amp;" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="cv::util::operator==" href="cv-util.html#operator-eq-eq" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const util::monostate &amp;, const util::monostate &amp;)">
                    <parameter left="const util::monostate &amp;" right="" name="" default=""/>
                    <parameter left="const util::monostate &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="get" fullname="cv::util::get" href="cv-util.html#get-1" status="active" access="public" location="variant.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/util/variant.hpp" lineno="234" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; get(const util::variant&lt;Types...&gt; &amp;v)">
                    <parameter left="const util::variant&lt;Types...&gt; &amp;" right="" name="v" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="QtFont" fullname="cv::QtFont" href="cv-qtfont.html" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="699">
                <variable threadsafety="unspecified" name="ascii" fullname="cv::QtFont::ascii" href="cv-qtfont.html#ascii-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="704" type="const int *" static="false"/>
                <variable threadsafety="unspecified" name="color" fullname="cv::QtFont::color" href="cv-qtfont.html#color-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="702" type="Scalar" static="false"/>
                <variable threadsafety="unspecified" name="cyrillic" fullname="cv::QtFont::cyrillic" href="cv-qtfont.html#cyrillic-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="706" type="const int *" static="false"/>
                <variable threadsafety="unspecified" name="dx" fullname="cv::QtFont::dx" href="cv-qtfont.html#dx-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="710" type="float" static="false"/>
                <variable threadsafety="unspecified" name="font_face" fullname="cv::QtFont::font_face" href="cv-qtfont.html#font_face-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="703" type="int" static="false"/>
                <variable threadsafety="unspecified" name="greek" fullname="cv::QtFont::greek" href="cv-qtfont.html#greek-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="705" type="const int *" static="false"/>
                <variable threadsafety="unspecified" name="line_type" fullname="cv::QtFont::line_type" href="cv-qtfont.html#line_type-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="711" type="int" static="false"/>
                <variable threadsafety="unspecified" name="nameFont" fullname="cv::QtFont::nameFont" href="cv-qtfont.html#nameFont-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="701" type="const char *" static="false"/>
                <variable threadsafety="unspecified" name="shear" fullname="cv::QtFont::shear" href="cv-qtfont.html#shear-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="708" type="float" static="false"/>
                <variable threadsafety="unspecified" name="thickness" fullname="cv::QtFont::thickness" href="cv-qtfont.html#thickness-var" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="709" type="int" static="false"/>
            </class>
            <enum threadsafety="unspecified" name="MouseEventFlags" fullname="cv::MouseEventFlags" href="cv.html#MouseEventFlags-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="225">
                <value name="EVENT_FLAG_LBUTTON" value="1"/>
                <value name="EVENT_FLAG_RBUTTON" value="2"/>
                <value name="EVENT_FLAG_MBUTTON" value="4"/>
                <value name="EVENT_FLAG_CTRLKEY" value="8"/>
                <value name="EVENT_FLAG_SHIFTKEY" value="16"/>
                <value name="EVENT_FLAG_ALTKEY" value="32"/>
            </enum>
            <enum threadsafety="unspecified" name="MouseEventTypes" fullname="cv::MouseEventTypes" href="cv.html#MouseEventTypes-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="209">
                <value name="EVENT_MOUSEMOVE" value="0"/>
                <value name="EVENT_LBUTTONDOWN" value="1"/>
                <value name="EVENT_RBUTTONDOWN" value="2"/>
                <value name="EVENT_MBUTTONDOWN" value="3"/>
                <value name="EVENT_LBUTTONUP" value="4"/>
                <value name="EVENT_RBUTTONUP" value="5"/>
                <value name="EVENT_MBUTTONUP" value="6"/>
                <value name="EVENT_LBUTTONDBLCLK" value="7"/>
                <value name="EVENT_RBUTTONDBLCLK" value="8"/>
                <value name="EVENT_MBUTTONDBLCLK" value="9"/>
                <value name="EVENT_MOUSEWHEEL" value="10"/>
                <value name="EVENT_MOUSEHWHEEL" value="11"/>
            </enum>
            <enum threadsafety="unspecified" name="QtButtonTypes" fullname="cv::QtButtonTypes" href="cv.html#QtButtonTypes-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="256">
                <value name="QT_PUSH_BUTTON" value="0"/>
                <value name="QT_CHECKBOX" value="1"/>
                <value name="QT_RADIOBOX" value="2"/>
                <value name="QT_NEW_BUTTONBAR" value="1024"/>
            </enum>
            <enum threadsafety="unspecified" name="QtFontStyles" fullname="cv::QtFontStyles" href="cv.html#QtFontStyles-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="249">
                <value name="QT_STYLE_NORMAL" value="0"/>
                <value name="QT_STYLE_ITALIC" value="1"/>
                <value name="QT_STYLE_OBLIQUE" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="QtFontWeights" fullname="cv::QtFontWeights" href="cv.html#QtFontWeights-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="240">
                <value name="QT_FONT_LIGHT" value="25"/>
                <value name="QT_FONT_NORMAL" value="50"/>
                <value name="QT_FONT_DEMIBOLD" value="63"/>
                <value name="QT_FONT_BOLD" value="75"/>
                <value name="QT_FONT_BLACK" value="87"/>
            </enum>
            <enum threadsafety="unspecified" name="WindowFlags" fullname="cv::WindowFlags" href="cv.html#WindowFlags-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="186">
                <value name="WINDOW_NORMAL" value="0x00000000"/>
                <value name="WINDOW_AUTOSIZE" value="0x00000001"/>
                <value name="WINDOW_OPENGL" value="0x00001000"/>
                <value name="WINDOW_FULLSCREEN" value="1"/>
                <value name="WINDOW_FREERATIO" value="0x00000100"/>
                <value name="WINDOW_KEEPRATIO" value="0x00000000"/>
                <value name="WINDOW_GUI_EXPANDED" value="0x00000000"/>
                <value name="WINDOW_GUI_NORMAL" value="0x00000010"/>
            </enum>
            <enum threadsafety="unspecified" name="WindowPropertyFlags" fullname="cv::WindowPropertyFlags" href="cv.html#WindowPropertyFlags-enum" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="199">
                <value name="WND_PROP_FULLSCREEN" value="0"/>
                <value name="WND_PROP_AUTOSIZE" value="1"/>
                <value name="WND_PROP_ASPECT_RATIO" value="2"/>
                <value name="WND_PROP_OPENGL" value="3"/>
                <value name="WND_PROP_VISIBLE" value="4"/>
                <value name="WND_PROP_TOPMOST" value="5"/>
            </enum>
            <typedef threadsafety="unspecified" name="ButtonCallback" fullname="cv::ButtonCallback" href="cv.html#ButtonCallback-typedef" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="289"/>
            <typedef threadsafety="unspecified" name="MouseCallback" fullname="cv::MouseCallback" href="cv.html#MouseCallback-typedef" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="272"/>
            <typedef threadsafety="unspecified" name="OpenGlDrawCallback" fullname="cv::OpenGlDrawCallback" href="cv.html#OpenGlDrawCallback-typedef" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="283"/>
            <typedef threadsafety="unspecified" name="TrackbarCallback" fullname="cv::TrackbarCallback" href="cv.html#TrackbarCallback-typedef" status="active" access="public" location="highgui.hpp" filepath="/usr/local/include/opencv4/opencv2/highgui.hpp" lineno="278"/>
            <enum threadsafety="unspecified" name="ImreadModes" fullname="cv::ImreadModes" href="cv.html#ImreadModes-enum" status="active" access="public" location="imgcodecs.hpp" filepath="/usr/local/include/opencv4/opencv2/imgcodecs.hpp" lineno="69">
                <value name="IMREAD_UNCHANGED" value="-1"/>
                <value name="IMREAD_GRAYSCALE" value="0"/>
                <value name="IMREAD_COLOR" value="1"/>
                <value name="IMREAD_ANYDEPTH" value="2"/>
                <value name="IMREAD_ANYCOLOR" value="4"/>
                <value name="IMREAD_LOAD_GDAL" value="8"/>
                <value name="IMREAD_REDUCED_GRAYSCALE_2" value="16"/>
                <value name="IMREAD_REDUCED_COLOR_2" value="17"/>
                <value name="IMREAD_REDUCED_GRAYSCALE_4" value="32"/>
                <value name="IMREAD_REDUCED_COLOR_4" value="33"/>
                <value name="IMREAD_REDUCED_GRAYSCALE_8" value="64"/>
                <value name="IMREAD_REDUCED_COLOR_8" value="65"/>
                <value name="IMREAD_IGNORE_ORIENTATION" value="128"/>
            </enum>
            <enum threadsafety="unspecified" name="ImwriteEXRTypeFlags" fullname="cv::ImwriteEXRTypeFlags" href="cv.html#ImwriteEXRTypeFlags-enum" status="active" access="public" location="imgcodecs.hpp" filepath="/usr/local/include/opencv4/opencv2/imgcodecs.hpp" lineno="107">
                <value name="IMWRITE_EXR_TYPE_HALF" value="1"/>
                <value name="IMWRITE_EXR_TYPE_FLOAT" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="ImwriteFlags" fullname="cv::ImwriteFlags" href="cv.html#ImwriteFlags-enum" status="active" access="public" location="imgcodecs.hpp" filepath="/usr/local/include/opencv4/opencv2/imgcodecs.hpp" lineno="86">
                <value name="IMWRITE_JPEG_QUALITY" value="1"/>
                <value name="IMWRITE_JPEG_PROGRESSIVE" value="2"/>
                <value name="IMWRITE_JPEG_OPTIMIZE" value="3"/>
                <value name="IMWRITE_JPEG_RST_INTERVAL" value="4"/>
                <value name="IMWRITE_JPEG_LUMA_QUALITY" value="5"/>
                <value name="IMWRITE_JPEG_CHROMA_QUALITY" value="6"/>
                <value name="IMWRITE_PNG_COMPRESSION" value="16"/>
                <value name="IMWRITE_PNG_STRATEGY" value="17"/>
                <value name="IMWRITE_PNG_BILEVEL" value="18"/>
                <value name="IMWRITE_PXM_BINARY" value="32"/>
                <value name="IMWRITE_EXR_TYPE" value="( 3&lt;&lt;4 ) + 0"/>
                <value name="IMWRITE_WEBP_QUALITY" value="64"/>
                <value name="IMWRITE_PAM_TUPLETYPE" value="128"/>
                <value name="IMWRITE_TIFF_RESUNIT" value="256"/>
                <value name="IMWRITE_TIFF_XDPI" value="257"/>
                <value name="IMWRITE_TIFF_YDPI" value="258"/>
                <value name="IMWRITE_TIFF_COMPRESSION" value="259"/>
                <value name="IMWRITE_JPEG2000_COMPRESSION_X1000" value="272"/>
            </enum>
            <enum threadsafety="unspecified" name="ImwritePAMFlags" fullname="cv::ImwritePAMFlags" href="cv.html#ImwritePAMFlags-enum" status="active" access="public" location="imgcodecs.hpp" filepath="/usr/local/include/opencv4/opencv2/imgcodecs.hpp" lineno="130">
                <value name="IMWRITE_PAM_FORMAT_NULL" value="0"/>
                <value name="IMWRITE_PAM_FORMAT_BLACKANDWHITE" value="1"/>
                <value name="IMWRITE_PAM_FORMAT_GRAYSCALE" value="2"/>
                <value name="IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA" value="3"/>
                <value name="IMWRITE_PAM_FORMAT_RGB" value="4"/>
                <value name="IMWRITE_PAM_FORMAT_RGB_ALPHA" value="5"/>
            </enum>
            <enum threadsafety="unspecified" name="ImwritePNGFlags" fullname="cv::ImwritePNGFlags" href="cv.html#ImwritePNGFlags-enum" status="active" access="public" location="imgcodecs.hpp" filepath="/usr/local/include/opencv4/opencv2/imgcodecs.hpp" lineno="121">
                <value name="IMWRITE_PNG_STRATEGY_DEFAULT" value="0"/>
                <value name="IMWRITE_PNG_STRATEGY_FILTERED" value="1"/>
                <value name="IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY" value="2"/>
                <value name="IMWRITE_PNG_STRATEGY_RLE" value="3"/>
                <value name="IMWRITE_PNG_STRATEGY_FIXED" value="4"/>
            </enum>
            <class threadsafety="unspecified" name="CLAHE" fullname="cv::CLAHE" href="cv-clahe.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="957" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="GeneralizedHough" fullname="cv::GeneralizedHough" href="cv-generalizedhough.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="846" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="GeneralizedHoughBallard" fullname="cv::GeneralizedHoughBallard" href="cv-generalizedhoughballard.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="882" bases="cv::GeneralizedHough"/>
            <class threadsafety="unspecified" name="GeneralizedHoughGuil" fullname="cv::GeneralizedHoughGuil" href="cv-generalizedhoughguil.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="898" bases="cv::GeneralizedHough"/>
            <class threadsafety="unspecified" name="LineIterator" fullname="cv::LineIterator" href="cv-lineiterator.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4765">
                <function threadsafety="unspecified" name="operator++" fullname="cv::LineIterator::operator++" href="cv-lineiterator.html#operator-2b-2b" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4813" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LineIterator &amp;" signature="LineIterator &amp; operator++()"/>
                <function threadsafety="unspecified" name="operator++" fullname="cv::LineIterator::operator++" href="cv-lineiterator.html#operator-2b-2b-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4816" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LineIterator" signature="LineIterator operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="LineIterator" fullname="cv::LineIterator::LineIterator" href="cv-lineiterator.html#LineIterator-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4783" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LineIterator(Point pt1, Point pt2, int connectivity, bool leftToRight)">
                    <parameter left="Point" right="" name="pt1" default=""/>
                    <parameter left="Point" right="" name="pt2" default=""/>
                    <parameter left="int" right="" name="connectivity" default="8"/>
                    <parameter left="bool" right="" name="leftToRight" default="false"/>
                </function>
                <function threadsafety="unspecified" name="LineIterator" fullname="cv::LineIterator::LineIterator" href="cv-lineiterator.html#LineIterator-3" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4800" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LineIterator(Rect boundingAreaRect, Point pt1, Point pt2, int connectivity, bool leftToRight)">
                    <parameter left="Rect" right="" name="boundingAreaRect" default=""/>
                    <parameter left="Point" right="" name="pt1" default=""/>
                    <parameter left="Point" right="" name="pt2" default=""/>
                    <parameter left="int" right="" name="connectivity" default="8"/>
                    <parameter left="bool" right="" name="leftToRight" default="false"/>
                </function>
                <function threadsafety="unspecified" name="LineIterator" fullname="cv::LineIterator::LineIterator" href="cv-lineiterator.html#LineIterator-2" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4793" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LineIterator(Size boundingAreaSize, Point pt1, Point pt2, int connectivity, bool leftToRight)">
                    <parameter left="Size" right="" name="boundingAreaSize" default=""/>
                    <parameter left="Point" right="" name="pt1" default=""/>
                    <parameter left="Point" right="" name="pt2" default=""/>
                    <parameter left="int" right="" name="connectivity" default="8"/>
                    <parameter left="bool" right="" name="leftToRight" default="false"/>
                </function>
                <function threadsafety="unspecified" name="LineIterator" fullname="cv::LineIterator::LineIterator" href="cv-lineiterator.html#LineIterator" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4777" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LineIterator(const Mat &amp;img, Point pt1, Point pt2, int connectivity, bool leftToRight)">
                    <parameter left="const Mat &amp;" right="" name="img" default=""/>
                    <parameter left="Point" right="" name="pt1" default=""/>
                    <parameter left="Point" right="" name="pt2" default=""/>
                    <parameter left="int" right="" name="connectivity" default="8"/>
                    <parameter left="bool" right="" name="leftToRight" default="false"/>
                </function>
                <function threadsafety="unspecified" name="operator*" fullname="cv::LineIterator::operator*" href="cv-lineiterator.html#operator-2a" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4810" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uchar *" signature="uchar * operator*()"/>
                <function threadsafety="unspecified" name="init" fullname="cv::LineIterator::init" href="cv-lineiterator.html#init" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4806" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(const Mat *img, Rect boundingAreaRect, Point pt1, Point pt2, int connectivity, bool leftToRight)">
                    <parameter left="const Mat *" right="" name="img" default=""/>
                    <parameter left="Rect" right="" name="boundingAreaRect" default=""/>
                    <parameter left="Point" right="" name="pt1" default=""/>
                    <parameter left="Point" right="" name="pt2" default=""/>
                    <parameter left="int" right="" name="connectivity" default=""/>
                    <parameter left="bool" right="" name="leftToRight" default=""/>
                </function>
                <function threadsafety="unspecified" name="pos" fullname="cv::LineIterator::pos" href="cv-lineiterator.html#pos" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4819" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Point" signature="Point pos() const"/>
                <variable threadsafety="unspecified" name="p" fullname="cv::LineIterator::p" href="cv-lineiterator.html#p-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4828" type="Point" static="false"/>
                <variable threadsafety="unspecified" name="ptmode" fullname="cv::LineIterator::ptmode" href="cv-lineiterator.html#ptmode-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4829" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="ptr" fullname="cv::LineIterator::ptr" href="cv-lineiterator.html#ptr-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4821" type="uchar *" static="false"/>
                <variable threadsafety="unspecified" name="ptr0" fullname="cv::LineIterator::ptr0" href="cv-lineiterator.html#ptr0-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4822" type="const uchar *" static="false"/>
            </class>
            <class threadsafety="unspecified" name="LineSegmentDetector" fullname="cv::LineSegmentDetector" href="cv-linesegmentdetector.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1265" bases="cv::Algorithm">
                <function threadsafety="unspecified" name="~LineSegmentDetector" fullname="cv::LineSegmentDetector::~LineSegmentDetector" href="cv-linesegmentdetector.html#dtor.LineSegmentDetector" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1310" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~LineSegmentDetector()"/>
            </class>
            <class threadsafety="unspecified" name="Subdiv2D" fullname="cv::Subdiv2D" href="cv-subdiv2d.html" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="994">
                <class threadsafety="unspecified" name="QuadEdge" fullname="cv::Subdiv2D::QuadEdge" href="cv-subdiv2d-quadedge.html" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1228">
                    <function threadsafety="unspecified" name="QuadEdge" fullname="cv::Subdiv2D::QuadEdge::QuadEdge" href="cv-subdiv2d-quadedge.html#QuadEdge" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1230" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QuadEdge()"/>
                    <function threadsafety="unspecified" name="QuadEdge" fullname="cv::Subdiv2D::QuadEdge::QuadEdge" href="cv-subdiv2d-quadedge.html#QuadEdge-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1231" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QuadEdge(int edgeidx)">
                        <parameter left="int" right="" name="edgeidx" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="isfree" fullname="cv::Subdiv2D::QuadEdge::isfree" href="cv-subdiv2d-quadedge.html#isfree" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1232" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isfree() const"/>
                    <variable threadsafety="unspecified" name="next" fullname="cv::Subdiv2D::QuadEdge::next" href="cv-subdiv2d-quadedge.html#next-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1234" type="int[4]" static="false"/>
                    <variable threadsafety="unspecified" name="pt" fullname="cv::Subdiv2D::QuadEdge::pt" href="cv-subdiv2d-quadedge.html#pt-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1235" type="int[4]" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Vertex" fullname="cv::Subdiv2D::Vertex" href="cv-subdiv2d-vertex.html" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1216">
                    <function threadsafety="unspecified" name="Vertex" fullname="cv::Subdiv2D::Vertex::Vertex" href="cv-subdiv2d-vertex.html#Vertex" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1218" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vertex()"/>
                    <function threadsafety="unspecified" name="Vertex" fullname="cv::Subdiv2D::Vertex::Vertex" href="cv-subdiv2d-vertex.html#Vertex-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1219" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Vertex(Point2f pt, bool _isvirtual, int _firstEdge)">
                        <parameter left="Point2f" right="" name="pt" default=""/>
                        <parameter left="bool" right="" name="_isvirtual" default=""/>
                        <parameter left="int" right="" name="_firstEdge" default="0"/>
                    </function>
                    <function threadsafety="unspecified" name="isfree" fullname="cv::Subdiv2D::Vertex::isfree" href="cv-subdiv2d-vertex.html#isfree" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1221" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isfree() const"/>
                    <function threadsafety="unspecified" name="isvirtual" fullname="cv::Subdiv2D::Vertex::isvirtual" href="cv-subdiv2d-vertex.html#isvirtual" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1220" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isvirtual() const"/>
                    <variable threadsafety="unspecified" name="firstEdge" fullname="cv::Subdiv2D::Vertex::firstEdge" href="cv-subdiv2d-vertex.html#firstEdge-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1223" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="pt" fullname="cv::Subdiv2D::Vertex::pt" href="cv-subdiv2d-vertex.html#pt-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1225" type="Point2f" static="false"/>
                    <variable threadsafety="unspecified" name="type" fullname="cv::Subdiv2D::Vertex::type" href="cv-subdiv2d-vertex.html#type-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1224" type="int" static="false"/>
                </class>
                <function threadsafety="unspecified" name="Subdiv2D" fullname="cv::Subdiv2D::Subdiv2D" href="cv-subdiv2d.html#Subdiv2D" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1019" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Subdiv2D()"/>
                <function threadsafety="unspecified" name="Subdiv2D" fullname="cv::Subdiv2D::Subdiv2D" href="cv-subdiv2d.html#Subdiv2D-1" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1029" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Subdiv2D(Rect rect)">
                    <parameter left="Rect" right="" name="rect" default=""/>
                </function>
                <function threadsafety="unspecified" name="connectEdges" fullname="cv::Subdiv2D::connectEdges" href="cv-subdiv2d.html#connectEdges" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1209" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int connectEdges(int edgeA, int edgeB)">
                    <parameter left="int" right="" name="edgeA" default=""/>
                    <parameter left="int" right="" name="edgeB" default=""/>
                </function>
                <function threadsafety="unspecified" name="newEdge" fullname="cv::Subdiv2D::newEdge" href="cv-subdiv2d.html#newEdge" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1203" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int newEdge()"/>
                <function threadsafety="unspecified" name="newPoint" fullname="cv::Subdiv2D::newPoint" href="cv-subdiv2d.html#newPoint" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1205" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int newPoint(Point2f pt, bool isvirtual, int firstEdge)">
                    <parameter left="Point2f" right="" name="pt" default=""/>
                    <parameter left="bool" right="" name="isvirtual" default=""/>
                    <parameter left="int" right="" name="firstEdge" default="0"/>
                </function>
                <function threadsafety="unspecified" name="calcVoronoi" fullname="cv::Subdiv2D::calcVoronoi" href="cv-subdiv2d.html#calcVoronoi" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void calcVoronoi()"/>
                <function threadsafety="unspecified" name="clearVoronoi" fullname="cv::Subdiv2D::clearVoronoi" href="cv-subdiv2d.html#clearVoronoi" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clearVoronoi()"/>
                <function threadsafety="unspecified" name="deleteEdge" fullname="cv::Subdiv2D::deleteEdge" href="cv-subdiv2d.html#deleteEdge" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1204" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deleteEdge(int edge)">
                    <parameter left="int" right="" name="edge" default=""/>
                </function>
                <function threadsafety="unspecified" name="deletePoint" fullname="cv::Subdiv2D::deletePoint" href="cv-subdiv2d.html#deletePoint" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1206" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void deletePoint(int vtx)">
                    <parameter left="int" right="" name="vtx" default=""/>
                </function>
                <function threadsafety="unspecified" name="setEdgePoints" fullname="cv::Subdiv2D::setEdgePoints" href="cv-subdiv2d.html#setEdgePoints" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1207" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setEdgePoints(int edge, int orgPt, int dstPt)">
                    <parameter left="int" right="" name="edge" default=""/>
                    <parameter left="int" right="" name="orgPt" default=""/>
                    <parameter left="int" right="" name="dstPt" default=""/>
                </function>
                <function threadsafety="unspecified" name="splice" fullname="cv::Subdiv2D::splice" href="cv-subdiv2d.html#splice" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1208" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void splice(int edgeA, int edgeB)">
                    <parameter left="int" right="" name="edgeA" default=""/>
                    <parameter left="int" right="" name="edgeB" default=""/>
                </function>
                <function threadsafety="unspecified" name="swapEdges" fullname="cv::Subdiv2D::swapEdges" href="cv-subdiv2d.html#swapEdges" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1210" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swapEdges(int edge)">
                    <parameter left="int" right="" name="edge" default=""/>
                </function>
                <function threadsafety="unspecified" name="isRightOf" fullname="cv::Subdiv2D::isRightOf" href="cv-subdiv2d.html#isRightOf" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1211" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int isRightOf(Point2f pt, int edge) const">
                    <parameter left="Point2f" right="" name="pt" default=""/>
                    <parameter left="int" right="" name="edge" default=""/>
                </function>
                <function threadsafety="unspecified" name="checkSubdiv" fullname="cv::Subdiv2D::checkSubdiv" href="cv-subdiv2d.html#checkSubdiv" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void checkSubdiv() const"/>
                <variable threadsafety="unspecified" name="NEXT_AROUND_DST" fullname="cv::Subdiv2D::NEXT_AROUND_DST" href="cv-subdiv2d.html#NEXT_AROUND_DST-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1007" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NEXT_AROUND_LEFT" fullname="cv::Subdiv2D::NEXT_AROUND_LEFT" href="cv-subdiv2d.html#NEXT_AROUND_LEFT-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1010" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NEXT_AROUND_ORG" fullname="cv::Subdiv2D::NEXT_AROUND_ORG" href="cv-subdiv2d.html#NEXT_AROUND_ORG-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1006" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="NEXT_AROUND_RIGHT" fullname="cv::Subdiv2D::NEXT_AROUND_RIGHT" href="cv-subdiv2d.html#NEXT_AROUND_RIGHT-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1011" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PREV_AROUND_DST" fullname="cv::Subdiv2D::PREV_AROUND_DST" href="cv-subdiv2d.html#PREV_AROUND_DST-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1009" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PREV_AROUND_LEFT" fullname="cv::Subdiv2D::PREV_AROUND_LEFT" href="cv-subdiv2d.html#PREV_AROUND_LEFT-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1012" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PREV_AROUND_ORG" fullname="cv::Subdiv2D::PREV_AROUND_ORG" href="cv-subdiv2d.html#PREV_AROUND_ORG-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1008" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PREV_AROUND_RIGHT" fullname="cv::Subdiv2D::PREV_AROUND_RIGHT" href="cv-subdiv2d.html#PREV_AROUND_RIGHT-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1014" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PTLOC_ERROR" fullname="cv::Subdiv2D::PTLOC_ERROR" href="cv-subdiv2d.html#PTLOC_ERROR-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="998" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PTLOC_INSIDE" fullname="cv::Subdiv2D::PTLOC_INSIDE" href="cv-subdiv2d.html#PTLOC_INSIDE-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1000" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PTLOC_ON_EDGE" fullname="cv::Subdiv2D::PTLOC_ON_EDGE" href="cv-subdiv2d.html#PTLOC_ON_EDGE-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1003" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PTLOC_OUTSIDE_RECT" fullname="cv::Subdiv2D::PTLOC_OUTSIDE_RECT" href="cv-subdiv2d.html#PTLOC_OUTSIDE_RECT-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="999" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PTLOC_VERTEX" fullname="cv::Subdiv2D::PTLOC_VERTEX" href="cv-subdiv2d.html#PTLOC_VERTEX-var" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1001" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="bottomRight" fullname="cv::Subdiv2D::bottomRight" href="cv-subdiv2d.html#bottomRight-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1250" type="Point2f" static="false"/>
                <variable threadsafety="unspecified" name="freePoint" fullname="cv::Subdiv2D::freePoint" href="cv-subdiv2d.html#freePoint-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1243" type="int" static="false"/>
                <variable threadsafety="unspecified" name="freeQEdge" fullname="cv::Subdiv2D::freeQEdge" href="cv-subdiv2d.html#freeQEdge-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1242" type="int" static="false"/>
                <variable threadsafety="unspecified" name="qedges" fullname="cv::Subdiv2D::qedges" href="cv-subdiv2d.html#qedges-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1241" type="std::vector&lt;QuadEdge&gt;" static="false"/>
                <variable threadsafety="unspecified" name="recentEdge" fullname="cv::Subdiv2D::recentEdge" href="cv-subdiv2d.html#recentEdge-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1246" type="int" static="false"/>
                <variable threadsafety="unspecified" name="topLeft" fullname="cv::Subdiv2D::topLeft" href="cv-subdiv2d.html#topLeft-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1248" type="Point2f" static="false"/>
                <variable threadsafety="unspecified" name="validGeometry" fullname="cv::Subdiv2D::validGeometry" href="cv-subdiv2d.html#validGeometry-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1244" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="vtx" fullname="cv::Subdiv2D::vtx" href="cv-subdiv2d.html#vtx-var" status="active" access="protected" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="1239" type="std::vector&lt;Vertex&gt;" static="false"/>
            </class>
            <enum threadsafety="unspecified" name="AdaptiveThresholdTypes" fullname="cv::AdaptiveThresholdTypes" href="cv.html#AdaptiveThresholdTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="333">
                <value name="ADAPTIVE_THRESH_MEAN_C" value="0"/>
                <value name="ADAPTIVE_THRESH_GAUSSIAN_C" value="1"/>
            </enum>
            <enum threadsafety="unspecified" name="ColorConversionCodes" fullname="cv::ColorConversionCodes" href="cv.html#ColorConversionCodes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="528">
                <value name="COLOR_BGR2BGRA" value="0"/>
                <value name="COLOR_RGB2RGBA" value="COLOR_BGR2BGRA"/>
                <value name="COLOR_BGRA2BGR" value="1"/>
                <value name="COLOR_RGBA2RGB" value="COLOR_BGRA2BGR"/>
                <value name="COLOR_BGR2RGBA" value="2"/>
                <value name="COLOR_RGB2BGRA" value="COLOR_BGR2RGBA"/>
                <value name="COLOR_RGBA2BGR" value="3"/>
                <value name="COLOR_BGRA2RGB" value="COLOR_RGBA2BGR"/>
                <value name="COLOR_BGR2RGB" value="4"/>
                <value name="COLOR_RGB2BGR" value="COLOR_BGR2RGB"/>
                <value name="COLOR_BGRA2RGBA" value="5"/>
                <value name="COLOR_RGBA2BGRA" value="COLOR_BGRA2RGBA"/>
                <value name="COLOR_BGR2GRAY" value="6"/>
                <value name="COLOR_RGB2GRAY" value="7"/>
                <value name="COLOR_GRAY2BGR" value="8"/>
                <value name="COLOR_GRAY2RGB" value="COLOR_GRAY2BGR"/>
                <value name="COLOR_GRAY2BGRA" value="9"/>
                <value name="COLOR_GRAY2RGBA" value="COLOR_GRAY2BGRA"/>
                <value name="COLOR_BGRA2GRAY" value="10"/>
                <value name="COLOR_RGBA2GRAY" value="11"/>
                <value name="COLOR_BGR2BGR565" value="12"/>
                <value name="COLOR_RGB2BGR565" value="13"/>
                <value name="COLOR_BGR5652BGR" value="14"/>
                <value name="COLOR_BGR5652RGB" value="15"/>
                <value name="COLOR_BGRA2BGR565" value="16"/>
                <value name="COLOR_RGBA2BGR565" value="17"/>
                <value name="COLOR_BGR5652BGRA" value="18"/>
                <value name="COLOR_BGR5652RGBA" value="19"/>
                <value name="COLOR_GRAY2BGR565" value="20"/>
                <value name="COLOR_BGR5652GRAY" value="21"/>
                <value name="COLOR_BGR2BGR555" value="22"/>
                <value name="COLOR_RGB2BGR555" value="23"/>
                <value name="COLOR_BGR5552BGR" value="24"/>
                <value name="COLOR_BGR5552RGB" value="25"/>
                <value name="COLOR_BGRA2BGR555" value="26"/>
                <value name="COLOR_RGBA2BGR555" value="27"/>
                <value name="COLOR_BGR5552BGRA" value="28"/>
                <value name="COLOR_BGR5552RGBA" value="29"/>
                <value name="COLOR_GRAY2BGR555" value="30"/>
                <value name="COLOR_BGR5552GRAY" value="31"/>
                <value name="COLOR_BGR2XYZ" value="32"/>
                <value name="COLOR_RGB2XYZ" value="33"/>
                <value name="COLOR_XYZ2BGR" value="34"/>
                <value name="COLOR_XYZ2RGB" value="35"/>
                <value name="COLOR_BGR2YCrCb" value="36"/>
                <value name="COLOR_RGB2YCrCb" value="37"/>
                <value name="COLOR_YCrCb2BGR" value="38"/>
                <value name="COLOR_YCrCb2RGB" value="39"/>
                <value name="COLOR_BGR2HSV" value="40"/>
                <value name="COLOR_RGB2HSV" value="41"/>
                <value name="COLOR_BGR2Lab" value="44"/>
                <value name="COLOR_RGB2Lab" value="45"/>
                <value name="COLOR_BGR2Luv" value="50"/>
                <value name="COLOR_RGB2Luv" value="51"/>
                <value name="COLOR_BGR2HLS" value="52"/>
                <value name="COLOR_RGB2HLS" value="53"/>
                <value name="COLOR_HSV2BGR" value="54"/>
                <value name="COLOR_HSV2RGB" value="55"/>
                <value name="COLOR_Lab2BGR" value="56"/>
                <value name="COLOR_Lab2RGB" value="57"/>
                <value name="COLOR_Luv2BGR" value="58"/>
                <value name="COLOR_Luv2RGB" value="59"/>
                <value name="COLOR_HLS2BGR" value="60"/>
                <value name="COLOR_HLS2RGB" value="61"/>
                <value name="COLOR_BGR2HSV_FULL" value="66"/>
                <value name="COLOR_RGB2HSV_FULL" value="67"/>
                <value name="COLOR_BGR2HLS_FULL" value="68"/>
                <value name="COLOR_RGB2HLS_FULL" value="69"/>
                <value name="COLOR_HSV2BGR_FULL" value="70"/>
                <value name="COLOR_HSV2RGB_FULL" value="71"/>
                <value name="COLOR_HLS2BGR_FULL" value="72"/>
                <value name="COLOR_HLS2RGB_FULL" value="73"/>
                <value name="COLOR_LBGR2Lab" value="74"/>
                <value name="COLOR_LRGB2Lab" value="75"/>
                <value name="COLOR_LBGR2Luv" value="76"/>
                <value name="COLOR_LRGB2Luv" value="77"/>
                <value name="COLOR_Lab2LBGR" value="78"/>
                <value name="COLOR_Lab2LRGB" value="79"/>
                <value name="COLOR_Luv2LBGR" value="80"/>
                <value name="COLOR_Luv2LRGB" value="81"/>
                <value name="COLOR_BGR2YUV" value="82"/>
                <value name="COLOR_RGB2YUV" value="83"/>
                <value name="COLOR_YUV2BGR" value="84"/>
                <value name="COLOR_YUV2RGB" value="85"/>
                <value name="COLOR_YUV2RGB_NV12" value="90"/>
                <value name="COLOR_YUV2BGR_NV12" value="91"/>
                <value name="COLOR_YUV2RGB_NV21" value="92"/>
                <value name="COLOR_YUV2BGR_NV21" value="93"/>
                <value name="COLOR_YUV420sp2RGB" value="COLOR_YUV2RGB_NV21"/>
                <value name="COLOR_YUV420sp2BGR" value="COLOR_YUV2BGR_NV21"/>
                <value name="COLOR_YUV2RGBA_NV12" value="94"/>
                <value name="COLOR_YUV2BGRA_NV12" value="95"/>
                <value name="COLOR_YUV2RGBA_NV21" value="96"/>
                <value name="COLOR_YUV2BGRA_NV21" value="97"/>
                <value name="COLOR_YUV420sp2RGBA" value="COLOR_YUV2RGBA_NV21"/>
                <value name="COLOR_YUV420sp2BGRA" value="COLOR_YUV2BGRA_NV21"/>
                <value name="COLOR_YUV2RGB_YV12" value="98"/>
                <value name="COLOR_YUV2BGR_YV12" value="99"/>
                <value name="COLOR_YUV2RGB_IYUV" value="100"/>
                <value name="COLOR_YUV2BGR_IYUV" value="101"/>
                <value name="COLOR_YUV2RGB_I420" value="COLOR_YUV2RGB_IYUV"/>
                <value name="COLOR_YUV2BGR_I420" value="COLOR_YUV2BGR_IYUV"/>
                <value name="COLOR_YUV420p2RGB" value="COLOR_YUV2RGB_YV12"/>
                <value name="COLOR_YUV420p2BGR" value="COLOR_YUV2BGR_YV12"/>
                <value name="COLOR_YUV2RGBA_YV12" value="102"/>
                <value name="COLOR_YUV2BGRA_YV12" value="103"/>
                <value name="COLOR_YUV2RGBA_IYUV" value="104"/>
                <value name="COLOR_YUV2BGRA_IYUV" value="105"/>
                <value name="COLOR_YUV2RGBA_I420" value="COLOR_YUV2RGBA_IYUV"/>
                <value name="COLOR_YUV2BGRA_I420" value="COLOR_YUV2BGRA_IYUV"/>
                <value name="COLOR_YUV420p2RGBA" value="COLOR_YUV2RGBA_YV12"/>
                <value name="COLOR_YUV420p2BGRA" value="COLOR_YUV2BGRA_YV12"/>
                <value name="COLOR_YUV2GRAY_420" value="106"/>
                <value name="COLOR_YUV2GRAY_NV21" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV2GRAY_NV12" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV2GRAY_YV12" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV2GRAY_IYUV" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV2GRAY_I420" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV420sp2GRAY" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV420p2GRAY" value="COLOR_YUV2GRAY_420"/>
                <value name="COLOR_YUV2RGB_UYVY" value="107"/>
                <value name="COLOR_YUV2BGR_UYVY" value="108"/>
                <value name="COLOR_YUV2RGB_Y422" value="COLOR_YUV2RGB_UYVY"/>
                <value name="COLOR_YUV2BGR_Y422" value="COLOR_YUV2BGR_UYVY"/>
                <value name="COLOR_YUV2RGB_UYNV" value="COLOR_YUV2RGB_UYVY"/>
                <value name="COLOR_YUV2BGR_UYNV" value="COLOR_YUV2BGR_UYVY"/>
                <value name="COLOR_YUV2RGBA_UYVY" value="111"/>
                <value name="COLOR_YUV2BGRA_UYVY" value="112"/>
                <value name="COLOR_YUV2RGBA_Y422" value="COLOR_YUV2RGBA_UYVY"/>
                <value name="COLOR_YUV2BGRA_Y422" value="COLOR_YUV2BGRA_UYVY"/>
                <value name="COLOR_YUV2RGBA_UYNV" value="COLOR_YUV2RGBA_UYVY"/>
                <value name="COLOR_YUV2BGRA_UYNV" value="COLOR_YUV2BGRA_UYVY"/>
                <value name="COLOR_YUV2RGB_YUY2" value="115"/>
                <value name="COLOR_YUV2BGR_YUY2" value="116"/>
                <value name="COLOR_YUV2RGB_YVYU" value="117"/>
                <value name="COLOR_YUV2BGR_YVYU" value="118"/>
                <value name="COLOR_YUV2RGB_YUYV" value="COLOR_YUV2RGB_YUY2"/>
                <value name="COLOR_YUV2BGR_YUYV" value="COLOR_YUV2BGR_YUY2"/>
                <value name="COLOR_YUV2RGB_YUNV" value="COLOR_YUV2RGB_YUY2"/>
                <value name="COLOR_YUV2BGR_YUNV" value="COLOR_YUV2BGR_YUY2"/>
                <value name="COLOR_YUV2RGBA_YUY2" value="119"/>
                <value name="COLOR_YUV2BGRA_YUY2" value="120"/>
                <value name="COLOR_YUV2RGBA_YVYU" value="121"/>
                <value name="COLOR_YUV2BGRA_YVYU" value="122"/>
                <value name="COLOR_YUV2RGBA_YUYV" value="COLOR_YUV2RGBA_YUY2"/>
                <value name="COLOR_YUV2BGRA_YUYV" value="COLOR_YUV2BGRA_YUY2"/>
                <value name="COLOR_YUV2RGBA_YUNV" value="COLOR_YUV2RGBA_YUY2"/>
                <value name="COLOR_YUV2BGRA_YUNV" value="COLOR_YUV2BGRA_YUY2"/>
                <value name="COLOR_YUV2GRAY_UYVY" value="123"/>
                <value name="COLOR_YUV2GRAY_YUY2" value="124"/>
                <value name="COLOR_YUV2GRAY_Y422" value="COLOR_YUV2GRAY_UYVY"/>
                <value name="COLOR_YUV2GRAY_UYNV" value="COLOR_YUV2GRAY_UYVY"/>
                <value name="COLOR_YUV2GRAY_YVYU" value="COLOR_YUV2GRAY_YUY2"/>
                <value name="COLOR_YUV2GRAY_YUYV" value="COLOR_YUV2GRAY_YUY2"/>
                <value name="COLOR_YUV2GRAY_YUNV" value="COLOR_YUV2GRAY_YUY2"/>
                <value name="COLOR_RGBA2mRGBA" value="125"/>
                <value name="COLOR_mRGBA2RGBA" value="126"/>
                <value name="COLOR_RGB2YUV_I420" value="127"/>
                <value name="COLOR_BGR2YUV_I420" value="128"/>
                <value name="COLOR_RGB2YUV_IYUV" value="COLOR_RGB2YUV_I420"/>
                <value name="COLOR_BGR2YUV_IYUV" value="COLOR_BGR2YUV_I420"/>
                <value name="COLOR_RGBA2YUV_I420" value="129"/>
                <value name="COLOR_BGRA2YUV_I420" value="130"/>
                <value name="COLOR_RGBA2YUV_IYUV" value="COLOR_RGBA2YUV_I420"/>
                <value name="COLOR_BGRA2YUV_IYUV" value="COLOR_BGRA2YUV_I420"/>
                <value name="COLOR_RGB2YUV_YV12" value="131"/>
                <value name="COLOR_BGR2YUV_YV12" value="132"/>
                <value name="COLOR_RGBA2YUV_YV12" value="133"/>
                <value name="COLOR_BGRA2YUV_YV12" value="134"/>
                <value name="COLOR_BayerBG2BGR" value="46"/>
                <value name="COLOR_BayerGB2BGR" value="47"/>
                <value name="COLOR_BayerRG2BGR" value="48"/>
                <value name="COLOR_BayerGR2BGR" value="49"/>
                <value name="COLOR_BayerBG2RGB" value="COLOR_BayerRG2BGR"/>
                <value name="COLOR_BayerGB2RGB" value="COLOR_BayerGR2BGR"/>
                <value name="COLOR_BayerRG2RGB" value="COLOR_BayerBG2BGR"/>
                <value name="COLOR_BayerGR2RGB" value="COLOR_BayerGB2BGR"/>
                <value name="COLOR_BayerBG2GRAY" value="86"/>
                <value name="COLOR_BayerGB2GRAY" value="87"/>
                <value name="COLOR_BayerRG2GRAY" value="88"/>
                <value name="COLOR_BayerGR2GRAY" value="89"/>
                <value name="COLOR_BayerBG2BGR_VNG" value="62"/>
                <value name="COLOR_BayerGB2BGR_VNG" value="63"/>
                <value name="COLOR_BayerRG2BGR_VNG" value="64"/>
                <value name="COLOR_BayerGR2BGR_VNG" value="65"/>
                <value name="COLOR_BayerBG2RGB_VNG" value="COLOR_BayerRG2BGR_VNG"/>
                <value name="COLOR_BayerGB2RGB_VNG" value="COLOR_BayerGR2BGR_VNG"/>
                <value name="COLOR_BayerRG2RGB_VNG" value="COLOR_BayerBG2BGR_VNG"/>
                <value name="COLOR_BayerGR2RGB_VNG" value="COLOR_BayerGB2BGR_VNG"/>
                <value name="COLOR_BayerBG2BGR_EA" value="135"/>
                <value name="COLOR_BayerGB2BGR_EA" value="136"/>
                <value name="COLOR_BayerRG2BGR_EA" value="137"/>
                <value name="COLOR_BayerGR2BGR_EA" value="138"/>
                <value name="COLOR_BayerBG2RGB_EA" value="COLOR_BayerRG2BGR_EA"/>
                <value name="COLOR_BayerGB2RGB_EA" value="COLOR_BayerGR2BGR_EA"/>
                <value name="COLOR_BayerRG2RGB_EA" value="COLOR_BayerBG2BGR_EA"/>
                <value name="COLOR_BayerGR2RGB_EA" value="COLOR_BayerGB2BGR_EA"/>
                <value name="COLOR_BayerBG2BGRA" value="139"/>
                <value name="COLOR_BayerGB2BGRA" value="140"/>
                <value name="COLOR_BayerRG2BGRA" value="141"/>
                <value name="COLOR_BayerGR2BGRA" value="142"/>
                <value name="COLOR_BayerBG2RGBA" value="COLOR_BayerRG2BGRA"/>
                <value name="COLOR_BayerGB2RGBA" value="COLOR_BayerGR2BGRA"/>
                <value name="COLOR_BayerRG2RGBA" value="COLOR_BayerBG2BGRA"/>
                <value name="COLOR_BayerGR2RGBA" value="COLOR_BayerGB2BGRA"/>
                <value name="COLOR_COLORCVT_MAX" value="143"/>
            </enum>
            <enum threadsafety="unspecified" name="ColormapTypes" fullname="cv::ColormapTypes" href="cv.html#ColormapTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="4274">
                <value name="COLORMAP_AUTUMN" value="0"/>
                <value name="COLORMAP_BONE" value="1"/>
                <value name="COLORMAP_JET" value="2"/>
                <value name="COLORMAP_WINTER" value="3"/>
                <value name="COLORMAP_RAINBOW" value="4"/>
                <value name="COLORMAP_OCEAN" value="5"/>
                <value name="COLORMAP_SUMMER" value="6"/>
                <value name="COLORMAP_SPRING" value="7"/>
                <value name="COLORMAP_COOL" value="8"/>
                <value name="COLORMAP_HSV" value="9"/>
                <value name="COLORMAP_PINK" value="10"/>
                <value name="COLORMAP_HOT" value="11"/>
                <value name="COLORMAP_PARULA" value="12"/>
                <value name="COLORMAP_MAGMA" value="13"/>
                <value name="COLORMAP_INFERNO" value="14"/>
                <value name="COLORMAP_PLASMA" value="15"/>
                <value name="COLORMAP_VIRIDIS" value="16"/>
                <value name="COLORMAP_CIVIDIS" value="17"/>
                <value name="COLORMAP_TWILIGHT" value="18"/>
                <value name="COLORMAP_TWILIGHT_SHIFTED" value="19"/>
                <value name="COLORMAP_TURBO" value="20"/>
                <value name="COLORMAP_DEEPGREEN" value="21"/>
            </enum>
            <enum threadsafety="unspecified" name="ConnectedComponentsAlgorithmsTypes" fullname="cv::ConnectedComponentsAlgorithmsTypes" href="cv.html#ConnectedComponentsAlgorithmsTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="407">
                <value name="CCL_WU" value="0"/>
                <value name="CCL_DEFAULT" value="-1"/>
                <value name="CCL_GRANA" value="1"/>
            </enum>
            <enum threadsafety="unspecified" name="ConnectedComponentsTypes" fullname="cv::ConnectedComponentsTypes" href="cv.html#ConnectedComponentsTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="393">
                <value name="CC_STAT_LEFT" value="0"/>
                <value name="CC_STAT_TOP" value="1"/>
                <value name="CC_STAT_WIDTH" value="2"/>
                <value name="CC_STAT_HEIGHT" value="3"/>
                <value name="CC_STAT_AREA" value="4"/>
                <value name="CC_STAT_MAX" value="5"/>
            </enum>
            <enum threadsafety="unspecified" name="ContourApproximationModes" fullname="cv::ContourApproximationModes" href="cv.html#ContourApproximationModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="431">
                <value name="CHAIN_APPROX_NONE" value="1"/>
                <value name="CHAIN_APPROX_SIMPLE" value="2"/>
                <value name="CHAIN_APPROX_TC89_L1" value="3"/>
                <value name="CHAIN_APPROX_TC89_KCOS" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="DistanceTransformLabelTypes" fullname="cv::DistanceTransformLabelTypes" href="cv.html#DistanceTransformLabelTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="368">
                <value name="DIST_LABEL_CCOMP" value="0"/>
                <value name="DIST_LABEL_PIXEL" value="1"/>
            </enum>
            <enum threadsafety="unspecified" name="DistanceTransformMasks" fullname="cv::DistanceTransformMasks" href="cv.html#DistanceTransformMasks-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="312">
                <value name="DIST_MASK_3" value="3"/>
                <value name="DIST_MASK_5" value="5"/>
                <value name="DIST_MASK_PRECISE" value="0"/>
            </enum>
            <enum threadsafety="unspecified" name="DistanceTypes" fullname="cv::DistanceTypes" href="cv.html#DistanceTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="300">
                <value name="DIST_USER" value="-1"/>
                <value name="DIST_L1" value="1"/>
                <value name="DIST_L2" value="2"/>
                <value name="DIST_C" value="3"/>
                <value name="DIST_L12" value="4"/>
                <value name="DIST_FAIR" value="5"/>
                <value name="DIST_WELSCH" value="6"/>
                <value name="DIST_HUBER" value="7"/>
            </enum>
            <enum threadsafety="unspecified" name="FloodFillFlags" fullname="cv::FloodFillFlags" href="cv.html#FloodFillFlags-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="377">
                <value name="FLOODFILL_FIXED_RANGE" value="1&lt;&lt;16"/>
                <value name="FLOODFILL_MASK_ONLY" value="1&lt;&lt;17"/>
            </enum>
            <enum threadsafety="unspecified" name="GrabCutClasses" fullname="cv::GrabCutClasses" href="cv.html#GrabCutClasses-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="345">
                <value name="GC_BGD" value="0"/>
                <value name="GC_FGD" value="1"/>
                <value name="GC_PR_BGD" value="2"/>
                <value name="GC_PR_FGD" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="GrabCutModes" fullname="cv::GrabCutModes" href="cv.html#GrabCutModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="353">
                <value name="GC_INIT_WITH_RECT" value="0"/>
                <value name="GC_INIT_WITH_MASK" value="1"/>
                <value name="GC_EVAL" value="2"/>
                <value name="GC_EVAL_FREEZE_MODEL" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="HersheyFonts" fullname="cv::HersheyFonts" href="cv.html#HersheyFonts-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="818">
                <value name="FONT_HERSHEY_SIMPLEX" value="0"/>
                <value name="FONT_HERSHEY_PLAIN" value="1"/>
                <value name="FONT_HERSHEY_DUPLEX" value="2"/>
                <value name="FONT_HERSHEY_COMPLEX" value="3"/>
                <value name="FONT_HERSHEY_TRIPLEX" value="4"/>
                <value name="FONT_HERSHEY_COMPLEX_SMALL" value="5"/>
                <value name="FONT_HERSHEY_SCRIPT_SIMPLEX" value="6"/>
                <value name="FONT_HERSHEY_SCRIPT_COMPLEX" value="7"/>
                <value name="FONT_ITALIC" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="HistCompMethods" fullname="cv::HistCompMethods" href="cv.html#HistCompMethods-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="497">
                <value name="HISTCMP_CORREL" value="0"/>
                <value name="HISTCMP_CHISQR" value="1"/>
                <value name="HISTCMP_INTERSECT" value="2"/>
                <value name="HISTCMP_BHATTACHARYYA" value="3"/>
                <value name="HISTCMP_HELLINGER" value="HISTCMP_BHATTACHARYYA"/>
                <value name="HISTCMP_CHISQR_ALT" value="4"/>
                <value name="HISTCMP_KL_DIV" value="5"/>
            </enum>
            <enum threadsafety="unspecified" name="HoughModes" fullname="cv::HoughModes" href="cv.html#HoughModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="465">
                <value name="HOUGH_STANDARD" value="0"/>
                <value name="HOUGH_PROBABILISTIC" value="1"/>
                <value name="HOUGH_MULTI_SCALE" value="2"/>
                <value name="HOUGH_GRADIENT" value="3"/>
                <value name="HOUGH_GRADIENT_ALT" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="InterpolationFlags" fullname="cv::InterpolationFlags" href="cv.html#InterpolationFlags-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="245">
                <value name="INTER_NEAREST" value="0"/>
                <value name="INTER_LINEAR" value="1"/>
                <value name="INTER_CUBIC" value="2"/>
                <value name="INTER_AREA" value="3"/>
                <value name="INTER_LANCZOS4" value="4"/>
                <value name="INTER_LINEAR_EXACT" value="5"/>
                <value name="INTER_NEAREST_EXACT" value="6"/>
                <value name="INTER_MAX" value="7"/>
                <value name="WARP_FILL_OUTLIERS" value="8"/>
                <value name="WARP_INVERSE_MAP" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="InterpolationMasks" fullname="cv::InterpolationMasks" href="cv.html#InterpolationMasks-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="286">
                <value name="INTER_BITS" value="5"/>
                <value name="INTER_BITS2" value="INTER_BITS * 2"/>
                <value name="INTER_TAB_SIZE" value="1&lt;&lt;INTER_BITS"/>
                <value name="INTER_TAB_SIZE2" value="INTER_TAB_SIZE * INTER_TAB_SIZE"/>
            </enum>
            <enum threadsafety="unspecified" name="LineSegmentDetectorModes" fullname="cv::LineSegmentDetectorModes" href="cv.html#LineSegmentDetectorModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="485">
                <value name="LSD_REFINE_NONE" value="0"/>
                <value name="LSD_REFINE_STD" value="1"/>
                <value name="LSD_REFINE_ADV" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="LineTypes" fullname="cv::LineTypes" href="cv.html#LineTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="808">
                <value name="FILLED" value="-1"/>
                <value name="LINE_4" value="4"/>
                <value name="LINE_8" value="8"/>
                <value name="LINE_AA" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="MarkerTypes" fullname="cv::MarkerTypes" href="cv.html#MarkerTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="833">
                <value name="MARKER_CROSS" value="0"/>
                <value name="MARKER_TILTED_CROSS" value="1"/>
                <value name="MARKER_STAR" value="2"/>
                <value name="MARKER_DIAMOND" value="3"/>
                <value name="MARKER_SQUARE" value="4"/>
                <value name="MARKER_TRIANGLE_UP" value="5"/>
                <value name="MARKER_TRIANGLE_DOWN" value="6"/>
            </enum>
            <enum threadsafety="unspecified" name="MorphShapes" fullname="cv::MorphShapes" href="cv.html#MorphShapes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="231">
                <value name="MORPH_RECT" value="0"/>
                <value name="MORPH_CROSS" value="1"/>
                <value name="MORPH_ELLIPSE" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="MorphTypes" fullname="cv::MorphTypes" href="cv.html#MorphTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="213">
                <value name="MORPH_ERODE" value="0"/>
                <value name="MORPH_DILATE" value="1"/>
                <value name="MORPH_OPEN" value="2"/>
                <value name="MORPH_CLOSE" value="3"/>
                <value name="MORPH_GRADIENT" value="4"/>
                <value name="MORPH_TOPHAT" value="5"/>
                <value name="MORPH_BLACKHAT" value="6"/>
                <value name="MORPH_HITMISS" value="7"/>
            </enum>
            <enum threadsafety="unspecified" name="RectanglesIntersectTypes" fullname="cv::RectanglesIntersectTypes" href="cv.html#RectanglesIntersectTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="799">
                <value name="INTERSECT_NONE" value="0"/>
                <value name="INTERSECT_PARTIAL" value="1"/>
                <value name="INTERSECT_FULL" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="RetrievalModes" fullname="cv::RetrievalModes" href="cv.html#RetrievalModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="414">
                <value name="RETR_EXTERNAL" value="0"/>
                <value name="RETR_LIST" value="1"/>
                <value name="RETR_CCOMP" value="2"/>
                <value name="RETR_TREE" value="3"/>
                <value name="RETR_FLOODFILL" value="4"/>
            </enum>
            <enum threadsafety="unspecified" name="ShapeMatchModes" fullname="cv::ShapeMatchModes" href="cv.html#ShapeMatchModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="453">
                <value name="CONTOURS_MATCH_I1" value="1"/>
                <value name="CONTOURS_MATCH_I2" value="2"/>
                <value name="CONTOURS_MATCH_I3" value="3"/>
            </enum>
            <enum threadsafety="unspecified" name="SpecialFilter" fullname="cv::SpecialFilter" href="cv.html#SpecialFilter-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="208">
                <value name="FILTER_SCHARR" value="-1"/>
            </enum>
            <enum threadsafety="unspecified" name="TemplateMatchModes" fullname="cv::TemplateMatchModes" href="cv.html#TemplateMatchModes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="3672">
                <value name="TM_SQDIFF" value="0"/>
            </enum>
            <enum threadsafety="unspecified" name="ThresholdTypes" fullname="cv::ThresholdTypes" href="cv.html#ThresholdTypes-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="320">
                <value name="THRESH_BINARY" value="0"/>
                <value name="THRESH_BINARY_INV" value="1"/>
                <value name="THRESH_TRUNC" value="2"/>
                <value name="THRESH_TOZERO" value="3"/>
                <value name="THRESH_TOZERO_INV" value="4"/>
                <value name="THRESH_MASK" value="7"/>
                <value name="THRESH_OTSU" value="8"/>
                <value name="THRESH_TRIANGLE" value="16"/>
            </enum>
            <enum threadsafety="unspecified" name="WarpPolarMode" fullname="cv::WarpPolarMode" href="cv.html#WarpPolarMode-enum" status="active" access="public" location="imgproc.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc.hpp" lineno="280">
                <value name="WARP_POLAR_LINEAR" value="0"/>
                <value name="WARP_POLAR_LOG" value="256"/>
            </enum>
            <namespace threadsafety="unspecified" name="segmentation" fullname="cv::segmentation" href="cv-segmentation.html" status="active" access="public" location="segmentation.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/segmentation.hpp" lineno="12">
                <class threadsafety="unspecified" name="IntelligentScissorsMB" fullname="cv::segmentation::IntelligentScissorsMB" href="cv-segmentation-intelligentscissorsmb.html" status="active" access="public" location="segmentation.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/segmentation.hpp" lineno="30">
                    <function threadsafety="unspecified" name="IntelligentScissorsMB" fullname="cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB" href="cv-segmentation-intelligentscissorsmb.html#IntelligentScissorsMB" status="active" access="public" location="segmentation.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/segmentation.hpp" lineno="33" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP IntelligentScissorsMB()"/>
                    <function threadsafety="unspecified" name="getImpl" fullname="cv::segmentation::IntelligentScissorsMB::getImpl" href="cv-segmentation-intelligentscissorsmb.html#getImpl" status="active" access="public" location="segmentation.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/segmentation.hpp" lineno="130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Impl *" signature="Impl * getImpl() const"/>
                    <variable threadsafety="unspecified" name="impl" fullname="cv::segmentation::IntelligentScissorsMB::impl" href="cv-segmentation-intelligentscissorsmb.html#impl-var" status="active" access="protected" location="segmentation.hpp" filepath="/usr/local/include/opencv4/opencv2/imgproc/segmentation.hpp" lineno="132" type="std::shared_ptr&lt;Impl&gt;" static="false"/>
                </class>
            </namespace>
            <namespace threadsafety="unspecified" name="ml" fullname="cv::ml" href="cv-ml.html" status="active" access="public" location="ml.inl.hpp" filepath="/usr/local/include/opencv4/opencv2/ml/ml.inl.hpp" lineno="8"/>
            <class threadsafety="unspecified" name="BaseCascadeClassifier" fullname="cv::BaseCascadeClassifier" href="cv-basecascadeclassifier.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="174" bases="cv::Algorithm">
                <class threadsafety="unspecified" name="MaskGenerator" fullname="cv::BaseCascadeClassifier::MaskGenerator" href="cv-basecascadeclassifier-maskgenerator.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="207">
                    <function threadsafety="unspecified" name="generateMask" fullname="cv::BaseCascadeClassifier::MaskGenerator::generateMask" href="cv-basecascadeclassifier-maskgenerator.html#generateMask" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="211" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Mat" signature="Mat generateMask(const Mat &amp;src) = 0">
                        <parameter left="const Mat &amp;" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initializeMask" fullname="cv::BaseCascadeClassifier::MaskGenerator::initializeMask" href="cv-basecascadeclassifier-maskgenerator.html#initializeMask" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="212" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void initializeMask(const Mat &amp;src)">
                        <parameter left="const Mat &amp;" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~MaskGenerator" fullname="cv::BaseCascadeClassifier::MaskGenerator::~MaskGenerator" href="cv-basecascadeclassifier-maskgenerator.html#dtor.MaskGenerator" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="210" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~MaskGenerator()"/>
                </class>
                <function threadsafety="unspecified" name="getMaskGenerator" fullname="cv::BaseCascadeClassifier::getMaskGenerator" href="cv-basecascadeclassifier.html#getMaskGenerator" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="215" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;MaskGenerator&gt;" signature="Ptr&lt;MaskGenerator&gt; getMaskGenerator() = 0"/>
                <function threadsafety="unspecified" name="load" fullname="cv::BaseCascadeClassifier::load" href="cv-basecascadeclassifier.html#load" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="179" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool load(const String &amp;filename) = 0">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <function threadsafety="unspecified" name="getOldCascade" fullname="cv::BaseCascadeClassifier::getOldCascade" href="cv-basecascadeclassifier.html#getOldCascade" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="205" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * getOldCascade() = 0"/>
                <function threadsafety="unspecified" name="setMaskGenerator" fullname="cv::BaseCascadeClassifier::setMaskGenerator" href="cv-basecascadeclassifier.html#setMaskGenerator" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="214" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaskGenerator(const Ptr&lt;MaskGenerator&gt; &amp;maskGenerator) = 0">
                    <parameter left="const Ptr&lt;MaskGenerator&gt; &amp;" right="" name="maskGenerator" default=""/>
                </function>
                <function threadsafety="unspecified" name="~BaseCascadeClassifier" fullname="cv::BaseCascadeClassifier::~BaseCascadeClassifier" href="cv-basecascadeclassifier.html#dtor.BaseCascadeClassifier" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="177" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~BaseCascadeClassifier()"/>
                <function threadsafety="unspecified" name="getOriginalWindowSize" fullname="cv::BaseCascadeClassifier::getOriginalWindowSize" href="cv-basecascadeclassifier.html#getOriginalWindowSize" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="203" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Size" signature="Size getOriginalWindowSize() const = 0"/>
                <function threadsafety="unspecified" name="isOldFormatCascade" fullname="cv::BaseCascadeClassifier::isOldFormatCascade" href="cv-basecascadeclassifier.html#isOldFormatCascade" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="202" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isOldFormatCascade() const = 0"/>
                <function threadsafety="unspecified" name="getFeatureType" fullname="cv::BaseCascadeClassifier::getFeatureType" href="cv-basecascadeclassifier.html#getFeatureType" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="204" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getFeatureType() const = 0"/>
            </class>
            <class threadsafety="unspecified" name="CascadeClassifier" fullname="cv::CascadeClassifier" href="cv-cascadeclassifier.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="224">
                <function threadsafety="unspecified" name="CascadeClassifier" fullname="cv::CascadeClassifier::CascadeClassifier" href="cv-cascadeclassifier.html#CascadeClassifier" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="227" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP CascadeClassifier()"/>
                <function threadsafety="unspecified" name="CascadeClassifier" fullname="cv::CascadeClassifier::CascadeClassifier" href="cv-cascadeclassifier.html#CascadeClassifier-1" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="232" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP CascadeClassifier(const String &amp;filename)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <function threadsafety="unspecified" name="getMaskGenerator" fullname="cv::CascadeClassifier::getMaskGenerator" href="cv-cascadeclassifier.html#getMaskGenerator" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="335" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;BaseCascadeClassifier::MaskGenerator&gt;" signature="Ptr&lt;BaseCascadeClassifier::MaskGenerator&gt; getMaskGenerator()"/>
                <function threadsafety="unspecified" name="getOldCascade" fullname="cv::CascadeClassifier::getOldCascade" href="cv-cascadeclassifier.html#getOldCascade" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="330" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * getOldCascade()"/>
                <function threadsafety="unspecified" name="setMaskGenerator" fullname="cv::CascadeClassifier::setMaskGenerator" href="cv-cascadeclassifier.html#setMaskGenerator" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="334" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaskGenerator(const Ptr&lt;BaseCascadeClassifier::MaskGenerator&gt; &amp;maskGenerator)">
                    <parameter left="const Ptr&lt;BaseCascadeClassifier::MaskGenerator&gt; &amp;" right="" name="maskGenerator" default=""/>
                </function>
                <function threadsafety="unspecified" name="~CascadeClassifier" fullname="cv::CascadeClassifier::~CascadeClassifier" href="cv-cascadeclassifier.html#dtor.CascadeClassifier" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="233" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~CascadeClassifier()"/>
                <variable threadsafety="unspecified" name="cc" fullname="cv::CascadeClassifier::cc" href="cv-cascadeclassifier.html#cc-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="337" type="Ptr&lt;BaseCascadeClassifier&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="DetectionROI" fullname="cv::DetectionROI" href="cv-detectionroi.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="345">
                <variable threadsafety="unspecified" name="confidences" fullname="cv::DetectionROI::confidences" href="cv-detectionroi.html#confidences-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="352" type="std::vector&lt;double&gt;" static="false"/>
                <variable threadsafety="unspecified" name="locations" fullname="cv::DetectionROI::locations" href="cv-detectionroi.html#locations-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="350" type="std::vector&lt;cv::Point&gt;" static="false"/>
                <variable threadsafety="unspecified" name="scale" fullname="cv::DetectionROI::scale" href="cv-detectionroi.html#scale-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="348" type="double" static="false"/>
            </class>
            <class threadsafety="unspecified" name="HOGDescriptor" fullname="cv::HOGDescriptor" href="cv-hogdescriptor.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="372">
                <enum threadsafety="unspecified" name="DescriptorStorageFormat" fullname="cv::HOGDescriptor::DescriptorStorageFormat" href="cv-hogdescriptor.html#DescriptorStorageFormat-enum" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="379">
                    <value name="DESCR_FORMAT_COL_BY_COL" value="0"/>
                    <value name="DESCR_FORMAT_ROW_BY_ROW" value="1"/>
                </enum>
                <enum threadsafety="unspecified" name="HistogramNormType" fullname="cv::HOGDescriptor::HistogramNormType" href="cv-hogdescriptor.html#HistogramNormType-enum" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="375">
                    <value name="L2Hys" value="0"/>
                </enum>
                <function threadsafety="unspecified" name="HOGDescriptor" fullname="cv::HOGDescriptor::HOGDescriptor" href="cv-hogdescriptor.html#HOGDescriptor" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="385" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HOGDescriptor()"/>
                <function threadsafety="unspecified" name="HOGDescriptor" fullname="cv::HOGDescriptor::HOGDescriptor" href="cv-hogdescriptor.html#HOGDescriptor-1" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="405" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HOGDescriptor(Size _winSize, Size _blockSize, Size _blockStride, Size _cellSize, int _nbins, int _derivAperture, double _winSigma, HOGDescriptor::HistogramNormType _histogramNormType, double _L2HysThreshold, bool _gammaCorrection, int _nlevels, bool _signedGradient)">
                    <parameter left="Size" right="" name="_winSize" default=""/>
                    <parameter left="Size" right="" name="_blockSize" default=""/>
                    <parameter left="Size" right="" name="_blockStride" default=""/>
                    <parameter left="Size" right="" name="_cellSize" default=""/>
                    <parameter left="int" right="" name="_nbins" default=""/>
                    <parameter left="int" right="" name="_derivAperture" default="1"/>
                    <parameter left="double" right="" name="_winSigma" default="-1"/>
                    <parameter left="HOGDescriptor::HistogramNormType" right="" name="_histogramNormType" default="HOGDescriptor::L2Hys"/>
                    <parameter left="double" right="" name="_L2HysThreshold" default="0.2"/>
                    <parameter left="bool" right="" name="_gammaCorrection" default="false"/>
                    <parameter left="int" right="" name="_nlevels" default="HOGDescriptor::DEFAULT_NLEVELS"/>
                    <parameter left="bool" right="" name="_signedGradient" default="false"/>
                </function>
                <function threadsafety="unspecified" name="HOGDescriptor" fullname="cv::HOGDescriptor::HOGDescriptor" href="cv-hogdescriptor.html#HOGDescriptor-2" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="419" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP HOGDescriptor(const String &amp;filename)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                </function>
                <function threadsafety="unspecified" name="HOGDescriptor" fullname="cv::HOGDescriptor::HOGDescriptor" href="cv-hogdescriptor.html#HOGDescriptor-3" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="427" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HOGDescriptor(const HOGDescriptor &amp;d)">
                    <parameter left="const HOGDescriptor &amp;" right="" name="d" default=""/>
                </function>
                <function threadsafety="unspecified" name="read" fullname="cv::HOGDescriptor::read" href="cv-hogdescriptor.html#read" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="458" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool read(FileNode &amp;fn)">
                    <parameter left="FileNode &amp;" right="" name="fn" default=""/>
                </function>
                <function threadsafety="unspecified" name="~HOGDescriptor" fullname="cv::HOGDescriptor::~HOGDescriptor" href="cv-hogdescriptor.html#dtor.HOGDescriptor" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="434" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HOGDescriptor()"/>
                <function threadsafety="unspecified" name="copyTo" fullname="cv::HOGDescriptor::copyTo" href="cv-hogdescriptor.html#copyTo" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="481" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copyTo(HOGDescriptor &amp;c) const">
                    <parameter left="HOGDescriptor &amp;" right="" name="c" default=""/>
                </function>
                <function threadsafety="unspecified" name="groupRectangles" fullname="cv::HOGDescriptor::groupRectangles" href="cv-hogdescriptor.html#groupRectangles" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="667" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void groupRectangles(std::vector&lt;cv::Rect&gt; &amp;rectList, std::vector&lt;double&gt; &amp;weights, int groupThreshold, double eps) const">
                    <parameter left="std::vector&lt;cv::Rect&gt; &amp;" right="" name="rectList" default=""/>
                    <parameter left="std::vector&lt;double&gt; &amp;" right="" name="weights" default=""/>
                    <parameter left="int" right="" name="groupThreshold" default=""/>
                    <parameter left="double" right="" name="eps" default=""/>
                </function>
                <function threadsafety="unspecified" name="write" fullname="cv::HOGDescriptor::write" href="cv-hogdescriptor.html#write" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="464" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void write(FileStorage &amp;fs, const String &amp;objname) const">
                    <parameter left="FileStorage &amp;" right="" name="fs" default=""/>
                    <parameter left="const String &amp;" right="" name="objname" default=""/>
                </function>
                <variable threadsafety="unspecified" name="DEFAULT_NLEVELS" fullname="cv::HOGDescriptor::DEFAULT_NLEVELS" href="cv-hogdescriptor.html#DEFAULT_NLEVELS-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="378" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="free_coef" fullname="cv::HOGDescriptor::free_coef" href="cv-hogdescriptor.html#free_coef-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="623" type="float" static="false"/>
                <variable threadsafety="unspecified" name="oclSvmDetector" fullname="cv::HOGDescriptor::oclSvmDetector" href="cv-hogdescriptor.html#oclSvmDetector-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="620" type="UMat" static="false"/>
            </class>
            <class threadsafety="unspecified" name="QRCodeDetector" fullname="cv::QRCodeDetector" href="cv-qrcodedetector.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="670">
                <function threadsafety="unspecified" name="QRCodeDetector" fullname="cv::QRCodeDetector::QRCodeDetector" href="cv-qrcodedetector.html#QRCodeDetector" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="673" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP QRCodeDetector()"/>
                <function threadsafety="unspecified" name="~QRCodeDetector" fullname="cv::QRCodeDetector::~QRCodeDetector" href="cv-qrcodedetector.html#dtor.QRCodeDetector" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="674" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~QRCodeDetector()"/>
                <variable threadsafety="unspecified" name="p" fullname="cv::QRCodeDetector::p" href="cv-qrcodedetector.html#p-var" status="active" access="protected" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="764" type="Ptr&lt;Impl&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="SimilarRects" fullname="cv::SimilarRects" href="cv-similarrects.html" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="121">
                <function threadsafety="unspecified" name="SimilarRects" fullname="cv::SimilarRects::SimilarRects" href="cv-similarrects.html#SimilarRects" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="124" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SimilarRects(double _eps)">
                    <parameter left="double" right="" name="_eps" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cv::SimilarRects::operator()" href="cv-similarrects.html#operator-28-29" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="125" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const Rect &amp;r1, const Rect &amp;r2) const">
                    <parameter left="const Rect &amp;" right="" name="r1" default=""/>
                    <parameter left="const Rect &amp;" right="" name="r2" default=""/>
                </function>
                <variable threadsafety="unspecified" name="eps" fullname="cv::SimilarRects::eps" href="cv-similarrects.html#eps-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="133" type="double" static="false"/>
            </class>
            <variable threadsafety="unspecified" name="CASCADE_DO_CANNY_PRUNING" fullname="cv::CASCADE_DO_CANNY_PRUNING" href="cv.html#CASCADE_DO_CANNY_PRUNING-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="168" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CASCADE_DO_ROUGH_SEARCH" fullname="cv::CASCADE_DO_ROUGH_SEARCH" href="cv.html#CASCADE_DO_ROUGH_SEARCH-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="172" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CASCADE_FIND_BIGGEST_OBJECT" fullname="cv::CASCADE_FIND_BIGGEST_OBJECT" href="cv.html#CASCADE_FIND_BIGGEST_OBJECT-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="170" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CASCADE_SCALE_IMAGE" fullname="cv::CASCADE_SCALE_IMAGE" href="cv.html#CASCADE_SCALE_IMAGE-var" status="active" access="public" location="objdetect.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect.hpp" lineno="169" type="const int" static="true"/>
            <class threadsafety="unspecified" name="DetectionBasedTracker" fullname="cv::DetectionBasedTracker" href="cv-detectionbasedtracker.html" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="57">
                <class threadsafety="unspecified" name="ExtObject" fullname="cv::DetectionBasedTracker::ExtObject" href="cv-detectionbasedtracker-extobject.html" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="145">
                    <function threadsafety="unspecified" name="ExtObject" fullname="cv::DetectionBasedTracker::ExtObject::ExtObject" href="cv-detectionbasedtracker-extobject.html#ExtObject" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="150" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="ExtObject(int _id, cv::Rect _location, ObjectStatus _status)">
                        <parameter left="int" right="" name="_id" default=""/>
                        <parameter left="cv::Rect" right="" name="_location" default=""/>
                        <parameter left="ObjectStatus" right="" name="_status" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="id" fullname="cv::DetectionBasedTracker::ExtObject::id" href="cv-detectionbasedtracker-extobject.html#id-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="147" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="location" fullname="cv::DetectionBasedTracker::ExtObject::location" href="cv-detectionbasedtracker-extobject.html#location-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="148" type="cv::Rect" static="false"/>
                    <variable threadsafety="unspecified" name="status" fullname="cv::DetectionBasedTracker::ExtObject::status" href="cv-detectionbasedtracker-extobject.html#status-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="149" type="ObjectStatus" static="false"/>
                </class>
                <class threadsafety="unspecified" name="IDetector" fullname="cv::DetectionBasedTracker::IDetector" href="cv-detectionbasedtracker-idetector.html" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="68">
                    <function threadsafety="unspecified" name="IDetector" fullname="cv::DetectionBasedTracker::IDetector::IDetector" href="cv-detectionbasedtracker-idetector.html#IDetector" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="71" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="IDetector()"/>
                    <function threadsafety="unspecified" name="getScaleFactor" fullname="cv::DetectionBasedTracker::IDetector::getScaleFactor" href="cv-detectionbasedtracker-idetector.html#getScaleFactor" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float getScaleFactor()"/>
                    <function threadsafety="unspecified" name="getMinNeighbours" fullname="cv::DetectionBasedTracker::IDetector::getMinNeighbours" href="cv-detectionbasedtracker-idetector.html#getMinNeighbours" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getMinNeighbours()"/>
                    <function threadsafety="unspecified" name="detect" fullname="cv::DetectionBasedTracker::IDetector::detect" href="cv-detectionbasedtracker-idetector.html#detect" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="78" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detect(const cv::Mat &amp;image, std::vector&lt;cv::Rect&gt; &amp;objects) = 0">
                        <parameter left="const cv::Mat &amp;" right="" name="image" default=""/>
                        <parameter left="std::vector&lt;cv::Rect&gt; &amp;" right="" name="objects" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setMaxObjectSize" fullname="cv::DetectionBasedTracker::IDetector::setMaxObjectSize" href="cv-detectionbasedtracker-idetector.html#setMaxObjectSize" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMaxObjectSize(const cv::Size &amp;max)">
                        <parameter left="const cv::Size &amp;" right="" name="max" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setMinNeighbours" fullname="cv::DetectionBasedTracker::IDetector::setMinNeighbours" href="cv-detectionbasedtracker-idetector.html#setMinNeighbours" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMinNeighbours(int value)">
                        <parameter left="int" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setMinObjectSize" fullname="cv::DetectionBasedTracker::IDetector::setMinObjectSize" href="cv-detectionbasedtracker-idetector.html#setMinObjectSize" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMinObjectSize(const cv::Size &amp;min)">
                        <parameter left="const cv::Size &amp;" right="" name="min" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="setScaleFactor" fullname="cv::DetectionBasedTracker::IDetector::setScaleFactor" href="cv-detectionbasedtracker-idetector.html#setScaleFactor" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setScaleFactor(float value)">
                        <parameter left="float" right="" name="value" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~IDetector" fullname="cv::DetectionBasedTracker::IDetector::~IDetector" href="cv-detectionbasedtracker-idetector.html#dtor.IDetector" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="112" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~IDetector()"/>
                    <function threadsafety="unspecified" name="getMaxObjectSize" fullname="cv::DetectionBasedTracker::IDetector::getMaxObjectSize" href="cv-detectionbasedtracker-idetector.html#getMaxObjectSize" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="92" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Size" signature="cv::Size getMaxObjectSize() const"/>
                    <function threadsafety="unspecified" name="getMinObjectSize" fullname="cv::DetectionBasedTracker::IDetector::getMinObjectSize" href="cv-detectionbasedtracker-idetector.html#getMinObjectSize" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="88" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Size" signature="cv::Size getMinObjectSize() const"/>
                    <variable threadsafety="unspecified" name="maxObjSize" fullname="cv::DetectionBasedTracker::IDetector::maxObjSize" href="cv-detectionbasedtracker-idetector.html#maxObjSize-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="116" type="cv::Size" static="false"/>
                    <variable threadsafety="unspecified" name="minNeighbours" fullname="cv::DetectionBasedTracker::IDetector::minNeighbours" href="cv-detectionbasedtracker-idetector.html#minNeighbours-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="117" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="minObjSize" fullname="cv::DetectionBasedTracker::IDetector::minObjSize" href="cv-detectionbasedtracker-idetector.html#minObjSize-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="115" type="cv::Size" static="false"/>
                    <variable threadsafety="unspecified" name="scaleFactor" fullname="cv::DetectionBasedTracker::IDetector::scaleFactor" href="cv-detectionbasedtracker-idetector.html#scaleFactor-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="118" type="float" static="false"/>
                </class>
                <class threadsafety="unspecified" name="InnerParameters" fullname="cv::DetectionBasedTracker::InnerParameters" href="cv-detectionbasedtracker-innerparameters.html" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="165">
                    <function threadsafety="unspecified" name="InnerParameters" fullname="cv::DetectionBasedTracker::InnerParameters::InnerParameters" href="cv-detectionbasedtracker-innerparameters.html#InnerParameters" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="176" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="InnerParameters()"/>
                    <variable threadsafety="unspecified" name="coeffObjectSizeToTrack" fullname="cv::DetectionBasedTracker::InnerParameters::coeffObjectSizeToTrack" href="cv-detectionbasedtracker-innerparameters.html#coeffObjectSizeToTrack-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="173" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="coeffObjectSpeedUsingInPrediction" fullname="cv::DetectionBasedTracker::InnerParameters::coeffObjectSpeedUsingInPrediction" href="cv-detectionbasedtracker-innerparameters.html#coeffObjectSpeedUsingInPrediction-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="174" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="coeffTrackingWindowSize" fullname="cv::DetectionBasedTracker::InnerParameters::coeffTrackingWindowSize" href="cv-detectionbasedtracker-innerparameters.html#coeffTrackingWindowSize-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="172" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="numLastPositionsToTrack" fullname="cv::DetectionBasedTracker::InnerParameters::numLastPositionsToTrack" href="cv-detectionbasedtracker-innerparameters.html#numLastPositionsToTrack-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="167" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="numStepsToShowWithoutDetecting" fullname="cv::DetectionBasedTracker::InnerParameters::numStepsToShowWithoutDetecting" href="cv-detectionbasedtracker-innerparameters.html#numStepsToShowWithoutDetecting-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="170" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="numStepsToTrackWithoutDetectingIfObjectHasNotBeenShown" fullname="cv::DetectionBasedTracker::InnerParameters::numStepsToTrackWithoutDetectingIfObjectHasNotBeenShown" href="cv-detectionbasedtracker-innerparameters.html#numStepsToTrackWithoutDetectingIfObjectHasNotBeenShown-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="169" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="numStepsToWaitBeforeFirstShow" fullname="cv::DetectionBasedTracker::InnerParameters::numStepsToWaitBeforeFirstShow" href="cv-detectionbasedtracker-innerparameters.html#numStepsToWaitBeforeFirstShow-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="168" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="Parameters" fullname="cv::DetectionBasedTracker::Parameters" href="cv-detectionbasedtracker-parameters.html" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="60">
                    <function threadsafety="unspecified" name="Parameters" fullname="cv::DetectionBasedTracker::Parameters::Parameters" href="cv-detectionbasedtracker-parameters.html#Parameters" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="65" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Parameters()"/>
                    <variable threadsafety="unspecified" name="maxTrackLifetime" fullname="cv::DetectionBasedTracker::Parameters::maxTrackLifetime" href="cv-detectionbasedtracker-parameters.html#maxTrackLifetime-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="62" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="minDetectionPeriod" fullname="cv::DetectionBasedTracker::Parameters::minDetectionPeriod" href="cv-detectionbasedtracker-parameters.html#minDetectionPeriod-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="63" type="int" static="false"/>
                </class>
                <class threadsafety="unspecified" name="TrackedObject" fullname="cv::DetectionBasedTracker::TrackedObject" href="cv-detectionbasedtracker-trackedobject.html" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="181">
                    <typedef threadsafety="unspecified" name="PositionsVector" fullname="cv::DetectionBasedTracker::TrackedObject::PositionsVector" href="cv-detectionbasedtracker-trackedobject.html#PositionsVector-typedef" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="183"/>
                    <function threadsafety="unspecified" name="TrackedObject" fullname="cv::DetectionBasedTracker::TrackedObject::TrackedObject" href="cv-detectionbasedtracker-trackedobject.html#TrackedObject" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="191" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TrackedObject(const cv::Rect &amp;rect)">
                        <parameter left="const cv::Rect &amp;" right="" name="rect" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getNextId" fullname="cv::DetectionBasedTracker::TrackedObject::getNextId" href="cv-detectionbasedtracker-trackedobject.html#getNextId" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="197" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getNextId()"/>
                    <variable threadsafety="unspecified" name="id" fullname="cv::DetectionBasedTracker::TrackedObject::id" href="cv-detectionbasedtracker-trackedobject.html#id-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="189" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="lastPositions" fullname="cv::DetectionBasedTracker::TrackedObject::lastPositions" href="cv-detectionbasedtracker-trackedobject.html#lastPositions-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="185" type="PositionsVector" static="false"/>
                    <variable threadsafety="unspecified" name="numDetectedFrames" fullname="cv::DetectionBasedTracker::TrackedObject::numDetectedFrames" href="cv-detectionbasedtracker-trackedobject.html#numDetectedFrames-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="187" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="numFramesNotDetected" fullname="cv::DetectionBasedTracker::TrackedObject::numFramesNotDetected" href="cv-detectionbasedtracker-trackedobject.html#numFramesNotDetected-var" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="188" type="int" static="false"/>
                </class>
                <enum threadsafety="unspecified" name="ObjectStatus" fullname="cv::DetectionBasedTracker::ObjectStatus" href="cv-detectionbasedtracker.html#ObjectStatus-enum" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="138">
                    <value name="DETECTED_NOT_SHOWN_YET" value="0"/>
                    <value name="DETECTED" value="1"/>
                    <value name="DETECTED_TEMPORARY_LOST" value="2"/>
                    <value name="WRONG_OBJECT" value="3"/>
                </enum>
                <typedef threadsafety="unspecified" name="Object" fullname="cv::DetectionBasedTracker::Object" href="cv-detectionbasedtracker.html#Object-typedef" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="134"/>
                <function threadsafety="unspecified" name="DetectionBasedTracker" fullname="cv::DetectionBasedTracker::DetectionBasedTracker" href="cv-detectionbasedtracker.html#DetectionBasedTracker" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="121" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DetectionBasedTracker(cv::Ptr&lt;IDetector&gt; mainDetector, cv::Ptr&lt;IDetector&gt; trackingDetector, const Parameters &amp;params)">
                    <parameter left="cv::Ptr&lt;IDetector&gt;" right="" name="mainDetector" default=""/>
                    <parameter left="cv::Ptr&lt;IDetector&gt;" right="" name="trackingDetector" default=""/>
                    <parameter left="const Parameters &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="run" fullname="cv::DetectionBasedTracker::run" href="cv-detectionbasedtracker.html#run" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="124" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool run()"/>
                <function threadsafety="unspecified" name="setParameters" fullname="cv::DetectionBasedTracker::setParameters" href="cv-detectionbasedtracker.html#setParameters" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="130" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool setParameters(const Parameters &amp;params)">
                    <parameter left="const Parameters &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="addObject" fullname="cv::DetectionBasedTracker::addObject" href="cv-detectionbasedtracker.html#addObject" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="158" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int addObject(const cv::Rect &amp;location)">
                    <parameter left="const cv::Rect &amp;" right="" name="location" default=""/>
                </function>
                <function threadsafety="unspecified" name="detectInRegion" fullname="cv::DetectionBasedTracker::detectInRegion" href="cv-detectionbasedtracker.html#detectInRegion" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="215" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detectInRegion(const cv::Mat &amp;img, const cv::Rect &amp;r, std::vector&lt;cv::Rect&gt; &amp;detectedObjectsInRegions)">
                    <parameter left="const cv::Mat &amp;" right="" name="img" default=""/>
                    <parameter left="const cv::Rect &amp;" right="" name="r" default=""/>
                    <parameter left="std::vector&lt;cv::Rect&gt; &amp;" right="" name="detectedObjectsInRegions" default=""/>
                </function>
                <function threadsafety="unspecified" name="process" fullname="cv::DetectionBasedTracker::process" href="cv-detectionbasedtracker.html#process" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="128" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void process(const cv::Mat &amp;imageGray)">
                    <parameter left="const cv::Mat &amp;" right="" name="imageGray" default=""/>
                </function>
                <function threadsafety="unspecified" name="resetTracking" fullname="cv::DetectionBasedTracker::resetTracking" href="cv-detectionbasedtracker.html#resetTracking" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="126" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void resetTracking()"/>
                <function threadsafety="unspecified" name="stop" fullname="cv::DetectionBasedTracker::stop" href="cv-detectionbasedtracker.html#stop" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="125" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stop()"/>
                <function threadsafety="unspecified" name="updateTrackedObjects" fullname="cv::DetectionBasedTracker::updateTrackedObjects" href="cv-detectionbasedtracker.html#updateTrackedObjects" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateTrackedObjects(const std::vector&lt;cv::Rect&gt; &amp;detectedObjects)">
                    <parameter left="const std::vector&lt;cv::Rect&gt; &amp;" right="" name="detectedObjects" default=""/>
                </function>
                <function threadsafety="unspecified" name="~DetectionBasedTracker" fullname="cv::DetectionBasedTracker::~DetectionBasedTracker" href="cv-detectionbasedtracker.html#dtor.DetectionBasedTracker" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="122" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~DetectionBasedTracker()"/>
                <function threadsafety="unspecified" name="getParameters" fullname="cv::DetectionBasedTracker::getParameters" href="cv-detectionbasedtracker.html#getParameters" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Parameters &amp;" signature="const Parameters &amp; getParameters() const"/>
                <function threadsafety="unspecified" name="calcTrackedObjectPositionToShow" fullname="cv::DetectionBasedTracker::calcTrackedObjectPositionToShow" href="cv-detectionbasedtracker.html#calcTrackedObjectPositionToShow" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="213" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Rect" signature="cv::Rect calcTrackedObjectPositionToShow(int i) const">
                    <parameter left="int" right="" name="i" default=""/>
                </function>
                <function threadsafety="unspecified" name="calcTrackedObjectPositionToShow" fullname="cv::DetectionBasedTracker::calcTrackedObjectPositionToShow" href="cv-detectionbasedtracker.html#calcTrackedObjectPositionToShow-1" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="214" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Rect" signature="cv::Rect calcTrackedObjectPositionToShow(int i, ObjectStatus &amp;status) const">
                    <parameter left="int" right="" name="i" default=""/>
                    <parameter left="ObjectStatus &amp;" right="" name="status" default=""/>
                </function>
                <function threadsafety="unspecified" name="getObjects" fullname="cv::DetectionBasedTracker::getObjects" href="cv-detectionbasedtracker.html#getObjects-2" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="155" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getObjects(std::vector&lt;ExtObject&gt; &amp;result) const">
                    <parameter left="std::vector&lt;ExtObject&gt; &amp;" right="" name="result" default=""/>
                </function>
                <function threadsafety="unspecified" name="getObjects" fullname="cv::DetectionBasedTracker::getObjects" href="cv-detectionbasedtracker.html#getObjects-1" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="136" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getObjects(std::vector&lt;Object&gt; &amp;result) const">
                    <parameter left="std::vector&lt;Object&gt; &amp;" right="" name="result" default=""/>
                </function>
                <function threadsafety="unspecified" name="getObjects" fullname="cv::DetectionBasedTracker::getObjects" href="cv-detectionbasedtracker.html#getObjects" status="active" access="public" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="135" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getObjects(std::vector&lt;cv::Rect&gt; &amp;result) const">
                    <parameter left="std::vector&lt;cv::Rect&gt; &amp;" right="" name="result" default=""/>
                </function>
                <variable threadsafety="unspecified" name="cascadeForTracking" fullname="cv::DetectionBasedTracker::cascadeForTracking" href="cv-detectionbasedtracker.html#cascadeForTracking-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="210" type="cv::Ptr&lt;IDetector&gt;" static="false"/>
                <variable threadsafety="unspecified" name="innerParameters" fullname="cv::DetectionBasedTracker::innerParameters" href="cv-detectionbasedtracker.html#innerParameters-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="179" type="InnerParameters" static="false"/>
                <variable threadsafety="unspecified" name="numTrackedSteps" fullname="cv::DetectionBasedTracker::numTrackedSteps" href="cv-detectionbasedtracker.html#numTrackedSteps-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="204" type="int" static="false"/>
                <variable threadsafety="unspecified" name="parameters" fullname="cv::DetectionBasedTracker::parameters" href="cv-detectionbasedtracker.html#parameters-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="178" type="Parameters" static="false"/>
                <variable threadsafety="unspecified" name="separateDetectionWork" fullname="cv::DetectionBasedTracker::separateDetectionWork" href="cv-detectionbasedtracker.html#separateDetectionWork-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="162" type="cv::Ptr&lt;SeparateDetectionWork&gt;" static="false"/>
                <variable threadsafety="unspecified" name="trackedObjects" fullname="cv::DetectionBasedTracker::trackedObjects" href="cv-detectionbasedtracker.html#trackedObjects-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="205" type="std::vector&lt;TrackedObject&gt;" static="false"/>
                <variable threadsafety="unspecified" name="weightsPositionsSmoothing" fullname="cv::DetectionBasedTracker::weightsPositionsSmoothing" href="cv-detectionbasedtracker.html#weightsPositionsSmoothing-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="207" type="std::vector&lt;float&gt;" static="false"/>
                <variable threadsafety="unspecified" name="weightsSizesSmoothing" fullname="cv::DetectionBasedTracker::weightsSizesSmoothing" href="cv-detectionbasedtracker.html#weightsSizesSmoothing-var" status="active" access="protected" location="detection_based_tracker.hpp" filepath="/usr/local/include/opencv4/opencv2/objdetect/detection_based_tracker.hpp" lineno="208" type="std::vector&lt;float&gt;" static="false"/>
            </class>
            <class threadsafety="unspecified" name="AlignExposures" fullname="cv::AlignExposures" href="cv-alignexposures.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="450" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="AlignMTB" fullname="cv::AlignMTB" href="cv-alignmtb.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="474" bases="cv::AlignExposures"/>
            <class threadsafety="unspecified" name="CalibrateCRF" fullname="cv::CalibrateCRF" href="cv-calibratecrf.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="531" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="CalibrateDebevec" fullname="cv::CalibrateDebevec" href="cv-calibratedebevec.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="549" bases="cv::CalibrateCRF"/>
            <class threadsafety="unspecified" name="CalibrateRobertson" fullname="cv::CalibrateRobertson" href="cv-calibraterobertson.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="577" bases="cv::CalibrateCRF"/>
            <class threadsafety="unspecified" name="MergeDebevec" fullname="cv::MergeDebevec" href="cv-mergedebevec.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="618" bases="cv::MergeExposures"/>
            <class threadsafety="unspecified" name="MergeExposures" fullname="cv::MergeExposures" href="cv-mergeexposures.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="598" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="MergeMertens" fullname="cv::MergeMertens" href="cv-mergemertens.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="641" bases="cv::MergeExposures"/>
            <class threadsafety="unspecified" name="MergeRobertson" fullname="cv::MergeRobertson" href="cv-mergerobertson.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="677" bases="cv::MergeExposures"/>
            <class threadsafety="unspecified" name="Tonemap" fullname="cv::Tonemap" href="cv-tonemap.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="336" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="TonemapDrago" fullname="cv::TonemapDrago" href="cv-tonemapdrago.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="368" bases="cv::Tonemap"/>
            <class threadsafety="unspecified" name="TonemapMantiuk" fullname="cv::TonemapMantiuk" href="cv-tonemapmantiuk.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="428" bases="cv::Tonemap"/>
            <class threadsafety="unspecified" name="TonemapReinhard" fullname="cv::TonemapReinhard" href="cv-tonemapreinhard.html" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="397" bases="cv::Tonemap"/>
            <variable threadsafety="unspecified" name="INPAINT_NS" fullname="cv::INPAINT_NS" href="cv.html#INPAINT_NS-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="96" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="INPAINT_TELEA" fullname="cv::INPAINT_TELEA" href="cv.html#INPAINT_TELEA-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="98" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="LDR_SIZE" fullname="cv::LDR_SIZE" href="cv.html#LDR_SIZE-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="332" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="MIXED_CLONE" fullname="cv::MIXED_CLONE" href="cv.html#MIXED_CLONE-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="719" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="MONOCHROME_TRANSFER" fullname="cv::MONOCHROME_TRANSFER" href="cv.html#MONOCHROME_TRANSFER-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="721" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="NORMAL_CLONE" fullname="cv::NORMAL_CLONE" href="cv.html#NORMAL_CLONE-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="716" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="NORMCONV_FILTER" fullname="cv::NORMCONV_FILTER" href="cv.html#NORMCONV_FILTER-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="801" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="RECURS_FILTER" fullname="cv::RECURS_FILTER" href="cv.html#RECURS_FILTER-var" status="active" access="public" location="photo.hpp" filepath="/usr/local/include/opencv4/opencv2/photo.hpp" lineno="799" type="const int" static="true"/>
            <class threadsafety="unspecified" name="Stitcher" fullname="cv::Stitcher" href="cv-stitcher.html" status="active" access="public" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="138">
                <enum threadsafety="unspecified" name="Mode" fullname="cv::Stitcher::Mode" href="cv-stitcher.html#Mode-enum" status="active" access="public" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="160">
                    <value name="PANORAMA" value="0"/>
                    <value name="SCANS" value="1"/>
                </enum>
                <enum threadsafety="unspecified" name="Status" fullname="cv::Stitcher::Status" href="cv-stitcher.html#Status-enum" status="active" access="public" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="152">
                    <value name="OK" value="0"/>
                    <value name="ERR_NEED_MORE_IMGS" value="1"/>
                    <value name="ERR_HOMOGRAPHY_EST_FAIL" value="2"/>
                    <value name="ERR_CAMERA_PARAMS_ADJUST_FAIL" value="3"/>
                </enum>
                <function threadsafety="unspecified" name="estimateCameraParams" fullname="cv::Stitcher::estimateCameraParams" href="cv-stitcher.html#estimateCameraParams" status="active" access="private" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="295" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Status" signature="Status estimateCameraParams()"/>
                <function threadsafety="unspecified" name="matchImages" fullname="cv::Stitcher::matchImages" href="cv-stitcher.html#matchImages" status="active" access="private" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="294" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Status" signature="Status matchImages()"/>
                <function threadsafety="unspecified" name="cameras" fullname="cv::Stitcher::cameras" href="cv-stitcher.html#cameras" status="active" access="public" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="289" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;detail::CameraParams&gt;" signature="std::vector&lt;detail::CameraParams&gt; cameras() const"/>
                <function threadsafety="unspecified" name="component" fullname="cv::Stitcher::component" href="cv-stitcher.html#component" status="active" access="public" location="stitching.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching.hpp" lineno="288" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::vector&lt;int&gt;" signature="std::vector&lt;int&gt; component() const"/>
            </class>
            <class threadsafety="unspecified" name="AffineWarper" fullname="cv::AffineWarper" href="cv-affinewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="159" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="CompressedRectilinearPortraitWarper" fullname="cv::CompressedRectilinearPortraitWarper" href="cv-compressedrectilinearportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="204" bases="cv::WarperCreator">
                <function threadsafety="unspecified" name="CompressedRectilinearPortraitWarper" fullname="cv::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper" href="cv-compressedrectilinearportraitwarper.html#CompressedRectilinearPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="208" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompressedRectilinearPortraitWarper(float A, float B)">
                    <parameter left="float" right="" name="A" default="1"/>
                    <parameter left="float" right="" name="B" default="1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="CompressedRectilinearWarper" fullname="cv::CompressedRectilinearWarper" href="cv-compressedrectilinearwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="193" bases="cv::WarperCreator">
                <function threadsafety="unspecified" name="CompressedRectilinearWarper" fullname="cv::CompressedRectilinearWarper::CompressedRectilinearWarper" href="cv-compressedrectilinearwarper.html#CompressedRectilinearWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="197" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompressedRectilinearWarper(float A, float B)">
                    <parameter left="float" right="" name="A" default="1"/>
                    <parameter left="float" right="" name="B" default="1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="CylindricalWarper" fullname="cv::CylindricalWarper" href="cv-cylindricalwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="168" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="FisheyeWarper" fullname="cv::FisheyeWarper" href="cv-fisheyewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="181" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="MercatorWarper" fullname="cv::MercatorWarper" href="cv-mercatorwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="237" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="PaniniPortraitWarper" fullname="cv::PaniniPortraitWarper" href="cv-paniniportraitwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="226" bases="cv::WarperCreator">
                <function threadsafety="unspecified" name="PaniniPortraitWarper" fullname="cv::PaniniPortraitWarper::PaniniPortraitWarper" href="cv-paniniportraitwarper.html#PaniniPortraitWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="230" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PaniniPortraitWarper(float A, float B)">
                    <parameter left="float" right="" name="A" default="1"/>
                    <parameter left="float" right="" name="B" default="1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="PaniniWarper" fullname="cv::PaniniWarper" href="cv-paniniwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="215" bases="cv::WarperCreator">
                <function threadsafety="unspecified" name="PaniniWarper" fullname="cv::PaniniWarper::PaniniWarper" href="cv-paniniwarper.html#PaniniWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="219" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PaniniWarper(float A, float B)">
                    <parameter left="float" right="" name="A" default="1"/>
                    <parameter left="float" right="" name="B" default="1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="PlaneWarper" fullname="cv::PlaneWarper" href="cv-planewarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="150" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="PyRotationWarper" fullname="cv::PyRotationWarper" href="cv-pyrotationwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="50">
                <function threadsafety="unspecified" name="PyRotationWarper" fullname="cv::PyRotationWarper::PyRotationWarper" href="cv-pyrotationwarper.html#PyRotationWarper-1" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="56" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP PyRotationWarper()"/>
                <function threadsafety="unspecified" name="PyRotationWarper" fullname="cv::PyRotationWarper::PyRotationWarper" href="cv-pyrotationwarper.html#PyRotationWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="55" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP PyRotationWarper(String type, float scale)">
                    <parameter left="String" right="" name="type" default=""/>
                    <parameter left="float" right="" name="scale" default=""/>
                </function>
                <function threadsafety="unspecified" name="~PyRotationWarper" fullname="cv::PyRotationWarper::~PyRotationWarper" href="cv-pyrotationwarper.html#dtor.PyRotationWarper" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="57" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~PyRotationWarper()"/>
            </class>
            <class threadsafety="unspecified" name="SphericalWarper" fullname="cv::SphericalWarper" href="cv-sphericalwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="175" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="StereographicWarper" fullname="cv::StereographicWarper" href="cv-stereographicwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="187" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="TransverseMercatorWarper" fullname="cv::TransverseMercatorWarper" href="cv-transversemercatorwarper.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="243" bases="cv::WarperCreator"/>
            <class threadsafety="unspecified" name="WarperCreator" fullname="cv::WarperCreator" href="cv-warpercreator.html" status="active" access="public" location="warpers.hpp" filepath="/usr/local/include/opencv4/opencv2/stitching/warpers.hpp" lineno="139"/>
            <class threadsafety="unspecified" name="BackgroundSubtractor" fullname="cv::BackgroundSubtractor" href="cv-backgroundsubtractor.html" status="active" access="public" location="background_segm.hpp" filepath="/usr/local/include/opencv4/opencv2/video/background_segm.hpp" lineno="60" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="BackgroundSubtractorKNN" fullname="cv::BackgroundSubtractorKNN" href="cv-backgroundsubtractorknn.html" status="active" access="public" location="background_segm.hpp" filepath="/usr/local/include/opencv4/opencv2/video/background_segm.hpp" lineno="229" bases="cv::BackgroundSubtractor"/>
            <class threadsafety="unspecified" name="BackgroundSubtractorMOG2" fullname="cv::BackgroundSubtractorMOG2" href="cv-backgroundsubtractormog2.html" status="active" access="public" location="background_segm.hpp" filepath="/usr/local/include/opencv4/opencv2/video/background_segm.hpp" lineno="90" bases="cv::BackgroundSubtractor"/>
            <class threadsafety="unspecified" name="DISOpticalFlow" fullname="cv::DISOpticalFlow" href="cv-disopticalflow.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="584" bases="cv::DenseOpticalFlow">
                <variable threadsafety="unspecified" name="PRESET_FAST" fullname="cv::DISOpticalFlow::PRESET_FAST" href="cv-disopticalflow.html#PRESET_FAST-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="590" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PRESET_MEDIUM" fullname="cv::DISOpticalFlow::PRESET_MEDIUM" href="cv-disopticalflow.html#PRESET_MEDIUM-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="592" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="PRESET_ULTRAFAST" fullname="cv::DISOpticalFlow::PRESET_ULTRAFAST" href="cv-disopticalflow.html#PRESET_ULTRAFAST-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="589" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="DenseOpticalFlow" fullname="cv::DenseOpticalFlow" href="cv-denseopticalflow.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="436" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="FarnebackOpticalFlow" fullname="cv::FarnebackOpticalFlow" href="cv-farnebackopticalflow.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="475" bases="cv::DenseOpticalFlow"/>
            <class threadsafety="unspecified" name="KalmanFilter" fullname="cv::KalmanFilter" href="cv-kalmanfilter.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="360">
                <function threadsafety="unspecified" name="KalmanFilter" fullname="cv::KalmanFilter::KalmanFilter" href="cv-kalmanfilter.html#KalmanFilter" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="363" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KalmanFilter()"/>
                <function threadsafety="unspecified" name="KalmanFilter" fullname="cv::KalmanFilter::KalmanFilter" href="cv-kalmanfilter.html#KalmanFilter-1" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="370" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP KalmanFilter(int dynamParams, int measureParams, int controlParams, int type)">
                    <parameter left="int" right="" name="dynamParams" default=""/>
                    <parameter left="int" right="" name="measureParams" default=""/>
                    <parameter left="int" right="" name="controlParams" default="0"/>
                    <parameter left="int" right="" name="type" default="CV_32F"/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cv::KalmanFilter::init" href="cv-kalmanfilter.html#init" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="379" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int dynamParams, int measureParams, int controlParams, int type)">
                    <parameter left="int" right="" name="dynamParams" default=""/>
                    <parameter left="int" right="" name="measureParams" default=""/>
                    <parameter left="int" right="" name="controlParams" default="0"/>
                    <parameter left="int" right="" name="type" default="CV_32F"/>
                </function>
                <variable threadsafety="unspecified" name="temp1" fullname="cv::KalmanFilter::temp1" href="cv-kalmanfilter.html#temp1-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="405" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="temp2" fullname="cv::KalmanFilter::temp2" href="cv-kalmanfilter.html#temp2-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="406" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="temp3" fullname="cv::KalmanFilter::temp3" href="cv-kalmanfilter.html#temp3-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="407" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="temp4" fullname="cv::KalmanFilter::temp4" href="cv-kalmanfilter.html#temp4-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="408" type="Mat" static="false"/>
                <variable threadsafety="unspecified" name="temp5" fullname="cv::KalmanFilter::temp5" href="cv-kalmanfilter.html#temp5-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="409" type="Mat" static="false"/>
            </class>
            <class threadsafety="unspecified" name="SparseOpticalFlow" fullname="cv::SparseOpticalFlow" href="cv-sparseopticalflow.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="453" bases="cv::Algorithm"/>
            <class threadsafety="unspecified" name="SparsePyrLKOpticalFlow" fullname="cv::SparsePyrLKOpticalFlow" href="cv-sparsepyrlkopticalflow.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="682" bases="cv::SparseOpticalFlow"/>
            <class threadsafety="unspecified" name="Tracker" fullname="cv::Tracker" href="cv-tracker.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="713">
                <function threadsafety="unspecified" name="Tracker" fullname="cv::Tracker::Tracker" href="cv-tracker.html#Tracker" status="active" access="protected" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="716" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Tracker()"/>
                <function threadsafety="unspecified" name="~Tracker" fullname="cv::Tracker::~Tracker" href="cv-tracker.html#dtor.Tracker" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="718" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Tracker()"/>
            </class>
            <class threadsafety="unspecified" name="TrackerGOTURN" fullname="cv::TrackerGOTURN" href="cv-trackergoturn.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="797" bases="cv::Tracker">
                <class threadsafety="unspecified" name="Params" fullname="cv::TrackerGOTURN::Params" href="cv-trackergoturn-params.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="804">
                    <function threadsafety="unspecified" name="Params" fullname="cv::TrackerGOTURN::Params::Params" href="cv-trackergoturn-params.html#Params" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="806" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Params()"/>
                </class>
                <function threadsafety="unspecified" name="TrackerGOTURN" fullname="cv::TrackerGOTURN::TrackerGOTURN" href="cv-trackergoturn.html#TrackerGOTURN" status="active" access="protected" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="800" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TrackerGOTURN()"/>
            </class>
            <class threadsafety="unspecified" name="TrackerMIL" fullname="cv::TrackerMIL" href="cv-trackermil.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="750" bases="cv::Tracker">
                <class threadsafety="unspecified" name="Params" fullname="cv::TrackerMIL::Params" href="cv-trackermil-params.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="757">
                    <function threadsafety="unspecified" name="Params" fullname="cv::TrackerMIL::Params::Params" href="cv-trackermil-params.html#Params" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="759" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP Params()"/>
                </class>
                <function threadsafety="unspecified" name="TrackerMIL" fullname="cv::TrackerMIL::TrackerMIL" href="cv-trackermil.html#TrackerMIL" status="active" access="protected" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="753" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="TrackerMIL()"/>
            </class>
            <class threadsafety="unspecified" name="VariationalRefinement" fullname="cv::VariationalRefinement" href="cv-variationalrefinement.html" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="523" bases="cv::DenseOpticalFlow"/>
            <variable threadsafety="unspecified" name="MOTION_AFFINE" fullname="cv::MOTION_AFFINE" href="cv.html#MOTION_AFFINE-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="264" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="MOTION_EUCLIDEAN" fullname="cv::MOTION_EUCLIDEAN" href="cv.html#MOTION_EUCLIDEAN-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="263" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="MOTION_HOMOGRAPHY" fullname="cv::MOTION_HOMOGRAPHY" href="cv.html#MOTION_HOMOGRAPHY-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="266" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="MOTION_TRANSLATION" fullname="cv::MOTION_TRANSLATION" href="cv.html#MOTION_TRANSLATION-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="262" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="OPTFLOW_FARNEBACK_GAUSSIAN" fullname="cv::OPTFLOW_FARNEBACK_GAUSSIAN" href="cv.html#OPTFLOW_FARNEBACK_GAUSSIAN-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="59" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="OPTFLOW_LK_GET_MIN_EIGENVALS" fullname="cv::OPTFLOW_LK_GET_MIN_EIGENVALS" href="cv.html#OPTFLOW_LK_GET_MIN_EIGENVALS-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="57" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="OPTFLOW_USE_INITIAL_FLOW" fullname="cv::OPTFLOW_USE_INITIAL_FLOW" href="cv.html#OPTFLOW_USE_INITIAL_FLOW-var" status="active" access="public" location="tracking.hpp" filepath="/usr/local/include/opencv4/opencv2/video/tracking.hpp" lineno="56" type="const int" static="true"/>
            <class threadsafety="unspecified" name="VideoCapture" fullname="cv::VideoCapture" href="cv-videocapture.html" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="627">
                <function threadsafety="unspecified" name="VideoCapture" fullname="cv::VideoCapture::VideoCapture" href="cv-videocapture.html#VideoCapture" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="635" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoCapture()"/>
                <function threadsafety="unspecified" name="~VideoCapture" fullname="cv::VideoCapture::~VideoCapture" href="cv-videocapture.html#dtor.VideoCapture" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="686" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~VideoCapture()"/>
                <variable threadsafety="unspecified" name="cap" fullname="cv::VideoCapture::cap" href="cv-videocapture.html#cap-var" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="884" type="Ptr&lt;CvCapture&gt;" static="false"/>
                <variable threadsafety="unspecified" name="icap" fullname="cv::VideoCapture::icap" href="cv-videocapture.html#icap-var" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="885" type="Ptr&lt;IVideoCapture&gt;" static="false"/>
                <variable threadsafety="unspecified" name="throwOnFail" fullname="cv::VideoCapture::throwOnFail" href="cv-videocapture.html#throwOnFail-var" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="886" type="bool" static="false"/>
            </class>
            <class threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter" href="cv-videowriter.html" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="905">
                <function threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter::VideoWriter" href="cv-videowriter.html#VideoWriter" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="915" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoWriter()"/>
                <function threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter::VideoWriter" href="cv-videowriter.html#VideoWriter-2" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="945" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoWriter(const String &amp;filename, int apiPreference, int fourcc, double fps, Size frameSize, bool isColor)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="apiPreference" default=""/>
                    <parameter left="int" right="" name="fourcc" default=""/>
                    <parameter left="double" right="" name="fps" default=""/>
                    <parameter left="Size" right="" name="frameSize" default=""/>
                    <parameter left="bool" right="" name="isColor" default="true"/>
                </function>
                <function threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter::VideoWriter" href="cv-videowriter.html#VideoWriter-4" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="957" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoWriter(const String &amp;filename, int apiPreference, int fourcc, double fps, const Size &amp;frameSize, const std::vector&lt;int&gt; &amp;params)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="apiPreference" default=""/>
                    <parameter left="int" right="" name="fourcc" default=""/>
                    <parameter left="double" right="" name="fps" default=""/>
                    <parameter left="const Size &amp;" right="" name="frameSize" default=""/>
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter::VideoWriter" href="cv-videowriter.html#VideoWriter-1" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="938" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoWriter(const String &amp;filename, int fourcc, double fps, Size frameSize, bool isColor)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="fourcc" default=""/>
                    <parameter left="double" right="" name="fps" default=""/>
                    <parameter left="Size" right="" name="frameSize" default=""/>
                    <parameter left="bool" right="" name="isColor" default="true"/>
                </function>
                <function threadsafety="unspecified" name="VideoWriter" fullname="cv::VideoWriter::VideoWriter" href="cv-videowriter.html#VideoWriter-3" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="952" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CV_WRAP" signature="CV_WRAP VideoWriter(const String &amp;filename, int fourcc, double fps, const Size &amp;frameSize, const std::vector&lt;int&gt; &amp;params)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="fourcc" default=""/>
                    <parameter left="double" right="" name="fps" default=""/>
                    <parameter left="const Size &amp;" right="" name="frameSize" default=""/>
                    <parameter left="const std::vector&lt;int&gt; &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="create" fullname="cv::VideoWriter::create" href="cv-videowriter.html#create" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="1061" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Ptr&lt;IVideoWriter&gt;" signature="Ptr&lt;IVideoWriter&gt; create(const String &amp;filename, int fourcc, double fps, Size frameSize, bool isColor)">
                    <parameter left="const String &amp;" right="" name="filename" default=""/>
                    <parameter left="int" right="" name="fourcc" default=""/>
                    <parameter left="double" right="" name="fps" default=""/>
                    <parameter left="Size" right="" name="frameSize" default=""/>
                    <parameter left="bool" right="" name="isColor" default="true"/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::VideoWriter::operator&lt;&lt;" href="cv-videowriter.html#operator-lt-lt" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="1006" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="VideoWriter &amp;" signature="VideoWriter &amp; operator&lt;&lt;(const Mat &amp;image)">
                    <parameter left="const Mat &amp;" right="" name="image" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cv::VideoWriter::operator&lt;&lt;" href="cv-videowriter.html#operator-lt-lt-1" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="1011" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="VideoWriter &amp;" signature="VideoWriter &amp; operator&lt;&lt;(const UMat &amp;image)">
                    <parameter left="const UMat &amp;" right="" name="image" default=""/>
                </function>
                <function threadsafety="unspecified" name="~VideoWriter" fullname="cv::VideoWriter::~VideoWriter" href="cv-videowriter.html#dtor.VideoWriter" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="964" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~VideoWriter()"/>
                <variable threadsafety="unspecified" name="iwriter" fullname="cv::VideoWriter::iwriter" href="cv-videowriter.html#iwriter-var" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="1059" type="Ptr&lt;IVideoWriter&gt;" static="false"/>
                <variable threadsafety="unspecified" name="writer" fullname="cv::VideoWriter::writer" href="cv-videowriter.html#writer-var" status="active" access="protected" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="1058" type="Ptr&lt;CvVideoWriter&gt;" static="false"/>
            </class>
            <enum threadsafety="unspecified" name="VideoCaptureAPIs" fullname="cv::VideoCaptureAPIs" href="cv.html#VideoCaptureAPIs-enum" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="89">
                <value name="CAP_ANY" value="0"/>
                <value name="CAP_VFW" value="200"/>
                <value name="CAP_V4L" value="200"/>
                <value name="CAP_V4L2" value="CAP_V4L"/>
                <value name="CAP_FIREWIRE" value="300"/>
                <value name="CAP_FIREWARE" value="CAP_FIREWIRE"/>
                <value name="CAP_IEEE1394" value="CAP_FIREWIRE"/>
                <value name="CAP_DC1394" value="CAP_FIREWIRE"/>
                <value name="CAP_CMU1394" value="CAP_FIREWIRE"/>
                <value name="CAP_QT" value="500"/>
                <value name="CAP_UNICAP" value="600"/>
                <value name="CAP_DSHOW" value="700"/>
                <value name="CAP_PVAPI" value="800"/>
                <value name="CAP_OPENNI" value="900"/>
                <value name="CAP_OPENNI_ASUS" value="910"/>
                <value name="CAP_ANDROID" value="1000"/>
                <value name="CAP_XIAPI" value="1100"/>
                <value name="CAP_AVFOUNDATION" value="1200"/>
                <value name="CAP_GIGANETIX" value="1300"/>
                <value name="CAP_MSMF" value="1400"/>
                <value name="CAP_WINRT" value="1410"/>
                <value name="CAP_INTELPERC" value="1500"/>
                <value name="CAP_REALSENSE" value="1500"/>
                <value name="CAP_OPENNI2" value="1600"/>
                <value name="CAP_OPENNI2_ASUS" value="1610"/>
                <value name="CAP_OPENNI2_ASTRA" value="1620"/>
                <value name="CAP_GPHOTO2" value="1700"/>
                <value name="CAP_GSTREAMER" value="1800"/>
                <value name="CAP_FFMPEG" value="1900"/>
                <value name="CAP_IMAGES" value="2000"/>
                <value name="CAP_ARAVIS" value="2100"/>
                <value name="CAP_OPENCV_MJPEG" value="2200"/>
                <value name="CAP_INTEL_MFX" value="2300"/>
                <value name="CAP_XINE" value="2400"/>
                <value name="CAP_UEYE" value="2500"/>
            </enum>
            <enum threadsafety="unspecified" name="VideoCaptureProperties" fullname="cv::VideoCaptureProperties" href="cv.html#VideoCaptureProperties-enum" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="133">
                <value name="CAP_PROP_POS_MSEC" value="0"/>
                <value name="CAP_PROP_POS_FRAMES" value="1"/>
                <value name="CAP_PROP_POS_AVI_RATIO" value="2"/>
                <value name="CAP_PROP_FRAME_WIDTH" value="3"/>
                <value name="CAP_PROP_FRAME_HEIGHT" value="4"/>
                <value name="CAP_PROP_FPS" value="5"/>
                <value name="CAP_PROP_FOURCC" value="6"/>
                <value name="CAP_PROP_FRAME_COUNT" value="7"/>
                <value name="CAP_PROP_FORMAT" value="8"/>
                <value name="CAP_PROP_MODE" value="9"/>
                <value name="CAP_PROP_BRIGHTNESS" value="10"/>
                <value name="CAP_PROP_CONTRAST" value="11"/>
                <value name="CAP_PROP_SATURATION" value="12"/>
                <value name="CAP_PROP_HUE" value="13"/>
                <value name="CAP_PROP_GAIN" value="14"/>
                <value name="CAP_PROP_EXPOSURE" value="15"/>
                <value name="CAP_PROP_CONVERT_RGB" value="16"/>
                <value name="CAP_PROP_WHITE_BALANCE_BLUE_U" value="17"/>
                <value name="CAP_PROP_RECTIFICATION" value="18"/>
                <value name="CAP_PROP_MONOCHROME" value="19"/>
                <value name="CAP_PROP_SHARPNESS" value="20"/>
                <value name="CAP_PROP_AUTO_EXPOSURE" value="21"/>
                <value name="CAP_PROP_GAMMA" value="22"/>
                <value name="CAP_PROP_TEMPERATURE" value="23"/>
                <value name="CAP_PROP_TRIGGER" value="24"/>
                <value name="CAP_PROP_TRIGGER_DELAY" value="25"/>
                <value name="CAP_PROP_WHITE_BALANCE_RED_V" value="26"/>
                <value name="CAP_PROP_ZOOM" value="27"/>
                <value name="CAP_PROP_FOCUS" value="28"/>
                <value name="CAP_PROP_GUID" value="29"/>
                <value name="CAP_PROP_ISO_SPEED" value="30"/>
                <value name="CAP_PROP_BACKLIGHT" value="32"/>
                <value name="CAP_PROP_PAN" value="33"/>
                <value name="CAP_PROP_TILT" value="34"/>
                <value name="CAP_PROP_ROLL" value="35"/>
                <value name="CAP_PROP_IRIS" value="36"/>
                <value name="CAP_PROP_SETTINGS" value="37"/>
                <value name="CAP_PROP_BUFFERSIZE" value="38"/>
                <value name="CAP_PROP_AUTOFOCUS" value="39"/>
                <value name="CAP_PROP_SAR_NUM" value="40"/>
                <value name="CAP_PROP_SAR_DEN" value="41"/>
                <value name="CAP_PROP_BACKEND" value="42"/>
                <value name="CAP_PROP_CHANNEL" value="43"/>
                <value name="CAP_PROP_AUTO_WB" value="44"/>
                <value name="CAP_PROP_WB_TEMPERATURE" value="45"/>
                <value name="CAP_PROP_CODEC_PIXEL_FORMAT" value="46"/>
                <value name="CAP_PROP_BITRATE" value="47"/>
                <value name="CAP_PROP_ORIENTATION_META" value="48"/>
                <value name="CAP_PROP_ORIENTATION_AUTO" value="49"/>
                <value name="CV__CAP_PROP_LATEST" value="50"/>
            </enum>
            <enum threadsafety="unspecified" name="VideoWriterProperties" fullname="cv::VideoWriterProperties" href="cv.html#VideoWriterProperties-enum" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="193">
                <value name="VIDEOWRITER_PROP_QUALITY" value="1"/>
                <value name="VIDEOWRITER_PROP_FRAMEBYTES" value="2"/>
                <value name="VIDEOWRITER_PROP_NSTRIPES" value="3"/>
                <value name="VIDEOWRITER_PROP_IS_COLOR" value="4"/>
                <value name="VIDEOWRITER_PROP_DEPTH" value="5"/>
            </enum>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_DEPTH_GENERATOR" fullname="cv::CAP_INTELPERC_DEPTH_GENERATOR" href="cv.html#CAP_INTELPERC_DEPTH_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="549" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_DEPTH_MAP" fullname="cv::CAP_INTELPERC_DEPTH_MAP" href="cv.html#CAP_INTELPERC_DEPTH_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="555" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_GENERATORS_MASK" fullname="cv::CAP_INTELPERC_GENERATORS_MASK" href="cv.html#CAP_INTELPERC_GENERATORS_MASK-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="553" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_IMAGE" fullname="cv::CAP_INTELPERC_IMAGE" href="cv.html#CAP_INTELPERC_IMAGE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="559" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_IMAGE_GENERATOR" fullname="cv::CAP_INTELPERC_IMAGE_GENERATOR" href="cv.html#CAP_INTELPERC_IMAGE_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="550" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_IR_GENERATOR" fullname="cv::CAP_INTELPERC_IR_GENERATOR" href="cv.html#CAP_INTELPERC_IR_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="551" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_IR_MAP" fullname="cv::CAP_INTELPERC_IR_MAP" href="cv.html#CAP_INTELPERC_IR_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="557" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_INTELPERC_UVDEPTH_MAP" fullname="cv::CAP_INTELPERC_UVDEPTH_MAP" href="cv.html#CAP_INTELPERC_UVDEPTH_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="556" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_BGR_IMAGE" fullname="cv::CAP_OPENNI_BGR_IMAGE" href="cv.html#CAP_OPENNI_BGR_IMAGE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="271" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="229" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR_BASELINE" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR_BASELINE" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR_BASELINE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="257" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="258" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR_PRESENT" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR_PRESENT" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR_PRESENT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="256" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="259" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON" fullname="cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON" href="cv.html#CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="260" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DEPTH_MAP" fullname="cv::CAP_OPENNI_DEPTH_MAP" href="cv.html#CAP_OPENNI_DEPTH_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="265" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DISPARITY_MAP" fullname="cv::CAP_OPENNI_DISPARITY_MAP" href="cv.html#CAP_OPENNI_DISPARITY_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="267" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_DISPARITY_MAP_32F" fullname="cv::CAP_OPENNI_DISPARITY_MAP_32F" href="cv.html#CAP_OPENNI_DISPARITY_MAP_32F-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="268" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_GENERATORS_MASK" fullname="cv::CAP_OPENNI_GENERATORS_MASK" href="cv.html#CAP_OPENNI_GENERATORS_MASK-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="233" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_GRAY_IMAGE" fullname="cv::CAP_OPENNI_GRAY_IMAGE" href="cv.html#CAP_OPENNI_GRAY_IMAGE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="272" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IMAGE_GENERATOR" fullname="cv::CAP_OPENNI_IMAGE_GENERATOR" href="cv.html#CAP_OPENNI_IMAGE_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="230" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE" fullname="cv::CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE" href="cv.html#CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="255" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IMAGE_GENERATOR_PRESENT" fullname="cv::CAP_OPENNI_IMAGE_GENERATOR_PRESENT" href="cv.html#CAP_OPENNI_IMAGE_GENERATOR_PRESENT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="254" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IR_GENERATOR" fullname="cv::CAP_OPENNI_IR_GENERATOR" href="cv.html#CAP_OPENNI_IR_GENERATOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="231" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IR_GENERATOR_PRESENT" fullname="cv::CAP_OPENNI_IR_GENERATOR_PRESENT" href="cv.html#CAP_OPENNI_IR_GENERATOR_PRESENT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="261" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_IR_IMAGE" fullname="cv::CAP_OPENNI_IR_IMAGE" href="cv.html#CAP_OPENNI_IR_IMAGE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="275" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_POINT_CLOUD_MAP" fullname="cv::CAP_OPENNI_POINT_CLOUD_MAP" href="cv.html#CAP_OPENNI_POINT_CLOUD_MAP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="266" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_QVGA_30HZ" fullname="cv::CAP_OPENNI_QVGA_30HZ" href="cv.html#CAP_OPENNI_QVGA_30HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="281" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_QVGA_60HZ" fullname="cv::CAP_OPENNI_QVGA_60HZ" href="cv.html#CAP_OPENNI_QVGA_60HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="283" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_SXGA_15HZ" fullname="cv::CAP_OPENNI_SXGA_15HZ" href="cv.html#CAP_OPENNI_SXGA_15HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="279" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_SXGA_30HZ" fullname="cv::CAP_OPENNI_SXGA_30HZ" href="cv.html#CAP_OPENNI_SXGA_30HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="280" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_VALID_DEPTH_MASK" fullname="cv::CAP_OPENNI_VALID_DEPTH_MASK" href="cv.html#CAP_OPENNI_VALID_DEPTH_MASK-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="269" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_OPENNI_VGA_30HZ" fullname="cv::CAP_OPENNI_VGA_30HZ" href="cv.html#CAP_OPENNI_VGA_30HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="278" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_APERTURE" fullname="cv::CAP_PROP_APERTURE" href="cv.html#CAP_PROP_APERTURE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="580" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_ARAVIS_AUTOTRIGGER" fullname="cv::CAP_PROP_ARAVIS_AUTOTRIGGER" href="cv.html#CAP_PROP_ARAVIS_AUTOTRIGGER-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="503" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_DC1394_MAX" fullname="cv::CAP_PROP_DC1394_MAX" href="cv.html#CAP_PROP_DC1394_MAX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="220" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_DC1394_MODE_AUTO" fullname="cv::CAP_PROP_DC1394_MODE_AUTO" href="cv.html#CAP_PROP_DC1394_MODE_AUTO-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="217" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_DC1394_MODE_MANUAL" fullname="cv::CAP_PROP_DC1394_MODE_MANUAL" href="cv.html#CAP_PROP_DC1394_MODE_MANUAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="216" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO" fullname="cv::CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO" href="cv.html#CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="218" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_DC1394_OFF" fullname="cv::CAP_PROP_DC1394_OFF" href="cv.html#CAP_PROP_DC1394_OFF-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="215" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_EXPOSUREPROGRAM" fullname="cv::CAP_PROP_EXPOSUREPROGRAM" href="cv.html#CAP_PROP_EXPOSUREPROGRAM-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="581" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_HEIGH_MAX" fullname="cv::CAP_PROP_GIGA_FRAME_HEIGH_MAX" href="cv.html#CAP_PROP_GIGA_FRAME_HEIGH_MAX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="529" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_OFFSET_X" fullname="cv::CAP_PROP_GIGA_FRAME_OFFSET_X" href="cv.html#CAP_PROP_GIGA_FRAME_OFFSET_X-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="526" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_OFFSET_Y" fullname="cv::CAP_PROP_GIGA_FRAME_OFFSET_Y" href="cv.html#CAP_PROP_GIGA_FRAME_OFFSET_Y-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="527" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_SENS_HEIGH" fullname="cv::CAP_PROP_GIGA_FRAME_SENS_HEIGH" href="cv.html#CAP_PROP_GIGA_FRAME_SENS_HEIGH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="532" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_SENS_WIDTH" fullname="cv::CAP_PROP_GIGA_FRAME_SENS_WIDTH" href="cv.html#CAP_PROP_GIGA_FRAME_SENS_WIDTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="530" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GIGA_FRAME_WIDTH_MAX" fullname="cv::CAP_PROP_GIGA_FRAME_WIDTH_MAX" href="cv.html#CAP_PROP_GIGA_FRAME_WIDTH_MAX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="528" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_COLLECT_MSGS" fullname="cv::CAP_PROP_GPHOTO2_COLLECT_MSGS" href="cv.html#CAP_PROP_GPHOTO2_COLLECT_MSGS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="577" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_FLUSH_MSGS" fullname="cv::CAP_PROP_GPHOTO2_FLUSH_MSGS" href="cv.html#CAP_PROP_GPHOTO2_FLUSH_MSGS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="578" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_PREVIEW" fullname="cv::CAP_PROP_GPHOTO2_PREVIEW" href="cv.html#CAP_PROP_GPHOTO2_PREVIEW-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="573" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_RELOAD_CONFIG" fullname="cv::CAP_PROP_GPHOTO2_RELOAD_CONFIG" href="cv.html#CAP_PROP_GPHOTO2_RELOAD_CONFIG-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="575" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE" fullname="cv::CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE" href="cv.html#CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="576" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GPHOTO2_WIDGET_ENUMERATE" fullname="cv::CAP_PROP_GPHOTO2_WIDGET_ENUMERATE" href="cv.html#CAP_PROP_GPHOTO2_WIDGET_ENUMERATE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="574" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_GSTREAMER_QUEUE_LENGTH" fullname="cv::CAP_PROP_GSTREAMER_QUEUE_LENGTH" href="cv.html#CAP_PROP_GSTREAMER_QUEUE_LENGTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="292" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IMAGES_BASE" fullname="cv::CAP_PROP_IMAGES_BASE" href="cv.html#CAP_PROP_IMAGES_BASE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="595" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IMAGES_LAST" fullname="cv::CAP_PROP_IMAGES_LAST" href="cv.html#CAP_PROP_IMAGES_LAST-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="597" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD" fullname="cv::CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD" href="cv.html#CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="543" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ" fullname="cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ" href="cv.html#CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="544" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT" fullname="cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT" href="cv.html#CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="546" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE" fullname="cv::CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE" href="cv.html#CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="541" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE" fullname="cv::CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE" href="cv.html#CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="542" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_PROFILE_COUNT" fullname="cv::CAP_PROP_INTELPERC_PROFILE_COUNT" href="cv.html#CAP_PROP_INTELPERC_PROFILE_COUNT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="539" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_INTELPERC_PROFILE_IDX" fullname="cv::CAP_PROP_INTELPERC_PROFILE_IDX" href="cv.html#CAP_PROP_INTELPERC_PROFILE_IDX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="540" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IOS_DEVICE_EXPOSURE" fullname="cv::CAP_PROP_IOS_DEVICE_EXPOSURE" href="cv.html#CAP_PROP_IOS_DEVICE_EXPOSURE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="514" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IOS_DEVICE_FLASH" fullname="cv::CAP_PROP_IOS_DEVICE_FLASH" href="cv.html#CAP_PROP_IOS_DEVICE_FLASH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="515" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IOS_DEVICE_FOCUS" fullname="cv::CAP_PROP_IOS_DEVICE_FOCUS" href="cv.html#CAP_PROP_IOS_DEVICE_FOCUS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="513" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IOS_DEVICE_TORCH" fullname="cv::CAP_PROP_IOS_DEVICE_TORCH" href="cv.html#CAP_PROP_IOS_DEVICE_TORCH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="518" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_IOS_DEVICE_WHITEBALANCE" fullname="cv::CAP_PROP_IOS_DEVICE_WHITEBALANCE" href="cv.html#CAP_PROP_IOS_DEVICE_WHITEBALANCE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="516" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI2_MIRROR" fullname="cv::CAP_PROP_OPENNI2_MIRROR" href="cv.html#CAP_PROP_OPENNI2_MIRROR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="251" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI2_SYNC" fullname="cv::CAP_PROP_OPENNI2_SYNC" href="cv.html#CAP_PROP_OPENNI2_SYNC-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="249" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_APPROX_FRAME_SYNC" fullname="cv::CAP_PROP_OPENNI_APPROX_FRAME_SYNC" href="cv.html#CAP_PROP_OPENNI_APPROX_FRAME_SYNC-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="244" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_BASELINE" fullname="cv::CAP_PROP_OPENNI_BASELINE" href="cv.html#CAP_PROP_OPENNI_BASELINE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="238" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_CIRCLE_BUFFER" fullname="cv::CAP_PROP_OPENNI_CIRCLE_BUFFER" href="cv.html#CAP_PROP_OPENNI_CIRCLE_BUFFER-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="246" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_FOCAL_LENGTH" fullname="cv::CAP_PROP_OPENNI_FOCAL_LENGTH" href="cv.html#CAP_PROP_OPENNI_FOCAL_LENGTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="239" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_FRAME_MAX_DEPTH" fullname="cv::CAP_PROP_OPENNI_FRAME_MAX_DEPTH" href="cv.html#CAP_PROP_OPENNI_FRAME_MAX_DEPTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="237" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_GENERATOR_PRESENT" fullname="cv::CAP_PROP_OPENNI_GENERATOR_PRESENT" href="cv.html#CAP_PROP_OPENNI_GENERATOR_PRESENT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="248" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_MAX_BUFFER_SIZE" fullname="cv::CAP_PROP_OPENNI_MAX_BUFFER_SIZE" href="cv.html#CAP_PROP_OPENNI_MAX_BUFFER_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="245" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_MAX_TIME_DURATION" fullname="cv::CAP_PROP_OPENNI_MAX_TIME_DURATION" href="cv.html#CAP_PROP_OPENNI_MAX_TIME_DURATION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="247" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_OUTPUT_MODE" fullname="cv::CAP_PROP_OPENNI_OUTPUT_MODE" href="cv.html#CAP_PROP_OPENNI_OUTPUT_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="236" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_REGISTRATION" fullname="cv::CAP_PROP_OPENNI_REGISTRATION" href="cv.html#CAP_PROP_OPENNI_REGISTRATION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="240" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_OPENNI_REGISTRATION_ON" fullname="cv::CAP_PROP_OPENNI_REGISTRATION_ON" href="cv.html#CAP_PROP_OPENNI_REGISTRATION_ON-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="243" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_BINNINGX" fullname="cv::CAP_PROP_PVAPI_BINNINGX" href="cv.html#CAP_PROP_PVAPI_BINNINGX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="305" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_BINNINGY" fullname="cv::CAP_PROP_PVAPI_BINNINGY" href="cv.html#CAP_PROP_PVAPI_BINNINGY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="306" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_DECIMATIONHORIZONTAL" fullname="cv::CAP_PROP_PVAPI_DECIMATIONHORIZONTAL" href="cv.html#CAP_PROP_PVAPI_DECIMATIONHORIZONTAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="303" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_DECIMATIONVERTICAL" fullname="cv::CAP_PROP_PVAPI_DECIMATIONVERTICAL" href="cv.html#CAP_PROP_PVAPI_DECIMATIONVERTICAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="304" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE" fullname="cv::CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE" href="cv.html#CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="302" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_MULTICASTIP" fullname="cv::CAP_PROP_PVAPI_MULTICASTIP" href="cv.html#CAP_PROP_PVAPI_MULTICASTIP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="301" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_PVAPI_PIXELFORMAT" fullname="cv::CAP_PROP_PVAPI_PIXELFORMAT" href="cv.html#CAP_PROP_PVAPI_PIXELFORMAT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="308" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_SPEED" fullname="cv::CAP_PROP_SPEED" href="cv.html#CAP_PROP_SPEED-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="579" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_VIEWFINDER" fullname="cv::CAP_PROP_VIEWFINDER" href="cv.html#CAP_PROP_VIEWFINDER-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="583" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_BUFFER_SIZE" fullname="cv::CAP_PROP_XI_ACQ_BUFFER_SIZE" href="cv.html#CAP_PROP_XI_ACQ_BUFFER_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="466" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT" fullname="cv::CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT" href="cv.html#CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="467" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_FRAME_BURST_COUNT" fullname="cv::CAP_PROP_XI_ACQ_FRAME_BURST_COUNT" href="cv.html#CAP_PROP_XI_ACQ_FRAME_BURST_COUNT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="432" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_TIMING_MODE" fullname="cv::CAP_PROP_XI_ACQ_TIMING_MODE" href="cv.html#CAP_PROP_XI_ACQ_TIMING_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="456" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT" fullname="cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT" href="cv.html#CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="470" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE" fullname="cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE" href="cv.html#CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="468" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG" fullname="cv::CAP_PROP_XI_AEAG" href="cv.html#CAP_PROP_XI_AEAG-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="358" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG_LEVEL" fullname="cv::CAP_PROP_XI_AEAG_LEVEL" href="cv.html#CAP_PROP_XI_AEAG_LEVEL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="362" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG_ROI_HEIGHT" fullname="cv::CAP_PROP_XI_AEAG_ROI_HEIGHT" href="cv.html#CAP_PROP_XI_AEAG_ROI_HEIGHT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="385" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG_ROI_OFFSET_X" fullname="cv::CAP_PROP_XI_AEAG_ROI_OFFSET_X" href="cv.html#CAP_PROP_XI_AEAG_ROI_OFFSET_X-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="382" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG_ROI_OFFSET_Y" fullname="cv::CAP_PROP_XI_AEAG_ROI_OFFSET_Y" href="cv.html#CAP_PROP_XI_AEAG_ROI_OFFSET_Y-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="383" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AEAG_ROI_WIDTH" fullname="cv::CAP_PROP_XI_AEAG_ROI_WIDTH" href="cv.html#CAP_PROP_XI_AEAG_ROI_WIDTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="384" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AE_MAX_LIMIT" fullname="cv::CAP_PROP_XI_AE_MAX_LIMIT" href="cv.html#CAP_PROP_XI_AE_MAX_LIMIT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="360" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AG_MAX_LIMIT" fullname="cv::CAP_PROP_XI_AG_MAX_LIMIT" href="cv.html#CAP_PROP_XI_AG_MAX_LIMIT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="361" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_APPLY_CMS" fullname="cv::CAP_PROP_XI_APPLY_CMS" href="cv.html#CAP_PROP_XI_APPLY_CMS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="408" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION" fullname="cv::CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION" href="cv.html#CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="485" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AUTO_WB" fullname="cv::CAP_PROP_XI_AUTO_WB" href="cv.html#CAP_PROP_XI_AUTO_WB-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="357" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_AVAILABLE_BANDWIDTH" fullname="cv::CAP_PROP_XI_AVAILABLE_BANDWIDTH" href="cv.html#CAP_PROP_XI_AVAILABLE_BANDWIDTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="457" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BINNING_HORIZONTAL" fullname="cv::CAP_PROP_XI_BINNING_HORIZONTAL" href="cv.html#CAP_PROP_XI_BINNING_HORIZONTAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="371" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BINNING_PATTERN" fullname="cv::CAP_PROP_XI_BINNING_PATTERN" href="cv.html#CAP_PROP_XI_BINNING_PATTERN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="372" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BINNING_SELECTOR" fullname="cv::CAP_PROP_XI_BINNING_SELECTOR" href="cv.html#CAP_PROP_XI_BINNING_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="369" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BINNING_VERTICAL" fullname="cv::CAP_PROP_XI_BINNING_VERTICAL" href="cv.html#CAP_PROP_XI_BINNING_VERTICAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="370" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BPC" fullname="cv::CAP_PROP_XI_BPC" href="cv.html#CAP_PROP_XI_BPC-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="386" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BUFFERS_QUEUE_SIZE" fullname="cv::CAP_PROP_XI_BUFFERS_QUEUE_SIZE" href="cv.html#CAP_PROP_XI_BUFFERS_QUEUE_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="469" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_BUFFER_POLICY" fullname="cv::CAP_PROP_XI_BUFFER_POLICY" href="cv.html#CAP_PROP_XI_BUFFER_POLICY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="458" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_00" fullname="cv::CAP_PROP_XI_CC_MATRIX_00" href="cv.html#CAP_PROP_XI_CC_MATRIX_00-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="414" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_01" fullname="cv::CAP_PROP_XI_CC_MATRIX_01" href="cv.html#CAP_PROP_XI_CC_MATRIX_01-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="415" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_02" fullname="cv::CAP_PROP_XI_CC_MATRIX_02" href="cv.html#CAP_PROP_XI_CC_MATRIX_02-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="416" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_03" fullname="cv::CAP_PROP_XI_CC_MATRIX_03" href="cv.html#CAP_PROP_XI_CC_MATRIX_03-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="417" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_10" fullname="cv::CAP_PROP_XI_CC_MATRIX_10" href="cv.html#CAP_PROP_XI_CC_MATRIX_10-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="418" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_11" fullname="cv::CAP_PROP_XI_CC_MATRIX_11" href="cv.html#CAP_PROP_XI_CC_MATRIX_11-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="419" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_12" fullname="cv::CAP_PROP_XI_CC_MATRIX_12" href="cv.html#CAP_PROP_XI_CC_MATRIX_12-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="420" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_13" fullname="cv::CAP_PROP_XI_CC_MATRIX_13" href="cv.html#CAP_PROP_XI_CC_MATRIX_13-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="421" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_20" fullname="cv::CAP_PROP_XI_CC_MATRIX_20" href="cv.html#CAP_PROP_XI_CC_MATRIX_20-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="422" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_21" fullname="cv::CAP_PROP_XI_CC_MATRIX_21" href="cv.html#CAP_PROP_XI_CC_MATRIX_21-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="423" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_22" fullname="cv::CAP_PROP_XI_CC_MATRIX_22" href="cv.html#CAP_PROP_XI_CC_MATRIX_22-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="424" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_23" fullname="cv::CAP_PROP_XI_CC_MATRIX_23" href="cv.html#CAP_PROP_XI_CC_MATRIX_23-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="425" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_30" fullname="cv::CAP_PROP_XI_CC_MATRIX_30" href="cv.html#CAP_PROP_XI_CC_MATRIX_30-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="426" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_31" fullname="cv::CAP_PROP_XI_CC_MATRIX_31" href="cv.html#CAP_PROP_XI_CC_MATRIX_31-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="427" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_32" fullname="cv::CAP_PROP_XI_CC_MATRIX_32" href="cv.html#CAP_PROP_XI_CC_MATRIX_32-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="428" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CC_MATRIX_33" fullname="cv::CAP_PROP_XI_CC_MATRIX_33" href="cv.html#CAP_PROP_XI_CC_MATRIX_33-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="429" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CHIP_TEMP" fullname="cv::CAP_PROP_XI_CHIP_TEMP" href="cv.html#CAP_PROP_XI_CHIP_TEMP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="403" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_CMS" fullname="cv::CAP_PROP_XI_CMS" href="cv.html#CAP_PROP_XI_CMS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="407" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_COLOR_FILTER_ARRAY" fullname="cv::CAP_PROP_XI_COLOR_FILTER_ARRAY" href="cv.html#CAP_PROP_XI_COLOR_FILTER_ARRAY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="410" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_COLUMN_FPN_CORRECTION" fullname="cv::CAP_PROP_XI_COLUMN_FPN_CORRECTION" href="cv.html#CAP_PROP_XI_COLUMN_FPN_CORRECTION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="473" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_COOLING" fullname="cv::CAP_PROP_XI_COOLING" href="cv.html#CAP_PROP_XI_COOLING-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="401" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_COUNTER_SELECTOR" fullname="cv::CAP_PROP_XI_COUNTER_SELECTOR" href="cv.html#CAP_PROP_XI_COUNTER_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="454" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_COUNTER_VALUE" fullname="cv::CAP_PROP_XI_COUNTER_VALUE" href="cv.html#CAP_PROP_XI_COUNTER_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="455" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DATA_FORMAT" fullname="cv::CAP_PROP_XI_DATA_FORMAT" href="cv.html#CAP_PROP_XI_DATA_FORMAT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="344" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEBOUNCE_EN" fullname="cv::CAP_PROP_XI_DEBOUNCE_EN" href="cv.html#CAP_PROP_XI_DEBOUNCE_EN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="433" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEBOUNCE_POL" fullname="cv::CAP_PROP_XI_DEBOUNCE_POL" href="cv.html#CAP_PROP_XI_DEBOUNCE_POL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="436" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEBOUNCE_T0" fullname="cv::CAP_PROP_XI_DEBOUNCE_T0" href="cv.html#CAP_PROP_XI_DEBOUNCE_T0-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="434" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEBOUNCE_T1" fullname="cv::CAP_PROP_XI_DEBOUNCE_T1" href="cv.html#CAP_PROP_XI_DEBOUNCE_T1-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="435" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEBUG_LEVEL" fullname="cv::CAP_PROP_XI_DEBUG_LEVEL" href="cv.html#CAP_PROP_XI_DEBUG_LEVEL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="484" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DECIMATION_HORIZONTAL" fullname="cv::CAP_PROP_XI_DECIMATION_HORIZONTAL" href="cv.html#CAP_PROP_XI_DECIMATION_HORIZONTAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="375" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DECIMATION_PATTERN" fullname="cv::CAP_PROP_XI_DECIMATION_PATTERN" href="cv.html#CAP_PROP_XI_DECIMATION_PATTERN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="376" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DECIMATION_SELECTOR" fullname="cv::CAP_PROP_XI_DECIMATION_SELECTOR" href="cv.html#CAP_PROP_XI_DECIMATION_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="373" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DECIMATION_VERTICAL" fullname="cv::CAP_PROP_XI_DECIMATION_VERTICAL" href="cv.html#CAP_PROP_XI_DECIMATION_VERTICAL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="374" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEFAULT_CC_MATRIX" fullname="cv::CAP_PROP_XI_DEFAULT_CC_MATRIX" href="cv.html#CAP_PROP_XI_DEFAULT_CC_MATRIX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="430" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEVICE_MODEL_ID" fullname="cv::CAP_PROP_XI_DEVICE_MODEL_ID" href="cv.html#CAP_PROP_XI_DEVICE_MODEL_ID-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="445" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEVICE_RESET" fullname="cv::CAP_PROP_XI_DEVICE_RESET" href="cv.html#CAP_PROP_XI_DEVICE_RESET-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="472" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DEVICE_SN" fullname="cv::CAP_PROP_XI_DEVICE_SN" href="cv.html#CAP_PROP_XI_DEVICE_SN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="446" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DOWNSAMPLING" fullname="cv::CAP_PROP_XI_DOWNSAMPLING" href="cv.html#CAP_PROP_XI_DOWNSAMPLING-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="343" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_DOWNSAMPLING_TYPE" fullname="cv::CAP_PROP_XI_DOWNSAMPLING_TYPE" href="cv.html#CAP_PROP_XI_DOWNSAMPLING_TYPE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="368" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_EXPOSURE" fullname="cv::CAP_PROP_XI_EXPOSURE" href="cv.html#CAP_PROP_XI_EXPOSURE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="364" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_EXPOSURE_BURST_COUNT" fullname="cv::CAP_PROP_XI_EXPOSURE_BURST_COUNT" href="cv.html#CAP_PROP_XI_EXPOSURE_BURST_COUNT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="365" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_EXP_PRIORITY" fullname="cv::CAP_PROP_XI_EXP_PRIORITY" href="cv.html#CAP_PROP_XI_EXP_PRIORITY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="359" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_FFS_ACCESS_KEY" fullname="cv::CAP_PROP_XI_FFS_ACCESS_KEY" href="cv.html#CAP_PROP_XI_FFS_ACCESS_KEY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="490" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_FFS_FILE_ID" fullname="cv::CAP_PROP_XI_FFS_FILE_ID" href="cv.html#CAP_PROP_XI_FFS_FILE_ID-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="486" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_FFS_FILE_SIZE" fullname="cv::CAP_PROP_XI_FFS_FILE_SIZE" href="cv.html#CAP_PROP_XI_FFS_FILE_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="487" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_FRAMERATE" fullname="cv::CAP_PROP_XI_FRAMERATE" href="cv.html#CAP_PROP_XI_FRAMERATE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="453" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_FREE_FFS_SIZE" fullname="cv::CAP_PROP_XI_FREE_FFS_SIZE" href="cv.html#CAP_PROP_XI_FREE_FFS_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="488" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GAIN" fullname="cv::CAP_PROP_XI_GAIN" href="cv.html#CAP_PROP_XI_GAIN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="367" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GAIN_SELECTOR" fullname="cv::CAP_PROP_XI_GAIN_SELECTOR" href="cv.html#CAP_PROP_XI_GAIN_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="366" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GAMMAC" fullname="cv::CAP_PROP_XI_GAMMAC" href="cv.html#CAP_PROP_XI_GAMMAC-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="412" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GAMMAY" fullname="cv::CAP_PROP_XI_GAMMAY" href="cv.html#CAP_PROP_XI_GAMMAY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="411" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GPI_LEVEL" fullname="cv::CAP_PROP_XI_GPI_LEVEL" href="cv.html#CAP_PROP_XI_GPI_LEVEL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="351" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GPI_MODE" fullname="cv::CAP_PROP_XI_GPI_MODE" href="cv.html#CAP_PROP_XI_GPI_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="350" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GPI_SELECTOR" fullname="cv::CAP_PROP_XI_GPI_SELECTOR" href="cv.html#CAP_PROP_XI_GPI_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="349" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GPO_MODE" fullname="cv::CAP_PROP_XI_GPO_MODE" href="cv.html#CAP_PROP_XI_GPO_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="353" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_GPO_SELECTOR" fullname="cv::CAP_PROP_XI_GPO_SELECTOR" href="cv.html#CAP_PROP_XI_GPO_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="352" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HDR" fullname="cv::CAP_PROP_XI_HDR" href="cv.html#CAP_PROP_XI_HDR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="476" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HDR_KNEEPOINT_COUNT" fullname="cv::CAP_PROP_XI_HDR_KNEEPOINT_COUNT" href="cv.html#CAP_PROP_XI_HDR_KNEEPOINT_COUNT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="477" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HDR_T1" fullname="cv::CAP_PROP_XI_HDR_T1" href="cv.html#CAP_PROP_XI_HDR_T1-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="478" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HDR_T2" fullname="cv::CAP_PROP_XI_HDR_T2" href="cv.html#CAP_PROP_XI_HDR_T2-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="479" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HEIGHT" fullname="cv::CAP_PROP_XI_HEIGHT" href="cv.html#CAP_PROP_XI_HEIGHT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="391" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HOUS_BACK_SIDE_TEMP" fullname="cv::CAP_PROP_XI_HOUS_BACK_SIDE_TEMP" href="cv.html#CAP_PROP_XI_HOUS_BACK_SIDE_TEMP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="405" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HOUS_TEMP" fullname="cv::CAP_PROP_XI_HOUS_TEMP" href="cv.html#CAP_PROP_XI_HOUS_TEMP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="404" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_HW_REVISION" fullname="cv::CAP_PROP_XI_HW_REVISION" href="cv.html#CAP_PROP_XI_HW_REVISION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="483" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_BLACK_LEVEL" fullname="cv::CAP_PROP_XI_IMAGE_BLACK_LEVEL" href="cv.html#CAP_PROP_XI_IMAGE_BLACK_LEVEL-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="482" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH" fullname="cv::CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH" href="cv.html#CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="397" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_DATA_FORMAT" fullname="cv::CAP_PROP_XI_IMAGE_DATA_FORMAT" href="cv.html#CAP_PROP_XI_IMAGE_DATA_FORMAT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="379" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA" fullname="cv::CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA" href="cv.html#CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="447" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_IS_COLOR" fullname="cv::CAP_PROP_XI_IMAGE_IS_COLOR" href="cv.html#CAP_PROP_XI_IMAGE_IS_COLOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="409" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IMAGE_PAYLOAD_SIZE" fullname="cv::CAP_PROP_XI_IMAGE_PAYLOAD_SIZE" href="cv.html#CAP_PROP_XI_IMAGE_PAYLOAD_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="448" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IS_COOLED" fullname="cv::CAP_PROP_XI_IS_COOLED" href="cv.html#CAP_PROP_XI_IS_COOLED-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="400" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_IS_DEVICE_EXIST" fullname="cv::CAP_PROP_XI_IS_DEVICE_EXIST" href="cv.html#CAP_PROP_XI_IS_DEVICE_EXIST-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="465" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_KNEEPOINT1" fullname="cv::CAP_PROP_XI_KNEEPOINT1" href="cv.html#CAP_PROP_XI_KNEEPOINT1-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="480" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_KNEEPOINT2" fullname="cv::CAP_PROP_XI_KNEEPOINT2" href="cv.html#CAP_PROP_XI_KNEEPOINT2-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="481" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LED_MODE" fullname="cv::CAP_PROP_XI_LED_MODE" href="cv.html#CAP_PROP_XI_LED_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="355" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LED_SELECTOR" fullname="cv::CAP_PROP_XI_LED_SELECTOR" href="cv.html#CAP_PROP_XI_LED_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="354" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_APERTURE_VALUE" fullname="cv::CAP_PROP_XI_LENS_APERTURE_VALUE" href="cv.html#CAP_PROP_XI_LENS_APERTURE_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="438" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FEATURE" fullname="cv::CAP_PROP_XI_LENS_FEATURE" href="cv.html#CAP_PROP_XI_LENS_FEATURE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="444" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FEATURE_SELECTOR" fullname="cv::CAP_PROP_XI_LENS_FEATURE_SELECTOR" href="cv.html#CAP_PROP_XI_LENS_FEATURE_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="443" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FOCAL_LENGTH" fullname="cv::CAP_PROP_XI_LENS_FOCAL_LENGTH" href="cv.html#CAP_PROP_XI_LENS_FOCAL_LENGTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="442" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FOCUS_DISTANCE" fullname="cv::CAP_PROP_XI_LENS_FOCUS_DISTANCE" href="cv.html#CAP_PROP_XI_LENS_FOCUS_DISTANCE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="441" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FOCUS_MOVE" fullname="cv::CAP_PROP_XI_LENS_FOCUS_MOVE" href="cv.html#CAP_PROP_XI_LENS_FOCUS_MOVE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="440" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE" fullname="cv::CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE" href="cv.html#CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="439" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LENS_MODE" fullname="cv::CAP_PROP_XI_LENS_MODE" href="cv.html#CAP_PROP_XI_LENS_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="437" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LIMIT_BANDWIDTH" fullname="cv::CAP_PROP_XI_LIMIT_BANDWIDTH" href="cv.html#CAP_PROP_XI_LIMIT_BANDWIDTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="394" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LUT_EN" fullname="cv::CAP_PROP_XI_LUT_EN" href="cv.html#CAP_PROP_XI_LUT_EN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="459" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LUT_INDEX" fullname="cv::CAP_PROP_XI_LUT_INDEX" href="cv.html#CAP_PROP_XI_LUT_INDEX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="460" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_LUT_VALUE" fullname="cv::CAP_PROP_XI_LUT_VALUE" href="cv.html#CAP_PROP_XI_LUT_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="461" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_MANUAL_WB" fullname="cv::CAP_PROP_XI_MANUAL_WB" href="cv.html#CAP_PROP_XI_MANUAL_WB-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="356" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_OFFSET_X" fullname="cv::CAP_PROP_XI_OFFSET_X" href="cv.html#CAP_PROP_XI_OFFSET_X-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="345" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_OFFSET_Y" fullname="cv::CAP_PROP_XI_OFFSET_Y" href="cv.html#CAP_PROP_XI_OFFSET_Y-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="346" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH" fullname="cv::CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH" href="cv.html#CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="396" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_OUTPUT_DATA_PACKING" fullname="cv::CAP_PROP_XI_OUTPUT_DATA_PACKING" href="cv.html#CAP_PROP_XI_OUTPUT_DATA_PACKING-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="398" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE" fullname="cv::CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE" href="cv.html#CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="399" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_RECENT_FRAME" fullname="cv::CAP_PROP_XI_RECENT_FRAME" href="cv.html#CAP_PROP_XI_RECENT_FRAME-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="471" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_REGION_MODE" fullname="cv::CAP_PROP_XI_REGION_MODE" href="cv.html#CAP_PROP_XI_REGION_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="393" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_REGION_SELECTOR" fullname="cv::CAP_PROP_XI_REGION_SELECTOR" href="cv.html#CAP_PROP_XI_REGION_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="392" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_ROW_FPN_CORRECTION" fullname="cv::CAP_PROP_XI_ROW_FPN_CORRECTION" href="cv.html#CAP_PROP_XI_ROW_FPN_CORRECTION-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="474" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_BOARD_TEMP" fullname="cv::CAP_PROP_XI_SENSOR_BOARD_TEMP" href="cv.html#CAP_PROP_XI_SENSOR_BOARD_TEMP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="406" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ" fullname="cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ" href="cv.html#CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="450" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX" fullname="cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX" href="cv.html#CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="451" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH" fullname="cv::CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH" href="cv.html#CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="395" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_FEATURE_SELECTOR" fullname="cv::CAP_PROP_XI_SENSOR_FEATURE_SELECTOR" href="cv.html#CAP_PROP_XI_SENSOR_FEATURE_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="491" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_FEATURE_VALUE" fullname="cv::CAP_PROP_XI_SENSOR_FEATURE_VALUE" href="cv.html#CAP_PROP_XI_SENSOR_FEATURE_VALUE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="492" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_MODE" fullname="cv::CAP_PROP_XI_SENSOR_MODE" href="cv.html#CAP_PROP_XI_SENSOR_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="475" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT" fullname="cv::CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT" href="cv.html#CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="452" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SENSOR_TAPS" fullname="cv::CAP_PROP_XI_SENSOR_TAPS" href="cv.html#CAP_PROP_XI_SENSOR_TAPS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="381" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SHARPNESS" fullname="cv::CAP_PROP_XI_SHARPNESS" href="cv.html#CAP_PROP_XI_SHARPNESS-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="413" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_SHUTTER_TYPE" fullname="cv::CAP_PROP_XI_SHUTTER_TYPE" href="cv.html#CAP_PROP_XI_SHUTTER_TYPE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="380" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TARGET_TEMP" fullname="cv::CAP_PROP_XI_TARGET_TEMP" href="cv.html#CAP_PROP_XI_TARGET_TEMP-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="402" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TEST_PATTERN" fullname="cv::CAP_PROP_XI_TEST_PATTERN" href="cv.html#CAP_PROP_XI_TEST_PATTERN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="378" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR" fullname="cv::CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR" href="cv.html#CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="377" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TIMEOUT" fullname="cv::CAP_PROP_XI_TIMEOUT" href="cv.html#CAP_PROP_XI_TIMEOUT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="363" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT" fullname="cv::CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT" href="cv.html#CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="449" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TRG_DELAY" fullname="cv::CAP_PROP_XI_TRG_DELAY" href="cv.html#CAP_PROP_XI_TRG_DELAY-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="462" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TRG_SELECTOR" fullname="cv::CAP_PROP_XI_TRG_SELECTOR" href="cv.html#CAP_PROP_XI_TRG_SELECTOR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="431" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TRG_SOFTWARE" fullname="cv::CAP_PROP_XI_TRG_SOFTWARE" href="cv.html#CAP_PROP_XI_TRG_SOFTWARE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="348" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TRG_SOURCE" fullname="cv::CAP_PROP_XI_TRG_SOURCE" href="cv.html#CAP_PROP_XI_TRG_SOURCE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="347" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TS_RST_MODE" fullname="cv::CAP_PROP_XI_TS_RST_MODE" href="cv.html#CAP_PROP_XI_TS_RST_MODE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="463" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_TS_RST_SOURCE" fullname="cv::CAP_PROP_XI_TS_RST_SOURCE" href="cv.html#CAP_PROP_XI_TS_RST_SOURCE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="464" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_USED_FFS_SIZE" fullname="cv::CAP_PROP_XI_USED_FFS_SIZE" href="cv.html#CAP_PROP_XI_USED_FFS_SIZE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="489" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_WB_KB" fullname="cv::CAP_PROP_XI_WB_KB" href="cv.html#CAP_PROP_XI_WB_KB-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="389" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_WB_KG" fullname="cv::CAP_PROP_XI_WB_KG" href="cv.html#CAP_PROP_XI_WB_KG-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="388" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_WB_KR" fullname="cv::CAP_PROP_XI_WB_KR" href="cv.html#CAP_PROP_XI_WB_KR-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="387" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PROP_XI_WIDTH" fullname="cv::CAP_PROP_XI_WIDTH" href="cv.html#CAP_PROP_XI_WIDTH-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="390" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_DECIMATION_2OUTOF16" fullname="cv::CAP_PVAPI_DECIMATION_2OUTOF16" href="cv.html#CAP_PVAPI_DECIMATION_2OUTOF16-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="323" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_DECIMATION_2OUTOF4" fullname="cv::CAP_PVAPI_DECIMATION_2OUTOF4" href="cv.html#CAP_PVAPI_DECIMATION_2OUTOF4-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="320" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_DECIMATION_2OUTOF8" fullname="cv::CAP_PVAPI_DECIMATION_2OUTOF8" href="cv.html#CAP_PVAPI_DECIMATION_2OUTOF8-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="321" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_DECIMATION_OFF" fullname="cv::CAP_PVAPI_DECIMATION_OFF" href="cv.html#CAP_PVAPI_DECIMATION_OFF-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="319" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_FSTRIGMODE_FIXEDRATE" fullname="cv::CAP_PVAPI_FSTRIGMODE_FIXEDRATE" href="cv.html#CAP_PVAPI_FSTRIGMODE_FIXEDRATE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="314" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_FSTRIGMODE_FREERUN" fullname="cv::CAP_PVAPI_FSTRIGMODE_FREERUN" href="cv.html#CAP_PVAPI_FSTRIGMODE_FREERUN-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="311" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_FSTRIGMODE_SOFTWARE" fullname="cv::CAP_PVAPI_FSTRIGMODE_SOFTWARE" href="cv.html#CAP_PVAPI_FSTRIGMODE_SOFTWARE-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="316" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_FSTRIGMODE_SYNCIN1" fullname="cv::CAP_PVAPI_FSTRIGMODE_SYNCIN1" href="cv.html#CAP_PVAPI_FSTRIGMODE_SYNCIN1-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="312" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_FSTRIGMODE_SYNCIN2" fullname="cv::CAP_PVAPI_FSTRIGMODE_SYNCIN2" href="cv.html#CAP_PVAPI_FSTRIGMODE_SYNCIN2-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="313" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_BAYER16" fullname="cv::CAP_PVAPI_PIXELFORMAT_BAYER16" href="cv.html#CAP_PVAPI_PIXELFORMAT_BAYER16-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="329" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_BAYER8" fullname="cv::CAP_PVAPI_PIXELFORMAT_BAYER8" href="cv.html#CAP_PVAPI_PIXELFORMAT_BAYER8-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="328" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_BGR24" fullname="cv::CAP_PVAPI_PIXELFORMAT_BGR24" href="cv.html#CAP_PVAPI_PIXELFORMAT_BGR24-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="331" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_BGRA32" fullname="cv::CAP_PVAPI_PIXELFORMAT_BGRA32" href="cv.html#CAP_PVAPI_PIXELFORMAT_BGRA32-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="333" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_MONO16" fullname="cv::CAP_PVAPI_PIXELFORMAT_MONO16" href="cv.html#CAP_PVAPI_PIXELFORMAT_MONO16-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="327" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_MONO8" fullname="cv::CAP_PVAPI_PIXELFORMAT_MONO8" href="cv.html#CAP_PVAPI_PIXELFORMAT_MONO8-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="326" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_RGB24" fullname="cv::CAP_PVAPI_PIXELFORMAT_RGB24" href="cv.html#CAP_PVAPI_PIXELFORMAT_RGB24-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="330" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="CAP_PVAPI_PIXELFORMAT_RGBA32" fullname="cv::CAP_PVAPI_PIXELFORMAT_RGBA32" href="cv.html#CAP_PVAPI_PIXELFORMAT_RGBA32-var" status="active" access="public" location="videoio.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio.hpp" lineno="332" type="const int" static="true"/>
            <namespace threadsafety="unspecified" name="videoio_registry" fullname="cv::videoio_registry" href="cv-videoio-registry.html" status="active" access="public" location="registry.hpp" filepath="/usr/local/include/opencv4/opencv2/videoio/registry.hpp" lineno="10"/>
        </namespace>
        <variable threadsafety="unspecified" name="CV_DLS" status="internal" access="private" location="calib3d_c.h" filepath="/usr/local/include/opencv4/opencv2/calib3d/calib3d_c.h" lineno="71" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EPNP" status="internal" access="private" location="calib3d_c.h" filepath="/usr/local/include/opencv4/opencv2/calib3d/calib3d_c.h" lineno="68" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_ITERATIVE" status="internal" access="private" location="calib3d_c.h" filepath="/usr/local/include/opencv4/opencv2/calib3d/calib3d_c.h" lineno="67" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_P3P" status="internal" access="private" location="calib3d_c.h" filepath="/usr/local/include/opencv4/opencv2/calib3d/calib3d_c.h" lineno="69" type="const int" static="true"/>
        <class threadsafety="unspecified" name="CvGraphScanner" href="cvgraphscanner.html" status="internal" access="private" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1860">
            <variable threadsafety="unspecified" name="dst" fullname="CvGraphScanner::dst" href="cvgraphscanner.html#dst-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1863" type="CvGraphVtx *" static="false"/>
            <variable threadsafety="unspecified" name="edge" fullname="CvGraphScanner::edge" href="cvgraphscanner.html#edge-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1864" type="CvGraphEdge *" static="false"/>
            <variable threadsafety="unspecified" name="graph" fullname="CvGraphScanner::graph" href="cvgraphscanner.html#graph-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1866" type="CvGraph *" static="false"/>
            <variable threadsafety="unspecified" name="index" fullname="CvGraphScanner::index" href="cvgraphscanner.html#index-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1868" type="int" static="false"/>
            <variable threadsafety="unspecified" name="mask" fullname="CvGraphScanner::mask" href="cvgraphscanner.html#mask-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1869" type="int" static="false"/>
            <variable threadsafety="unspecified" name="stack" fullname="CvGraphScanner::stack" href="cvgraphscanner.html#stack-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1867" type="CvSeq *" static="false"/>
            <variable threadsafety="unspecified" name="vtx" fullname="CvGraphScanner::vtx" href="cvgraphscanner.html#vtx-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1862" type="CvGraphVtx *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvTreeNodeIterator" href="cvtreenodeiterator.html" status="internal" access="private" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1894">
            <variable threadsafety="unspecified" name="level" fullname="CvTreeNodeIterator::level" href="cvtreenodeiterator.html#level-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1897" type="int" static="false"/>
            <variable threadsafety="unspecified" name="max_level" fullname="CvTreeNodeIterator::max_level" href="cvtreenodeiterator.html#max_level-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1898" type="int" static="false"/>
            <variable threadsafety="unspecified" name="node" fullname="CvTreeNodeIterator::node" href="cvtreenodeiterator.html#node-var" status="active" access="public" location="core_c.h" filepath="/usr/local/include/opencv4/opencv2/core/core_c.h" lineno="1896" type="const void *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="Cv16suf" href="cv16suf.html" status="internal" access="private" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="365">
            <variable threadsafety="unspecified" name="h" fullname="Cv16suf::h" href="cv16suf.html#h-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="370" type="__fp16" static="false"/>
            <variable threadsafety="unspecified" name="i" fullname="Cv16suf::i" href="cv16suf.html#i-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="367" type="short" static="false"/>
            <variable threadsafety="unspecified" name="u" fullname="Cv16suf::u" href="cv16suf.html#u-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="368" type="ushort" static="false"/>
        </class>
        <class threadsafety="unspecified" name="Cv32suf" href="cv32suf.html" status="internal" access="private" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="375">
            <variable threadsafety="unspecified" name="f" fullname="Cv32suf::f" href="cv32suf.html#f-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="379" type="float" static="false"/>
            <variable threadsafety="unspecified" name="i" fullname="Cv32suf::i" href="cv32suf.html#i-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="377" type="int" static="false"/>
            <variable threadsafety="unspecified" name="u" fullname="Cv32suf::u" href="cv32suf.html#u-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="378" type="unsigned" static="false"/>
        </class>
        <class threadsafety="unspecified" name="Cv64suf" href="cv64suf.html" status="internal" access="private" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="383">
            <variable threadsafety="unspecified" name="f" fullname="Cv64suf::f" href="cv64suf.html#f-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="387" type="double" static="false"/>
            <variable threadsafety="unspecified" name="i" fullname="Cv64suf::i" href="cv64suf.html#i-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="385" type="int64" static="false"/>
            <variable threadsafety="unspecified" name="u" fullname="Cv64suf::u" href="cv64suf.html#u-var" status="active" access="public" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="386" type="uint64" static="false"/>
        </class>
        <enum threadsafety="unspecified" name="CpuFeatures" status="internal" access="private" location="cvdef.h" filepath="/usr/local/include/opencv4/opencv2/core/cvdef.h" lineno="291">
            <value name="CPU_MMX" value="1"/>
            <value name="CPU_SSE" value="2"/>
            <value name="CPU_SSE2" value="3"/>
            <value name="CPU_SSE3" value="4"/>
            <value name="CPU_SSSE3" value="5"/>
            <value name="CPU_SSE4_1" value="6"/>
            <value name="CPU_SSE4_2" value="7"/>
            <value name="CPU_POPCNT" value="8"/>
            <value name="CPU_FP16" value="9"/>
            <value name="CPU_AVX" value="10"/>
            <value name="CPU_AVX2" value="11"/>
            <value name="CPU_FMA3" value="12"/>
            <value name="CPU_AVX_512F" value="13"/>
            <value name="CPU_AVX_512BW" value="14"/>
            <value name="CPU_AVX_512CD" value="15"/>
            <value name="CPU_AVX_512DQ" value="16"/>
            <value name="CPU_AVX_512ER" value="17"/>
            <value name="CPU_AVX_512IFMA512" value="18"/>
            <value name="CPU_AVX_512IFMA" value="18"/>
            <value name="CPU_AVX_512PF" value="19"/>
            <value name="CPU_AVX_512VBMI" value="20"/>
            <value name="CPU_AVX_512VL" value="21"/>
            <value name="CPU_AVX_512VBMI2" value="22"/>
            <value name="CPU_AVX_512VNNI" value="23"/>
            <value name="CPU_AVX_512BITALG" value="24"/>
            <value name="CPU_AVX_512VPOPCNTDQ" value="25"/>
            <value name="CPU_AVX_5124VNNIW" value="26"/>
            <value name="CPU_AVX_5124FMAPS" value="27"/>
            <value name="CPU_NEON" value="100"/>
            <value name="CPU_MSA" value="150"/>
            <value name="CPU_VSX" value="200"/>
            <value name="CPU_VSX3" value="201"/>
            <value name="CPU_RVV" value="210"/>
            <value name="CPU_AVX512_SKX" value="256"/>
            <value name="CPU_AVX512_COMMON" value="257"/>
            <value name="CPU_AVX512_KNL" value="258"/>
            <value name="CPU_AVX512_KNM" value="259"/>
            <value name="CPU_AVX512_CNL" value="260"/>
            <value name="CPU_AVX512_CLX" value="261"/>
            <value name="CPU_AVX512_ICL" value="262"/>
            <value name="CPU_MAX_FEATURE" value="512"/>
        </enum>
        <typedef threadsafety="unspecified" name="int64" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="61"/>
        <typedef threadsafety="unspecified" name="schar" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="48"/>
        <typedef threadsafety="unspecified" name="uchar" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="51"/>
        <typedef threadsafety="unspecified" name="uint" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="42"/>
        <typedef threadsafety="unspecified" name="uint64" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="62"/>
        <typedef threadsafety="unspecified" name="ushort" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/core/hal/interface.h" lineno="52"/>
        <function threadsafety="unspecified" name="Arrays" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="706" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Arrays()"/>
        <function threadsafety="unspecified" name="Buffer" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="588" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(Size asize, int atype, Target target, bool autoRelease)">
            <parameter left="Size" right="" name="asize" default=""/>
            <parameter left="int" right="" name="atype" default=""/>
            <parameter left="Target" right="" name="target" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="Buffer" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="582" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Buffer(int arows, int acols, int atype, Target target, bool autoRelease)">
            <parameter left="int" right="" name="arows" default=""/>
            <parameter left="int" right="" name="acols" default=""/>
            <parameter left="int" right="" name="atype" default=""/>
            <parameter left="Target" right="" name="target" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="Texture2D" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="662" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(Size asize, Format aformat, bool autoRelease)">
            <parameter left="Size" right="" name="asize" default=""/>
            <parameter left="Format" right="" name="aformat" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="Texture2D" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="656" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Texture2D(int arows, int acols, Format aformat, bool autoRelease)">
            <parameter left="int" right="" name="arows" default=""/>
            <parameter left="int" right="" name="acols" default=""/>
            <parameter left="Format" right="" name="aformat" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrecp_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="90" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x2_t" signature="float32x2_t cv_vrecp_f32(float32x2_t val)">
            <parameter left="float32x2_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrsqrt_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x2_t" signature="float32x2_t cv_vrsqrt_f32(float32x2_t val)">
            <parameter left="float32x2_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vsqrt_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="119" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x2_t" signature="float32x2_t cv_vsqrt_f32(float32x2_t val)">
            <parameter left="float32x2_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrecpq_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x4_t" signature="float32x4_t cv_vrecpq_f32(float32x4_t val)">
            <parameter left="float32x4_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrsqrtq_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="98" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x4_t" signature="float32x4_t cv_vrsqrtq_f32(float32x4_t val)">
            <parameter left="float32x4_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vsqrtq_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float32x4_t" signature="float32x4_t cv_vsqrtq_f32(float32x4_t val)">
            <parameter left="float32x4_t" right="" name="val" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrnd_s32_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int32x2_t" signature="int32x2_t cv_vrnd_s32_f32(float32x2_t v)">
            <parameter left="float32x2_t" right="" name="v" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrndq_s32_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int32x4_t" signature="int32x4_t cv_vrndq_s32_f32(float32x4_t v)">
            <parameter left="float32x4_t" right="" name="v" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrnd_u32_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="70" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32x2_t" signature="uint32x2_t cv_vrnd_u32_f32(float32x2_t v)">
            <parameter left="float32x2_t" right="" name="v" default=""/>
        </function>
        <function threadsafety="unspecified" name="cv_vrndq_u32_f32" status="internal" access="private" location="neon_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/neon_utils.hpp" lineno="76" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="uint32x4_t" signature="uint32x4_t cv_vrndq_u32_f32(float32x4_t v)">
            <parameter left="float32x4_t" right="" name="v" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="294" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="317" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="349" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1, __m128i &amp;v_a0, __m128i &amp;v_a1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="56" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="84" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="123" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1, __m128i &amp;v_a0, __m128i &amp;v_a1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="494" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="512" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1, __m128 &amp;v_b0, __m128 &amp;v_b1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_deinterleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="537" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_deinterleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1, __m128 &amp;v_b0, __m128 &amp;v_b1, __m128 &amp;v_a0, __m128 &amp;v_a1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="391" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi16" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="450" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi16(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1, __m128i &amp;v_a0, __m128i &amp;v_a1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="202" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_epi8" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="243" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_epi8(__m128i &amp;v_r0, __m128i &amp;v_r1, __m128i &amp;v_g0, __m128i &amp;v_g1, __m128i &amp;v_b0, __m128i &amp;v_b1, __m128i &amp;v_a0, __m128i &amp;v_a1)">
            <parameter left="__m128i &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128i &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="568" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="588" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1, __m128 &amp;v_b0, __m128 &amp;v_b1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b1" default=""/>
        </function>
        <function threadsafety="unspecified" name="_mm_interleave_ps" status="internal" access="private" location="sse_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/sse_utils.hpp" lineno="615" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _mm_interleave_ps(__m128 &amp;v_r0, __m128 &amp;v_r1, __m128 &amp;v_g0, __m128 &amp;v_g1, __m128 &amp;v_b0, __m128 &amp;v_b1, __m128 &amp;v_a0, __m128 &amp;v_a1)">
            <parameter left="__m128 &amp;" right="" name="v_r0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_r1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_g1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_b1" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_a0" default=""/>
            <parameter left="__m128 &amp;" right="" name="v_a1" default=""/>
        </function>
        <function threadsafety="unspecified" name="create" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="668" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size asize, Format aformat, bool autoRelease)">
            <parameter left="Size" right="" name="asize" default=""/>
            <parameter left="Format" right="" name="aformat" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="create" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="594" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void create(Size asize, int atype, Target target, bool autoRelease)">
            <parameter left="Size" right="" name="asize" default=""/>
            <parameter left="int" right="" name="atype" default=""/>
            <parameter left="Target" right="" name="target" default=""/>
            <parameter left="bool" right="" name="autoRelease" default=""/>
        </function>
        <function threadsafety="unspecified" name="empty" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="717" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
        <function threadsafety="unspecified" name="empty" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="692" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
        <function threadsafety="unspecified" name="empty" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="618" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
        <function threadsafety="unspecified" name="size" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="612" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Size" signature="cv::Size size() const"/>
        <function threadsafety="unspecified" name="size" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="686" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::Size" signature="cv::Size size() const"/>
        <function threadsafety="unspecified" name="format" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="698" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="cv::ogl::Texture2D::Format" signature="cv::ogl::Texture2D::Format format() const"/>
        <function threadsafety="unspecified" name="channels" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="636" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int channels() const"/>
        <function threadsafety="unspecified" name="cols" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="680" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols() const"/>
        <function threadsafety="unspecified" name="cols" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="606" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int cols() const"/>
        <function threadsafety="unspecified" name="depth" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="630" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int depth() const"/>
        <function threadsafety="unspecified" name="elemSize" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="642" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int elemSize() const"/>
        <function threadsafety="unspecified" name="elemSize1" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="648" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int elemSize1() const"/>
        <function threadsafety="unspecified" name="rows" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="600" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows() const"/>
        <function threadsafety="unspecified" name="rows" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="674" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rows() const"/>
        <function threadsafety="unspecified" name="size" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="711" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size() const"/>
        <function threadsafety="unspecified" name="type" status="internal" access="private" location="opengl.hpp" filepath="/usr/local/include/opencv4/opencv2/core/opengl.hpp" lineno="624" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int type() const"/>
        <class threadsafety="unspecified" name="CvChain" href="cvchain.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1670"/>
        <class threadsafety="unspecified" name="CvContour" href="cvcontour.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1683"/>
        <class threadsafety="unspecified" name="CvGraph" href="cvgraph.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1658"/>
        <class threadsafety="unspecified" name="CvGraphEdge" href="cvgraphedge.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1631"/>
        <class threadsafety="unspecified" name="CvGraphVtx" href="cvgraphvtx.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1637"/>
        <class threadsafety="unspecified" name="CvGraphVtx2D" href="cvgraphvtx2d.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1643"/>
        <class threadsafety="unspecified" name="CvHistogram" href="cvhistogram.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="813">
            <variable threadsafety="unspecified" name="bins" fullname="CvHistogram::bins" href="cvhistogram.html#bins-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="816" type="CvArr *" static="false"/>
            <variable threadsafety="unspecified" name="mat" fullname="CvHistogram::mat" href="cvhistogram.html#mat-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="819" type="CvMatND" static="false"/>
            <variable threadsafety="unspecified" name="thresh" fullname="CvHistogram::thresh" href="cvhistogram.html#thresh-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="817" type="float[CV_MAX_DIM][2]" static="false"/>
            <variable threadsafety="unspecified" name="thresh2" fullname="CvHistogram::thresh2" href="cvhistogram.html#thresh2-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="818" type="float **" static="false"/>
            <variable threadsafety="unspecified" name="type" fullname="CvHistogram::type" href="cvhistogram.html#type-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="815" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvLineIterator" href="cvlineiterator.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1312">
            <variable threadsafety="unspecified" name="err" fullname="CvLineIterator::err" href="cvlineiterator.html#err-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1318" type="int" static="false"/>
            <variable threadsafety="unspecified" name="minus_delta" fullname="CvLineIterator::minus_delta" href="cvlineiterator.html#minus_delta-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1320" type="int" static="false"/>
            <variable threadsafety="unspecified" name="minus_step" fullname="CvLineIterator::minus_step" href="cvlineiterator.html#minus_step-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1322" type="int" static="false"/>
            <variable threadsafety="unspecified" name="plus_delta" fullname="CvLineIterator::plus_delta" href="cvlineiterator.html#plus_delta-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1319" type="int" static="false"/>
            <variable threadsafety="unspecified" name="plus_step" fullname="CvLineIterator::plus_step" href="cvlineiterator.html#plus_step-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1321" type="int" static="false"/>
            <variable threadsafety="unspecified" name="ptr" fullname="CvLineIterator::ptr" href="cvlineiterator.html#ptr-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1315" type="uchar *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvMat" href="cvmat.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="464">
            <variable threadsafety="unspecified" name="cols" fullname="CvMat::cols" href="cvmat.html#cols-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="496" type="int" static="false"/>
            <variable threadsafety="unspecified" name="hdr_refcount" fullname="CvMat::hdr_refcount" href="cvmat.html#hdr_refcount-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="471" type="int" static="false"/>
            <variable threadsafety="unspecified" name="refcount" fullname="CvMat::refcount" href="cvmat.html#refcount-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="470" type="int *" static="false"/>
            <variable threadsafety="unspecified" name="rows" fullname="CvMat::rows" href="cvmat.html#rows-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="495" type="int" static="false"/>
            <variable threadsafety="unspecified" name="step" fullname="CvMat::step" href="cvmat.html#step-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="467" type="int" static="false"/>
            <variable threadsafety="unspecified" name="type" fullname="CvMat::type" href="cvmat.html#type-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="466" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvMemStorage" href="cvmemstorage.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1493">
            <variable threadsafety="unspecified" name="block_size" fullname="CvMemStorage::block_size" href="cvmemstorage.html#block_size-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1499" type="int" static="false"/>
            <variable threadsafety="unspecified" name="bottom" fullname="CvMemStorage::bottom" href="cvmemstorage.html#bottom-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1496" type="CvMemBlock *" static="false"/>
            <variable threadsafety="unspecified" name="free_space" fullname="CvMemStorage::free_space" href="cvmemstorage.html#free_space-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1500" type="int" static="false"/>
            <variable threadsafety="unspecified" name="signature" fullname="CvMemStorage::signature" href="cvmemstorage.html#signature-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1495" type="int" static="false"/>
            <variable threadsafety="unspecified" name="top" fullname="CvMemStorage::top" href="cvmemstorage.html#top-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1497" type="CvMemBlock *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvMemStoragePos" href="cvmemstoragepos.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1509">
            <variable threadsafety="unspecified" name="free_space" fullname="CvMemStoragePos::free_space" href="cvmemstoragepos.html#free_space-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1512" type="int" static="false"/>
            <variable threadsafety="unspecified" name="top" fullname="CvMemStoragePos::top" href="cvmemstoragepos.html#top-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1511" type="CvMemBlock *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvRect" href="cvrect.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="843">
            <variable threadsafety="unspecified" name="height" fullname="CvRect::height" href="cvrect.html#height-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="848" type="int" static="false"/>
            <variable threadsafety="unspecified" name="width" fullname="CvRect::width" href="cvrect.html#width-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="847" type="int" static="false"/>
            <variable threadsafety="unspecified" name="x" fullname="CvRect::x" href="cvrect.html#x-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="845" type="int" static="false"/>
            <variable threadsafety="unspecified" name="y" fullname="CvRect::y" href="cvrect.html#y-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="846" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvSeq" href="cvseq.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1554"/>
        <class threadsafety="unspecified" name="CvSeqBlock" href="cvseqblock.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1519">
            <variable threadsafety="unspecified" name="count" fullname="CvSeqBlock::count" href="cvseqblock.html#count-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1525" type="int" static="false"/>
            <variable threadsafety="unspecified" name="data" fullname="CvSeqBlock::data" href="cvseqblock.html#data-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1526" type="schar *" static="false"/>
            <variable threadsafety="unspecified" name="start_index" fullname="CvSeqBlock::start_index" href="cvseqblock.html#start_index-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1523" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvSeqReader" href="cvseqreader.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1843"/>
        <class threadsafety="unspecified" name="CvSeqWriter" href="cvseqwriter.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1826"/>
        <class threadsafety="unspecified" name="CvSet" href="cvset.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1584"/>
        <class threadsafety="unspecified" name="CvSetElem" href="cvsetelem.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1573"/>
        <class threadsafety="unspecified" name="CvSlice" href="cvslice.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1332"/>
        <class threadsafety="unspecified" name="CvSparseMat" href="cvsparsemat.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="742">
            <variable threadsafety="unspecified" name="dims" fullname="CvSparseMat::dims" href="cvsparsemat.html#dims-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="745" type="int" static="false"/>
            <variable threadsafety="unspecified" name="hashsize" fullname="CvSparseMat::hashsize" href="cvsparsemat.html#hashsize-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="751" type="int" static="false"/>
            <variable threadsafety="unspecified" name="hashtable" fullname="CvSparseMat::hashtable" href="cvsparsemat.html#hashtable-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="750" type="void **" static="false"/>
            <variable threadsafety="unspecified" name="hdr_refcount" fullname="CvSparseMat::hdr_refcount" href="cvsparsemat.html#hdr_refcount-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="747" type="int" static="false"/>
            <variable threadsafety="unspecified" name="idxoffset" fullname="CvSparseMat::idxoffset" href="cvsparsemat.html#idxoffset-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="753" type="int" static="false"/>
            <variable threadsafety="unspecified" name="refcount" fullname="CvSparseMat::refcount" href="cvsparsemat.html#refcount-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="746" type="int *" static="false"/>
            <variable threadsafety="unspecified" name="size" fullname="CvSparseMat::size" href="cvsparsemat.html#size-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="754" type="int[CV_MAX_DIM]" static="false"/>
            <variable threadsafety="unspecified" name="type" fullname="CvSparseMat::type" href="cvsparsemat.html#type-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="744" type="int" static="false"/>
            <variable threadsafety="unspecified" name="valoffset" fullname="CvSparseMat::valoffset" href="cvsparsemat.html#valoffset-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="752" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvSparseMatIterator" href="cvsparsematiterator.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="782">
            <variable threadsafety="unspecified" name="curidx" fullname="CvSparseMatIterator::curidx" href="cvsparsematiterator.html#curidx-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="786" type="int" static="false"/>
            <variable threadsafety="unspecified" name="mat" fullname="CvSparseMatIterator::mat" href="cvsparsematiterator.html#mat-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="784" type="CvSparseMat *" static="false"/>
            <variable threadsafety="unspecified" name="node" fullname="CvSparseMatIterator::node" href="cvsparsematiterator.html#node-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="785" type="CvSparseNode *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvSparseNode" href="cvsparsenode.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="775">
            <variable threadsafety="unspecified" name="hashval" fullname="CvSparseNode::hashval" href="cvsparsenode.html#hashval-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="777" type="unsigned" static="false"/>
        </class>
        <class threadsafety="unspecified" name="_IplConvKernel" href="iplconvkernel.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="388">
            <variable threadsafety="unspecified" name="anchorX" fullname="_IplConvKernel::anchorX" href="iplconvkernel.html#anchorX-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="392" type="int" static="false"/>
            <variable threadsafety="unspecified" name="anchorY" fullname="_IplConvKernel::anchorY" href="iplconvkernel.html#anchorY-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="393" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nCols" fullname="_IplConvKernel::nCols" href="iplconvkernel.html#nCols-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="390" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nRows" fullname="_IplConvKernel::nRows" href="iplconvkernel.html#nRows-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="391" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nShiftR" fullname="_IplConvKernel::nShiftR" href="iplconvkernel.html#nShiftR-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="395" type="int" static="false"/>
            <variable threadsafety="unspecified" name="values" fullname="_IplConvKernel::values" href="iplconvkernel.html#values-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="394" type="int *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="_IplConvKernelFP" href="iplconvkernelfp.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="399">
            <variable threadsafety="unspecified" name="anchorX" fullname="_IplConvKernelFP::anchorX" href="iplconvkernelfp.html#anchorX-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="403" type="int" static="false"/>
            <variable threadsafety="unspecified" name="anchorY" fullname="_IplConvKernelFP::anchorY" href="iplconvkernelfp.html#anchorY-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="404" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nCols" fullname="_IplConvKernelFP::nCols" href="iplconvkernelfp.html#nCols-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="401" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nRows" fullname="_IplConvKernelFP::nRows" href="iplconvkernelfp.html#nRows-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="402" type="int" static="false"/>
            <variable threadsafety="unspecified" name="values" fullname="_IplConvKernelFP::values" href="iplconvkernelfp.html#values-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="405" type="float *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="_IplROI" href="iplroi.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="378">
            <variable threadsafety="unspecified" name="coi" fullname="_IplROI::coi" href="iplroi.html#coi-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="380" type="int" static="false"/>
            <variable threadsafety="unspecified" name="height" fullname="_IplROI::height" href="iplroi.html#height-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="384" type="int" static="false"/>
            <variable threadsafety="unspecified" name="width" fullname="_IplROI::width" href="iplroi.html#width-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="383" type="int" static="false"/>
            <variable threadsafety="unspecified" name="xOffset" fullname="_IplROI::xOffset" href="iplroi.html#xOffset-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="381" type="int" static="false"/>
            <variable threadsafety="unspecified" name="yOffset" fullname="_IplROI::yOffset" href="iplroi.html#yOffset-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="382" type="int" static="false"/>
        </class>
        <typedef threadsafety="unspecified" name="CVStatus" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="141"/>
        <typedef threadsafety="unspecified" name="CvArr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="139"/>
        <typedef threadsafety="unspecified" name="CvHistType" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="797"/>
        <typedef threadsafety="unspecified" name="CvPoint2DSeq" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="1689"/>
        <typedef threadsafety="unspecified" name="CvRNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="228"/>
        <variable threadsafety="unspecified" name="CV_BadAlign" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="166" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadAlphaChannel" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="163" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadCOI" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="169" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadCallBack" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="167" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadDataPtr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="157" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadDepth" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="162" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadImageSize" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="155" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadModelOrChSeq" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="159" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadNumChannel1U" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="161" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadNumChannels" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="160" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadOffset" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="156" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadOrder" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="164" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadOrigin" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="165" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadROISize" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="170" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadStep" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="158" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BadTileSize" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="168" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GpuApiCallError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="193" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GpuNotSupported" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="192" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HeaderIsNull" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="154" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MaskIsTiled" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="171" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenCLApiCallError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="196" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenCLDoubleNotSupported" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="197" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenCLInitError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="198" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenCLNoAMDBlasFft" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="200" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenGlApiCallError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="195" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_OpenGlNotSupported" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="194" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsAssert" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="191" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsAutoTrace" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="153" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBackTrace" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="146" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadArg" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="150" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadFlag" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="182" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadFunc" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="151" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadMask" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="184" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadMemBlock" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="190" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadPoint" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="183" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsBadSize" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="177" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsDivByZero" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="178" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="147" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsFilterOffsetErr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="176" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsFilterStructContentErr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="174" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsInplaceNotSupported" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="179" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsInternal" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="148" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsKernelStructContentErr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="175" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsNoConv" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="152" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsNoMem" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="149" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsNotImplemented" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="189" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsNullPtr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="172" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsObjectNotFound" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="180" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsOk" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="145" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsOutOfRange" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="187" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsParseError" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="188" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsUnmatchedFormats" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="181" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsUnmatchedSizes" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="185" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsUnsupportedFormat" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="186" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_StsVecLengthErr" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/core/types_c.h" lineno="173" type="const int" static="true"/>
        <typedef threadsafety="unspecified" name="VADisplay" status="internal" access="private" location="va_intel.hpp" filepath="/usr/local/include/opencv4/opencv2/core/va_intel.hpp" lineno="22"/>
        <typedef threadsafety="unspecified" name="VASurfaceID" status="internal" access="private" location="va_intel.hpp" filepath="/usr/local/include/opencv4/opencv2/core/va_intel.hpp" lineno="23"/>
        <variable threadsafety="unspecified" name="vec_char16" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="29" type="signed char" static="false"/>
        <variable threadsafety="unspecified" name="vec_double2" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="77" type="double" static="false"/>
        <variable threadsafety="unspecified" name="vec_dword2" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="71" type="signed long long" static="false"/>
        <variable threadsafety="unspecified" name="vec_int4" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="53" type="signed int" static="false"/>
        <variable threadsafety="unspecified" name="vec_short8" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="41" type="signed short" static="false"/>
        <variable threadsafety="unspecified" name="vec_uchar16" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="23" type="unsigned char" static="false"/>
        <variable threadsafety="unspecified" name="vec_udword2" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="65" type="unsigned long long" static="false"/>
        <variable threadsafety="unspecified" name="vec_uint4" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="47" type="unsigned int" static="false"/>
        <variable threadsafety="unspecified" name="vec_ushort8" status="internal" access="private" location="vsx_utils.hpp" filepath="/usr/local/include/opencv4/opencv2/core/vsx_utils.hpp" lineno="35" type="unsigned short" static="false"/>
        <class threadsafety="unspecified" name="cvhalKeyPoint" href="cvhalkeypoint.html" status="internal" access="private" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="19">
            <variable threadsafety="unspecified" name="angle" fullname="cvhalKeyPoint::angle" href="cvhalkeypoint.html#angle-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="24" type="float" static="false"/>
            <variable threadsafety="unspecified" name="class_id" fullname="cvhalKeyPoint::class_id" href="cvhalkeypoint.html#class_id-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="27" type="int" static="false"/>
            <variable threadsafety="unspecified" name="octave" fullname="cvhalKeyPoint::octave" href="cvhalkeypoint.html#octave-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="26" type="int" static="false"/>
            <variable threadsafety="unspecified" name="response" fullname="cvhalKeyPoint::response" href="cvhalkeypoint.html#response-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="25" type="float" static="false"/>
            <variable threadsafety="unspecified" name="size" fullname="cvhalKeyPoint::size" href="cvhalkeypoint.html#size-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="23" type="float" static="false"/>
            <variable threadsafety="unspecified" name="x" fullname="cvhalKeyPoint::x" href="cvhalkeypoint.html#x-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="21" type="float" static="false"/>
            <variable threadsafety="unspecified" name="y" fullname="cvhalKeyPoint::y" href="cvhalkeypoint.html#y-var" status="active" access="public" location="interface.h" filepath="/usr/local/include/opencv4/opencv2/features2d/hal/interface.h" lineno="22" type="float" static="false"/>
        </class>
        <namespace threadsafety="unspecified" name="cvflann" href="cvflann.html" status="internal" access="private" location="flann.hpp" filepath="/usr/local/include/opencv4/opencv2/flann.hpp" lineno="59">
            <class threadsafety="unspecified" name="index_creator" fullname="cvflann::index_creator" href="cvflann-index-creator.html" status="active" access="public" location="all_indices.h" filepath="/usr/local/include/opencv4/opencv2/flann/all_indices.h" lineno="52">
                <function threadsafety="unspecified" name="create" fullname="cvflann::index_creator::create" href="cvflann-index-creator.html#create" status="active" access="public" location="all_indices.h" filepath="/usr/local/include/opencv4/opencv2/flann/all_indices.h" lineno="54" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="NNIndex&lt;Distance&gt; *" signature="NNIndex&lt;Distance&gt; * create(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, const IndexParams &amp;params, const Distance &amp;distance)">
                    <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                    <parameter left="const Distance &amp;" right="" name="distance" default=""/>
                </function>
            </class>
            <function threadsafety="unspecified" name="create_index_by_type" fullname="cvflann::create_index_by_type" href="cvflann.html#create_index_by_type" status="active" access="public" location="all_indices.h" filepath="/usr/local/include/opencv4/opencv2/flann/all_indices.h" lineno="151" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NNIndex&lt;Distance&gt; *" signature="NNIndex&lt;Distance&gt; * create_index_by_type(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, const IndexParams &amp;params, const Distance &amp;distance)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
            </function>
            <class threadsafety="unspecified" name="PooledAllocator" fullname="cvflann::PooledAllocator" href="cvflann-pooledallocator.html" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="76">
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::PooledAllocator::operator=" href="cvflann-pooledallocator.html#operator-eq" status="active" access="private" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="189" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="PooledAllocator &amp;" signature="PooledAllocator &amp; operator=(const PooledAllocator &amp;)">
                    <parameter left="const PooledAllocator &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="PooledAllocator" fullname="cvflann::PooledAllocator::PooledAllocator" href="cvflann-pooledallocator.html#PooledAllocator-1" status="active" access="private" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="188" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PooledAllocator(const PooledAllocator &amp;)">
                    <parameter left="const PooledAllocator &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="PooledAllocator" fullname="cvflann::PooledAllocator::PooledAllocator" href="cvflann-pooledallocator.html#PooledAllocator" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="97" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="PooledAllocator(int blockSize)">
                    <parameter left="int" right="" name="blockSize" default="BLOCKSIZE"/>
                </function>
                <function threadsafety="unspecified" name="allocate" fullname="cvflann::PooledAllocator::allocate" href="cvflann-pooledallocator.html#allocate" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="181" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * allocate(size_t count)">
                    <parameter left="size_t" right="" name="count" default="1"/>
                </function>
                <function threadsafety="unspecified" name="allocateMemory" fullname="cvflann::PooledAllocator::allocateMemory" href="cvflann-pooledallocator.html#allocateMemory" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * allocateMemory(int size)">
                    <parameter left="int" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="~PooledAllocator" fullname="cvflann::PooledAllocator::~PooledAllocator" href="cvflann-pooledallocator.html#dtor.PooledAllocator" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="111" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~PooledAllocator()"/>
                <variable threadsafety="unspecified" name="usedMemory" fullname="cvflann::PooledAllocator::usedMemory" href="cvflann-pooledallocator.html#usedMemory-var" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="91" type="int" static="false"/>
                <variable threadsafety="unspecified" name="wastedMemory" fullname="cvflann::PooledAllocator::wastedMemory" href="cvflann-pooledallocator.html#wastedMemory-var" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="92" type="int" static="false"/>
            </class>
            <function threadsafety="unspecified" name="allocate" fullname="cvflann::allocate" href="cvflann.html#allocate" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="51" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T *" signature="T * allocate(size_t count)">
                <parameter left="size_t" right="" name="count" default="1"/>
            </function>
            <variable threadsafety="unspecified" name="BLOCKSIZE" fullname="cvflann::BLOCKSIZE" href="cvflann.html#BLOCKSIZE-var" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="74" type="const size_t = 8192" static="false"/>
            <variable threadsafety="unspecified" name="WORDSIZE" fullname="cvflann::WORDSIZE" href="cvflann.html#WORDSIZE-var" status="active" access="public" location="allocator.h" filepath="/usr/local/include/opencv4/opencv2/flann/allocator.h" lineno="73" type="const size_t = 16" static="false"/>
            <namespace threadsafety="unspecified" name="anyimpl" fullname="cvflann::anyimpl" href="cvflann-anyimpl.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="25">
                <class threadsafety="unspecified" name="CV_FINAL" fullname="cvflann::anyimpl::CV_FINAL" href="cvflann-anyimpl-cv-final.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="65" bases="cvflann::anyimpl::typed_base_any_policy"/>
                <class threadsafety="unspecified" name="CV_FINAL" fullname="cvflann::anyimpl::CV_FINAL" href="cvflann-anyimpl-cv-final.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="80" bases="cvflann::anyimpl::typed_base_any_policy"/>
                <class threadsafety="unspecified" name="SinglePolicy" fullname="cvflann::anyimpl::SinglePolicy" href="cvflann-anyimpl-singlepolicy.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="162">
                    <function threadsafety="unspecified" name="operator=" fullname="cvflann::anyimpl::SinglePolicy::operator=" href="cvflann-anyimpl-singlepolicy.html#operator-eq" status="active" access="private" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="166" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="SinglePolicy &amp;" signature="SinglePolicy &amp; operator=(const SinglePolicy &amp;other)">
                        <parameter left="const SinglePolicy &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="SinglePolicy" fullname="cvflann::anyimpl::SinglePolicy::SinglePolicy" href="cvflann-anyimpl-singlepolicy.html#SinglePolicy" status="active" access="private" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="164" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SinglePolicy()"/>
                    <function threadsafety="unspecified" name="SinglePolicy" fullname="cvflann::anyimpl::SinglePolicy::SinglePolicy" href="cvflann-anyimpl-singlepolicy.html#SinglePolicy-1" status="active" access="private" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="165" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SinglePolicy(const SinglePolicy &amp;other)">
                        <parameter left="const SinglePolicy &amp;" right="" name="other" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get_policy" fullname="cvflann::anyimpl::SinglePolicy::get_policy" href="cvflann-anyimpl-singlepolicy.html#get_policy" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="169" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="base_any_policy *" signature="base_any_policy * get_policy()"/>
                </class>
                <class threadsafety="unspecified" name="bad_any_cast" fullname="cvflann::anyimpl::bad_any_cast" href="cvflann-anyimpl-bad-any-cast.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="28"/>
                <class threadsafety="unspecified" name="base_any_policy" fullname="cvflann::anyimpl::base_any_policy" href="cvflann-anyimpl-base-any-policy.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="42">
                    <function threadsafety="unspecified" name="type" fullname="cvflann::anyimpl::base_any_policy::type" href="cvflann-anyimpl-base-any-policy.html#type" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="51" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::type_info &amp;" signature="const std::type_info &amp; type() = 0"/>
                    <function threadsafety="unspecified" name="get_value" fullname="cvflann::anyimpl::base_any_policy::get_value" href="cvflann-anyimpl-base-any-policy.html#get_value-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="49" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const void *" signature="const void * get_value(void * const *src) = 0">
                        <parameter left="void * const *" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="get_value" fullname="cvflann::anyimpl::base_any_policy::get_value" href="cvflann-anyimpl-base-any-policy.html#get_value" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="48" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * get_value(void **src) = 0">
                        <parameter left="void **" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="clone" fullname="cvflann::anyimpl::base_any_policy::clone" href="cvflann-anyimpl-base-any-policy.html#clone" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="46" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clone(void * const *src, void **dest) = 0">
                        <parameter left="void * const *" right="" name="src" default=""/>
                        <parameter left="void **" right="" name="dest" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="copy_from_value" fullname="cvflann::anyimpl::base_any_policy::copy_from_value" href="cvflann-anyimpl-base-any-policy.html#copy_from_value" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="45" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copy_from_value(void const *src, void **dest) = 0">
                        <parameter left="void const *" right="" name="src" default=""/>
                        <parameter left="void **" right="" name="dest" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="move" fullname="cvflann::anyimpl::base_any_policy::move" href="cvflann-anyimpl-base-any-policy.html#move" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="47" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void move(void * const *src, void **dest) = 0">
                        <parameter left="void * const *" right="" name="src" default=""/>
                        <parameter left="void **" right="" name="dest" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="print" fullname="cvflann::anyimpl::base_any_policy::print" href="cvflann-anyimpl-base-any-policy.html#print" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="52" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print(std::ostream &amp;out, void * const *src) = 0">
                        <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                        <parameter left="void * const *" right="" name="src" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="static_delete" fullname="cvflann::anyimpl::base_any_policy::static_delete" href="cvflann-anyimpl-base-any-policy.html#static_delete" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="44" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void static_delete(void **x) = 0">
                        <parameter left="void **" right="" name="x" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="~base_any_policy" fullname="cvflann::anyimpl::base_any_policy::~base_any_policy" href="cvflann-anyimpl-base-any-policy.html#dtor.base_any_policy" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="53" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~base_any_policy()"/>
                </class>
                <class threadsafety="unspecified" name="choose_policy" fullname="cvflann::anyimpl::choose_policy" href="cvflann-anyimpl-choose-policy.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="121">
                    <typedef threadsafety="unspecified" name="type" fullname="cvflann::anyimpl::choose_policy::type" href="cvflann-anyimpl-choose-policy.html#type-typedef" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="123"/>
                </class>
                <class threadsafety="unspecified" name="empty_any" fullname="cvflann::anyimpl::empty_any" href="cvflann-anyimpl-empty-any.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="32"/>
                <class threadsafety="unspecified" name="typed_base_any_policy" fullname="cvflann::anyimpl::typed_base_any_policy" href="cvflann-anyimpl-typed-base-any-policy.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="57" bases="cvflann::anyimpl::base_any_policy"/>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-9" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="157" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(bool )">
                    <parameter left="bool" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-8" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="156" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(float )">
                    <parameter left="float" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="148" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(signed char )">
                    <parameter left="signed char" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-4" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="152" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(signed int )">
                    <parameter left="signed int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-6" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="154" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(signed long )">
                    <parameter left="signed long" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-2" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(signed short )">
                    <parameter left="signed short" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(unsigned char )">
                    <parameter left="unsigned char" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-5" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="153" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(unsigned int )">
                    <parameter left="unsigned int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-7" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(unsigned long )">
                    <parameter left="unsigned long" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="SMALL_POLICY" fullname="cvflann::anyimpl::SMALL_POLICY" href="cvflann-anyimpl.html#SMALL_POLICY-3" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="151" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SMALL_POLICY(unsigned short )">
                    <parameter left="unsigned short" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="get_policy" fullname="cvflann::anyimpl::get_policy" href="cvflann-anyimpl.html#get_policy" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="180" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="base_any_policy *" signature="base_any_policy * get_policy()"/>
                <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cvflann::anyimpl::operator&lt;&lt;" href="cvflann-anyimpl.html#operator-lt-lt" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const empty_any &amp;)">
                    <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                    <parameter left="const empty_any &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="print" fullname="cvflann::anyimpl::print" href="cvflann-anyimpl.html#print-2" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="115" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print(std::ostream &amp;out, void * const *src)">
                    <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                    <parameter left="void * const *" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="print" fullname="cvflann::anyimpl::print" href="cvflann-anyimpl.html#print-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print(std::ostream &amp;out, void * const *src)">
                    <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                    <parameter left="void * const *" right="" name="src" default=""/>
                </function>
                <function threadsafety="unspecified" name="print" fullname="cvflann::anyimpl::print" href="cvflann-anyimpl.html#print" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print(std::ostream &amp;out, void * const *src)">
                    <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                    <parameter left="void * const *" right="" name="src" default=""/>
                </function>
                <variable threadsafety="unspecified" name="policy" fullname="cvflann::anyimpl::policy" href="cvflann-anyimpl.html#policy-var" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="176" type="choose_policy&lt;T&gt;::type" static="false"/>
            </namespace>
            <class threadsafety="unspecified" name="any" fullname="cvflann::any" href="cvflann-any.html" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="184">
                <function threadsafety="unspecified" name="cast" fullname="cvflann::any::cast" href="cvflann-any.html#cast" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="274" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T &amp;" signature="T &amp; cast()"/>
                <function threadsafety="unspecified" name="assign" fullname="cvflann::any::assign" href="cvflann-any.html#assign-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="236" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; assign(const T &amp;x)">
                    <parameter left="const T &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="assign" fullname="cvflann::any::assign" href="cvflann-any.html#assign" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="226" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; assign(const any &amp;x)">
                    <parameter left="const any &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::any::operator=" href="cvflann-any.html#operator-eq" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="246" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; operator=(const T &amp;x)">
                    <parameter left="const T &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::any::operator=" href="cvflann-any.html#operator-eq-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="252" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; operator=(const any &amp;x)">
                    <parameter left="const any &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::any::operator=" href="cvflann-any.html#operator-eq-2" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="259" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; operator=(const char *x)">
                    <parameter left="const char *" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="swap" fullname="cvflann::any::swap" href="cvflann-any.html#swap" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="265" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="any &amp;" signature="any &amp; swap(any &amp;x)">
                    <parameter left="any &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="any" fullname="cvflann::any::any" href="cvflann-any.html#any-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="201" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any()"/>
                <function threadsafety="unspecified" name="any" fullname="cvflann::any::any" href="cvflann-any.html#any" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="194" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(const T &amp;x)">
                    <parameter left="const T &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="any" fullname="cvflann::any::any" href="cvflann-any.html#any-3" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="213" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(const any &amp;x)">
                    <parameter left="const any &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="any" fullname="cvflann::any::any" href="cvflann-any.html#any-2" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="206" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="any(const char *x)">
                    <parameter left="const char *" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="has_type" fullname="cvflann::any::has_type" href="cvflann-any.html#has_type" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="311" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool has_type()"/>
                <function threadsafety="unspecified" name="reset" fullname="cvflann::any::reset" href="cvflann-any.html#reset" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="297" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                <function threadsafety="unspecified" name="~any" fullname="cvflann::any::~any" href="cvflann-any.html#dtor.any" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="220" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~any()"/>
                <function threadsafety="unspecified" name="compatible" fullname="cvflann::any::compatible" href="cvflann-any.html#compatible" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="304" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool compatible(const any &amp;x) const">
                    <parameter left="const any &amp;" right="" name="x" default=""/>
                </function>
                <function threadsafety="unspecified" name="empty" fullname="cvflann::any::empty" href="cvflann-any.html#empty" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="291" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty() const"/>
                <function threadsafety="unspecified" name="cast" fullname="cvflann::any::cast" href="cvflann-any.html#cast-1" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="283" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const T &amp;" signature="const T &amp; cast() const"/>
                <function threadsafety="unspecified" name="type" fullname="cvflann::any::type" href="cvflann-any.html#type" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const std::type_info &amp;" signature="const std::type_info &amp; type() const"/>
            </class>
            <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cvflann::operator&lt;&lt;" href="cvflann.html#operator-lt-lt" status="active" access="public" location="any.h" filepath="/usr/local/include/opencv4/opencv2/flann/any.h" lineno="324" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const any &amp;any_val)">
                <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                <parameter left="const any &amp;" right="" name="any_val" default=""/>
            </function>
            <class threadsafety="unspecified" name="AutotunedIndex" fullname="cvflann::AutotunedIndex" href="cvflann-autotunedindex.html" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="73" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="CostData" fullname="cvflann::AutotunedIndex::CostData" href="cvflann-autotunedindex-costdata.html" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="217">
                    <variable threadsafety="unspecified" name="buildTimeCost" fullname="cvflann::AutotunedIndex::CostData::buildTimeCost" href="cvflann-autotunedindex-costdata.html#buildTimeCost-var" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="220" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="memoryCost" fullname="cvflann::AutotunedIndex::CostData::memoryCost" href="cvflann-autotunedindex-costdata.html#memoryCost-var" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="221" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="params" fullname="cvflann::AutotunedIndex::CostData::params" href="cvflann-autotunedindex-costdata.html#params-var" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="223" type="IndexParams" static="false"/>
                    <variable threadsafety="unspecified" name="searchTimeCost" fullname="cvflann::AutotunedIndex::CostData::searchTimeCost" href="cvflann-autotunedindex-costdata.html#searchTimeCost-var" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="219" type="float" static="false"/>
                    <variable threadsafety="unspecified" name="totalCost" fullname="cvflann::AutotunedIndex::CostData::totalCost" href="cvflann-autotunedindex-costdata.html#totalCost-var" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="222" type="float" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::AutotunedIndex::DistanceType" href="cvflann-autotunedindex.html#DistanceType-typedef" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="77"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::AutotunedIndex::ElementType" href="cvflann-autotunedindex.html#ElementType-typedef" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="76"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::AutotunedIndex::operator=" href="cvflann-autotunedindex.html#operator-eq" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="91" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="AutotunedIndex &amp;" signature="AutotunedIndex &amp; operator=(const AutotunedIndex &amp;)">
                    <parameter left="const AutotunedIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="AutotunedIndex" fullname="cvflann::AutotunedIndex::AutotunedIndex" href="cvflann-autotunedindex.html#AutotunedIndex-1" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="90" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutotunedIndex(const AutotunedIndex &amp;)">
                    <parameter left="const AutotunedIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="AutotunedIndex" fullname="cvflann::AutotunedIndex::AutotunedIndex" href="cvflann-autotunedindex.html#AutotunedIndex" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="79" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutotunedIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="AutotunedIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="estimateBuildParams" fullname="cvflann::AutotunedIndex::estimateBuildParams" href="cvflann-autotunedindex.html#estimateBuildParams" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="416" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IndexParams" signature="IndexParams estimateBuildParams()"/>
                <function threadsafety="unspecified" name="estimateSearchParams" fullname="cvflann::AutotunedIndex::estimateSearchParams" href="cvflann-autotunedindex.html#estimateSearchParams" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="494" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float estimateSearchParams(SearchParams &amp;searchParams)">
                    <parameter left="SearchParams &amp;" right="" name="searchParams" default=""/>
                </function>
                <function threadsafety="unspecified" name="evaluate_kdtree" fullname="cvflann::AutotunedIndex::evaluate_kdtree" href="cvflann-autotunedindex.html#evaluate_kdtree" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="253" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void evaluate_kdtree(CostData &amp;cost)">
                    <parameter left="CostData &amp;" right="" name="cost" default=""/>
                </function>
                <function threadsafety="unspecified" name="evaluate_kmeans" fullname="cvflann::AutotunedIndex::evaluate_kmeans" href="cvflann-autotunedindex.html#evaluate_kmeans" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="226" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void evaluate_kmeans(CostData &amp;cost)">
                    <parameter left="CostData &amp;" right="" name="cost" default=""/>
                </function>
                <function threadsafety="unspecified" name="optimizeKDTree" fullname="cvflann::AutotunedIndex::optimizeKDTree" href="cvflann-autotunedindex.html#optimizeKDTree" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="374" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void optimizeKDTree(std::vector&lt;CostData&gt; &amp;costs)">
                    <parameter left="std::vector&lt;CostData&gt; &amp;" right="" name="costs" default=""/>
                </function>
                <function threadsafety="unspecified" name="optimizeKMeans" fullname="cvflann::AutotunedIndex::optimizeKMeans" href="cvflann-autotunedindex.html#optimizeKMeans" status="active" access="private" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="326" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void optimizeKMeans(std::vector&lt;CostData&gt; &amp;costs)">
                    <parameter left="std::vector&lt;CostData&gt; &amp;" right="" name="costs" default=""/>
                </function>
                <function threadsafety="unspecified" name="~AutotunedIndex" fullname="cvflann::AutotunedIndex::~AutotunedIndex" href="cvflann-autotunedindex.html#dtor.AutotunedIndex" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="93" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~AutotunedIndex()"/>
            </class>
            <class threadsafety="unspecified" name="AutotunedIndexParams" fullname="cvflann::AutotunedIndexParams" href="cvflann-autotunedindexparams.html" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="55">
                <function threadsafety="unspecified" name="AutotunedIndexParams" fullname="cvflann::AutotunedIndexParams::AutotunedIndexParams" href="cvflann-autotunedindexparams.html#AutotunedIndexParams" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="57" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="AutotunedIndexParams(float target_precision, float build_weight, float memory_weight, float sample_fraction)">
                    <parameter left="float" right="" name="target_precision" default="0.8"/>
                    <parameter left="float" right="" name="build_weight" default="0.01"/>
                    <parameter left="float" right="" name="memory_weight" default="0"/>
                    <parameter left="float" right="" name="sample_fraction" default="0.1"/>
                </function>
            </class>
            <function threadsafety="unspecified" name="create_index_by_type" fullname="cvflann::create_index_by_type" href="cvflann.html#create_index_by_type-1" status="active" access="public" location="autotuned_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/autotuned_index.h" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NNIndex&lt;Distance&gt; *" signature="NNIndex&lt;Distance&gt; * create_index_by_type(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, const IndexParams &amp;params, const Distance &amp;distance)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
            </function>
            <class threadsafety="unspecified" name="CompositeIndex" fullname="cvflann::CompositeIndex" href="cvflann-compositeindex.html" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="72" bases="cvflann::NNIndex">
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::CompositeIndex::DistanceType" href="cvflann-compositeindex.html#DistanceType-typedef" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="76"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::CompositeIndex::ElementType" href="cvflann-compositeindex.html#ElementType-typedef" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="75"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::CompositeIndex::operator=" href="cvflann-compositeindex.html#operator-eq" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="94" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="CompositeIndex &amp;" signature="CompositeIndex &amp; operator=(const CompositeIndex &amp;)">
                    <parameter left="const CompositeIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="CompositeIndex" fullname="cvflann::CompositeIndex::CompositeIndex" href="cvflann-compositeindex.html#CompositeIndex-1" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="93" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompositeIndex(const CompositeIndex &amp;)">
                    <parameter left="const CompositeIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="CompositeIndex" fullname="cvflann::CompositeIndex::CompositeIndex" href="cvflann-compositeindex.html#CompositeIndex" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="85" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompositeIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="CompositeIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="~CompositeIndex" fullname="cvflann::CompositeIndex::~CompositeIndex" href="cvflann-compositeindex.html#dtor.CompositeIndex" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="96" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~CompositeIndex()"/>
            </class>
            <class threadsafety="unspecified" name="CompositeIndexParams" fullname="cvflann::CompositeIndexParams" href="cvflann-compositeindexparams.html" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="46">
                <function threadsafety="unspecified" name="CompositeIndexParams" fullname="cvflann::CompositeIndexParams::CompositeIndexParams" href="cvflann-compositeindexparams.html#CompositeIndexParams" status="active" access="public" location="composite_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/composite_index.h" lineno="48" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="CompositeIndexParams(int trees, int branching, int iterations, flann_centers_init_t centers_init, float cb_index)">
                    <parameter left="int" right="" name="trees" default="4"/>
                    <parameter left="int" right="" name="branching" default="32"/>
                    <parameter left="int" right="" name="iterations" default="11"/>
                    <parameter left="flann_centers_init_t" right="" name="centers_init" default="FLANN_CENTERS_RANDOM"/>
                    <parameter left="float" right="" name="cb_index" default="0.2"/>
                </function>
            </class>
            <enum threadsafety="unspecified" name="flann_algorithm_t" fullname="cvflann::flann_algorithm_t" href="cvflann.html#flann_algorithm_t-enum" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="70">
                <value name="FLANN_INDEX_LINEAR" value="0"/>
                <value name="FLANN_INDEX_KDTREE" value="1"/>
                <value name="FLANN_INDEX_KMEANS" value="2"/>
                <value name="FLANN_INDEX_COMPOSITE" value="3"/>
                <value name="FLANN_INDEX_KDTREE_SINGLE" value="4"/>
                <value name="FLANN_INDEX_HIERARCHICAL" value="5"/>
                <value name="FLANN_INDEX_LSH" value="6"/>
                <value name="FLANN_INDEX_SAVED" value="254"/>
                <value name="FLANN_INDEX_AUTOTUNED" value="255"/>
                <value name="LINEAR" value="0"/>
                <value name="KDTREE" value="1"/>
                <value name="KMEANS" value="2"/>
                <value name="COMPOSITE" value="3"/>
                <value name="KDTREE_SINGLE" value="4"/>
                <value name="SAVED" value="254"/>
                <value name="AUTOTUNED" value="255"/>
            </enum>
            <enum threadsafety="unspecified" name="flann_centers_init_t" fullname="cvflann::flann_centers_init_t" href="cvflann.html#flann_centers_init_t-enum" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="94">
                <value name="FLANN_CENTERS_RANDOM" value="0"/>
                <value name="FLANN_CENTERS_GONZALES" value="1"/>
                <value name="FLANN_CENTERS_KMEANSPP" value="2"/>
                <value name="FLANN_CENTERS_GROUPWISE" value="3"/>
                <value name="CENTERS_RANDOM" value="0"/>
                <value name="CENTERS_GONZALES" value="1"/>
                <value name="CENTERS_KMEANSPP" value="2"/>
            </enum>
            <enum threadsafety="unspecified" name="flann_datatype_t" fullname="cvflann::flann_datatype_t" href="cvflann.html#flann_datatype_t-enum" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="145">
                <value name="FLANN_INT8" value="0"/>
                <value name="FLANN_INT16" value="1"/>
                <value name="FLANN_INT32" value="2"/>
                <value name="FLANN_INT64" value="3"/>
                <value name="FLANN_UINT8" value="4"/>
                <value name="FLANN_UINT16" value="5"/>
                <value name="FLANN_UINT32" value="6"/>
                <value name="FLANN_UINT64" value="7"/>
                <value name="FLANN_FLOAT32" value="8"/>
                <value name="FLANN_FLOAT64" value="9"/>
            </enum>
            <enum threadsafety="unspecified" name="flann_distance_t" fullname="cvflann::flann_distance_t" href="cvflann.html#flann_distance_t-enum" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="116">
                <value name="FLANN_DIST_EUCLIDEAN" value="1"/>
                <value name="FLANN_DIST_L2" value="1"/>
                <value name="FLANN_DIST_MANHATTAN" value="2"/>
                <value name="FLANN_DIST_L1" value="2"/>
                <value name="FLANN_DIST_MINKOWSKI" value="3"/>
                <value name="FLANN_DIST_MAX" value="4"/>
                <value name="FLANN_DIST_HIST_INTERSECT" value="5"/>
                <value name="FLANN_DIST_HELLINGER" value="6"/>
                <value name="FLANN_DIST_CHI_SQUARE" value="7"/>
                <value name="FLANN_DIST_CS" value="7"/>
                <value name="FLANN_DIST_KULLBACK_LEIBLER" value="8"/>
                <value name="FLANN_DIST_KL" value="8"/>
                <value name="FLANN_DIST_HAMMING" value="9"/>
                <value name="FLANN_DIST_DNAMMING" value="10"/>
                <value name="EUCLIDEAN" value="1"/>
                <value name="MANHATTAN" value="2"/>
                <value name="MINKOWSKI" value="3"/>
                <value name="MAX_DIST" value="4"/>
                <value name="HIST_INTERSECT" value="5"/>
                <value name="HELLINGER" value="6"/>
                <value name="CS" value="7"/>
                <value name="KL" value="8"/>
                <value name="KULLBACK_LEIBLER" value="8"/>
            </enum>
            <enum threadsafety="unspecified" name="flann_log_level_t" fullname="cvflann::flann_log_level_t" href="cvflann.html#flann_log_level_t-enum" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="107">
                <value name="FLANN_LOG_NONE" value="0"/>
                <value name="FLANN_LOG_FATAL" value="1"/>
                <value name="FLANN_LOG_ERROR" value="2"/>
                <value name="FLANN_LOG_WARN" value="3"/>
                <value name="FLANN_LOG_INFO" value="4"/>
            </enum>
            <variable threadsafety="unspecified" name="FLANN_CHECKS_AUTOTUNED" fullname="cvflann::FLANN_CHECKS_AUTOTUNED" href="cvflann.html#FLANN_CHECKS_AUTOTUNED-var" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="163" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="FLANN_CHECKS_UNLIMITED" fullname="cvflann::FLANN_CHECKS_UNLIMITED" href="cvflann.html#FLANN_CHECKS_UNLIMITED-var" status="active" access="public" location="defines.h" filepath="/usr/local/include/opencv4/opencv2/flann/defines.h" lineno="161" type="const int" static="true"/>
            <class threadsafety="unspecified" name="Accumulator" fullname="cvflann::Accumulator" href="cvflann-accumulator.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="129">
                <typedef threadsafety="unspecified" name="Type" fullname="cvflann::Accumulator::Type" href="cvflann-accumulator.html#Type-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="129"/>
            </class>
            <class threadsafety="unspecified" name="ChiSquareDistance" fullname="cvflann::ChiSquareDistance" href="cvflann-chisquaredistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1009">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::ChiSquareDistance::CentersType" href="cvflann-chisquaredistance.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1016"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::ChiSquareDistance::ElementType" href="cvflann-chisquaredistance.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1014"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::ChiSquareDistance::ResultType" href="cvflann-chisquaredistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1015"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::ChiSquareDistance::is_kdtree_distance" href="cvflann-chisquaredistance.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1011"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::ChiSquareDistance::is_vector_space_distance" href="cvflann-chisquaredistance.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1012"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::ChiSquareDistance::accum_dist" href="cvflann-chisquaredistance.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1048" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::ChiSquareDistance::operator()" href="cvflann-chisquaredistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1022" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="DNAmming2" fullname="cvflann::DNAmming2" href="cvflann-dnamming2.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="809">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::DNAmming2::CentersType" href="cvflann-dnamming2.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="816"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::DNAmming2::ElementType" href="cvflann-dnamming2.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="814"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::DNAmming2::ResultType" href="cvflann-dnamming2.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="815"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::DNAmming2::is_kdtree_distance" href="cvflann-dnamming2.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="811"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::DNAmming2::is_vector_space_distance" href="cvflann-dnamming2.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="812"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::DNAmming2::operator()" href="cvflann-dnamming2.html#operator-28-29-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="867" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, ZeroIterator&lt;unsigned char&gt; b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="ZeroIterator&lt;unsigned char&gt;" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::DNAmming2::operator()" href="cvflann-dnamming2.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="837" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, const Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="const Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="popcnt32" fullname="cvflann::DNAmming2::popcnt32" href="cvflann-dnamming2.html#popcnt32" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="820" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int popcnt32(uint32_t n) const">
                    <parameter left="uint32_t" right="" name="n" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="DNAmmingLUT" fullname="cvflann::DNAmmingLUT" href="cvflann-dnamminglut.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="751">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::DNAmmingLUT::CentersType" href="cvflann-dnamminglut.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="758"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::DNAmmingLUT::ElementType" href="cvflann-dnamminglut.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="756"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::DNAmmingLUT::ResultType" href="cvflann-dnamminglut.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="757"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::DNAmmingLUT::is_kdtree_distance" href="cvflann-dnamminglut.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="753"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::DNAmmingLUT::is_vector_space_distance" href="cvflann-dnamminglut.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="754"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::DNAmmingLUT::operator()" href="cvflann-dnamminglut.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="763" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const unsigned char *a, const Iterator2 b, size_t size) const">
                    <parameter left="const unsigned char *" right="" name="a" default=""/>
                    <parameter left="const Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::DNAmmingLUT::operator()" href="cvflann-dnamminglut.html#operator-28-29-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="785" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const unsigned char *a, const ZeroIterator&lt;unsigned char&gt; b, size_t size) const">
                    <parameter left="const unsigned char *" right="" name="a" default=""/>
                    <parameter left="const ZeroIterator&lt;unsigned char&gt;" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="False" fullname="cvflann::False" href="cvflann-false.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="152">
                <variable threadsafety="unspecified" name="val" fullname="cvflann::False::val" href="cvflann-false.html#val-var" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="155" type="const bool = false" static="true"/>
            </class>
            <class threadsafety="unspecified" name="Hamming" fullname="cvflann::Hamming" href="cvflann-hamming.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="548">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::Hamming::CentersType" href="cvflann-hamming.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="556"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::Hamming::ElementType" href="cvflann-hamming.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="554"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::Hamming::ResultType" href="cvflann-hamming.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="555"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::Hamming::is_kdtree_distance" href="cvflann-hamming.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="550"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::Hamming::is_vector_space_distance" href="cvflann-hamming.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="551"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::Hamming::operator()" href="cvflann-hamming.html#operator-28-29-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="610" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, ZeroIterator&lt;unsigned char&gt; b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="ZeroIterator&lt;unsigned char&gt;" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::Hamming::operator()" href="cvflann-hamming.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="559" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, const Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="const Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Hamming2" fullname="cvflann::Hamming2" href="cvflann-hamming2.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="656">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::Hamming2::CentersType" href="cvflann-hamming2.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="663"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::Hamming2::ElementType" href="cvflann-hamming2.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="661"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::Hamming2::ResultType" href="cvflann-hamming2.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="662"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::Hamming2::is_kdtree_distance" href="cvflann-hamming2.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="658"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::Hamming2::is_vector_space_distance" href="cvflann-hamming2.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="659"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::Hamming2::operator()" href="cvflann-hamming2.html#operator-28-29-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="714" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, ZeroIterator&lt;unsigned char&gt; b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="ZeroIterator&lt;unsigned char&gt;" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::Hamming2::operator()" href="cvflann-hamming2.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="684" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const Iterator1 a, const Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="const Iterator1" right="" name="a" default=""/>
                    <parameter left="const Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="popcnt32" fullname="cvflann::Hamming2::popcnt32" href="cvflann-hamming2.html#popcnt32" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="667" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int popcnt32(uint32_t n) const">
                    <parameter left="uint32_t" right="" name="n" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="HammingLUT" fullname="cvflann::HammingLUT" href="cvflann-hamminglut.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="487">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::HammingLUT::CentersType" href="cvflann-hamminglut.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="494"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::HammingLUT::ElementType" href="cvflann-hamminglut.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="492"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::HammingLUT::ResultType" href="cvflann-hamminglut.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="493"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::HammingLUT::is_kdtree_distance" href="cvflann-hamminglut.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="489"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::HammingLUT::is_vector_space_distance" href="cvflann-hamminglut.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="490"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::HammingLUT::operator()" href="cvflann-hamminglut.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="499" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const unsigned char *a, const Iterator2 b, size_t size) const">
                    <parameter left="const unsigned char *" right="" name="a" default=""/>
                    <parameter left="const Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::HammingLUT::operator()" href="cvflann-hamminglut.html#operator-28-29-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="521" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(const unsigned char *a, const ZeroIterator&lt;unsigned char&gt; b, size_t size) const">
                    <parameter left="const unsigned char *" right="" name="a" default=""/>
                    <parameter left="const ZeroIterator&lt;unsigned char&gt;" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="HellingerDistance" fullname="cvflann::HellingerDistance" href="cvflann-hellingerdistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="959">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::HellingerDistance::CentersType" href="cvflann-hellingerdistance.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="966"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::HellingerDistance::ElementType" href="cvflann-hellingerdistance.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="964"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::HellingerDistance::ResultType" href="cvflann-hellingerdistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="965"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::HellingerDistance::is_kdtree_distance" href="cvflann-hellingerdistance.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="961"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::HellingerDistance::is_vector_space_distance" href="cvflann-hellingerdistance.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="962"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::HellingerDistance::accum_dist" href="cvflann-hellingerdistance.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1000" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::HellingerDistance::operator()" href="cvflann-hellingerdistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="972" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="HistIntersectionDistance" fullname="cvflann::HistIntersectionDistance" href="cvflann-histintersectiondistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="903">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::HistIntersectionDistance::CentersType" href="cvflann-histintersectiondistance.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="910"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::HistIntersectionDistance::ElementType" href="cvflann-histintersectiondistance.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="908"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::HistIntersectionDistance::ResultType" href="cvflann-histintersectiondistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="909"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::HistIntersectionDistance::is_kdtree_distance" href="cvflann-histintersectiondistance.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="905"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::HistIntersectionDistance::is_vector_space_distance" href="cvflann-histintersectiondistance.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="906"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::HistIntersectionDistance::accum_dist" href="cvflann-histintersectiondistance.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="950" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::HistIntersectionDistance::operator()" href="cvflann-histintersectiondistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="916" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="KL_Divergence" fullname="cvflann::KL_Divergence" href="cvflann-kl-divergence.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1064">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::KL_Divergence::CentersType" href="cvflann-kl-divergence.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1071"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::KL_Divergence::ElementType" href="cvflann-kl-divergence.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1069"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::KL_Divergence::ResultType" href="cvflann-kl-divergence.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1070"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::KL_Divergence::is_kdtree_distance" href="cvflann-kl-divergence.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1066"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::KL_Divergence::is_vector_space_distance" href="cvflann-kl-divergence.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1067"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::KL_Divergence::accum_dist" href="cvflann-kl-divergence.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1103" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::KL_Divergence::operator()" href="cvflann-kl-divergence.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1077" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="L1" fullname="cvflann::L1" href="cvflann-l1.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="306">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::L1::CentersType" href="cvflann-l1.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="313"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::L1::ElementType" href="cvflann-l1.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="311"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::L1::ResultType" href="cvflann-l1.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="312"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::L1::is_kdtree_distance" href="cvflann-l1.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="308"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::L1::is_vector_space_distance" href="cvflann-l1.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="309"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::L1::accum_dist" href="cvflann-l1.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="355" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::L1::operator()" href="cvflann-l1.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="322" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="L2" fullname="cvflann::L2" href="cvflann-l2.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="240">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::L2::CentersType" href="cvflann-l2.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="247"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::L2::ElementType" href="cvflann-l2.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="245"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::L2::ResultType" href="cvflann-l2.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="246"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::L2::is_kdtree_distance" href="cvflann-l2.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="242"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::L2::is_vector_space_distance" href="cvflann-l2.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="243"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::L2::accum_dist" href="cvflann-l2.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="295" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::L2::operator()" href="cvflann-l2.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="259" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="L2_Simple" fullname="cvflann::L2_Simple" href="cvflann-l2-simple.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="206">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::L2_Simple::CentersType" href="cvflann-l2-simple.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="213"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::L2_Simple::ElementType" href="cvflann-l2-simple.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="211"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::L2_Simple::ResultType" href="cvflann-l2-simple.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="212"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::L2_Simple::is_kdtree_distance" href="cvflann-l2-simple.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="208"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::L2_Simple::is_vector_space_distance" href="cvflann-l2-simple.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="209"/>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::L2_Simple::accum_dist" href="cvflann-l2-simple.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="228" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::L2_Simple::operator()" href="cvflann-l2-simple.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MaxDistance" fullname="cvflann::MaxDistance" href="cvflann-maxdistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="429">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::MaxDistance::CentersType" href="cvflann-maxdistance.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="436"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::MaxDistance::ElementType" href="cvflann-maxdistance.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="434"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::MaxDistance::ResultType" href="cvflann-maxdistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="435"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::MaxDistance::is_kdtree_distance" href="cvflann-maxdistance.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="431"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::MaxDistance::is_vector_space_distance" href="cvflann-maxdistance.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="432"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::MaxDistance::operator()" href="cvflann-maxdistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="444" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="MinkowskiDistance" fullname="cvflann::MinkowskiDistance" href="cvflann-minkowskidistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="364">
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::MinkowskiDistance::CentersType" href="cvflann-minkowskidistance.html#CentersType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="371"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::MinkowskiDistance::ElementType" href="cvflann-minkowskidistance.html#ElementType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="369"/>
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::MinkowskiDistance::ResultType" href="cvflann-minkowskidistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="370"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::MinkowskiDistance::is_kdtree_distance" href="cvflann-minkowskidistance.html#is_kdtree_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="366"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::MinkowskiDistance::is_vector_space_distance" href="cvflann-minkowskidistance.html#is_vector_space_distance-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="367"/>
                <function threadsafety="unspecified" name="MinkowskiDistance" fullname="cvflann::MinkowskiDistance::MinkowskiDistance" href="cvflann-minkowskidistance.html#MinkowskiDistance" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="375" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="MinkowskiDistance(int order_)">
                    <parameter left="int" right="" name="order_" default=""/>
                </function>
                <function threadsafety="unspecified" name="accum_dist" fullname="cvflann::MinkowskiDistance::accum_dist" href="cvflann-minkowskidistance.html#accum_dist" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="420" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType accum_dist(const U &amp;a, const V &amp;b, int ) const">
                    <parameter left="const U &amp;" right="" name="a" default=""/>
                    <parameter left="const V &amp;" right="" name="b" default=""/>
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::MinkowskiDistance::operator()" href="cvflann-minkowskidistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="387" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist) const">
                    <parameter left="Iterator1" right="" name="a" default=""/>
                    <parameter left="Iterator2" right="" name="b" default=""/>
                    <parameter left="size_t" right="" name="size" default=""/>
                    <parameter left="ResultType" right="" name="worst_dist" default="-1"/>
                </function>
                <variable threadsafety="unspecified" name="order" fullname="cvflann::MinkowskiDistance::order" href="cvflann-minkowskidistance.html#order-var" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="373" type="int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="True" fullname="cvflann::True" href="cvflann-true.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="146">
                <variable threadsafety="unspecified" name="val" fullname="cvflann::True::val" href="cvflann-true.html#val-var" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="149" type="const bool = true" static="true"/>
            </class>
            <class threadsafety="unspecified" name="ZeroIterator" fullname="cvflann::ZeroIterator" href="cvflann-zeroiterator.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="167">
                <function threadsafety="unspecified" name="operator*" fullname="cvflann::ZeroIterator::operator*" href="cvflann-zeroiterator.html#operator-2a" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T operator*()"/>
                <function threadsafety="unspecified" name="operator[]" fullname="cvflann::ZeroIterator::operator[]" href="cvflann-zeroiterator.html#operator-5b-5d" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="175" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T operator[](int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator+=" fullname="cvflann::ZeroIterator::operator+=" href="cvflann-zeroiterator.html#operator-2b-eq" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="190" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ZeroIterator&lt;T&gt; &amp;" signature="ZeroIterator&lt;T&gt; &amp; operator+=(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cvflann::ZeroIterator::operator++" href="cvflann-zeroiterator.html#operator-2b-2b-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="185" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ZeroIterator&lt;T&gt;" signature="ZeroIterator&lt;T&gt; operator++(int )">
                    <parameter left="int" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator++" fullname="cvflann::ZeroIterator::operator++" href="cvflann-zeroiterator.html#operator-2b-2b" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="180" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const ZeroIterator&lt;T&gt; &amp;" signature="const ZeroIterator&lt;T&gt; &amp; operator++()"/>
            </class>
            <class threadsafety="unspecified" name="isSquareDist" fullname="cvflann::isSquareDist" href="cvflann-issquaredist.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1182">
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::isSquareDist::operator()" href="cvflann-issquaredist.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1184" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()()"/>
            </class>
            <class threadsafety="unspecified" name="simpleDistance" fullname="cvflann::simpleDistance" href="cvflann-simpledistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1235">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::simpleDistance::ResultType" href="cvflann-simpledistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1237"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::simpleDistance::operator()" href="cvflann-simpledistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1238" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(ResultType dist)">
                    <parameter left="ResultType" right="" name="dist" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="squareDistance" fullname="cvflann::squareDistance" href="cvflann-squaredistance.html" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1123">
                <typedef threadsafety="unspecified" name="ResultType" fullname="cvflann::squareDistance::ResultType" href="cvflann-squaredistance.html#ResultType-typedef" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1125"/>
                <function threadsafety="unspecified" name="operator()" fullname="cvflann::squareDistance::operator()" href="cvflann-squaredistance.html#operator-28-29" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="ResultType" signature="ResultType operator()(ResultType dist)">
                    <parameter left="ResultType" right="" name="dist" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Index" fullname="cvflann::Index" href="cvflann-index.html" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="103" bases="cvflann::NNIndex">
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::Index::DistanceType" href="cvflann-index.html#DistanceType-typedef" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="107"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::Index::ElementType" href="cvflann-index.html#ElementType-typedef" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="106"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::Index::operator=" href="cvflann-index.html#operator-eq" status="active" access="private" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="270" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Index &amp;" signature="Index &amp; operator=(const Index &amp;)">
                    <parameter left="const Index &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Index" fullname="cvflann::Index::Index" href="cvflann-index.html#Index-1" status="active" access="private" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="269" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Index(const Index &amp;)">
                    <parameter left="const Index &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="Index" fullname="cvflann::Index::Index" href="cvflann-index.html#Index" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="109" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Index(const Matrix&lt;ElementType&gt; &amp;features, const IndexParams &amp;params, Distance distance)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="features" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                    <parameter left="Distance" right="" name="distance" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="~Index" fullname="cvflann::Index::~Index" href="cvflann-index.html#dtor.Index" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="124" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Index()"/>
            </class>
            <class threadsafety="unspecified" name="SavedIndexParams" fullname="cvflann::SavedIndexParams" href="cvflann-savedindexparams.html" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="63">
                <function threadsafety="unspecified" name="SavedIndexParams" fullname="cvflann::SavedIndexParams::SavedIndexParams" href="cvflann-savedindexparams.html#SavedIndexParams" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="65" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SavedIndexParams(cv::String filename)">
                    <parameter left="cv::String" right="" name="filename" default=""/>
                </function>
            </class>
            <function threadsafety="unspecified" name="computeDistanceRaport" fullname="cvflann::computeDistanceRaport" href="cvflann.html#computeDistanceRaport" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Distance::ResultType" signature="Distance::ResultType computeDistanceRaport(const Matrix&lt;Distance::ElementType&gt; &amp;inputData, Distance::ElementType *target, int *neighbors, int *groundTruth, int veclen, int n, const Distance &amp;distance)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="inputData" default=""/>
                <parameter left="Distance::ElementType *" right="" name="target" default=""/>
                <parameter left="int *" right="" name="neighbors" default=""/>
                <parameter left="int *" right="" name="groundTruth" default=""/>
                <parameter left="int" right="" name="veclen" default=""/>
                <parameter left="int" right="" name="n" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
            </function>
            <function threadsafety="unspecified" name="ensureSimpleDistance" fullname="cvflann::ensureSimpleDistance" href="cvflann.html#ensureSimpleDistance" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1280" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Distance::ResultType" signature="Distance::ResultType ensureSimpleDistance(Distance::ResultType dist)">
                <parameter left="Distance::ResultType" right="" name="dist" default=""/>
            </function>
            <function threadsafety="unspecified" name="ensureSquareDistance" fullname="cvflann::ensureSquareDistance" href="cvflann.html#ensureSquareDistance" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Distance::ResultType" signature="Distance::ResultType ensureSquareDistance(Distance::ResultType dist)">
                <parameter left="Distance::ResultType" right="" name="dist" default=""/>
            </function>
            <function threadsafety="unspecified" name="load_header" fullname="cvflann::load_header" href="cvflann.html#load_header" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IndexHeader" signature="IndexHeader load_header(FILE *stream)">
                <parameter left="FILE *" right="" name="stream" default=""/>
            </function>
            <function threadsafety="unspecified" name="random_sample" fullname="cvflann::random_sample" href="cvflann.html#random_sample" status="active" access="public" location="sampling.h" filepath="/usr/local/include/opencv4/opencv2/flann/sampling.h" lineno="42" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matrix&lt;T&gt;" signature="Matrix&lt;T&gt; random_sample(Matrix&lt;T&gt; &amp;srcMatrix, long size, bool remove)">
                <parameter left="Matrix&lt;T&gt; &amp;" right="" name="srcMatrix" default=""/>
                <parameter left="long" right="" name="size" default=""/>
                <parameter left="bool" right="" name="remove" default="false"/>
            </function>
            <function threadsafety="unspecified" name="random_sample" fullname="cvflann::random_sample" href="cvflann.html#random_sample-1" status="active" access="public" location="sampling.h" filepath="/usr/local/include/opencv4/opencv2/flann/sampling.h" lineno="65" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matrix&lt;T&gt;" signature="Matrix&lt;T&gt; random_sample(const Matrix&lt;T&gt; &amp;srcMatrix, size_t size)">
                <parameter left="const Matrix&lt;T&gt; &amp;" right="" name="srcMatrix" default=""/>
                <parameter left="size_t" right="" name="size" default=""/>
            </function>
            <function threadsafety="unspecified" name="load_saved_index" fullname="cvflann::load_saved_index" href="cvflann.html#load_saved_index" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NNIndex&lt;Distance&gt; *" signature="NNIndex&lt;Distance&gt; * load_saved_index(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, const cv::String &amp;filename, Distance distance)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                <parameter left="const cv::String &amp;" right="" name="filename" default=""/>
                <parameter left="Distance" right="" name="distance" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cvflann::abs" href="cvflann.html#abs" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T abs(T x)">
                <parameter left="T" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="get_param" fullname="cvflann::get_param" href="cvflann.html#get_param-1" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="87" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get_param(const IndexParams &amp;params, cv::String name)">
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                <parameter left="cv::String" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="get_param" fullname="cvflann::get_param" href="cvflann.html#get_param" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="75" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="T" signature="T get_param(const IndexParams &amp;params, cv::String name, const T &amp;default_value)">
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                <parameter left="cv::String" right="" name="name" default=""/>
                <parameter left="const T &amp;" right="" name="default_value" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-9" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TargetType" signature="TargetType round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="73" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="TargetType" signature="TargetType round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="isSquareDistance" fullname="cvflann::isSquareDistance" href="cvflann.html#isSquareDistance" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="1221" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSquareDistance()"/>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-17" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="char" signature="char round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-8" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="97" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="char" signature="char round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cvflann::abs" href="cvflann.html#abs-3" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="69" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double abs(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="rand_double" fullname="cvflann::rand_double" href="cvflann.html#rand_double" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" signature="double rand_double(double high, double low)">
                <parameter left="double" right="" name="high" default="1.0"/>
                <parameter left="double" right="" name="low" default="0"/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cvflann::abs" href="cvflann.html#abs-2" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="66" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float abs(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="optimizeSimplexDownhill" fullname="cvflann::optimizeSimplexDownhill" href="cvflann.html#optimizeSimplexDownhill" status="active" access="public" location="simplex_downhill.h" filepath="/usr/local/include/opencv4/opencv2/flann/simplex_downhill.h" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float optimizeSimplexDownhill(T *points, int n, F func, float *vals)">
                <parameter left="T *" right="" name="points" default=""/>
                <parameter left="int" right="" name="n" default=""/>
                <parameter left="F" right="" name="func" default=""/>
                <parameter left="float *" right="" name="vals" default="NULL"/>
            </function>
            <function threadsafety="unspecified" name="search_with_ground_truth" fullname="cvflann::search_with_ground_truth" href="cvflann.html#search_with_ground_truth" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="87" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float search_with_ground_truth(NNIndex&lt;Distance&gt; &amp;index, const Matrix&lt;Distance::ElementType&gt; &amp;inputData, const Matrix&lt;Distance::ElementType&gt; &amp;testData, const Matrix&lt;int&gt; &amp;matches, int nn, int checks, float &amp;time, Distance::ResultType &amp;dist, const Distance &amp;distance, int skipMatches)">
                <parameter left="NNIndex&lt;Distance&gt; &amp;" right="" name="index" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="inputData" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="testData" default=""/>
                <parameter left="const Matrix&lt;int&gt; &amp;" right="" name="matches" default=""/>
                <parameter left="int" right="" name="nn" default=""/>
                <parameter left="int" right="" name="checks" default=""/>
                <parameter left="float &amp;" right="" name="time" default=""/>
                <parameter left="Distance::ResultType &amp;" right="" name="dist" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
                <parameter left="int" right="" name="skipMatches" default=""/>
            </function>
            <function threadsafety="unspecified" name="test_index_checks" fullname="cvflann::test_index_checks" href="cvflann.html#test_index_checks" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="138" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float test_index_checks(NNIndex&lt;Distance&gt; &amp;index, const Matrix&lt;Distance::ElementType&gt; &amp;inputData, const Matrix&lt;Distance::ElementType&gt; &amp;testData, const Matrix&lt;int&gt; &amp;matches, int checks, float &amp;precision, const Distance &amp;distance, int nn, int skipMatches)">
                <parameter left="NNIndex&lt;Distance&gt; &amp;" right="" name="index" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="inputData" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="testData" default=""/>
                <parameter left="const Matrix&lt;int&gt; &amp;" right="" name="matches" default=""/>
                <parameter left="int" right="" name="checks" default=""/>
                <parameter left="float &amp;" right="" name="precision" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
                <parameter left="int" right="" name="nn" default="1"/>
                <parameter left="int" right="" name="skipMatches" default="0"/>
            </function>
            <function threadsafety="unspecified" name="test_index_precision" fullname="cvflann::test_index_precision" href="cvflann.html#test_index_precision" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="float" signature="float test_index_precision(NNIndex&lt;Distance&gt; &amp;index, const Matrix&lt;Distance::ElementType&gt; &amp;inputData, const Matrix&lt;Distance::ElementType&gt; &amp;testData, const Matrix&lt;int&gt; &amp;matches, float precision, int &amp;checks, const Distance &amp;distance, int nn, int skipMatches)">
                <parameter left="NNIndex&lt;Distance&gt; &amp;" right="" name="index" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="inputData" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="testData" default=""/>
                <parameter left="const Matrix&lt;int&gt; &amp;" right="" name="matches" default=""/>
                <parameter left="float" right="" name="precision" default=""/>
                <parameter left="int &amp;" right="" name="checks" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
                <parameter left="int" right="" name="nn" default="1"/>
                <parameter left="int" right="" name="skipMatches" default="0"/>
            </function>
            <function threadsafety="unspecified" name="abs" fullname="cvflann::abs" href="cvflann.html#abs-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int abs(int x)">
                <parameter left="int" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="countCorrectMatches" fullname="cvflann::countCorrectMatches" href="cvflann.html#countCorrectMatches" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int countCorrectMatches(int *neighbors, int *groundTruth, int n)">
                <parameter left="int *" right="" name="neighbors" default=""/>
                <parameter left="int *" right="" name="groundTruth" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="hierarchicalClustering" fullname="cvflann::hierarchicalClustering" href="cvflann.html#hierarchicalClustering" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="285" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int hierarchicalClustering(const Matrix&lt;Distance::ElementType&gt; &amp;points, Matrix&lt;Distance::CentersType&gt; &amp;centers, const KMeansIndexParams &amp;params, Distance d)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="points" default=""/>
                <parameter left="Matrix&lt;Distance::CentersType&gt; &amp;" right="" name="centers" default=""/>
                <parameter left="const KMeansIndexParams &amp;" right="" name="params" default=""/>
                <parameter left="Distance" right="" name="d" default="Distance()"/>
            </function>
            <function threadsafety="unspecified" name="rand" fullname="cvflann::rand" href="cvflann.html#rand" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rand()"/>
            <function threadsafety="unspecified" name="rand_int" fullname="cvflann::rand_int" href="cvflann.html#rand_int" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="90" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int rand_int(int high, int low)">
                <parameter left="int" right="" name="high" default="RAND_MAX"/>
                <parameter left="int" right="" name="low" default="0"/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-15" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="119" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-6" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="91" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-13" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="long long" signature="long long round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-4" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="long long" signature="long long round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-14" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="116" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="long" signature="long round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-5" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="88" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="long" signature="long round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-16" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="122" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-7" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="short" signature="short round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-12" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned char" signature="unsigned char round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-3" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="82" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned char" signature="unsigned char round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-10" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-1" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="76" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned int" signature="unsigned int round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-11" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned short" signature="unsigned short round(double x)">
                <parameter left="double" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="round" fullname="cvflann::round" href="cvflann.html#round-2" status="active" access="public" location="dist.h" filepath="/usr/local/include/opencv4/opencv2/flann/dist.h" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="unsigned short" signature="unsigned short round(float x)">
                <parameter left="float" right="" name="x" default=""/>
            </function>
            <function threadsafety="unspecified" name="addValue" fullname="cvflann::addValue" href="cvflann.html#addValue" status="active" access="public" location="simplex_downhill.h" filepath="/usr/local/include/opencv4/opencv2/flann/simplex_downhill.h" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addValue(int pos, float val, float *vals, T *point, T *points, int n)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="float" right="" name="val" default=""/>
                <parameter left="float *" right="" name="vals" default=""/>
                <parameter left="T *" right="" name="point" default=""/>
                <parameter left="T *" right="" name="points" default=""/>
                <parameter left="int" right="" name="n" default=""/>
            </function>
            <function threadsafety="unspecified" name="compute_ground_truth" fullname="cvflann::compute_ground_truth" href="cvflann.html#compute_ground_truth" status="active" access="public" location="ground_truth.h" filepath="/usr/local/include/opencv4/opencv2/flann/ground_truth.h" lineno="85" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void compute_ground_truth(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, const Matrix&lt;Distance::ElementType&gt; &amp;testset, Matrix&lt;int&gt; &amp;matches, int skip, Distance d)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="testset" default=""/>
                <parameter left="Matrix&lt;int&gt; &amp;" right="" name="matches" default=""/>
                <parameter left="int" right="" name="skip" default="0"/>
                <parameter left="Distance" right="" name="d" default="Distance()"/>
            </function>
            <function threadsafety="unspecified" name="find_nearest" fullname="cvflann::find_nearest" href="cvflann.html#find_nearest" status="active" access="public" location="ground_truth.h" filepath="/usr/local/include/opencv4/opencv2/flann/ground_truth.h" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void find_nearest(const Matrix&lt;Distance::ElementType&gt; &amp;dataset, Distance::ElementType *query, int *matches, int nn, int skip, Distance distance)">
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="dataset" default=""/>
                <parameter left="Distance::ElementType *" right="" name="query" default=""/>
                <parameter left="int *" right="" name="matches" default=""/>
                <parameter left="int" right="" name="nn" default=""/>
                <parameter left="int" right="" name="skip" default="0"/>
                <parameter left="Distance" right="" name="distance" default="Distance()"/>
            </function>
            <function threadsafety="unspecified" name="load_value" fullname="cvflann::load_value" href="cvflann.html#load_value" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_value(FILE *stream, T &amp;value, size_t count)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="T &amp;" right="" name="value" default=""/>
                <parameter left="size_t" right="" name="count" default="1"/>
            </function>
            <function threadsafety="unspecified" name="load_value" fullname="cvflann::load_value" href="cvflann.html#load_value-1" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="158" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_value(FILE *stream, cvflann::Matrix&lt;T&gt; &amp;value)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="cvflann::Matrix&lt;T&gt; &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="load_value" fullname="cvflann::load_value" href="cvflann.html#load_value-2" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_value(FILE *stream, std::vector&lt;T&gt; &amp;value)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="std::vector&lt;T&gt; &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="log_verbosity" fullname="cvflann::log_verbosity" href="cvflann.html#log_verbosity" status="active" access="public" location="flann_base.hpp" filepath="/usr/local/include/opencv4/opencv2/flann/flann_base.hpp" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void log_verbosity(int level)">
                <parameter left="int" right="" name="level" default=""/>
            </function>
            <class threadsafety="unspecified" name="FLANNException" fullname="cvflann::FLANNException" href="cvflann-flannexception.html" status="active" access="public" location="general.h" filepath="/usr/local/include/opencv4/opencv2/flann/general.h" lineno="43">
                <function threadsafety="unspecified" name="FLANNException" fullname="cvflann::FLANNException::FLANNException" href="cvflann-flannexception.html#FLANNException" status="active" access="public" location="general.h" filepath="/usr/local/include/opencv4/opencv2/flann/general.h" lineno="46" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FLANNException(const char *message)">
                    <parameter left="const char *" right="" name="message" default=""/>
                </function>
                <function threadsafety="unspecified" name="FLANNException" fullname="cvflann::FLANNException::FLANNException" href="cvflann-flannexception.html#FLANNException-1" status="active" access="public" location="general.h" filepath="/usr/local/include/opencv4/opencv2/flann/general.h" lineno="48" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="FLANNException(const cv::String &amp;message)">
                    <parameter left="const cv::String &amp;" right="" name="message" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="Heap" fullname="cvflann::Heap" href="cvflann-heap.html" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="50">
                <class threadsafety="unspecified" name="CompareT" fullname="cvflann::Heap::CompareT" href="cvflann-heap-comparet.html" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="110">
                    <function threadsafety="unspecified" name="operator()" fullname="cvflann::Heap::CompareT::operator()" href="cvflann-heap-comparet.html#operator-28-29" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="112" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const T &amp;t_1, const T &amp;t_2) const">
                        <parameter left="const T &amp;" right="" name="t_1" default=""/>
                        <parameter left="const T &amp;" right="" name="t_2" default=""/>
                    </function>
                </class>
                <function threadsafety="unspecified" name="Heap" fullname="cvflann::Heap::Heap" href="cvflann-heap.html#Heap" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="75" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Heap(int sz)">
                    <parameter left="int" right="" name="sz" default=""/>
                </function>
                <function threadsafety="unspecified" name="empty" fullname="cvflann::Heap::empty" href="cvflann-heap.html#empty" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool empty()"/>
                <function threadsafety="unspecified" name="popMin" fullname="cvflann::Heap::popMin" href="cvflann-heap.html#popMin" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="149" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool popMin(T &amp;value)">
                    <parameter left="T &amp;" right="" name="value" default=""/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="cvflann::Heap::size" href="cvflann-heap.html#size" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="86" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int size()"/>
                <function threadsafety="unspecified" name="clear" fullname="cvflann::Heap::clear" href="cvflann-heap.html#clear" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
                <function threadsafety="unspecified" name="insert" fullname="cvflann::Heap::insert" href="cvflann-heap.html#insert" status="active" access="public" location="heap.h" filepath="/usr/local/include/opencv4/opencv2/flann/heap.h" lineno="127" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void insert(T value)">
                    <parameter left="T" right="" name="value" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="HierarchicalClusteringIndex" fullname="cvflann::HierarchicalClusteringIndex" href="cvflann-hierarchicalclusteringindex.html" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="81" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="Node" fullname="cvflann::HierarchicalClusteringIndex::Node" href="cvflann-hierarchicalclusteringindex-node.html" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="567">
                    <variable threadsafety="unspecified" name="childs" fullname="cvflann::HierarchicalClusteringIndex::Node::childs" href="cvflann-hierarchicalclusteringindex-node.html#childs-var" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="580" type="Node **" static="false"/>
                    <variable threadsafety="unspecified" name="indices" fullname="cvflann::HierarchicalClusteringIndex::Node::indices" href="cvflann-hierarchicalclusteringindex-node.html#indices-var" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="584" type="int *" static="false"/>
                    <variable threadsafety="unspecified" name="level" fullname="cvflann::HierarchicalClusteringIndex::Node::level" href="cvflann-hierarchicalclusteringindex-node.html#level-var" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="588" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="pivot" fullname="cvflann::HierarchicalClusteringIndex::Node::pivot" href="cvflann-hierarchicalclusteringindex-node.html#pivot-var" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="572" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="size" fullname="cvflann::HierarchicalClusteringIndex::Node::size" href="cvflann-hierarchicalclusteringindex-node.html#size-var" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="576" type="int" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="BranchSt" fullname="cvflann::HierarchicalClusteringIndex::BranchSt" href="cvflann-hierarchicalclusteringindex.html#BranchSt-typedef" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="597"/>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::HierarchicalClusteringIndex::DistanceType" href="cvflann-hierarchicalclusteringindex.html#DistanceType-typedef" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="85"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::HierarchicalClusteringIndex::ElementType" href="cvflann-hierarchicalclusteringindex.html#ElementType-typedef" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="84"/>
                <typedef threadsafety="unspecified" name="NodePtr" fullname="cvflann::HierarchicalClusteringIndex::NodePtr" href="cvflann-hierarchicalclusteringindex.html#NodePtr-typedef" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="590"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::HierarchicalClusteringIndex::operator=" href="cvflann-hierarchicalclusteringindex.html#operator-eq" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="398" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="HierarchicalClusteringIndex &amp;" signature="HierarchicalClusteringIndex &amp; operator=(const HierarchicalClusteringIndex &amp;)">
                    <parameter left="const HierarchicalClusteringIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="HierarchicalClusteringIndex" fullname="cvflann::HierarchicalClusteringIndex::HierarchicalClusteringIndex" href="cvflann-hierarchicalclusteringindex.html#HierarchicalClusteringIndex-1" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="397" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HierarchicalClusteringIndex(const HierarchicalClusteringIndex &amp;)">
                    <parameter left="const HierarchicalClusteringIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="HierarchicalClusteringIndex" fullname="cvflann::HierarchicalClusteringIndex::HierarchicalClusteringIndex" href="cvflann-hierarchicalclusteringindex.html#HierarchicalClusteringIndex" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="358" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HierarchicalClusteringIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;index_params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="index_params" default="HierarchicalClusteringIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="GroupWiseCenterChooser" fullname="cvflann::HierarchicalClusteringIndex::GroupWiseCenterChooser" href="cvflann-hierarchicalclusteringindex.html#GroupWiseCenterChooser" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="287" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void GroupWiseCenterChooser(int k, int *dsindices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersGonzales" fullname="cvflann::HierarchicalClusteringIndex::chooseCentersGonzales" href="cvflann-hierarchicalclusteringindex.html#chooseCentersGonzales" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersGonzales(int k, int *dsindices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersKMeanspp" fullname="cvflann::HierarchicalClusteringIndex::chooseCentersKMeanspp" href="cvflann-hierarchicalclusteringindex.html#chooseCentersKMeanspp" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="201" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersKMeanspp(int k, int *dsindices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersRandom" fullname="cvflann::HierarchicalClusteringIndex::chooseCentersRandom" href="cvflann-hierarchicalclusteringindex.html#chooseCentersRandom" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersRandom(int k, int *dsindices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeClustering" fullname="cvflann::HierarchicalClusteringIndex::computeClustering" href="cvflann-hierarchicalclusteringindex.html#computeClustering" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="679" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeClustering(NodePtr node, int *dsindices, int indices_length, int branching, int level)">
                    <parameter left="NodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeLabels" fullname="cvflann::HierarchicalClusteringIndex::computeLabels" href="cvflann-hierarchicalclusteringindex.html#computeLabels" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="650" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeLabels(int *dsindices, int indices_length, int *centers, int centers_length, int *labels, DistanceType &amp;cost)">
                    <parameter left="int *" right="" name="dsindices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int" right="" name="centers_length" default=""/>
                    <parameter left="int *" right="" name="labels" default=""/>
                    <parameter left="DistanceType &amp;" right="" name="cost" default=""/>
                </function>
                <function threadsafety="unspecified" name="findNN" fullname="cvflann::HierarchicalClusteringIndex::findNN" href="cvflann-hierarchicalclusteringindex.html#findNN" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="744" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findNN(NodePtr node, ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec, int &amp;checks, int maxChecks, Heap&lt;BranchSt&gt; *heap, std::vector&lt;bool&gt; &amp;checked, bool explore_all_trees)">
                    <parameter left="NodePtr" right="" name="node" default=""/>
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="int &amp;" right="" name="checks" default=""/>
                    <parameter left="int" right="" name="maxChecks" default=""/>
                    <parameter left="Heap&lt;BranchSt&gt; *" right="" name="heap" default=""/>
                    <parameter left="std::vector&lt;bool&gt; &amp;" right="" name="checked" default=""/>
                    <parameter left="bool" right="" name="explore_all_trees" default="false"/>
                </function>
                <function threadsafety="unspecified" name="free_indices" fullname="cvflann::HierarchicalClusteringIndex::free_indices" href="cvflann-hierarchicalclusteringindex.html#free_indices" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="637" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void free_indices()"/>
                <function threadsafety="unspecified" name="load_tree" fullname="cvflann::HierarchicalClusteringIndex::load_tree" href="cvflann-hierarchicalclusteringindex.html#load_tree" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="616" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_tree(FILE *stream, NodePtr &amp;node, int num)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr &amp;" right="" name="node" default=""/>
                    <parameter left="int" right="" name="num" default=""/>
                </function>
                <function threadsafety="unspecified" name="save_tree" fullname="cvflann::HierarchicalClusteringIndex::save_tree" href="cvflann-hierarchicalclusteringindex.html#save_tree" status="active" access="private" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="601" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_tree(FILE *stream, NodePtr node, int num)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr" right="" name="node" default=""/>
                    <parameter left="int" right="" name="num" default=""/>
                </function>
                <function threadsafety="unspecified" name="~HierarchicalClusteringIndex" fullname="cvflann::HierarchicalClusteringIndex::~HierarchicalClusteringIndex" href="cvflann-hierarchicalclusteringindex.html#dtor.HierarchicalClusteringIndex" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="405" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~HierarchicalClusteringIndex()"/>
            </class>
            <class threadsafety="unspecified" name="HierarchicalClusteringIndexParams" fullname="cvflann::HierarchicalClusteringIndexParams" href="cvflann-hierarchicalclusteringindexparams.html" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="55">
                <function threadsafety="unspecified" name="HierarchicalClusteringIndexParams" fullname="cvflann::HierarchicalClusteringIndexParams::HierarchicalClusteringIndexParams" href="cvflann-hierarchicalclusteringindexparams.html#HierarchicalClusteringIndexParams" status="active" access="public" location="hierarchical_clustering_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/hierarchical_clustering_index.h" lineno="57" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="HierarchicalClusteringIndexParams(int branching, flann_centers_init_t centers_init, int trees, int leaf_size)">
                    <parameter left="int" right="" name="branching" default="32"/>
                    <parameter left="flann_centers_init_t" right="" name="centers_init" default="FLANN_CENTERS_RANDOM"/>
                    <parameter left="int" right="" name="trees" default="4"/>
                    <parameter left="int" right="" name="leaf_size" default="100"/>
                </function>
            </class>
            <function threadsafety="unspecified" name="test_index_precisions" fullname="cvflann::test_index_precisions" href="cvflann.html#test_index_precisions" status="active" access="public" location="index_testing.h" filepath="/usr/local/include/opencv4/opencv2/flann/index_testing.h" lineno="228" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void test_index_precisions(NNIndex&lt;Distance&gt; &amp;index, const Matrix&lt;Distance::ElementType&gt; &amp;inputData, const Matrix&lt;Distance::ElementType&gt; &amp;testData, const Matrix&lt;int&gt; &amp;matches, float *precisions, int precisions_length, const Distance &amp;distance, int nn, int skipMatches, float maxTime)">
                <parameter left="NNIndex&lt;Distance&gt; &amp;" right="" name="index" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="inputData" default=""/>
                <parameter left="const Matrix&lt;Distance::ElementType&gt; &amp;" right="" name="testData" default=""/>
                <parameter left="const Matrix&lt;int&gt; &amp;" right="" name="matches" default=""/>
                <parameter left="float *" right="" name="precisions" default=""/>
                <parameter left="int" right="" name="precisions_length" default=""/>
                <parameter left="const Distance &amp;" right="" name="distance" default=""/>
                <parameter left="int" right="" name="nn" default="1"/>
                <parameter left="int" right="" name="skipMatches" default="0"/>
                <parameter left="float" right="" name="maxTime" default="0"/>
            </function>
            <class threadsafety="unspecified" name="KDTreeIndex" fullname="cvflann::KDTreeIndex" href="cvflann-kdtreeindex.html" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="70" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="Node" fullname="cvflann::KDTreeIndex::Node" href="cvflann-kdtreeindex-node.html" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="227">
                    <variable threadsafety="unspecified" name="divfeat" fullname="cvflann::KDTreeIndex::Node::divfeat" href="cvflann-kdtreeindex-node.html#divfeat-var" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="232" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="divval" fullname="cvflann::KDTreeIndex::Node::divval" href="cvflann-kdtreeindex-node.html#divval-var" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="236" type="DistanceType" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="Branch" fullname="cvflann::KDTreeIndex::Branch" href="cvflann-kdtreeindex.html#Branch-typedef" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="244"/>
                <typedef threadsafety="unspecified" name="BranchSt" fullname="cvflann::KDTreeIndex::BranchSt" href="cvflann-kdtreeindex.html#BranchSt-typedef" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="243"/>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::KDTreeIndex::DistanceType" href="cvflann-kdtreeindex.html#DistanceType-typedef" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="74"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::KDTreeIndex::ElementType" href="cvflann-kdtreeindex.html#ElementType-typedef" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="73"/>
                <typedef threadsafety="unspecified" name="NodePtr" fullname="cvflann::KDTreeIndex::NodePtr" href="cvflann-kdtreeindex.html#NodePtr-typedef" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="242"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::KDTreeIndex::operator=" href="cvflann-kdtreeindex.html#operator-eq" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="106" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="KDTreeIndex &amp;" signature="KDTreeIndex &amp; operator=(const KDTreeIndex &amp;)">
                    <parameter left="const KDTreeIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KDTreeIndex" fullname="cvflann::KDTreeIndex::KDTreeIndex" href="cvflann-kdtreeindex.html#KDTreeIndex-1" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="105" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeIndex(const KDTreeIndex &amp;)">
                    <parameter left="const KDTreeIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KDTreeIndex" fullname="cvflann::KDTreeIndex::KDTreeIndex" href="cvflann-kdtreeindex.html#KDTreeIndex" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="84" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="KDTreeIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="divideTree" fullname="cvflann::KDTreeIndex::divideTree" href="cvflann-kdtreeindex.html#divideTree" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="282" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NodePtr" signature="NodePtr divideTree(int *ind, int count)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="selectDivision" fullname="cvflann::KDTreeIndex::selectDivision" href="cvflann-kdtreeindex.html#selectDivision" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="361" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int selectDivision(DistanceType *v)">
                    <parameter left="DistanceType *" right="" name="v" default=""/>
                </function>
                <function threadsafety="unspecified" name="getExactNeighbors" fullname="cvflann::KDTreeIndex::getExactNeighbors" href="cvflann-kdtreeindex.html#getExactNeighbors" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="425" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getExactNeighbors(ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec, float epsError)">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="float" right="" name="epsError" default=""/>
                </function>
                <function threadsafety="unspecified" name="getNeighbors" fullname="cvflann::KDTreeIndex::getNeighbors" href="cvflann-kdtreeindex.html#getNeighbors" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="443" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getNeighbors(ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec, int maxCheck, float epsError, bool explore_all_trees)">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="int" right="" name="maxCheck" default=""/>
                    <parameter left="float" right="" name="epsError" default=""/>
                    <parameter left="bool" right="" name="explore_all_trees" default="false"/>
                </function>
                <function threadsafety="unspecified" name="load_tree" fullname="cvflann::KDTreeIndex::load_tree" href="cvflann-kdtreeindex.html#load_tree" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="260" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_tree(FILE *stream, NodePtr &amp;tree)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr &amp;" right="" name="tree" default=""/>
                </function>
                <function threadsafety="unspecified" name="meanSplit" fullname="cvflann::KDTreeIndex::meanSplit" href="cvflann-kdtreeindex.html#meanSplit" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="312" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void meanSplit(int *ind, int count, int &amp;index, int &amp;cutfeat, DistanceType &amp;cutval)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int &amp;" right="" name="index" default=""/>
                    <parameter left="int &amp;" right="" name="cutfeat" default=""/>
                    <parameter left="DistanceType &amp;" right="" name="cutval" default=""/>
                </function>
                <function threadsafety="unspecified" name="planeSplit" fullname="cvflann::KDTreeIndex::planeSplit" href="cvflann-kdtreeindex.html#planeSplit" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="399" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void planeSplit(int *ind, int count, int cutfeat, DistanceType cutval, int &amp;lim1, int &amp;lim2)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int" right="" name="cutfeat" default=""/>
                    <parameter left="DistanceType" right="" name="cutval" default=""/>
                    <parameter left="int &amp;" right="" name="lim1" default=""/>
                    <parameter left="int &amp;" right="" name="lim2" default=""/>
                </function>
                <function threadsafety="unspecified" name="save_tree" fullname="cvflann::KDTreeIndex::save_tree" href="cvflann-kdtreeindex.html#save_tree" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="248" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_tree(FILE *stream, NodePtr tree)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr" right="" name="tree" default=""/>
                </function>
                <function threadsafety="unspecified" name="searchLevel" fullname="cvflann::KDTreeIndex::searchLevel" href="cvflann-kdtreeindex.html#searchLevel" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="478" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void searchLevel(ResultSet&lt;DistanceType&gt; &amp;result_set, const ElementType *vec, NodePtr node, DistanceType mindist, int &amp;checkCount, int maxCheck, float epsError, Heap&lt;BranchSt&gt; *heap, DynamicBitset &amp;checked, bool explore_all_trees)">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result_set" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="NodePtr" right="" name="node" default=""/>
                    <parameter left="DistanceType" right="" name="mindist" default=""/>
                    <parameter left="int &amp;" right="" name="checkCount" default=""/>
                    <parameter left="int" right="" name="maxCheck" default=""/>
                    <parameter left="float" right="" name="epsError" default=""/>
                    <parameter left="Heap&lt;BranchSt&gt; *" right="" name="heap" default=""/>
                    <parameter left="DynamicBitset &amp;" right="" name="checked" default=""/>
                    <parameter left="bool" right="" name="explore_all_trees" default="false"/>
                </function>
                <function threadsafety="unspecified" name="searchLevelExact" fullname="cvflann::KDTreeIndex::searchLevelExact" href="cvflann-kdtreeindex.html#searchLevelExact" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="533" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void searchLevelExact(ResultSet&lt;DistanceType&gt; &amp;result_set, const ElementType *vec, const NodePtr node, DistanceType mindist, const float epsError)">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result_set" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="const NodePtr" right="" name="node" default=""/>
                    <parameter left="DistanceType" right="" name="mindist" default=""/>
                    <parameter left="const float" right="" name="epsError" default=""/>
                </function>
                <function threadsafety="unspecified" name="~KDTreeIndex" fullname="cvflann::KDTreeIndex::~KDTreeIndex" href="cvflann-kdtreeindex.html#dtor.KDTreeIndex" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="111" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~KDTreeIndex()"/>
                <variable threadsafety="unspecified" name="RAND_DIM" fullname="cvflann::KDTreeIndex::RAND_DIM" href="cvflann-kdtreeindex.html#RAND_DIM-var" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="586" type="const int" static="true"/>
                <variable threadsafety="unspecified" name="SAMPLE_MEAN" fullname="cvflann::KDTreeIndex::SAMPLE_MEAN" href="cvflann-kdtreeindex.html#SAMPLE_MEAN-var" status="active" access="private" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="577" type="const int" static="true"/>
            </class>
            <class threadsafety="unspecified" name="KDTreeIndexParams" fullname="cvflann::KDTreeIndexParams" href="cvflann-kdtreeindexparams.html" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="53">
                <function threadsafety="unspecified" name="KDTreeIndexParams" fullname="cvflann::KDTreeIndexParams::KDTreeIndexParams" href="cvflann-kdtreeindexparams.html#KDTreeIndexParams" status="active" access="public" location="kdtree_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_index.h" lineno="55" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeIndexParams(int trees)">
                    <parameter left="int" right="" name="trees" default="4"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="KDTreeSingleIndex" fullname="cvflann::KDTreeSingleIndex" href="cvflann-kdtreesingleindex.html" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="70" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="Interval" fullname="cvflann::KDTreeSingleIndex::Interval" href="cvflann-kdtreesingleindex-interval.html" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="277"/>
                <class threadsafety="unspecified" name="Node" fullname="cvflann::KDTreeSingleIndex::Node" href="cvflann-kdtreesingleindex-node.html" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="255">
                    <variable threadsafety="unspecified" name="divfeat" fullname="cvflann::KDTreeSingleIndex::Node::divfeat" href="cvflann-kdtreesingleindex-node.html#divfeat-var" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="264" type="int" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="BoundingBox" fullname="cvflann::KDTreeSingleIndex::BoundingBox" href="cvflann-kdtreesingleindex.html#BoundingBox-typedef" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="282"/>
                <typedef threadsafety="unspecified" name="Branch" fullname="cvflann::KDTreeSingleIndex::Branch" href="cvflann-kdtreesingleindex.html#Branch-typedef" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="285"/>
                <typedef threadsafety="unspecified" name="BranchSt" fullname="cvflann::KDTreeSingleIndex::BranchSt" href="cvflann-kdtreesingleindex.html#BranchSt-typedef" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="284"/>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::KDTreeSingleIndex::DistanceType" href="cvflann-kdtreesingleindex.html#DistanceType-typedef" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="74"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::KDTreeSingleIndex::ElementType" href="cvflann-kdtreesingleindex.html#ElementType-typedef" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="73"/>
                <typedef threadsafety="unspecified" name="NodePtr" fullname="cvflann::KDTreeSingleIndex::NodePtr" href="cvflann-kdtreesingleindex.html#NodePtr-typedef" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="274"/>
                <function threadsafety="unspecified" name="computeInitialDistances" fullname="cvflann::KDTreeSingleIndex::computeInitialDistances" href="cvflann-kdtreesingleindex.html#computeInitialDistances" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="522" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DistanceType" signature="DistanceType computeInitialDistances(const ElementType *vec, std::vector&lt;DistanceType&gt; &amp;dists)">
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="dists" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::KDTreeSingleIndex::operator=" href="cvflann-kdtreesingleindex.html#operator-eq" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="104" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="KDTreeSingleIndex &amp;" signature="KDTreeSingleIndex &amp; operator=(const KDTreeSingleIndex &amp;)">
                    <parameter left="const KDTreeSingleIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KDTreeSingleIndex" fullname="cvflann::KDTreeSingleIndex::KDTreeSingleIndex" href="cvflann-kdtreesingleindex.html#KDTreeSingleIndex-1" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="103" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeSingleIndex(const KDTreeSingleIndex &amp;)">
                    <parameter left="const KDTreeSingleIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KDTreeSingleIndex" fullname="cvflann::KDTreeSingleIndex::KDTreeSingleIndex" href="cvflann-kdtreesingleindex.html#KDTreeSingleIndex" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="84" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeSingleIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="KDTreeSingleIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="divideTree" fullname="cvflann::KDTreeSingleIndex::divideTree" href="cvflann-kdtreesingleindex.html#divideTree" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="340" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="NodePtr" signature="NodePtr divideTree(int left, int right, BoundingBox &amp;bbox)">
                    <parameter left="int" right="" name="left" default=""/>
                    <parameter left="int" right="" name="right" default=""/>
                    <parameter left="BoundingBox &amp;" right="" name="bbox" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeBoundingBox" fullname="cvflann::KDTreeSingleIndex::computeBoundingBox" href="cvflann-kdtreesingleindex.html#computeBoundingBox" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="315" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeBoundingBox(BoundingBox &amp;bbox)">
                    <parameter left="BoundingBox &amp;" right="" name="bbox" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeMinMax" fullname="cvflann::KDTreeSingleIndex::computeMinMax" href="cvflann-kdtreesingleindex.html#computeMinMax" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="390" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeMinMax(int *ind, int count, int dim, ElementType &amp;min_elem, ElementType &amp;max_elem)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int" right="" name="dim" default=""/>
                    <parameter left="ElementType &amp;" right="" name="min_elem" default=""/>
                    <parameter left="ElementType &amp;" right="" name="max_elem" default=""/>
                </function>
                <function threadsafety="unspecified" name="load_tree" fullname="cvflann::KDTreeSingleIndex::load_tree" href="cvflann-kdtreesingleindex.html#load_tree" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="302" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_tree(FILE *stream, NodePtr &amp;tree)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr &amp;" right="" name="tree" default=""/>
                </function>
                <function threadsafety="unspecified" name="middleSplit" fullname="cvflann::KDTreeSingleIndex::middleSplit" href="cvflann-kdtreesingleindex.html#middleSplit" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="401" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void middleSplit(int *ind, int count, int &amp;index, int &amp;cutfeat, DistanceType &amp;cutval, const BoundingBox &amp;bbox)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int &amp;" right="" name="index" default=""/>
                    <parameter left="int &amp;" right="" name="cutfeat" default=""/>
                    <parameter left="DistanceType &amp;" right="" name="cutval" default=""/>
                    <parameter left="const BoundingBox &amp;" right="" name="bbox" default=""/>
                </function>
                <function threadsafety="unspecified" name="middleSplit_" fullname="cvflann::KDTreeSingleIndex::middleSplit_" href="cvflann-kdtreesingleindex.html#middleSplit_" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="446" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void middleSplit_(int *ind, int count, int &amp;index, int &amp;cutfeat, DistanceType &amp;cutval, const BoundingBox &amp;bbox)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int &amp;" right="" name="index" default=""/>
                    <parameter left="int &amp;" right="" name="cutfeat" default=""/>
                    <parameter left="DistanceType &amp;" right="" name="cutval" default=""/>
                    <parameter left="const BoundingBox &amp;" right="" name="bbox" default=""/>
                </function>
                <function threadsafety="unspecified" name="planeSplit" fullname="cvflann::KDTreeSingleIndex::planeSplit" href="cvflann-kdtreesingleindex.html#planeSplit" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="497" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void planeSplit(int *ind, int count, int cutfeat, DistanceType cutval, int &amp;lim1, int &amp;lim2)">
                    <parameter left="int *" right="" name="ind" default=""/>
                    <parameter left="int" right="" name="count" default=""/>
                    <parameter left="int" right="" name="cutfeat" default=""/>
                    <parameter left="DistanceType" right="" name="cutval" default=""/>
                    <parameter left="int &amp;" right="" name="lim1" default=""/>
                    <parameter left="int &amp;" right="" name="lim2" default=""/>
                </function>
                <function threadsafety="unspecified" name="save_tree" fullname="cvflann::KDTreeSingleIndex::save_tree" href="cvflann-kdtreesingleindex.html#save_tree" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="290" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_tree(FILE *stream, NodePtr tree)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="NodePtr" right="" name="tree" default=""/>
                </function>
                <function threadsafety="unspecified" name="searchLevel" fullname="cvflann::KDTreeSingleIndex::searchLevel" href="cvflann-kdtreesingleindex.html#searchLevel" status="active" access="private" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="543" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void searchLevel(ResultSet&lt;DistanceType&gt; &amp;result_set, const ElementType *vec, const NodePtr node, DistanceType mindistsq, std::vector&lt;DistanceType&gt; &amp;dists, const float epsError)">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result_set" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="const NodePtr" right="" name="node" default=""/>
                    <parameter left="DistanceType" right="" name="mindistsq" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="dists" default=""/>
                    <parameter left="const float" right="" name="epsError" default=""/>
                </function>
                <function threadsafety="unspecified" name="~KDTreeSingleIndex" fullname="cvflann::KDTreeSingleIndex::~KDTreeSingleIndex" href="cvflann-kdtreesingleindex.html#dtor.KDTreeSingleIndex" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="109" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~KDTreeSingleIndex()"/>
            </class>
            <class threadsafety="unspecified" name="KDTreeSingleIndexParams" fullname="cvflann::KDTreeSingleIndexParams" href="cvflann-kdtreesingleindexparams.html" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="51">
                <function threadsafety="unspecified" name="KDTreeSingleIndexParams" fullname="cvflann::KDTreeSingleIndexParams::KDTreeSingleIndexParams" href="cvflann-kdtreesingleindexparams.html#KDTreeSingleIndexParams" status="active" access="public" location="kdtree_single_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kdtree_single_index.h" lineno="53" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KDTreeSingleIndexParams(int leaf_max_size, bool reorder, int dim)">
                    <parameter left="int" right="" name="leaf_max_size" default="10"/>
                    <parameter left="bool" right="" name="reorder" default="true"/>
                    <parameter left="int" right="" name="dim" default="-1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="KMeansIndex" fullname="cvflann::KMeansIndex" href="cvflann-kmeansindex.html" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="89" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="KMeansNode" fullname="cvflann::KMeansIndex::KMeansNode" href="cvflann-kmeansindex-kmeansnode.html" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="593">
                    <variable threadsafety="unspecified" name="childs" fullname="cvflann::KMeansIndex::KMeansNode::childs" href="cvflann-kmeansindex-kmeansnode.html#childs-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="618" type="KMeansNode **" static="false"/>
                    <variable threadsafety="unspecified" name="indices" fullname="cvflann::KMeansIndex::KMeansNode::indices" href="cvflann-kmeansindex-kmeansnode.html#indices-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="622" type="int *" static="false"/>
                    <variable threadsafety="unspecified" name="level" fullname="cvflann::KMeansIndex::KMeansNode::level" href="cvflann-kmeansindex-kmeansnode.html#level-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="626" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="mean_radius" fullname="cvflann::KMeansIndex::KMeansNode::mean_radius" href="cvflann-kmeansindex-kmeansnode.html#mean_radius-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="606" type="DistanceType" static="false"/>
                    <variable threadsafety="unspecified" name="pivot" fullname="cvflann::KMeansIndex::KMeansNode::pivot" href="cvflann-kmeansindex-kmeansnode.html#pivot-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="598" type="CentersType *" static="false"/>
                    <variable threadsafety="unspecified" name="radius" fullname="cvflann::KMeansIndex::KMeansNode::radius" href="cvflann-kmeansindex-kmeansnode.html#radius-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="602" type="DistanceType" static="false"/>
                    <variable threadsafety="unspecified" name="size" fullname="cvflann::KMeansIndex::KMeansNode::size" href="cvflann-kmeansindex-kmeansnode.html#size-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="614" type="int" static="false"/>
                    <variable threadsafety="unspecified" name="variance" fullname="cvflann::KMeansIndex::KMeansNode::variance" href="cvflann-kmeansindex-kmeansnode.html#variance-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="610" type="DistanceType" static="false"/>
                </class>
                <typedef threadsafety="unspecified" name="BranchSt" fullname="cvflann::KMeansIndex::BranchSt" href="cvflann-kmeansindex.html#BranchSt-typedef" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="633"/>
                <typedef threadsafety="unspecified" name="CentersType" fullname="cvflann::KMeansIndex::CentersType" href="cvflann-kmeansindex.html#CentersType-typedef" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="94"/>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::KMeansIndex::DistanceType" href="cvflann-kmeansindex.html#DistanceType-typedef" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="93"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::KMeansIndex::ElementType" href="cvflann-kmeansindex.html#ElementType-typedef" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="92"/>
                <typedef threadsafety="unspecified" name="KMeansNodePtr" fullname="cvflann::KMeansIndex::KMeansNodePtr" href="cvflann-kmeansindex.html#KMeansNodePtr-typedef" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="628"/>
                <typedef threadsafety="unspecified" name="is_kdtree_distance" fullname="cvflann::KMeansIndex::is_kdtree_distance" href="cvflann-kmeansindex.html#is_kdtree_distance-typedef" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="96"/>
                <typedef threadsafety="unspecified" name="is_vector_space_distance" fullname="cvflann::KMeansIndex::is_vector_space_distance" href="cvflann-kmeansindex.html#is_vector_space_distance-typedef" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="97"/>
                <function threadsafety="unspecified" name="getDistanceToBorder" fullname="cvflann::KMeansIndex::getDistanceToBorder" href="cvflann-kmeansindex.html#getDistanceToBorder" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1685" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DistanceType" signature="DistanceType getDistanceToBorder(DistanceType *p, DistanceType *c, DistanceType *q)">
                    <parameter left="DistanceType *" right="" name="p" default=""/>
                    <parameter left="DistanceType *" right="" name="c" default=""/>
                    <parameter left="DistanceType *" right="" name="q" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::KMeansIndex::operator=" href="cvflann-kmeansindex.html#operator-eq" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="388" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="KMeansIndex &amp;" signature="KMeansIndex &amp; operator=(const KMeansIndex &amp;)">
                    <parameter left="const KMeansIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KMeansIndex" fullname="cvflann::KMeansIndex::KMeansIndex" href="cvflann-kmeansindex.html#KMeansIndex-1" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="387" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KMeansIndex(const KMeansIndex &amp;)">
                    <parameter left="const KMeansIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="KMeansIndex" fullname="cvflann::KMeansIndex::KMeansIndex" href="cvflann-kmeansindex.html#KMeansIndex" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="346" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KMeansIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="KMeansIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="exploreNodeBranches" fullname="cvflann::KMeansIndex::exploreNodeBranches" href="cvflann-kmeansindex.html#exploreNodeBranches" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1580" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int exploreNodeBranches(KMeansNodePtr node, const ElementType *q, DistanceType *domain_distances, Heap&lt;BranchSt&gt; *heap)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="const ElementType *" right="" name="q" default=""/>
                    <parameter left="DistanceType *" right="" name="domain_distances" default=""/>
                    <parameter left="Heap&lt;BranchSt&gt; *" right="" name="heap" default=""/>
                </function>
                <function threadsafety="unspecified" name="getMinVarianceClusters" fullname="cvflann::KMeansIndex::getMinVarianceClusters" href="cvflann-kmeansindex.html#getMinVarianceClusters" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1709" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int getMinVarianceClusters(KMeansNodePtr root, KMeansNodePtr *clusters, int clusters_length, DistanceType &amp;varianceValue)">
                    <parameter left="KMeansNodePtr" right="" name="root" default=""/>
                    <parameter left="KMeansNodePtr *" right="" name="clusters" default=""/>
                    <parameter left="int" right="" name="clusters_length" default=""/>
                    <parameter left="DistanceType &amp;" right="" name="varianceValue" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersGonzales" fullname="cvflann::KMeansIndex::chooseCentersGonzales" href="cvflann-kmeansindex.html#chooseCentersGonzales" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="161" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersGonzales(int k, int *indices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersKMeanspp" fullname="cvflann::KMeansIndex::chooseCentersKMeanspp" href="cvflann-kmeansindex.html#chooseCentersKMeanspp" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersKMeanspp(int k, int *indices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="chooseCentersRandom" fullname="cvflann::KMeansIndex::chooseCentersRandom" href="cvflann-kmeansindex.html#chooseCentersRandom" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void chooseCentersRandom(int k, int *indices, int indices_length, int *centers, int &amp;centers_length)">
                    <parameter left="int" right="" name="k" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int *" right="" name="centers" default=""/>
                    <parameter left="int &amp;" right="" name="centers_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeAnyBitfieldSubClustering" fullname="cvflann::KMeansIndex::computeAnyBitfieldSubClustering" href="cvflann-kmeansindex.html#computeAnyBitfieldSubClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1274" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeAnyBitfieldSubClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeBitfieldNodeStatistics" fullname="cvflann::KMeansIndex::computeBitfieldNodeStatistics" href="cvflann-kmeansindex.html#computeBitfieldNodeStatistics" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="757" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeBitfieldNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeClustering" fullname="cvflann::KMeansIndex::computeClustering" href="cvflann-kmeansindex.html#computeClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1456" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeDnaNodeStatistics" fullname="cvflann::KMeansIndex::computeDnaNodeStatistics" href="cvflann-kmeansindex.html#computeDnaNodeStatistics" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="820" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeDnaNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="721" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-1" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="888" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const DistType *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const DistType *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-6" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="928" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const cvflann::DNAmming2&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const cvflann::DNAmming2&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-5" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="920" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const cvflann::DNAmmingLUT *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const cvflann::DNAmmingLUT *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-4" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="912" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const cvflann::Hamming2&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const cvflann::Hamming2&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-3" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="904" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const cvflann::Hamming&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const cvflann::Hamming&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeNodeStatistics" fullname="cvflann::KMeansIndex::computeNodeStatistics" href="cvflann-kmeansindex.html#computeNodeStatistics-2" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="896" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeNodeStatistics(KMeansNodePtr node, int *indices, unsigned int indices_length, const cvflann::HammingLUT *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="unsigned int" right="" name="indices_length" default=""/>
                    <parameter left="const cvflann::HammingLUT *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="computeSubClustering" fullname="cvflann::KMeansIndex::computeSubClustering" href="cvflann-kmeansindex.html#computeSubClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1235" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeSubClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="findExactNN" fullname="cvflann::KMeansIndex::findExactNN" href="cvflann-kmeansindex.html#findExactNN" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1613" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findExactNN(KMeansNodePtr node, ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                </function>
                <function threadsafety="unspecified" name="findNN" fullname="cvflann::KMeansIndex::findNN" href="cvflann-kmeansindex.html#findNN" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1531" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findNN(KMeansNodePtr node, ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec, int &amp;checks, int maxChecks, Heap&lt;BranchSt&gt; *heap)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="int &amp;" right="" name="checks" default=""/>
                    <parameter left="int" right="" name="maxChecks" default=""/>
                    <parameter left="Heap&lt;BranchSt&gt; *" right="" name="heap" default=""/>
                </function>
                <function threadsafety="unspecified" name="free_centers" fullname="cvflann::KMeansIndex::free_centers" href="cvflann-kmeansindex.html#free_centers-1" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="687" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void free_centers()"/>
                <function threadsafety="unspecified" name="free_centers" fullname="cvflann::KMeansIndex::free_centers" href="cvflann-kmeansindex.html#free_centers" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="677" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void free_centers(KMeansNodePtr node)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                </function>
                <function threadsafety="unspecified" name="free_indices" fullname="cvflann::KMeansIndex::free_indices" href="cvflann-kmeansindex.html#free_indices" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="701" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void free_indices()"/>
                <function threadsafety="unspecified" name="getCenterOrdering" fullname="cvflann::KMeansIndex::getCenterOrdering" href="cvflann-kmeansindex.html#getCenterOrdering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1661" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getCenterOrdering(KMeansNodePtr node, const ElementType *q, int *sort_indices)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="const ElementType *" right="" name="q" default=""/>
                    <parameter left="int *" right="" name="sort_indices" default=""/>
                </function>
                <function threadsafety="unspecified" name="load_tree" fullname="cvflann::KMeansIndex::load_tree" href="cvflann-kmeansindex.html#load_tree" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="654" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void load_tree(FILE *stream, KMeansNodePtr &amp;node, int num)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="KMeansNodePtr &amp;" right="" name="node" default=""/>
                    <parameter left="int" right="" name="num" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1318" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const DistType *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const DistType *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering-5" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1431" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const cvflann::DNAmming2&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const cvflann::DNAmming2&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering-4" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1417" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const cvflann::DNAmmingLUT *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const cvflann::DNAmmingLUT *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering-3" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1403" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const cvflann::Hamming2&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const cvflann::Hamming2&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering-2" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1389" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const cvflann::Hamming&lt;unsigned char&gt; *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const cvflann::Hamming&lt;unsigned char&gt; *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineAndSplitClustering" fullname="cvflann::KMeansIndex::refineAndSplitClustering" href="cvflann-kmeansindex.html#refineAndSplitClustering-1" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1375" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineAndSplitClustering(KMeansNodePtr node, int *indices, int indices_length, int branching, int level, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count, const cvflann::HammingLUT *identifier)">
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                    <parameter left="const cvflann::HammingLUT *" right="" name="identifier" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineBitfieldClustering" fullname="cvflann::KMeansIndex::refineBitfieldClustering" href="cvflann-kmeansindex.html#refineBitfieldClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1025" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineBitfieldClustering(int *indices, int indices_length, int branching, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count)">
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineClustering" fullname="cvflann::KMeansIndex::refineClustering" href="cvflann-kmeansindex.html#refineClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="937" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineClustering(int *indices, int indices_length, int branching, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count)">
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="refineDnaClustering" fullname="cvflann::KMeansIndex::refineDnaClustering" href="cvflann-kmeansindex.html#refineDnaClustering" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="1129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void refineDnaClustering(int *indices, int indices_length, int branching, CentersType **centers, std::vector&lt;DistanceType&gt; &amp;radiuses, int *belongs_to, int *count)">
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="int" right="" name="indices_length" default=""/>
                    <parameter left="int" right="" name="branching" default=""/>
                    <parameter left="CentersType **" right="" name="centers" default=""/>
                    <parameter left="std::vector&lt;DistanceType&gt; &amp;" right="" name="radiuses" default=""/>
                    <parameter left="int *" right="" name="belongs_to" default=""/>
                    <parameter left="int *" right="" name="count" default=""/>
                </function>
                <function threadsafety="unspecified" name="save_tree" fullname="cvflann::KMeansIndex::save_tree" href="cvflann-kmeansindex.html#save_tree" status="active" access="private" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="638" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_tree(FILE *stream, KMeansNodePtr node, int num)">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                    <parameter left="KMeansNodePtr" right="" name="node" default=""/>
                    <parameter left="int" right="" name="num" default=""/>
                </function>
                <function threadsafety="unspecified" name="~KMeansIndex" fullname="cvflann::KMeansIndex::~KMeansIndex" href="cvflann-kmeansindex.html#dtor.KMeansIndex" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="396" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~KMeansIndex()"/>
                <variable threadsafety="unspecified" name="chooseCenters" fullname="cvflann::KMeansIndex::chooseCenters" href="cvflann-kmeansindex.html#chooseCenters-var" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="106" type="centersAlgFunction" static="false"/>
            </class>
            <class threadsafety="unspecified" name="KMeansIndexParams" fullname="cvflann::KMeansIndexParams" href="cvflann-kmeansindexparams.html" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="61">
                <function threadsafety="unspecified" name="KMeansIndexParams" fullname="cvflann::KMeansIndexParams::KMeansIndexParams" href="cvflann-kmeansindexparams.html#KMeansIndexParams" status="active" access="public" location="kmeans_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/kmeans_index.h" lineno="63" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KMeansIndexParams(int branching, int iterations, flann_centers_init_t centers_init, float cb_index, int trees)">
                    <parameter left="int" right="" name="branching" default="32"/>
                    <parameter left="int" right="" name="iterations" default="11"/>
                    <parameter left="flann_centers_init_t" right="" name="centers_init" default="FLANN_CENTERS_RANDOM"/>
                    <parameter left="float" right="" name="cb_index" default="0.2"/>
                    <parameter left="int" right="" name="trees" default="1"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="LinearIndex" fullname="cvflann::LinearIndex" href="cvflann-linearindex.html" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="50" bases="cvflann::NNIndex">
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::LinearIndex::DistanceType" href="cvflann-linearindex.html#DistanceType-typedef" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="55"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::LinearIndex::ElementType" href="cvflann-linearindex.html#ElementType-typedef" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="54"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::LinearIndex::operator=" href="cvflann-linearindex.html#operator-eq" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="65" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LinearIndex &amp;" signature="LinearIndex &amp; operator=(const LinearIndex &amp;)">
                    <parameter left="const LinearIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="LinearIndex" fullname="cvflann::LinearIndex::LinearIndex" href="cvflann-linearindex.html#LinearIndex-1" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="64" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LinearIndex(const LinearIndex &amp;)">
                    <parameter left="const LinearIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="LinearIndex" fullname="cvflann::LinearIndex::LinearIndex" href="cvflann-linearindex.html#LinearIndex" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LinearIndex(const Matrix&lt;ElementType&gt; &amp;inputData, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="inputData" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="LinearIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
            </class>
            <class threadsafety="unspecified" name="LinearIndexParams" fullname="cvflann::LinearIndexParams" href="cvflann-linearindexparams.html" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="41">
                <function threadsafety="unspecified" name="LinearIndexParams" fullname="cvflann::LinearIndexParams::LinearIndexParams" href="cvflann-linearindexparams.html#LinearIndexParams" status="active" access="public" location="linear_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/linear_index.h" lineno="43" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LinearIndexParams()"/>
            </class>
            <class threadsafety="unspecified" name="Logger" fullname="cvflann::Logger" href="cvflann-logger.html" status="active" access="public" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="45">
                <function threadsafety="unspecified" name="instance" fullname="cvflann::Logger::instance" href="cvflann-logger.html#instance" status="active" access="private" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="56" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="Logger &amp;" signature="Logger &amp; instance()"/>
                <function threadsafety="unspecified" name="Logger" fullname="cvflann::Logger::Logger" href="cvflann-logger.html#Logger" status="active" access="private" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="47" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Logger()"/>
                <function threadsafety="unspecified" name="_log" fullname="cvflann::Logger::_log" href="cvflann-logger.html#underscore.log" status="active" access="private" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="80" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int _log(int level, const char *fmt, va_list arglist)">
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="const char *" right="" name="fmt" default=""/>
                    <parameter left="va_list" right="" name="arglist" default=""/>
                </function>
                <function threadsafety="unspecified" name="log" fullname="cvflann::Logger::log" href="cvflann-logger.html#log" status="active" access="public" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="106" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int log(int level, const char *fmt, ... )">
                    <parameter left="int" right="" name="level" default=""/>
                    <parameter left="const char *" right="" name="fmt" default=""/>
                    <parameter left="..." right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="_setDestination" fullname="cvflann::Logger::_setDestination" href="cvflann-logger.html#underscore.setDestination" status="active" access="private" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void _setDestination(const char *name)">
                    <parameter left="const char *" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="setDestination" fullname="cvflann::Logger::setDestination" href="cvflann-logger.html#setDestination" status="active" access="public" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="98" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDestination(const char *name)">
                    <parameter left="const char *" right="" name="name" default=""/>
                </function>
                <function threadsafety="unspecified" name="setLevel" fullname="cvflann::Logger::setLevel" href="cvflann-logger.html#setLevel" status="active" access="public" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="92" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setLevel(int level)">
                    <parameter left="int" right="" name="level" default=""/>
                </function>
                <function threadsafety="unspecified" name="~Logger" fullname="cvflann::Logger::~Logger" href="cvflann-logger.html#dtor.Logger" status="active" access="private" location="logger.h" filepath="/usr/local/include/opencv4/opencv2/flann/logger.h" lineno="49" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~Logger()"/>
            </class>
            <class threadsafety="unspecified" name="LshIndex" fullname="cvflann::LshIndex" href="cvflann-lshindex.html" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="83" bases="cvflann::NNIndex">
                <class threadsafety="unspecified" name="SortScoreIndexPairOnSecond" fullname="cvflann::LshIndex::SortScoreIndexPairOnSecond" href="cvflann-lshindex-sortscoreindexpaironsecond.html" status="active" access="private" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="234">
                    <function threadsafety="unspecified" name="operator()" fullname="cvflann::LshIndex::SortScoreIndexPairOnSecond::operator()" href="cvflann-lshindex-sortscoreindexpaironsecond.html#operator-28-29" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="236" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator()(const ScoreIndexPair &amp;left, const ScoreIndexPair &amp;right) const">
                        <parameter left="const ScoreIndexPair &amp;" right="" name="left" default=""/>
                        <parameter left="const ScoreIndexPair &amp;" right="" name="right" default=""/>
                    </function>
                </class>
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::LshIndex::DistanceType" href="cvflann-lshindex.html#DistanceType-typedef" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="87"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::LshIndex::ElementType" href="cvflann-lshindex.html#ElementType-typedef" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="86"/>
                <typedef threadsafety="unspecified" name="ScoreIndexPair" fullname="cvflann::LshIndex::ScoreIndexPair" href="cvflann-lshindex.html#ScoreIndexPair-typedef" status="active" access="private" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="233"/>
                <function threadsafety="unspecified" name="operator=" fullname="cvflann::LshIndex::operator=" href="cvflann-lshindex.html#operator-eq" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="110" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LshIndex &amp;" signature="LshIndex &amp; operator=(const LshIndex &amp;)">
                    <parameter left="const LshIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="LshIndex" fullname="cvflann::LshIndex::LshIndex" href="cvflann-lshindex.html#LshIndex-1" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="109" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshIndex(const LshIndex &amp;)">
                    <parameter left="const LshIndex &amp;" right="" name="" default=""/>
                </function>
                <function threadsafety="unspecified" name="LshIndex" fullname="cvflann::LshIndex::LshIndex" href="cvflann-lshindex.html#LshIndex" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="94" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshIndex(const Matrix&lt;ElementType&gt; &amp;input_data, const IndexParams &amp;params, Distance d)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="input_data" default=""/>
                    <parameter left="const IndexParams &amp;" right="" name="params" default="LshIndexParams()"/>
                    <parameter left="Distance" right="" name="d" default="Distance()"/>
                </function>
                <function threadsafety="unspecified" name="fill_xor_mask" fullname="cvflann::LshIndex::fill_xor_mask" href="cvflann-lshindex.html#fill_xor_mask" status="active" access="private" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="248" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void fill_xor_mask(lsh::BucketKey key, int lowest_index, unsigned int level, std::vector&lt;lsh::BucketKey&gt; &amp;xor_masks)">
                    <parameter left="lsh::BucketKey" right="" name="key" default=""/>
                    <parameter left="int" right="" name="lowest_index" default=""/>
                    <parameter left="unsigned int" right="" name="level" default=""/>
                    <parameter left="std::vector&lt;lsh::BucketKey&gt; &amp;" right="" name="xor_masks" default=""/>
                </function>
                <function threadsafety="unspecified" name="getNeighbors" fullname="cvflann::LshIndex::getNeighbors" href="cvflann-lshindex.html#getNeighbors-1" status="active" access="private" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="344" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getNeighbors(const ElementType *vec, ResultSet&lt;DistanceType&gt; &amp;result)">
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                </function>
                <function threadsafety="unspecified" name="getNeighbors" fullname="cvflann::LshIndex::getNeighbors" href="cvflann-lshindex.html#getNeighbors" status="active" access="private" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="268" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void getNeighbors(const ElementType *vec, bool do_radius, float radius, bool do_k, unsigned int k_nn, float &amp;checked_average)">
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="bool" right="" name="do_radius" default=""/>
                    <parameter left="float" right="" name="radius" default=""/>
                    <parameter left="bool" right="" name="do_k" default=""/>
                    <parameter left="unsigned int" right="" name="k_nn" default=""/>
                    <parameter left="float &amp;" right="" name="checked_average" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="LshIndexParams" fullname="cvflann::LshIndexParams" href="cvflann-lshindexparams.html" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="62">
                <function threadsafety="unspecified" name="LshIndexParams" fullname="cvflann::LshIndexParams::LshIndexParams" href="cvflann-lshindexparams.html#LshIndexParams" status="active" access="public" location="lsh_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_index.h" lineno="64" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshIndexParams(int table_number, int key_size, int multi_probe_level)">
                    <parameter left="int" right="" name="table_number" default="12"/>
                    <parameter left="int" right="" name="key_size" default="20"/>
                    <parameter left="int" right="" name="multi_probe_level" default="2"/>
                </function>
            </class>
            <namespace threadsafety="unspecified" name="lsh" fullname="cvflann::lsh" href="cvflann-lsh.html" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="70">
                <class threadsafety="unspecified" name="LshStats" fullname="cvflann::lsh::LshStats" href="cvflann-lsh-lshstats.html" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="90">
                    <variable threadsafety="unspecified" name="bucket_size_max_" fullname="cvflann::lsh::LshStats::bucket_size_max_" href="cvflann-lsh-lshstats.html#bucket_size_max_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="97" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="bucket_size_mean_" fullname="cvflann::lsh::LshStats::bucket_size_mean_" href="cvflann-lsh-lshstats.html#bucket_size_mean_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="94" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="bucket_size_median_" fullname="cvflann::lsh::LshStats::bucket_size_median_" href="cvflann-lsh-lshstats.html#bucket_size_median_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="95" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="bucket_size_min_" fullname="cvflann::lsh::LshStats::bucket_size_min_" href="cvflann-lsh-lshstats.html#bucket_size_min_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="96" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="bucket_size_std_dev" fullname="cvflann::lsh::LshStats::bucket_size_std_dev" href="cvflann-lsh-lshstats.html#bucket_size_std_dev-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="98" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="bucket_sizes_" fullname="cvflann::lsh::LshStats::bucket_sizes_" href="cvflann-lsh-lshstats.html#bucket_sizes_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="92" type="std::vector&lt;unsigned int&gt;" static="false"/>
                    <variable threadsafety="unspecified" name="n_buckets_" fullname="cvflann::lsh::LshStats::n_buckets_" href="cvflann-lsh-lshstats.html#n_buckets_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="93" type="size_t" static="false"/>
                    <variable threadsafety="unspecified" name="size_histogram_" fullname="cvflann::lsh::LshStats::size_histogram_" href="cvflann-lsh-lshstats.html#size_histogram_-var" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="101" type="std::vector&lt;std::vector&lt;unsigned int&gt; &gt;" static="false"/>
                </class>
                <class threadsafety="unspecified" name="LshTable" fullname="cvflann::lsh::LshTable" href="cvflann-lsh-lshtable.html" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="138">
                    <enum threadsafety="unspecified" name="SpeedLevel" fullname="cvflann::lsh::LshTable::SpeedLevel" href="cvflann-lsh-lshtable.html#SpeedLevel-enum" status="active" access="private" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="266">
                        <value name="kArray" value="0"/>
                        <value name="kBitsetHash" value="1"/>
                        <value name="kHash" value="2"/>
                    </enum>
                    <typedef threadsafety="unspecified" name="BucketsSpace" fullname="cvflann::lsh::LshTable::BucketsSpace" href="cvflann-lsh-lshtable.html#BucketsSpace-typedef" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="144"/>
                    <typedef threadsafety="unspecified" name="BucketsSpeed" fullname="cvflann::lsh::LshTable::BucketsSpeed" href="cvflann-lsh-lshtable.html#BucketsSpeed-typedef" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="151"/>
                    <function threadsafety="unspecified" name="LshTable" fullname="cvflann::lsh::LshTable::LshTable" href="cvflann-lsh-lshtable.html#LshTable" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="155" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshTable()"/>
                    <function threadsafety="unspecified" name="LshTable" fullname="cvflann::lsh::LshTable::LshTable" href="cvflann-lsh-lshtable.html#LshTable-1" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="167" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshTable(unsigned int feature_size, unsigned int key_size)">
                        <parameter left="unsigned int" right="" name="feature_size" default=""/>
                        <parameter left="unsigned int" right="" name="key_size" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="add" fullname="cvflann::lsh::LshTable::add" href="cvflann-lsh-lshtable.html#add-1" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="205" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void add(Matrix&lt;ElementType&gt; dataset)">
                        <parameter left="Matrix&lt;ElementType&gt;" right="" name="dataset" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="add" fullname="cvflann::lsh::LshTable::add" href="cvflann-lsh-lshtable.html#add" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="178" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void add(unsigned int value, const ElementType *feature)">
                        <parameter left="unsigned int" right="" name="value" default=""/>
                        <parameter left="const ElementType *" right="" name="feature" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="initialize" fullname="cvflann::lsh::LshTable::initialize" href="cvflann-lsh-lshtable.html#initialize" status="active" access="private" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="273" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void initialize(size_t key_size)">
                        <parameter left="size_t" right="" name="key_size" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="optimize" fullname="cvflann::lsh::LshTable::optimize" href="cvflann-lsh-lshtable.html#optimize" status="active" access="private" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="289" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void optimize()"/>
                    <function threadsafety="unspecified" name="getStats" fullname="cvflann::lsh::LshTable::getStats" href="cvflann-lsh-lshtable.html#getStats" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="258" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LshStats" signature="LshStats getStats() const"/>
                    <function threadsafety="unspecified" name="getBucketFromKey" fullname="cvflann::lsh::LshTable::getBucketFromKey" href="cvflann-lsh-lshtable.html#getBucketFromKey" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="220" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const Bucket *" signature="const Bucket * getBucketFromKey(BucketKey key) const">
                        <parameter left="BucketKey" right="" name="key" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="getKey" fullname="cvflann::lsh::LshTable::getKey" href="cvflann-lsh-lshtable.html#getKey" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="249" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t getKey(const ElementType *feature) const">
                        <parameter left="const ElementType *" right="" name="feature" default=""/>
                    </function>
                </class>
                <typedef threadsafety="unspecified" name="Bucket" fullname="cvflann::lsh::Bucket" href="cvflann-lsh.html#Bucket-typedef" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="84"/>
                <typedef threadsafety="unspecified" name="BucketKey" fullname="cvflann::lsh::BucketKey" href="cvflann-lsh.html#BucketKey-typedef" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="80"/>
                <typedef threadsafety="unspecified" name="FeatureIndex" fullname="cvflann::lsh::FeatureIndex" href="cvflann-lsh.html#FeatureIndex-typedef" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="77"/>
                <function threadsafety="unspecified" name="LshTable" fullname="cvflann::lsh::LshTable" href="cvflann-lsh.html#LshTable" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="355" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="LshTable(unsigned int feature_size, unsigned int subsignature_size)">
                    <parameter left="unsigned int" right="" name="feature_size" default=""/>
                    <parameter left="unsigned int" right="" name="subsignature_size" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;&lt;" fullname="cvflann::lsh::operator&lt;&lt;" href="cvflann-lsh.html#operator-lt-lt" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="std::ostream &amp;" signature="std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const LshStats &amp;stats)">
                    <parameter left="std::ostream &amp;" right="" name="out" default=""/>
                    <parameter left="const LshStats &amp;" right="" name="stats" default=""/>
                </function>
                <function threadsafety="unspecified" name="getStats" fullname="cvflann::lsh::getStats" href="cvflann-lsh.html#getStats" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="445" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="LshStats" signature="LshStats getStats() const"/>
                <function threadsafety="unspecified" name="getKey" fullname="cvflann::lsh::getKey" href="cvflann-lsh.html#getKey" status="active" access="public" location="lsh_table.h" filepath="/usr/local/include/opencv4/opencv2/flann/lsh_table.h" lineno="401" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t getKey(const unsigned char *feature) const">
                    <parameter left="const unsigned char *" right="" name="feature" default=""/>
                </function>
            </namespace>
            <class threadsafety="unspecified" name="Matrix" fullname="cvflann::Matrix" href="cvflann-matrix.html" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="46">
                <typedef threadsafety="unspecified" name="type" fullname="cvflann::Matrix::type" href="cvflann-matrix.html#type-typedef" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="49"/>
                <function threadsafety="unspecified" name="Matrix" fullname="cvflann::Matrix::Matrix" href="cvflann-matrix.html#Matrix" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="56" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matrix()"/>
                <function threadsafety="unspecified" name="Matrix" fullname="cvflann::Matrix::Matrix" href="cvflann-matrix.html#Matrix-1" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="60" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="Matrix(T *data_, size_t rows_, size_t cols_, size_t stride_)">
                    <parameter left="T *" right="" name="data_" default=""/>
                    <parameter left="size_t" right="" name="rows_" default=""/>
                    <parameter left="size_t" right="" name="cols_" default=""/>
                    <parameter left="size_t" right="" name="stride_" default="0"/>
                </function>
                <variable threadsafety="unspecified" name="cols" fullname="cvflann::Matrix::cols" href="cvflann-matrix.html#cols-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="52" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="data" fullname="cvflann::Matrix::data" href="cvflann-matrix.html#data-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="54" type="T *" static="false"/>
                <variable threadsafety="unspecified" name="rows" fullname="cvflann::Matrix::rows" href="cvflann-matrix.html#rows-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="51" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="stride" fullname="cvflann::Matrix::stride" href="cvflann-matrix.html#stride-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="53" type="size_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="UntypedMatrix" fullname="cvflann::UntypedMatrix" href="cvflann-untypedmatrix.html" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="87">
                <function threadsafety="unspecified" name="as" fullname="cvflann::UntypedMatrix::as" href="cvflann-untypedmatrix.html#as" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Matrix&lt;T&gt;" signature="Matrix&lt;T&gt; as()"/>
                <function threadsafety="unspecified" name="UntypedMatrix" fullname="cvflann::UntypedMatrix::UntypedMatrix" href="cvflann-untypedmatrix.html#UntypedMatrix" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="95" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UntypedMatrix(void *data_, long rows_, long cols_)">
                    <parameter left="void *" right="" name="data_" default=""/>
                    <parameter left="long" right="" name="rows_" default=""/>
                    <parameter left="long" right="" name="cols_" default=""/>
                </function>
                <function threadsafety="unspecified" name="~UntypedMatrix" fullname="cvflann::UntypedMatrix::~UntypedMatrix" href="cvflann-untypedmatrix.html#dtor.UntypedMatrix" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="100" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~UntypedMatrix()"/>
                <variable threadsafety="unspecified" name="cols" fullname="cvflann::UntypedMatrix::cols" href="cvflann-untypedmatrix.html#cols-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="91" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="data" fullname="cvflann::UntypedMatrix::data" href="cvflann-untypedmatrix.html#data-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="92" type="void *" static="false"/>
                <variable threadsafety="unspecified" name="rows" fullname="cvflann::UntypedMatrix::rows" href="cvflann-untypedmatrix.html#rows-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="90" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="type" fullname="cvflann::UntypedMatrix::type" href="cvflann-untypedmatrix.html#type-var" status="active" access="public" location="matrix.h" filepath="/usr/local/include/opencv4/opencv2/flann/matrix.h" lineno="93" type="flann_datatype_t" static="false"/>
            </class>
            <class threadsafety="unspecified" name="NNIndex" fullname="cvflann::NNIndex" href="cvflann-nnindex.html" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="47">
                <typedef threadsafety="unspecified" name="DistanceType" fullname="cvflann::NNIndex::DistanceType" href="cvflann-nnindex.html#DistanceType-typedef" status="active" access="private" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="50"/>
                <typedef threadsafety="unspecified" name="ElementType" fullname="cvflann::NNIndex::ElementType" href="cvflann-nnindex.html#ElementType-typedef" status="active" access="private" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="49"/>
                <function threadsafety="unspecified" name="radiusSearch" fullname="cvflann::NNIndex::radiusSearch" href="cvflann-nnindex.html#radiusSearch" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="103" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int radiusSearch(const Matrix&lt;ElementType&gt; &amp;query, Matrix&lt;int&gt; &amp;indices, Matrix&lt;DistanceType&gt; &amp;dists, float radius, const SearchParams &amp;params)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="query" default=""/>
                    <parameter left="Matrix&lt;int&gt; &amp;" right="" name="indices" default=""/>
                    <parameter left="Matrix&lt;DistanceType&gt; &amp;" right="" name="dists" default=""/>
                    <parameter left="float" right="" name="radius" default=""/>
                    <parameter left="const SearchParams &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="buildIndex" fullname="cvflann::NNIndex::buildIndex" href="cvflann-nnindex.html#buildIndex" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="59" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void buildIndex() = 0"/>
                <function threadsafety="unspecified" name="findNeighbors" fullname="cvflann::NNIndex::findNeighbors" href="cvflann-nnindex.html#findNeighbors" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="173" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void findNeighbors(ResultSet&lt;DistanceType&gt; &amp;result, const ElementType *vec, const SearchParams &amp;searchParams) = 0">
                    <parameter left="ResultSet&lt;DistanceType&gt; &amp;" right="" name="result" default=""/>
                    <parameter left="const ElementType *" right="" name="vec" default=""/>
                    <parameter left="const SearchParams &amp;" right="" name="searchParams" default=""/>
                </function>
                <function threadsafety="unspecified" name="knnSearch" fullname="cvflann::NNIndex::knnSearch" href="cvflann-nnindex.html#knnSearch" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="69" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void knnSearch(const Matrix&lt;ElementType&gt; &amp;queries, Matrix&lt;int&gt; &amp;indices, Matrix&lt;DistanceType&gt; &amp;dists, int knn, const SearchParams &amp;params)">
                    <parameter left="const Matrix&lt;ElementType&gt; &amp;" right="" name="queries" default=""/>
                    <parameter left="Matrix&lt;int&gt; &amp;" right="" name="indices" default=""/>
                    <parameter left="Matrix&lt;DistanceType&gt; &amp;" right="" name="dists" default=""/>
                    <parameter left="int" right="" name="knn" default=""/>
                    <parameter left="const SearchParams &amp;" right="" name="params" default=""/>
                </function>
                <function threadsafety="unspecified" name="loadIndex" fullname="cvflann::NNIndex::loadIndex" href="cvflann-nnindex.html#loadIndex" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="142" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void loadIndex(FILE *stream) = 0">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                </function>
                <function threadsafety="unspecified" name="saveIndex" fullname="cvflann::NNIndex::saveIndex" href="cvflann-nnindex.html#saveIndex" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="136" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void saveIndex(FILE *stream) = 0">
                    <parameter left="FILE *" right="" name="stream" default=""/>
                </function>
                <function threadsafety="unspecified" name="~NNIndex" fullname="cvflann::NNIndex::~NNIndex" href="cvflann-nnindex.html#dtor.NNIndex" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="54" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~NNIndex()"/>
                <function threadsafety="unspecified" name="getParameters" fullname="cvflann::NNIndex::getParameters" href="cvflann-nnindex.html#getParameters" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="167" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="IndexParams" signature="IndexParams getParameters() const = 0"/>
                <function threadsafety="unspecified" name="getType" fullname="cvflann::NNIndex::getType" href="cvflann-nnindex.html#getType" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="162" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="flann_algorithm_t" signature="flann_algorithm_t getType() const = 0"/>
                <function threadsafety="unspecified" name="usedMemory" fullname="cvflann::NNIndex::usedMemory" href="cvflann-nnindex.html#usedMemory" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="157" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int usedMemory() const = 0"/>
                <function threadsafety="unspecified" name="size" fullname="cvflann::NNIndex::size" href="cvflann-nnindex.html#size" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="147" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const = 0"/>
                <function threadsafety="unspecified" name="veclen" fullname="cvflann::NNIndex::veclen" href="cvflann-nnindex.html#veclen" status="active" access="public" location="nn_index.h" filepath="/usr/local/include/opencv4/opencv2/flann/nn_index.h" lineno="152" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t veclen() const = 0"/>
            </class>
            <class threadsafety="unspecified" name="CreatorNotFound" fullname="cvflann::CreatorNotFound" href="cvflann-creatornotfound.html" status="active" access="public" location="object_factory.h" filepath="/usr/local/include/opencv4/opencv2/flann/object_factory.h" lineno="41"/>
            <class threadsafety="unspecified" name="SearchParams" fullname="cvflann::SearchParams" href="cvflann-searchparams.html" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="46">
                <function threadsafety="unspecified" name="SearchParams" fullname="cvflann::SearchParams::SearchParams" href="cvflann-searchparams.html#SearchParams" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="48" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SearchParams(int checks, float eps, bool sorted)">
                    <parameter left="int" right="" name="checks" default="32"/>
                    <parameter left="float" right="" name="eps" default="0"/>
                    <parameter left="bool" right="" name="sorted" default="true"/>
                </function>
                <function threadsafety="unspecified" name="SearchParams" fullname="cvflann::SearchParams::SearchParams" href="cvflann-searchparams.html#SearchParams-1" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="53" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="SearchParams(int checks, float eps, bool sorted, bool explore_all_trees)">
                    <parameter left="int" right="" name="checks" default=""/>
                    <parameter left="float" right="" name="eps" default=""/>
                    <parameter left="bool" right="" name="sorted" default=""/>
                    <parameter left="bool" right="" name="explore_all_trees" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cvflann::SearchParams::init" href="cvflann-searchparams.html#init" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int checks, float eps, bool sorted, bool explore_all_trees)">
                    <parameter left="int" right="" name="checks" default="32"/>
                    <parameter left="float" right="" name="eps" default="0"/>
                    <parameter left="bool" right="" name="sorted" default="true"/>
                    <parameter left="bool" right="" name="explore_all_trees" default="false"/>
                </function>
            </class>
            <typedef threadsafety="unspecified" name="IndexParams" fullname="cvflann::IndexParams" href="cvflann.html#IndexParams-typedef" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="44"/>
            <function threadsafety="unspecified" name="print_params" fullname="cvflann::print_params" href="cvflann.html#print_params-1" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print_params(const IndexParams &amp;params)">
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
            </function>
            <function threadsafety="unspecified" name="print_params" fullname="cvflann::print_params" href="cvflann.html#print_params" status="active" access="public" location="params.h" filepath="/usr/local/include/opencv4/opencv2/flann/params.h" lineno="98" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void print_params(const IndexParams &amp;params, std::ostream &amp;stream)">
                <parameter left="const IndexParams &amp;" right="" name="params" default=""/>
                <parameter left="std::ostream &amp;" right="" name="stream" default=""/>
            </function>
            <class threadsafety="unspecified" name="UniqueRandom" fullname="cvflann::UniqueRandom" href="cvflann-uniquerandom.html" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="99">
                <function threadsafety="unspecified" name="UniqueRandom" fullname="cvflann::UniqueRandom::UniqueRandom" href="cvflann-uniquerandom.html#UniqueRandom" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="111" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UniqueRandom(int n)">
                    <parameter left="int" right="" name="n" default=""/>
                </function>
                <function threadsafety="unspecified" name="next" fullname="cvflann::UniqueRandom::next" href="cvflann-uniquerandom.html#next" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int next()"/>
                <function threadsafety="unspecified" name="init" fullname="cvflann::UniqueRandom::init" href="cvflann-uniquerandom.html#init" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int n)">
                    <parameter left="int" right="" name="n" default=""/>
                </function>
            </class>
            <function threadsafety="unspecified" name="seed_random" fullname="cvflann::seed_random" href="cvflann.html#seed_random" status="active" access="public" location="random.h" filepath="/usr/local/include/opencv4/opencv2/flann/random.h" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void seed_random(unsigned int seed)">
                <parameter left="unsigned int" right="" name="seed" default=""/>
            </function>
            <class threadsafety="unspecified" name="BranchStruct" fullname="cvflann::BranchStruct" href="cvflann-branchstruct.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="52">
                <function threadsafety="unspecified" name="BranchStruct" fullname="cvflann::BranchStruct::BranchStruct" href="cvflann-branchstruct.html#BranchStruct" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="57" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BranchStruct()"/>
                <function threadsafety="unspecified" name="BranchStruct" fullname="cvflann::BranchStruct::BranchStruct" href="cvflann-branchstruct.html#BranchStruct-1" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="BranchStruct(const T &amp;aNode, DistanceType dist)">
                    <parameter left="const T &amp;" right="" name="aNode" default=""/>
                    <parameter left="DistanceType" right="" name="dist" default=""/>
                </function>
                <function threadsafety="unspecified" name="operator&lt;" fullname="cvflann::BranchStruct::operator&lt;" href="cvflann-branchstruct.html#operator-lt" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const BranchStruct&lt;T, DistanceType&gt; &amp;rhs) const">
                    <parameter left="const BranchStruct&lt;T, DistanceType&gt; &amp;" right="" name="rhs" default=""/>
                </function>
                <variable threadsafety="unspecified" name="mindist" fullname="cvflann::BranchStruct::mindist" href="cvflann-branchstruct.html#mindist-var" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="55" type="DistanceType" static="false"/>
                <variable threadsafety="unspecified" name="node" fullname="cvflann::BranchStruct::node" href="cvflann-branchstruct.html#node-var" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="54" type="T" static="false"/>
            </class>
            <class threadsafety="unspecified" name="KNNRadiusUniqueResultSet" fullname="cvflann::KNNRadiusUniqueResultSet" href="cvflann-knnradiusuniqueresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="510" bases="cvflann::KNNUniqueResultSet">
                <function threadsafety="unspecified" name="KNNRadiusUniqueResultSet" fullname="cvflann::KNNRadiusUniqueResultSet::KNNRadiusUniqueResultSet" href="cvflann-knnradiusuniqueresultset.html#KNNRadiusUniqueResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="517" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KNNRadiusUniqueResultSet(unsigned int capacity, DistanceType radius)">
                    <parameter left="unsigned int" right="" name="capacity" default=""/>
                    <parameter left="DistanceType" right="" name="radius" default=""/>
                </function>
                <function threadsafety="unspecified" name="clear" fullname="cvflann::KNNRadiusUniqueResultSet::clear" href="cvflann-knnradiusuniqueresultset.html#clear" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="527" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clear()"/>
            </class>
            <class threadsafety="unspecified" name="KNNResultSet" fullname="cvflann::KNNResultSet" href="cvflann-knnresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="154" bases="cvflann::ResultSet">
                <function threadsafety="unspecified" name="KNNResultSet" fullname="cvflann::KNNResultSet::KNNResultSet" href="cvflann-knnresultset.html#KNNResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="163" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KNNResultSet(int capacity_)">
                    <parameter left="int" right="" name="capacity_" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cvflann::KNNResultSet::init" href="cvflann-knnresultset.html#init" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="168" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int *indices_, DistanceType *dists_)">
                    <parameter left="int *" right="" name="indices_" default=""/>
                    <parameter left="DistanceType *" right="" name="dists_" default=""/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="cvflann::KNNResultSet::size" href="cvflann-knnresultset.html#size" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="177" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
            </class>
            <class threadsafety="unspecified" name="KNNSimpleResultSet" fullname="cvflann::KNNSimpleResultSet" href="cvflann-knnsimpleresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="87" bases="cvflann::ResultSet">
                <function threadsafety="unspecified" name="KNNSimpleResultSet" fullname="cvflann::KNNSimpleResultSet::KNNSimpleResultSet" href="cvflann-knnsimpleresultset.html#KNNSimpleResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="96" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KNNSimpleResultSet(int capacity_)">
                    <parameter left="int" right="" name="capacity_" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cvflann::KNNSimpleResultSet::init" href="cvflann-knnsimpleresultset.html#init" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init(int *indices_, DistanceType *dists_)">
                    <parameter left="int *" right="" name="indices_" default=""/>
                    <parameter left="DistanceType *" right="" name="dists_" default=""/>
                </function>
                <function threadsafety="unspecified" name="size" fullname="cvflann::KNNSimpleResultSet::size" href="cvflann-knnsimpleresultset.html#size" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="109" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
            </class>
            <class threadsafety="unspecified" name="KNNUniqueResultSet" fullname="cvflann::KNNUniqueResultSet" href="cvflann-knnuniqueresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="392" bases="cvflann::UniqueResultSet">
                <typedef threadsafety="unspecified" name="DistIndex" fullname="cvflann::KNNUniqueResultSet::DistIndex" href="cvflann-knnuniqueresultset.html#DistIndex-typedef" status="active" access="protected" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="436"/>
                <function threadsafety="unspecified" name="KNNUniqueResultSet" fullname="cvflann::KNNUniqueResultSet::KNNUniqueResultSet" href="cvflann-knnuniqueresultset.html#KNNUniqueResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="398" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="KNNUniqueResultSet(unsigned int capacity)">
                    <parameter left="unsigned int" right="" name="capacity" default=""/>
                </function>
                <variable threadsafety="unspecified" name="capacity_" fullname="cvflann::KNNUniqueResultSet::capacity_" href="cvflann-knnuniqueresultset.html#capacity_-var" status="active" access="protected" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="442" type="unsigned int" static="false"/>
            </class>
            <class threadsafety="unspecified" name="RadiusResultSet" fullname="cvflann::RadiusResultSet" href="cvflann-radiusresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="232" bases="cvflann::ResultSet">
                <function threadsafety="unspecified" name="RadiusResultSet" fullname="cvflann::RadiusResultSet::RadiusResultSet" href="cvflann-radiusresultset.html#RadiusResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="241" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RadiusResultSet(DistanceType radius_, int *indices_, DistanceType *dists_, int capacity_)">
                    <parameter left="DistanceType" right="" name="radius_" default=""/>
                    <parameter left="int *" right="" name="indices_" default=""/>
                    <parameter left="DistanceType *" right="" name="dists_" default=""/>
                    <parameter left="int" right="" name="capacity_" default=""/>
                </function>
                <function threadsafety="unspecified" name="addPoint" fullname="cvflann::RadiusResultSet::addPoint" href="cvflann-radiusresultset.html#addPoint" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="266" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addPoint(DistanceType dist, int index)">
                    <parameter left="DistanceType" right="" name="dist" default=""/>
                    <parameter left="int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="init" fullname="cvflann::RadiusResultSet::init" href="cvflann-radiusresultset.html#init" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="251" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void init()"/>
                <function threadsafety="unspecified" name="~RadiusResultSet" fullname="cvflann::RadiusResultSet::~RadiusResultSet" href="cvflann-radiusresultset.html#dtor.RadiusResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="247" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~RadiusResultSet()"/>
                <function threadsafety="unspecified" name="worstDist" fullname="cvflann::RadiusResultSet::worstDist" href="cvflann-radiusresultset.html#worstDist" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="277" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DistanceType" signature="DistanceType worstDist() const"/>
                <function threadsafety="unspecified" name="full" fullname="cvflann::RadiusResultSet::full" href="cvflann-radiusresultset.html#full" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="261" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool full() const"/>
                <function threadsafety="unspecified" name="size" fullname="cvflann::RadiusResultSet::size" href="cvflann-radiusresultset.html#size" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="256" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
            </class>
            <class threadsafety="unspecified" name="RadiusUniqueResultSet" fullname="cvflann::RadiusUniqueResultSet" href="cvflann-radiusuniqueresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="451" bases="cvflann::UniqueResultSet">
                <typedef threadsafety="unspecified" name="DistIndex" fullname="cvflann::RadiusUniqueResultSet::DistIndex" href="cvflann-radiusuniqueresultset.html#DistIndex-typedef" status="active" access="private" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="497"/>
                <function threadsafety="unspecified" name="RadiusUniqueResultSet" fullname="cvflann::RadiusUniqueResultSet::RadiusUniqueResultSet" href="cvflann-radiusuniqueresultset.html#RadiusUniqueResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="457" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="RadiusUniqueResultSet(DistanceType radius)">
                    <parameter left="DistanceType" right="" name="radius" default=""/>
                </function>
            </class>
            <class threadsafety="unspecified" name="ResultSet" fullname="cvflann::ResultSet" href="cvflann-resultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="68">
                <function threadsafety="unspecified" name="addPoint" fullname="cvflann::ResultSet::addPoint" href="cvflann-resultset.html#addPoint" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="75" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addPoint(DistanceType dist, int index) = 0">
                    <parameter left="DistanceType" right="" name="dist" default=""/>
                    <parameter left="int" right="" name="index" default=""/>
                </function>
                <function threadsafety="unspecified" name="~ResultSet" fullname="cvflann::ResultSet::~ResultSet" href="cvflann-resultset.html#dtor.ResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="71" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~ResultSet()"/>
                <function threadsafety="unspecified" name="worstDist" fullname="cvflann::ResultSet::worstDist" href="cvflann-resultset.html#worstDist" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="77" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="DistanceType" signature="DistanceType worstDist() const = 0"/>
                <function threadsafety="unspecified" name="full" fullname="cvflann::ResultSet::full" href="cvflann-resultset.html#full" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="73" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool full() const = 0"/>
            </class>
            <class threadsafety="unspecified" name="UniqueResultSet" fullname="cvflann::UniqueResultSet" href="cvflann-uniqueresultset.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="290" bases="cvflann::ResultSet">
                <class threadsafety="unspecified" name="DistIndex" fullname="cvflann::UniqueResultSet::DistIndex" href="cvflann-uniqueresultset-distindex.html" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="293">
                    <function threadsafety="unspecified" name="DistIndex" fullname="cvflann::UniqueResultSet::DistIndex::DistIndex" href="cvflann-uniqueresultset-distindex.html#DistIndex" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="295" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="DistIndex(DistanceType dist, unsigned int index)">
                        <parameter left="DistanceType" right="" name="dist" default=""/>
                        <parameter left="unsigned int" right="" name="index" default=""/>
                    </function>
                    <function threadsafety="unspecified" name="operator&lt;" fullname="cvflann::UniqueResultSet::DistIndex::operator&lt;" href="cvflann-uniqueresultset-distindex.html#operator-lt" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="299" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator&lt;(const DistIndex dist_index) const">
                        <parameter left="const DistIndex" right="" name="dist_index" default=""/>
                    </function>
                    <variable threadsafety="unspecified" name="dist_" fullname="cvflann::UniqueResultSet::DistIndex::dist_" href="cvflann-uniqueresultset-distindex.html#dist_-var" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="303" type="DistanceType" static="false"/>
                    <variable threadsafety="unspecified" name="index_" fullname="cvflann::UniqueResultSet::DistIndex::index_" href="cvflann-uniqueresultset-distindex.html#index_-var" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="304" type="unsigned int" static="false"/>
                </class>
                <function threadsafety="unspecified" name="UniqueResultSet" fullname="cvflann::UniqueResultSet::UniqueResultSet" href="cvflann-uniqueresultset.html#UniqueResultSet" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="308" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="UniqueResultSet()"/>
                <function threadsafety="unspecified" name="size" fullname="cvflann::UniqueResultSet::size" href="cvflann-uniqueresultset.html#size" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="362" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="size_t" signature="size_t size() const"/>
                <function threadsafety="unspecified" name="copy" fullname="cvflann::UniqueResultSet::copy" href="cvflann-uniqueresultset.html#copy" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="330" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void copy(int *indices, DistanceType *dist, int n_neighbors) const">
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="DistanceType *" right="" name="dist" default=""/>
                    <parameter left="int" right="" name="n_neighbors" default="-1"/>
                </function>
                <function threadsafety="unspecified" name="sortAndCopy" fullname="cvflann::UniqueResultSet::sortAndCopy" href="cvflann-uniqueresultset.html#sortAndCopy" status="active" access="public" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="354" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void sortAndCopy(int *indices, DistanceType *dist, int n_neighbors) const">
                    <parameter left="int *" right="" name="indices" default=""/>
                    <parameter left="DistanceType *" right="" name="dist" default=""/>
                    <parameter left="int" right="" name="n_neighbors" default="-1"/>
                </function>
                <variable threadsafety="unspecified" name="dist_indices_" fullname="cvflann::UniqueResultSet::dist_indices_" href="cvflann-uniqueresultset.html#dist_indices_-var" status="active" access="protected" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="383" type="std::set&lt;DistIndex&gt;" static="false"/>
                <variable threadsafety="unspecified" name="is_full_" fullname="cvflann::UniqueResultSet::is_full_" href="cvflann-uniqueresultset.html#is_full_-var" status="active" access="protected" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="377" type="bool" static="false"/>
                <variable threadsafety="unspecified" name="worst_distance_" fullname="cvflann::UniqueResultSet::worst_distance_" href="cvflann-uniqueresultset.html#worst_distance_-var" status="active" access="protected" location="result_set.h" filepath="/usr/local/include/opencv4/opencv2/flann/result_set.h" lineno="380" type="DistanceType" static="false"/>
            </class>
            <class threadsafety="unspecified" name="Datatype" fullname="cvflann::Datatype" href="cvflann-datatype.html" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="49"/>
            <class threadsafety="unspecified" name="IndexHeader" fullname="cvflann::IndexHeader" href="cvflann-indexheader.html" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="71">
                <variable threadsafety="unspecified" name="cols" fullname="cvflann::IndexHeader::cols" href="cvflann-indexheader.html#cols-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="78" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="data_type" fullname="cvflann::IndexHeader::data_type" href="cvflann-indexheader.html#data_type-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="75" type="flann_datatype_t" static="false"/>
                <variable threadsafety="unspecified" name="index_type" fullname="cvflann::IndexHeader::index_type" href="cvflann-indexheader.html#index_type-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="76" type="flann_algorithm_t" static="false"/>
                <variable threadsafety="unspecified" name="rows" fullname="cvflann::IndexHeader::rows" href="cvflann-indexheader.html#rows-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="77" type="size_t" static="false"/>
                <variable threadsafety="unspecified" name="signature" fullname="cvflann::IndexHeader::signature" href="cvflann-indexheader.html#signature-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="73" type="char[16]" static="false"/>
                <variable threadsafety="unspecified" name="version" fullname="cvflann::IndexHeader::version" href="cvflann-indexheader.html#version-var" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="74" type="char[16]" static="false"/>
            </class>
            <function threadsafety="unspecified" name="save_header" fullname="cvflann::save_header" href="cvflann.html#save_header" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="88" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_header(FILE *stream, const NNIndex&lt;Distance&gt; &amp;index)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="const NNIndex&lt;Distance&gt; &amp;" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="save_value" fullname="cvflann::save_value" href="cvflann.html#save_value" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="128" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_value(FILE *stream, const T &amp;value, size_t count)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="const T &amp;" right="" name="value" default=""/>
                <parameter left="size_t" right="" name="count" default="1"/>
            </function>
            <function threadsafety="unspecified" name="save_value" fullname="cvflann::save_value" href="cvflann.html#save_value-1" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="134" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_value(FILE *stream, const cvflann::Matrix&lt;T&gt; &amp;value)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="const cvflann::Matrix&lt;T&gt; &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="save_value" fullname="cvflann::save_value" href="cvflann.html#save_value-2" status="active" access="public" location="saving.h" filepath="/usr/local/include/opencv4/opencv2/flann/saving.h" lineno="141" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void save_value(FILE *stream, const std::vector&lt;T&gt; &amp;value)">
                <parameter left="FILE *" right="" name="stream" default=""/>
                <parameter left="const std::vector&lt;T&gt; &amp;" right="" name="value" default=""/>
            </function>
            <class threadsafety="unspecified" name="StartStopTimer" fullname="cvflann::StartStopTimer" href="cvflann-startstoptimer.html" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="48">
                <function threadsafety="unspecified" name="StartStopTimer" fullname="cvflann::StartStopTimer::StartStopTimer" href="cvflann-startstoptimer.html#StartStopTimer" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="62" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="StartStopTimer()"/>
                <function threadsafety="unspecified" name="reset" fullname="cvflann::StartStopTimer::reset" href="cvflann-startstoptimer.html#reset" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="88" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()"/>
                <function threadsafety="unspecified" name="start" fullname="cvflann::StartStopTimer::start" href="cvflann-startstoptimer.html#start" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void start()"/>
                <function threadsafety="unspecified" name="stop" fullname="cvflann::StartStopTimer::stop" href="cvflann-startstoptimer.html#stop" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stop()"/>
                <variable threadsafety="unspecified" name="value" fullname="cvflann::StartStopTimer::value" href="cvflann-startstoptimer.html#value-var" status="active" access="public" location="timer.h" filepath="/usr/local/include/opencv4/opencv2/flann/timer.h" lineno="56" type="double" static="false"/>
            </class>
        </namespace>
        <typedef threadsafety="unspecified" name="DynamicBitset" status="internal" access="private" location="dynamic_bitset.h" filepath="/usr/local/include/opencv4/opencv2/flann/dynamic_bitset.h" lineno="46"/>
        <namespace threadsafety="unspecified" name="std" href="std.html" status="internal" access="private" location="gcommon.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/gcommon.hpp" lineno="265"/>
        <namespace threadsafety="unspecified" name="plaidml" href="plaidml.html" status="internal" access="private" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="15">
            <namespace threadsafety="unspecified" name="edsl" fullname="plaidml::edsl" href="plaidml-edsl.html" status="active" access="public" location="gplaidmlkernel.hpp" filepath="/usr/local/include/opencv4/opencv2/gapi/plaidml/gplaidmlkernel.hpp" lineno="17"/>
        </namespace>
        <variable threadsafety="unspecified" name="CV_CHECKBOX" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="90" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_ALTKEY" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="199" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_CTRLKEY" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="196" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_LBUTTON" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="193" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_MBUTTON" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="195" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_RBUTTON" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="194" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_FLAG_SHIFTKEY" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="197" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_LBUTTONDBLCLK" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="184" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_LBUTTONDOWN" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="178" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_LBUTTONUP" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="181" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MBUTTONDBLCLK" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="186" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MBUTTONDOWN" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="180" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MBUTTONUP" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="183" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MOUSEHWHEEL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="189" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MOUSEMOVE" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="177" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_MOUSEWHEEL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="187" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_RBUTTONDBLCLK" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="185" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_RBUTTONDOWN" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="179" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_EVENT_RBUTTONUP" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="182" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FONT_BLACK" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="67" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FONT_BOLD" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="65" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FONT_DEMIBOLD" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="64" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FONT_LIGHT" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="62" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FONT_NORMAL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="63" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GUI_EXPANDED" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="116" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GUI_NORMAL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="117" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_PUSH_BUTTON" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="90" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RADIOBOX" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="90" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_STYLE_ITALIC" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="70" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_STYLE_NORMAL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="69" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_STYLE_OBLIQUE" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="72" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_AUTOSIZE" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="112" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_FREERATIO" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="121" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_FULLSCREEN" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="120" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_KEEPRATIO" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="123" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_NORMAL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="111" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WINDOW_OPENGL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="113" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WND_PROP_ASPECTRATIO" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="106" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WND_PROP_AUTOSIZE" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="105" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WND_PROP_FULLSCREEN" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="104" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WND_PROP_OPENGL" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="107" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WND_PROP_VISIBLE" status="internal" access="private" location="highgui_c.h" filepath="/usr/local/include/opencv4/opencv2/highgui/highgui_c.h" lineno="108" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_EXR_TYPE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="43" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_CHROMA_QUALITY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="33" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_LUMA_QUALITY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="32" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_OPTIMIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="30" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_PROGRESSIVE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="29" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_QUALITY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="28" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_JPEG_RST_INTERVAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="31" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_BLACKANDWHITE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="47" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_GRAYSCALE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="48" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="49" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_NULL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="46" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_RGB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="50" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_FORMAT_RGB_ALPHA" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="51" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PAM_TUPLETYPE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="45" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_BILEVEL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="36" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_COMPRESSION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="34" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="35" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY_DEFAULT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="37" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY_FILTERED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="38" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY_FIXED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="41" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="39" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PNG_STRATEGY_RLE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="40" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_PXM_BINARY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="42" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_IMWRITE_WEBP_QUALITY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="44" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_ANYCOLOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="20" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_ANYDEPTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="18" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_COLOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="16" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_GRAYSCALE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="14" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_IGNORE_ORIENTATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="23" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LOAD_IMAGE_UNCHANGED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/imgcodecs/legacy/constants_c.h" lineno="12" type="const int" static="true"/>
        <class threadsafety="unspecified" name="CvFont" href="cvfont.html" status="internal" access="private" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1085">
            <variable threadsafety="unspecified" name="ascii" fullname="CvFont::ascii" href="cvfont.html#ascii-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1090" type="const int *" static="false"/>
            <variable threadsafety="unspecified" name="color" fullname="CvFont::color" href="cvfont.html#color-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1088" type="CvScalar" static="false"/>
            <variable threadsafety="unspecified" name="cyrillic" fullname="CvFont::cyrillic" href="cvfont.html#cyrillic-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1092" type="const int *" static="false"/>
            <variable threadsafety="unspecified" name="dx" fullname="CvFont::dx" href="cvfont.html#dx-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1096" type="float" static="false"/>
            <variable threadsafety="unspecified" name="font_face" fullname="CvFont::font_face" href="cvfont.html#font_face-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1089" type="int" static="false"/>
            <variable threadsafety="unspecified" name="greek" fullname="CvFont::greek" href="cvfont.html#greek-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1091" type="const int *" static="false"/>
            <variable threadsafety="unspecified" name="line_type" fullname="CvFont::line_type" href="cvfont.html#line_type-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1097" type="int" static="false"/>
            <variable threadsafety="unspecified" name="nameFont" fullname="CvFont::nameFont" href="cvfont.html#nameFont-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1087" type="const char *" static="false"/>
            <variable threadsafety="unspecified" name="shear" fullname="CvFont::shear" href="cvfont.html#shear-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1094" type="float" static="false"/>
            <variable threadsafety="unspecified" name="thickness" fullname="CvFont::thickness" href="cvfont.html#thickness-var" status="active" access="public" location="imgproc_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/imgproc_c.h" lineno="1095" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvChainPtReader" href="cvchainptreader.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="511">
            <variable threadsafety="unspecified" name="deltas" fullname="CvChainPtReader::deltas" href="cvchainptreader.html#deltas-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="516" type="schar[8][2]" static="false"/>
            <variable threadsafety="unspecified" name="pt" fullname="CvChainPtReader::pt" href="cvchainptreader.html#pt-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="515" type="CvPoint" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvConnectedComp" href="cvconnectedcomp.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="57">
            <variable threadsafety="unspecified" name="area" fullname="CvConnectedComp::area" href="cvconnectedcomp.html#area-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="59" type="double" static="false"/>
            <variable threadsafety="unspecified" name="contour" fullname="CvConnectedComp::contour" href="cvconnectedcomp.html#contour-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="62" type="CvSeq *" static="false"/>
            <variable threadsafety="unspecified" name="rect" fullname="CvConnectedComp::rect" href="cvconnectedcomp.html#rect-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="61" type="CvRect" static="false"/>
            <variable threadsafety="unspecified" name="value" fullname="CvConnectedComp::value" href="cvconnectedcomp.html#value-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="60" type="CvScalar" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvConvexityDefect" href="cvconvexitydefect.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="551">
            <variable threadsafety="unspecified" name="depth" fullname="CvConvexityDefect::depth" href="cvconvexitydefect.html#depth-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="556" type="float" static="false"/>
            <variable threadsafety="unspecified" name="depth_point" fullname="CvConvexityDefect::depth_point" href="cvconvexitydefect.html#depth_point-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="555" type="CvPoint *" static="false"/>
            <variable threadsafety="unspecified" name="end" fullname="CvConvexityDefect::end" href="cvconvexitydefect.html#end-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="554" type="CvPoint *" static="false"/>
            <variable threadsafety="unspecified" name="start" fullname="CvConvexityDefect::start" href="cvconvexitydefect.html#start-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="553" type="CvPoint *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CvHuMoments" href="cvhumoments.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="464"/>
        <class threadsafety="unspecified" name="CvMoments" href="cvmoments.html" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="407">
            <variable threadsafety="unspecified" name="inv_sqrt_m00" fullname="CvMoments::inv_sqrt_m00" href="cvmoments.html#inv_sqrt_m00-var" status="active" access="public" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="411" type="double" static="false"/>
        </class>
        <enum threadsafety="unspecified" name="MorphShapes_c" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="386">
            <value name="CV_SHAPE_RECT" value="0"/>
            <value name="CV_SHAPE_CROSS" value="1"/>
            <value name="CV_SHAPE_ELLIPSE" value="2"/>
            <value name="CV_SHAPE_CUSTOM" value="100"/>
        </enum>
        <enum threadsafety="unspecified" name="SmoothMethod_c" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="68">
            <value name="CV_BLUR_NO_SCALE" value="0"/>
            <value name="CV_BLUR" value="1"/>
            <value name="CV_GAUSSIAN" value="2"/>
            <value name="CV_MEDIAN" value="3"/>
            <value name="CV_BILATERAL" value="4"/>
        </enum>
        <variable threadsafety="unspecified" name="CV_ADAPTIVE_THRESH_GAUSSIAN_C" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="622" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_ADAPTIVE_THRESH_MEAN_C" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="620" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2BGR555" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="142" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2BGR565" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="130" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="103" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="121" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2HLS" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="182" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2HLS_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="207" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2HSV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="164" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2HSV_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="205" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2Lab" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="167" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2Luv" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="180" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="115" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="109" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2XYZ" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="154" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2YCrCb" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="159" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2YUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="225" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2YUV_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="328" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2YUV_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="330" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR2YUV_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="337" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5552BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="144" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5552BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="148" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5552GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="152" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5552RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="145" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5552RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="149" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5652BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="132" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5652BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="136" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5652GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="140" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5652RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="133" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGR5652RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="137" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="106" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2BGR555" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="146" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2BGR565" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="134" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="127" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="113" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="118" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2YUV_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="333" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2YUV_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="335" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BGRA2YUV_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="339" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="170" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="352" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2BGR_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="342" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2BGR_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="195" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="230" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="175" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="357" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2RGB_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="347" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerBG2RGB_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="200" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="171" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="353" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2BGR_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="343" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2BGR_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="196" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="231" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="176" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="358" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2RGB_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="348" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGB2RGB_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="201" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="173" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="355" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2BGR_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="345" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2BGR_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="198" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="233" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="178" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="360" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2RGB_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="350" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerGR2RGB_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="203" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="172" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="354" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2BGR_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="344" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2BGR_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="197" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="232" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="177" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="359" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2RGB_EA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="349" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_BayerRG2RGB_VNG" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="202" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CANNY_L2_GRADIENT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="636" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CHAIN_APPROX_NONE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="497" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CHAIN_APPROX_SIMPLE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="498" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CHAIN_APPROX_TC89_KCOS" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="500" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CHAIN_APPROX_TC89_L1" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="499" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CHAIN_CODE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="496" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CLOCKWISE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="545" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COLORCVT_MAX" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="363" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_BHATTACHARYYA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="566" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_CHISQR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="564" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_CHISQR_ALT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="568" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_CORREL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="563" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_HELLINGER" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="567" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_INTERSECT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="565" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COMP_KL_DIV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="570" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CONTOURS_MATCH_I1" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="537" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CONTOURS_MATCH_I2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="538" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CONTOURS_MATCH_I3" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="540" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_COUNTER_CLOCKWISE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="547" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_C" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="593" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_FAIR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="595" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_HUBER" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="598" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_L1" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="591" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_L12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="594" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_L2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="592" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_LABEL_CCOMP" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="583" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_LABEL_PIXEL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="585" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_MASK_3" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="575" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_MASK_5" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="576" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_MASK_PRECISE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="578" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_USER" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="590" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_DIST_WELSCH" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="596" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FLOODFILL_FIXED_RANGE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="627" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_FLOODFILL_MASK_ONLY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="629" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GAUSSIAN_5x5" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="91" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="123" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2BGR555" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="151" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2BGR565" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="139" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="125" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="124" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_GRAY2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="126" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HLS2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="192" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HLS2BGR_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="212" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HLS2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="193" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HLS2RGB_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="213" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HOUGH_GRADIENT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="645" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HOUGH_MULTI_SCALE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="643" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HOUGH_PROBABILISTIC" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="642" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HOUGH_STANDARD" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="641" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HSV2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="185" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HSV2BGR_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="210" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HSV2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="186" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_HSV2RGB_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="211" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_INTER_AREA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="372" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_INTER_CUBIC" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="371" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_INTER_LANCZOS4" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="374" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_INTER_LINEAR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="370" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_INTER_NN" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="369" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LBGR2Lab" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="215" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LBGR2Luv" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="217" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LINK_RUNS" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="502" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LRGB2Lab" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="216" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LRGB2Luv" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="218" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Lab2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="188" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Lab2LBGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="220" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Lab2LRGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="221" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Lab2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="189" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Luv2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="190" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Luv2LBGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="222" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Luv2LRGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="223" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_Luv2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="191" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MAX_SOBEL_KSIZE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="98" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_BLACKHAT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="404" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_CLOSE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="400" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_DILATE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="398" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_ERODE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="397" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_GRADIENT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="401" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_OPEN" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="399" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_MOP_TOPHAT" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="402" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_POLY_APPROX_DP" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="532" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RETR_CCOMP" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="488" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RETR_EXTERNAL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="486" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RETR_FLOODFILL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="491" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RETR_LIST" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="487" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RETR_TREE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="489" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="116" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2BGR555" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="143" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2BGR565" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="131" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="110" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="122" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2HLS" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="183" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2HLS_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="208" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2HSV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="165" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2HSV_FULL" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="206" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2Lab" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="168" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2Luv" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="181" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="104" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2XYZ" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="155" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2YCrCb" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="160" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2YUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="226" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2YUV_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="327" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2YUV_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="329" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGB2YUV_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="336" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="112" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2BGR555" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="147" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2BGR565" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="135" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="119" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="128" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="107" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2YUV_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="332" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2YUV_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="334" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2YUV_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="338" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_RGBA2mRGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="324" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_SCHARR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="96" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_BINARY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="604" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_BINARY_INV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="605" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_MASK" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="609" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_OTSU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="610" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_TOZERO" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="607" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_TOZERO_INV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="608" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_TRIANGLE" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="615" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_THRESH_TRUNC" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="606" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_CCOEFF" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="477" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_CCOEFF_NORMED" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="479" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_CCORR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="475" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_CCORR_NORMED" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="476" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_SQDIFF" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="473" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TM_SQDIFF_NORMED" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="474" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WARP_FILL_OUTLIERS" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="379" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_WARP_INVERSE_MAP" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="381" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_XYZ2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="156" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_XYZ2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="157" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YCrCb2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="161" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YCrCb2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="162" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="227" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="264" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="262" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_NV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="244" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_NV21" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="246" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_UYNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="294" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_UYVY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="288" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_Y422" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="292" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_YUNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="312" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_YUY2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="306" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_YUYV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="310" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="260" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGRA_YVYU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="308" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="255" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="253" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_NV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="237" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_NV21" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="239" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_UYNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="285" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_UYVY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="279" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_Y422" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="283" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_YUNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="303" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_YUY2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="297" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_YUYV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="301" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="251" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2BGR_YVYU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="299" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="268" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="273" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="272" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_NV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="270" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_NV21" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="269" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_UYNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="318" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_UYVY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="314" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_Y422" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="317" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_YUNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="321" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_YUY2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="315" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_YUYV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="320" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="271" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2GRAY_YVYU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="319" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="228" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="263" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="261" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_NV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="243" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_NV21" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="245" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_UYNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="293" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_UYVY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="287" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_Y422" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="291" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_YUNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="311" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_YUY2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="305" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_YUYV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="309" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="259" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGBA_YVYU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="307" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_I420" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="254" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_IYUV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="252" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_NV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="236" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_NV21" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="238" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_UYNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="284" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_UYVY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="278" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_Y422" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="282" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_YUNV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="302" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_YUY2" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="296" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_YUYV" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="300" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_YV12" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="250" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV2RGB_YVYU" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="298" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420p2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="257" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420p2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="266" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420p2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="275" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420p2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="256" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420p2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="265" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420sp2BGR" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="241" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420sp2BGRA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="248" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420sp2GRAY" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="274" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420sp2RGB" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="240" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_YUV420sp2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="247" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_mRGBA2RGBA" status="internal" access="private" location="types_c.h" filepath="/usr/local/include/opencv4/opencv2/imgproc/types_c.h" lineno="325" type="const int" static="true"/>
        <enum threadsafety="unspecified" name="InpaintingModes" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/photo/legacy/constants_c.h" lineno="8">
            <value name="CV_INPAINT_NS" value="0"/>
            <value name="CV_INPAINT_TELEA" value="1"/>
        </enum>
        <variable threadsafety="unspecified" name="CV_LKFLOW_GET_MIN_EIGENVALS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/video/legacy/constants_c.h" lineno="14" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LKFLOW_INITIAL_GUESSES" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/video/legacy/constants_c.h" lineno="12" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LKFLOW_PYR_A_READY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/video/legacy/constants_c.h" lineno="10" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_LKFLOW_PYR_B_READY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/video/legacy/constants_c.h" lineno="11" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_ANDROID" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="43" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_ANDROID_BACK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="44" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_ANDROID_FRONT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="45" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_ANY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="10" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_ARAVIS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="62" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_AVFOUNDATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="49" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_CMU1394" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="22" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_DC1394" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="21" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_DSHOW" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="35" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_FFMPEG" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="58" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_FIREWARE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="18" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_FIREWIRE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="19" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_GIGANETIX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="51" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_GPHOTO2" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="56" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_GSTREAMER" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="57" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_GSTREAMER_QUEUE_LENGTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="155" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_IEEE1394" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="20" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_IMAGES" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="59" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="53" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_DEPTH_GENERATOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="356" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_DEPTH_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="390" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_GENERATORS_MASK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="359" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_IMAGE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="394" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_IMAGE_GENERATOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="357" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_IR_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="392" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_INTELPERC_UVDEPTH_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="391" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_MIL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="12" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_MSMF" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="36" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="40" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI2" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="55" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_ASUS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="41" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_BGR_IMAGE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="371" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="122" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="148" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="149" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR_PRESENT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="147" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="150" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="151" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DEPTH_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="364" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DISPARITY_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="366" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_DISPARITY_MAP_32F" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="367" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_GENERATORS_MASK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="125" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_GRAY_IMAGE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="372" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IMAGE_GENERATOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="123" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="146" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="145" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IR_GENERATOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="124" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IR_GENERATOR_PRESENT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="152" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_IR_IMAGE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="376" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_POINT_CLOUD_MAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="365" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_QVGA_30HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="384" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_QVGA_60HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="386" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_SXGA_15HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="382" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_SXGA_30HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="383" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_VALID_DEPTH_MASK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="368" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_OPENNI_VGA_30HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="381" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_ANTIBANDING" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="323" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_EXPOSE_LOCK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="328" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FLASH_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="320" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FOCAL_LENGTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="324" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="327" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="325" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="326" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_FOCUS_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="321" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="329" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ANDROID_WHITE_BALANCE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="322" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_APERTURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="408" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_AUTOFOCUS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="113" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_AUTOGRAB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="117" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_AUTO_EXPOSURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="93" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_BACKLIGHT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="106" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_BRIGHTNESS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="82" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_BUFFERSIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="112" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_CONTRAST" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="83" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_CONVERT_RGB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="88" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_DC1394_MODE_AUTO" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="70" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_DC1394_MODE_MANUAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="69" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="71" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_DC1394_OFF" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="68" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_EXPOSURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="87" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_EXPOSUREPROGRAM" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="409" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FOCUS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="102" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="80" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FOURCC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="78" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FPS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="77" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FRAME_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="79" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FRAME_HEIGHT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="76" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_FRAME_WIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="75" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GAIN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="86" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GAMMA" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="96" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="343" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_OFFSET_X" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="340" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_OFFSET_Y" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="341" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="345" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="344" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="342" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_COLLECT_MSGS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="405" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_FLUSH_MSGS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="406" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_PREVIEW" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="401" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="403" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="404" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="402" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_GUID" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="103" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_HUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="85" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="351" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="352" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="353" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="349" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="350" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_PROFILE_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="347" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_INTELPERC_PROFILE_IDX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="348" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IOS_DEVICE_EXPOSURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="333" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IOS_DEVICE_FLASH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="334" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IOS_DEVICE_FOCUS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="332" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IOS_DEVICE_TORCH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="336" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="335" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_IRIS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="110" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ISO_SPEED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="104" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_MAX_DC1394" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="105" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="81" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_MONOCHROME" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="91" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI2_MIRROR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="143" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI2_SYNC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="142" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="136" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_BASELINE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="130" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_CIRCLE_BUFFER" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="138" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_FOCAL_LENGTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="131" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="129" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_GENERATOR_PRESENT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="141" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="137" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_MAX_TIME_DURATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="139" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_OUTPUT_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="128" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_REGISTRATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="132" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_OPENNI_REGISTRATION_ON" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="133" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PAN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="107" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_POS_AVI_RATIO" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="74" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_POS_FRAMES" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="73" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_POS_MSEC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="72" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PREVIEW_FORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="119" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_BINNINGX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="162" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_BINNINGY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="163" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="160" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_DECIMATIONVERTICAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="161" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="159" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_MULTICASTIP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="158" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_PVAPI_PIXELFORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="164" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_RECTIFICATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="90" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ROLL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="109" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SAR_DEN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="115" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SAR_NUM" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="114" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SATURATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="84" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SETTINGS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="111" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SHARPNESS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="92" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SPEED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="407" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="118" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_TEMPERATURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="97" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_TILT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="108" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_TRIGGER" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="98" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_TRIGGER_DELAY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="99" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_VIEWFINDER" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="411" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_WHITE_BALANCE_BLUE_U" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="89" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_WHITE_BALANCE_RED_V" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="100" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_BUFFER_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="290" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="291" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="256" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_TIMING_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="280" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="294" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="292" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="182" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG_LEVEL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="186" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG_ROI_HEIGHT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="209" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="206" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="207" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AEAG_ROI_WIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="208" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AE_MAX_LIMIT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="184" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AG_MAX_LIMIT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="185" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_APPLY_CMS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="232" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="309" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AUTO_WB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="181" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="281" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BINNING_HORIZONTAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="195" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BINNING_PATTERN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="196" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BINNING_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="193" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BINNING_VERTICAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="194" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BPC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="210" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="293" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_BUFFER_POLICY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="282" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_00" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="238" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_01" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="239" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_02" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="240" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_03" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="241" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_10" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="242" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_11" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="243" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_12" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="244" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_13" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="245" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_20" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="246" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_21" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="247" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_22" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="248" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_23" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="249" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_30" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="250" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_31" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="251" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_32" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="252" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CC_MATRIX_33" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="253" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CHIP_TEMP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="227" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_CMS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="231" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_COLOR_FILTER_ARRAY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="234" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_COLUMN_FPN_CORRECTION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="297" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_COOLING" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="225" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_COUNTER_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="278" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_COUNTER_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="279" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DATA_FORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="168" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEBOUNCE_EN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="257" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEBOUNCE_POL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="260" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEBOUNCE_T0" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="258" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEBOUNCE_T1" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="259" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEBUG_LEVEL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="308" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DECIMATION_HORIZONTAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="199" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DECIMATION_PATTERN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="200" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DECIMATION_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="197" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DECIMATION_VERTICAL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="198" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEFAULT_CC_MATRIX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="254" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEVICE_MODEL_ID" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="269" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEVICE_RESET" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="296" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DEVICE_SN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="270" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DOWNSAMPLING" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="167" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_DOWNSAMPLING_TYPE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="192" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_EXPOSURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="188" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="189" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_EXP_PRIORITY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="183" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_FFS_ACCESS_KEY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="314" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_FFS_FILE_ID" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="310" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_FFS_FILE_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="311" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_FRAMERATE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="277" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_FREE_FFS_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="312" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GAIN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="191" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GAIN_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="190" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GAMMAC" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="236" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GAMMAY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="235" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GPI_LEVEL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="175" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GPI_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="174" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GPI_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="173" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GPO_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="177" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_GPO_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="176" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HDR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="300" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="301" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HDR_T1" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="302" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HDR_T2" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="303" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HEIGHT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="215" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HOUS_BACK_SIDE_TEMP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="229" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HOUS_TEMP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="228" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_HW_REVISION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="307" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="306" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="221" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_DATA_FORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="203" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="271" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_IS_COLOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="233" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="272" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IS_COOLED" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="224" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_IS_DEVICE_EXIST" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="289" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_KNEEPOINT1" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="304" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_KNEEPOINT2" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="305" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LED_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="179" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LED_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="178" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_APERTURE_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="262" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FEATURE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="268" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="267" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FOCAL_LENGTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="266" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="265" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FOCUS_MOVE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="264" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="263" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LENS_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="261" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LIMIT_BANDWIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="218" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LUT_EN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="283" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LUT_INDEX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="284" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_LUT_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="285" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_MANUAL_WB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="180" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_OFFSET_X" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="169" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_OFFSET_Y" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="170" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="220" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_OUTPUT_DATA_PACKING" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="222" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="223" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_RECENT_FRAME" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="295" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_REGION_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="217" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_REGION_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="216" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_ROW_FPN_CORRECTION" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="298" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_BOARD_TEMP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="230" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="274" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="275" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="219" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="315" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="316" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="299" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="276" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SENSOR_TAPS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="205" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SHARPNESS" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="237" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_SHUTTER_TYPE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="204" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TARGET_TEMP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="226" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TEST_PATTERN" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="202" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="201" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TIMEOUT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="187" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="273" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TRG_DELAY" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="286" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TRG_SELECTOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="255" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TRG_SOFTWARE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="172" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TRG_SOURCE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="171" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TS_RST_MODE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="287" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_TS_RST_SOURCE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="288" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_USED_FFS_SIZE" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="313" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_WB_KB" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="213" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_WB_KG" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="212" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_WB_KR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="211" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_XI_WIDTH" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="214" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PROP_ZOOM" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="101" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_PVAPI" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="38" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_QT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="31" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_STEREO" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="24" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_TYZX" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="25" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_UNICAP" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="33" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_V4L" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="15" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_V4L2" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="16" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_VFW" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="14" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_CAP_XIAPI" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="47" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TYZX_COLOR" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="28" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TYZX_LEFT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="26" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TYZX_RIGHT" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="27" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="CV_TYZX_Z" status="internal" access="private" location="constants_c.h" filepath="/usr/local/include/opencv4/opencv2/videoio/legacy/constants_c.h" lineno="29" type="const int" static="true"/>
    </namespace>
</INDEX>
